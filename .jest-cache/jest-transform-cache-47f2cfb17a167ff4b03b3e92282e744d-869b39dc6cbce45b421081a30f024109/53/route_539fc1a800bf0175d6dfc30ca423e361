8bcbace5a7c07642f56d05fc26285980
"use strict";

/* istanbul ignore next */
function cov_18l3tg43w7() {
  var path = "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\atendentes\\buscar\\route.ts";
  var hash = "3f8b8e558a18919c75862966f9b9d77733b4cafe";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\atendentes\\buscar\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 20
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 18
        },
        end: {
          line: 12,
          column: 38
        }
      },
      "5": {
        start: {
          line: 13,
          column: 14
        },
        end: {
          line: 13,
          column: 45
        }
      },
      "6": {
        start: {
          line: 14,
          column: 16
        },
        end: {
          line: 14,
          column: 49
        }
      },
      "7": {
        start: {
          line: 15,
          column: 20
        },
        end: {
          line: 15,
          column: 69
        }
      },
      "8": {
        start: {
          line: 16,
          column: 13
        },
        end: {
          line: 16,
          column: 27
        }
      },
      "9": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 289,
          column: 5
        }
      },
      "10": {
        start: {
          line: 20,
          column: 24
        },
        end: {
          line: 20,
          column: 80
        }
      },
      "11": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 27,
          column: 9
        }
      },
      "12": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 26,
          column: 15
        }
      },
      "13": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 38,
          column: 9
        }
      },
      "14": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 37,
          column: 15
        }
      },
      "15": {
        start: {
          line: 40,
          column: 32
        },
        end: {
          line: 40,
          column: 52
        }
      },
      "16": {
        start: {
          line: 42,
          column: 36
        },
        end: {
          line: 42,
          column: 93
        }
      },
      "17": {
        start: {
          line: 43,
          column: 152
        },
        end: {
          line: 43,
          column: 171
        }
      },
      "18": {
        start: {
          line: 45,
          column: 24
        },
        end: {
          line: 45,
          column: 26
        }
      },
      "19": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 71,
          column: 9
        }
      },
      "20": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 70,
          column: 14
        }
      },
      "21": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 75,
          column: 9
        }
      },
      "22": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 36
        }
      },
      "23": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 81,
          column: 9
        }
      },
      "24": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 80,
          column: 14
        }
      },
      "25": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 87,
          column: 9
        }
      },
      "26": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 86,
          column: 14
        }
      },
      "27": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 93,
          column: 9
        }
      },
      "28": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 92,
          column: 14
        }
      },
      "29": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 103,
          column: 9
        }
      },
      "30": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 38
        }
      },
      "31": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 99,
          column: 13
        }
      },
      "32": {
        start: {
          line: 98,
          column: 16
        },
        end: {
          line: 98,
          column: 72
        }
      },
      "33": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 102,
          column: 13
        }
      },
      "34": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 101,
          column: 69
        }
      },
      "35": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 135,
          column: 9
        }
      },
      "36": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 112,
          column: 13
        }
      },
      "37": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 111,
          column: 18
        }
      },
      "38": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 122,
          column: 13
        }
      },
      "39": {
        start: {
          line: 115,
          column: 16
        },
        end: {
          line: 121,
          column: 17
        }
      },
      "40": {
        start: {
          line: 116,
          column: 20
        },
        end: {
          line: 118,
          column: 22
        }
      },
      "41": {
        start: {
          line: 120,
          column: 20
        },
        end: {
          line: 120,
          column: 40
        }
      },
      "42": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 132,
          column: 13
        }
      },
      "43": {
        start: {
          line: 125,
          column: 16
        },
        end: {
          line: 125,
          column: 37
        }
      },
      "44": {
        start: {
          line: 126,
          column: 16
        },
        end: {
          line: 128,
          column: 17
        }
      },
      "45": {
        start: {
          line: 127,
          column: 20
        },
        end: {
          line: 127,
          column: 73
        }
      },
      "46": {
        start: {
          line: 129,
          column: 16
        },
        end: {
          line: 131,
          column: 17
        }
      },
      "47": {
        start: {
          line: 130,
          column: 20
        },
        end: {
          line: 130,
          column: 73
        }
      },
      "48": {
        start: {
          line: 137,
          column: 26
        },
        end: {
          line: 137,
          column: 28
        }
      },
      "49": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 144,
          column: 9
        }
      },
      "50": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 141,
          column: 14
        }
      },
      "51": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 143,
          column: 42
        }
      },
      "52": {
        start: {
          line: 146,
          column: 23
        },
        end: {
          line: 146,
          column: 44
        }
      },
      "53": {
        start: {
          line: 148,
          column: 36
        },
        end: {
          line: 176,
          column: 10
        }
      },
      "54": {
        start: {
          line: 178,
          column: 34
        },
        end: {
          line: 178,
          column: 44
        }
      },
      "55": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 204,
          column: 9
        }
      },
      "56": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 203,
          column: 15
        }
      },
      "57": {
        start: {
          line: 182,
          column: 16
        },
        end: {
          line: 191,
          column: 17
        }
      },
      "58": {
        start: {
          line: 183,
          column: 20
        },
        end: {
          line: 183,
          column: 64
        }
      },
      "59": {
        start: {
          line: 183,
          column: 51
        },
        end: {
          line: 183,
          column: 64
        }
      },
      "60": {
        start: {
          line: 184,
          column: 34
        },
        end: {
          line: 184,
          column: 105
        }
      },
      "61": {
        start: {
          line: 185,
          column: 20
        },
        end: {
          line: 187,
          column: 21
        }
      },
      "62": {
        start: {
          line: 186,
          column: 24
        },
        end: {
          line: 186,
          column: 37
        }
      },
      "63": {
        start: {
          line: 188,
          column: 20
        },
        end: {
          line: 190,
          column: 21
        }
      },
      "64": {
        start: {
          line: 189,
          column: 24
        },
        end: {
          line: 189,
          column: 37
        }
      },
      "65": {
        start: {
          line: 193,
          column: 16
        },
        end: {
          line: 201,
          column: 17
        }
      },
      "66": {
        start: {
          line: 194,
          column: 41
        },
        end: {
          line: 194,
          column: 117
        }
      },
      "67": {
        start: {
          line: 195,
          column: 20
        },
        end: {
          line: 197,
          column: 21
        }
      },
      "68": {
        start: {
          line: 196,
          column: 24
        },
        end: {
          line: 196,
          column: 37
        }
      },
      "69": {
        start: {
          line: 198,
          column: 20
        },
        end: {
          line: 200,
          column: 21
        }
      },
      "70": {
        start: {
          line: 199,
          column: 24
        },
        end: {
          line: 199,
          column: 37
        }
      },
      "71": {
        start: {
          line: 202,
          column: 16
        },
        end: {
          line: 202,
          column: 28
        }
      },
      "72": {
        start: {
          line: 206,
          column: 36
        },
        end: {
          line: 206,
          column: 72
        }
      },
      "73": {
        start: {
          line: 207,
          column: 30
        },
        end: {
          line: 207,
          column: 56
        }
      },
      "74": {
        start: {
          line: 209,
          column: 29
        },
        end: {
          line: 209,
          column: 62
        }
      },
      "75": {
        start: {
          line: 210,
          column: 33
        },
        end: {
          line: 210,
          column: 54
        }
      },
      "76": {
        start: {
          line: 211,
          column: 34
        },
        end: {
          line: 211,
          column: 44
        }
      },
      "77": {
        start: {
          line: 213,
          column: 42
        },
        end: {
          line: 245,
          column: 10
        }
      },
      "78": {
        start: {
          line: 214,
          column: 26
        },
        end: {
          line: 214,
          column: 131
        }
      },
      "79": {
        start: {
          line: 215,
          column: 33
        },
        end: {
          line: 215,
          column: 109
        }
      },
      "80": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 244,
          column: 14
        }
      },
      "81": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 273,
          column: 11
        }
      },
      "82": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 275,
          column: 70
        }
      },
      "83": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 283,
          column: 9
        }
      },
      "84": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 282,
          column: 15
        }
      },
      "85": {
        start: {
          line: 284,
          column: 8
        },
        end: {
          line: 288,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "POST",
        decl: {
          start: {
            line: 17,
            column: 15
          },
          end: {
            line: 17,
            column: 19
          }
        },
        loc: {
          start: {
            line: 17,
            column: 29
          },
          end: {
            line: 290,
            column: 1
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 180,
            column: 52
          },
          end: {
            line: 180,
            column: 53
          }
        },
        loc: {
          start: {
            line: 180,
            column: 65
          },
          end: {
            line: 203,
            column: 13
          }
        },
        line: 180
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 213,
            column: 66
          },
          end: {
            line: 213,
            column: 67
          }
        },
        loc: {
          start: {
            line: 213,
            column: 79
          },
          end: {
            line: 245,
            column: 9
          }
        },
        line: 213
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "2": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "3": {
        loc: {
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 75,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "4": {
        loc: {
          start: {
            line: 76,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 76
      },
      "5": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 87,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 87,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "6": {
        loc: {
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 93,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 93,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "7": {
        loc: {
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "8": {
        loc: {
          start: {
            line: 95,
            column: 12
          },
          end: {
            line: 95,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 12
          },
          end: {
            line: 95,
            column: 30
          }
        }, {
          start: {
            line: 95,
            column: 34
          },
          end: {
            line: 95,
            column: 49
          }
        }],
        line: 95
      },
      "9": {
        loc: {
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 99,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 99,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "10": {
        loc: {
          start: {
            line: 100,
            column: 12
          },
          end: {
            line: 102,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 12
          },
          end: {
            line: 102,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 100
      },
      "11": {
        loc: {
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 135,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 135,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "12": {
        loc: {
          start: {
            line: 107,
            column: 12
          },
          end: {
            line: 112,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 12
          },
          end: {
            line: 112,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "13": {
        loc: {
          start: {
            line: 114,
            column: 12
          },
          end: {
            line: 122,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 12
          },
          end: {
            line: 122,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "14": {
        loc: {
          start: {
            line: 115,
            column: 16
          },
          end: {
            line: 121,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 16
          },
          end: {
            line: 121,
            column: 17
          }
        }, {
          start: {
            line: 119,
            column: 23
          },
          end: {
            line: 121,
            column: 17
          }
        }],
        line: 115
      },
      "15": {
        loc: {
          start: {
            line: 124,
            column: 12
          },
          end: {
            line: 132,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 12
          },
          end: {
            line: 132,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 124
      },
      "16": {
        loc: {
          start: {
            line: 124,
            column: 16
          },
          end: {
            line: 124,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 124,
            column: 16
          },
          end: {
            line: 124,
            column: 46
          }
        }, {
          start: {
            line: 124,
            column: 50
          },
          end: {
            line: 124,
            column: 80
          }
        }],
        line: 124
      },
      "17": {
        loc: {
          start: {
            line: 126,
            column: 16
          },
          end: {
            line: 128,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 16
          },
          end: {
            line: 128,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "18": {
        loc: {
          start: {
            line: 129,
            column: 16
          },
          end: {
            line: 131,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 16
          },
          end: {
            line: 131,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      },
      "19": {
        loc: {
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 144,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 144,
            column: 9
          }
        }, {
          start: {
            line: 142,
            column: 15
          },
          end: {
            line: 144,
            column: 9
          }
        }],
        line: 138
      },
      "20": {
        loc: {
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 204,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 204,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 179
      },
      "21": {
        loc: {
          start: {
            line: 182,
            column: 16
          },
          end: {
            line: 191,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 182,
            column: 16
          },
          end: {
            line: 191,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 182
      },
      "22": {
        loc: {
          start: {
            line: 182,
            column: 20
          },
          end: {
            line: 182,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 182,
            column: 20
          },
          end: {
            line: 182,
            column: 48
          }
        }, {
          start: {
            line: 182,
            column: 52
          },
          end: {
            line: 182,
            column: 80
          }
        }],
        line: 182
      },
      "23": {
        loc: {
          start: {
            line: 183,
            column: 20
          },
          end: {
            line: 183,
            column: 64
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 20
          },
          end: {
            line: 183,
            column: 64
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 183
      },
      "24": {
        loc: {
          start: {
            line: 185,
            column: 20
          },
          end: {
            line: 187,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 185,
            column: 20
          },
          end: {
            line: 187,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 185
      },
      "25": {
        loc: {
          start: {
            line: 185,
            column: 24
          },
          end: {
            line: 185,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 185,
            column: 24
          },
          end: {
            line: 185,
            column: 52
          }
        }, {
          start: {
            line: 185,
            column: 56
          },
          end: {
            line: 185,
            column: 92
          }
        }],
        line: 185
      },
      "26": {
        loc: {
          start: {
            line: 188,
            column: 20
          },
          end: {
            line: 190,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 20
          },
          end: {
            line: 190,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 188
      },
      "27": {
        loc: {
          start: {
            line: 188,
            column: 24
          },
          end: {
            line: 188,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 188,
            column: 24
          },
          end: {
            line: 188,
            column: 52
          }
        }, {
          start: {
            line: 188,
            column: 56
          },
          end: {
            line: 188,
            column: 92
          }
        }],
        line: 188
      },
      "28": {
        loc: {
          start: {
            line: 193,
            column: 16
          },
          end: {
            line: 201,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 193,
            column: 16
          },
          end: {
            line: 201,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 193
      },
      "29": {
        loc: {
          start: {
            line: 193,
            column: 20
          },
          end: {
            line: 193,
            column: 94
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 193,
            column: 20
          },
          end: {
            line: 193,
            column: 55
          }
        }, {
          start: {
            line: 193,
            column: 59
          },
          end: {
            line: 193,
            column: 94
          }
        }],
        line: 193
      },
      "30": {
        loc: {
          start: {
            line: 195,
            column: 20
          },
          end: {
            line: 197,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 195,
            column: 20
          },
          end: {
            line: 197,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 195
      },
      "31": {
        loc: {
          start: {
            line: 195,
            column: 24
          },
          end: {
            line: 195,
            column: 113
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 195,
            column: 24
          },
          end: {
            line: 195,
            column: 59
          }
        }, {
          start: {
            line: 195,
            column: 63
          },
          end: {
            line: 195,
            column: 113
          }
        }],
        line: 195
      },
      "32": {
        loc: {
          start: {
            line: 198,
            column: 20
          },
          end: {
            line: 200,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 198,
            column: 20
          },
          end: {
            line: 200,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 198
      },
      "33": {
        loc: {
          start: {
            line: 198,
            column: 24
          },
          end: {
            line: 198,
            column: 113
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 198,
            column: 24
          },
          end: {
            line: 198,
            column: 59
          }
        }, {
          start: {
            line: 198,
            column: 63
          },
          end: {
            line: 198,
            column: 113
          }
        }],
        line: 198
      },
      "34": {
        loc: {
          start: {
            line: 214,
            column: 26
          },
          end: {
            line: 214,
            column: 131
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 214,
            column: 53
          },
          end: {
            line: 214,
            column: 124
          }
        }, {
          start: {
            line: 214,
            column: 127
          },
          end: {
            line: 214,
            column: 131
          }
        }],
        line: 214
      },
      "35": {
        loc: {
          start: {
            line: 271,
            column: 36
          },
          end: {
            line: 271,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 271,
            column: 48
          },
          end: {
            line: 271,
            column: 87
          }
        }, {
          start: {
            line: 271,
            column: 90
          },
          end: {
            line: 271,
            column: 91
          }
        }],
        line: 271
      },
      "36": {
        loc: {
          start: {
            line: 276,
            column: 8
          },
          end: {
            line: 283,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 276,
            column: 8
          },
          end: {
            line: 283,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 276
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\atendentes\\buscar\\route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { getServerSession } from 'next-auth';\nimport { authOptions } from '@/lib/auth';\nimport { prisma } from '@/lib/prisma';\nimport {\n  buscarAtendentesSchema,\n  MENSAGENS_ERRO_ATENDENTES,\n  validacaoAtendentes,\n} from '@/lib/validations/atendentes';\nimport { ZodError } from 'zod';\n\n/**\n * POST /api/atendentes/buscar\n * Busca avan\xE7ada de atendentes com filtros complexos\n */\nexport async function POST(request: NextRequest) {\n  try {\n    // Verificar autentica\xE7\xE3o\n    const session = await getServerSession(authOptions);\n    if (!session?.user) {\n      return NextResponse.json({ erro: 'N\xE3o autorizado' }, { status: 401 });\n    }\n\n    // Verificar permiss\xF5es\n    if (!['ADMIN', 'GERENTE'].includes(session.user.userType)) {\n      return NextResponse.json(\n        { erro: MENSAGENS_ERRO_ATENDENTES.SEM_PERMISSAO },\n        { status: 403 }\n      );\n    }\n\n    // Extrair dados do corpo da requisi\xE7\xE3o\n    const dadosRequisicao = await request.json();\n\n    // Validar par\xE2metros\n    const parametrosValidados = buscarAtendentesSchema.parse(dadosRequisicao);\n\n    const {\n      pagina,\n      limite,\n      busca,\n      status,\n      setor,\n      cargo,\n      departamento,\n      dataAdmissaoInicio,\n      dataAdmissaoFim,\n      ordenarPor,\n      ordem,\n      filtrosAvancados,\n    } = parametrosValidados;\n\n    // Construir filtros b\xE1sicos\n    const filtros: any = {};\n\n    // Filtro de busca (nome, CPF, email)\n    if (busca) {\n      filtros.OR = [\n        {\n          usuario: {\n            nome: {\n              contains: busca,\n              mode: 'insensitive',\n            },\n          },\n        },\n        {\n          cpf: {\n            contains: busca.replace(/\\D/g, ''),\n          },\n        },\n        {\n          usuario: {\n            email: {\n              contains: busca,\n              mode: 'insensitive',\n            },\n          },\n        },\n      ];\n    }\n\n    // Filtros espec\xEDficos\n    if (status) {\n      filtros.status = status;\n    }\n\n    if (setor) {\n      filtros.setor = {\n        contains: setor,\n        mode: 'insensitive',\n      };\n    }\n\n    if (cargo) {\n      filtros.cargo = {\n        contains: cargo,\n        mode: 'insensitive',\n      };\n    }\n\n    if (departamento) {\n      filtros.departamento = {\n        contains: departamento,\n        mode: 'insensitive',\n      };\n    }\n\n    // Filtro de data de admiss\xE3o\n    if (dataAdmissaoInicio || dataAdmissaoFim) {\n      filtros.dataAdmissao = {};\n      if (dataAdmissaoInicio) {\n        filtros.dataAdmissao.gte = new Date(dataAdmissaoInicio);\n      }\n      if (dataAdmissaoFim) {\n        filtros.dataAdmissao.lte = new Date(dataAdmissaoFim);\n      }\n    }\n\n    // Aplicar filtros avan\xE7ados\n    if (filtrosAvancados) {\n      // Filtro de usu\xE1rio ativo\n      if (filtrosAvancados.ativo !== undefined) {\n        filtros.usuario = {\n          ...filtros.usuario,\n          ativo: filtrosAvancados.ativo,\n        };\n      }\n\n      // Filtro de foto\n      if (filtrosAvancados.temFoto !== undefined) {\n        if (filtrosAvancados.temFoto) {\n          filtros.foto = { not: null };\n        } else {\n          filtros.foto = null;\n        }\n      }\n\n      // Filtro de sal\xE1rio\n      if (filtrosAvancados.salarioMinimo || filtrosAvancados.salarioMaximo) {\n        filtros.salario = {};\n        if (filtrosAvancados.salarioMinimo) {\n          filtros.salario.gte = filtrosAvancados.salarioMinimo;\n        }\n        if (filtrosAvancados.salarioMaximo) {\n          filtros.salario.lte = filtrosAvancados.salarioMaximo;\n        }\n      }\n\n      // Filtros de idade e tempo de empresa ser\xE3o aplicados ap\xF3s a busca\n      // pois requerem c\xE1lculos que n\xE3o podem ser feitos diretamente no Prisma\n    }\n\n    // Configurar ordena\xE7\xE3o\n    const ordenacao: any = {};\n    if (ordenarPor === 'nome') {\n      ordenacao.usuario = { nome: ordem };\n    } else {\n      ordenacao[ordenarPor] = ordem;\n    }\n\n    // Calcular offset\n    const offset = (pagina - 1) * limite;\n\n    // Buscar atendentes\n    const [atendentes, total] = await Promise.all([\n      prisma.atendente.findMany({\n        where: filtros,\n        include: {\n          usuario: {\n            select: {\n              id: true,\n              nome: true,\n              email: true,\n              ativo: true,\n              criadoEm: true,\n              atualizadoEm: true,\n            },\n          },\n          _count: {\n            select: {\n              documentos: true,\n              historicoAlteracoes: true,\n            },\n          },\n        },\n        orderBy: ordenacao,\n        skip: offset,\n        take: limite * 2, // Buscar mais para aplicar filtros de idade/tempo\n      }),\n      prisma.atendente.count({ where: filtros }),\n    ]);\n\n    // Aplicar filtros de idade e tempo de empresa\n    let atendentesFiltrados = atendentes;\n\n    if (filtrosAvancados) {\n      atendentesFiltrados = atendentes.filter(atendente => {\n        // Filtro de idade\n        if (filtrosAvancados.idadeMinima || filtrosAvancados.idadeMaxima) {\n          if (!atendente.dataNascimento) return false;\n\n          const idade = validacaoAtendentes.calcularIdade(\n            atendente.dataNascimento\n          );\n\n          if (\n            filtrosAvancados.idadeMinima &&\n            idade < filtrosAvancados.idadeMinima\n          ) {\n            return false;\n          }\n\n          if (\n            filtrosAvancados.idadeMaxima &&\n            idade > filtrosAvancados.idadeMaxima\n          ) {\n            return false;\n          }\n        }\n\n        // Filtro de tempo de empresa\n        if (\n          filtrosAvancados.tempoEmpresaMinimo ||\n          filtrosAvancados.tempoEmpresaMaximo\n        ) {\n          const tempoEmpresa = validacaoAtendentes.calcularTempoEmpresa(\n            atendente.dataAdmissao\n          );\n\n          if (\n            filtrosAvancados.tempoEmpresaMinimo &&\n            tempoEmpresa < filtrosAvancados.tempoEmpresaMinimo\n          ) {\n            return false;\n          }\n\n          if (\n            filtrosAvancados.tempoEmpresaMaximo &&\n            tempoEmpresa > filtrosAvancados.tempoEmpresaMaximo\n          ) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n    }\n\n    // Aplicar pagina\xE7\xE3o aos resultados filtrados\n    const atendentesPaginados = atendentesFiltrados.slice(0, limite);\n    const totalFiltrado = atendentesFiltrados.length;\n\n    // Calcular metadados de pagina\xE7\xE3o\n    const totalPaginas = Math.ceil(totalFiltrado / limite);\n    const temProximaPagina = pagina < totalPaginas;\n    const temPaginaAnterior = pagina > 1;\n\n    // Preparar resposta com estat\xEDsticas adicionais\n    const atendentesComEstatisticas = atendentesPaginados.map(atendente => {\n      const idade = atendente.dataNascimento\n        ? validacaoAtendentes.calcularIdade(atendente.dataNascimento)\n        : null;\n\n      const tempoEmpresa = validacaoAtendentes.calcularTempoEmpresa(\n        atendente.dataAdmissao\n      );\n\n      return {\n        id: atendente.id,\n        cpf: atendente.cpf,\n        rg: atendente.rg,\n        dataNascimento: atendente.dataNascimento,\n        telefone: atendente.telefone,\n        celular: atendente.celular,\n        endereco: atendente.endereco,\n        cep: atendente.cep,\n        cidade: atendente.cidade,\n        estado: atendente.estado,\n        dataAdmissao: atendente.dataAdmissao,\n        cargo: atendente.cargo,\n        setor: atendente.setor,\n        departamento: atendente.departamento,\n        salario: atendente.salario,\n        status: atendente.status,\n        observacoes: atendente.observacoes,\n        foto: atendente.foto,\n        criadoEm: atendente.criadoEm,\n        atualizadoEm: atendente.atualizadoEm,\n        usuario: atendente.usuario,\n        estatisticas: {\n          idade,\n          tempoEmpresaMeses: tempoEmpresa,\n          totalDocumentos: atendente._count.documentos,\n          totalAlteracoes: atendente._count.historicoAlteracoes,\n        },\n      };\n    });\n\n    return NextResponse.json({\n      atendentes: atendentesComEstatisticas,\n      paginacao: {\n        paginaAtual: pagina,\n        totalPaginas,\n        totalItens: totalFiltrado,\n        itensPorPagina: limite,\n        temProximaPagina,\n        temPaginaAnterior,\n      },\n      filtrosAplicados: {\n        basicos: {\n          busca,\n          status,\n          setor,\n          cargo,\n          departamento,\n          dataAdmissaoInicio,\n          dataAdmissaoFim,\n        },\n        avancados: filtrosAvancados,\n      },\n      estatisticasBusca: {\n        totalEncontrados: totalFiltrado,\n        totalGeral: total,\n        percentualFiltrado:\n          total > 0 ? Math.round((totalFiltrado / total) * 100) : 0,\n      },\n    });\n  } catch (error) {\n    console.error('Erro na busca avan\xE7ada de atendentes:', error);\n\n    if (error instanceof ZodError) {\n      return NextResponse.json(\n        {\n          erro: MENSAGENS_ERRO_ATENDENTES.DADOS_INVALIDOS,\n          detalhes: error.errors,\n        },\n        { status: 400 }\n      );\n    }\n\n    return NextResponse.json(\n      { erro: MENSAGENS_ERRO_ATENDENTES.ERRO_INTERNO },\n      { status: 500 }\n    );\n  }\n}\n"],
      names: ["POST", "request", "session", "getServerSession", "authOptions", "user", "NextResponse", "json", "erro", "status", "includes", "userType", "MENSAGENS_ERRO_ATENDENTES", "SEM_PERMISSAO", "dadosRequisicao", "parametrosValidados", "buscarAtendentesSchema", "parse", "pagina", "limite", "busca", "setor", "cargo", "departamento", "dataAdmissaoInicio", "dataAdmissaoFim", "ordenarPor", "ordem", "filtrosAvancados", "filtros", "OR", "usuario", "nome", "contains", "mode", "cpf", "replace", "email", "dataAdmissao", "gte", "Date", "lte", "ativo", "undefined", "temFoto", "foto", "not", "salarioMinimo", "salarioMaximo", "salario", "ordenacao", "offset", "atendentes", "total", "Promise", "all", "prisma", "atendente", "findMany", "where", "include", "select", "id", "criadoEm", "atualizadoEm", "_count", "documentos", "historicoAlteracoes", "orderBy", "skip", "take", "count", "atendentesFiltrados", "filter", "idadeMinima", "idadeMaxima", "dataNascimento", "idade", "validacaoAtendentes", "calcularIdade", "tempoEmpresaMinimo", "tempoEmpresaMaximo", "tempoEmpresa", "calcularTempoEmpresa", "atendentesPaginados", "slice", "totalFiltrado", "length", "totalPaginas", "Math", "ceil", "temProximaPagina", "temPaginaAnterior", "atendentesComEstatisticas", "map", "rg", "telefone", "celular", "endereco", "cep", "cidade", "estado", "observacoes", "estatisticas", "tempoEmpresaMeses", "totalDocumentos", "totalAlteracoes", "paginacao", "paginaAtual", "totalItens", "itensPorPagina", "filtrosAplicados", "basicos", "avancados", "estatisticasBusca", "totalEncontrados", "totalGeral", "percentualFiltrado", "round", "error", "console", "ZodError", "DADOS_INVALIDOS", "detalhes", "errors", "ERRO_INTERNO"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3f8b8e558a18919c75862966f9b9d77733b4cafe"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_18l3tg43w7 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_18l3tg43w7();
cov_18l3tg43w7().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_18l3tg43w7().s[1]++;
Object.defineProperty(exports, "POST", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_18l3tg43w7().f[0]++;
    cov_18l3tg43w7().s[2]++;
    return POST;
  }
});
const _server =
/* istanbul ignore next */
(cov_18l3tg43w7().s[3]++, require("next/server"));
const _nextauth =
/* istanbul ignore next */
(cov_18l3tg43w7().s[4]++, require("next-auth"));
const _auth =
/* istanbul ignore next */
(cov_18l3tg43w7().s[5]++, require("../../../../lib/auth"));
const _prisma =
/* istanbul ignore next */
(cov_18l3tg43w7().s[6]++, require("../../../../lib/prisma"));
const _atendentes =
/* istanbul ignore next */
(cov_18l3tg43w7().s[7]++, require("../../../../lib/validations/atendentes"));
const _zod =
/* istanbul ignore next */
(cov_18l3tg43w7().s[8]++, require("zod"));
async function POST(request) {
  /* istanbul ignore next */
  cov_18l3tg43w7().f[1]++;
  cov_18l3tg43w7().s[9]++;
  try {
    // Verificar autenticação
    const session =
    /* istanbul ignore next */
    (cov_18l3tg43w7().s[10]++, await (0, _nextauth.getServerSession)(_auth.authOptions));
    /* istanbul ignore next */
    cov_18l3tg43w7().s[11]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_18l3tg43w7().b[0][0]++;
      cov_18l3tg43w7().s[12]++;
      return _server.NextResponse.json({
        erro: 'Não autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_18l3tg43w7().b[0][1]++;
    }
    // Verificar permissões
    cov_18l3tg43w7().s[13]++;
    if (!['ADMIN', 'GERENTE'].includes(session.user.userType)) {
      /* istanbul ignore next */
      cov_18l3tg43w7().b[1][0]++;
      cov_18l3tg43w7().s[14]++;
      return _server.NextResponse.json({
        erro: _atendentes.MENSAGENS_ERRO_ATENDENTES.SEM_PERMISSAO
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_18l3tg43w7().b[1][1]++;
    }
    // Extrair dados do corpo da requisição
    const dadosRequisicao =
    /* istanbul ignore next */
    (cov_18l3tg43w7().s[15]++, await request.json());
    // Validar parâmetros
    const parametrosValidados =
    /* istanbul ignore next */
    (cov_18l3tg43w7().s[16]++, _atendentes.buscarAtendentesSchema.parse(dadosRequisicao));
    const {
      pagina,
      limite,
      busca,
      status,
      setor,
      cargo,
      departamento,
      dataAdmissaoInicio,
      dataAdmissaoFim,
      ordenarPor,
      ordem,
      filtrosAvancados
    } =
    /* istanbul ignore next */
    (cov_18l3tg43w7().s[17]++, parametrosValidados);
    // Construir filtros básicos
    const filtros =
    /* istanbul ignore next */
    (cov_18l3tg43w7().s[18]++, {});
    // Filtro de busca (nome, CPF, email)
    /* istanbul ignore next */
    cov_18l3tg43w7().s[19]++;
    if (busca) {
      /* istanbul ignore next */
      cov_18l3tg43w7().b[2][0]++;
      cov_18l3tg43w7().s[20]++;
      filtros.OR = [{
        usuario: {
          nome: {
            contains: busca,
            mode: 'insensitive'
          }
        }
      }, {
        cpf: {
          contains: busca.replace(/\D/g, '')
        }
      }, {
        usuario: {
          email: {
            contains: busca,
            mode: 'insensitive'
          }
        }
      }];
    } else
    /* istanbul ignore next */
    {
      cov_18l3tg43w7().b[2][1]++;
    }
    // Filtros específicos
    cov_18l3tg43w7().s[21]++;
    if (status) {
      /* istanbul ignore next */
      cov_18l3tg43w7().b[3][0]++;
      cov_18l3tg43w7().s[22]++;
      filtros.status = status;
    } else
    /* istanbul ignore next */
    {
      cov_18l3tg43w7().b[3][1]++;
    }
    cov_18l3tg43w7().s[23]++;
    if (setor) {
      /* istanbul ignore next */
      cov_18l3tg43w7().b[4][0]++;
      cov_18l3tg43w7().s[24]++;
      filtros.setor = {
        contains: setor,
        mode: 'insensitive'
      };
    } else
    /* istanbul ignore next */
    {
      cov_18l3tg43w7().b[4][1]++;
    }
    cov_18l3tg43w7().s[25]++;
    if (cargo) {
      /* istanbul ignore next */
      cov_18l3tg43w7().b[5][0]++;
      cov_18l3tg43w7().s[26]++;
      filtros.cargo = {
        contains: cargo,
        mode: 'insensitive'
      };
    } else
    /* istanbul ignore next */
    {
      cov_18l3tg43w7().b[5][1]++;
    }
    cov_18l3tg43w7().s[27]++;
    if (departamento) {
      /* istanbul ignore next */
      cov_18l3tg43w7().b[6][0]++;
      cov_18l3tg43w7().s[28]++;
      filtros.departamento = {
        contains: departamento,
        mode: 'insensitive'
      };
    } else
    /* istanbul ignore next */
    {
      cov_18l3tg43w7().b[6][1]++;
    }
    // Filtro de data de admissão
    cov_18l3tg43w7().s[29]++;
    if (
    /* istanbul ignore next */
    (cov_18l3tg43w7().b[8][0]++, dataAdmissaoInicio) ||
    /* istanbul ignore next */
    (cov_18l3tg43w7().b[8][1]++, dataAdmissaoFim)) {
      /* istanbul ignore next */
      cov_18l3tg43w7().b[7][0]++;
      cov_18l3tg43w7().s[30]++;
      filtros.dataAdmissao = {};
      /* istanbul ignore next */
      cov_18l3tg43w7().s[31]++;
      if (dataAdmissaoInicio) {
        /* istanbul ignore next */
        cov_18l3tg43w7().b[9][0]++;
        cov_18l3tg43w7().s[32]++;
        filtros.dataAdmissao.gte = new Date(dataAdmissaoInicio);
      } else
      /* istanbul ignore next */
      {
        cov_18l3tg43w7().b[9][1]++;
      }
      cov_18l3tg43w7().s[33]++;
      if (dataAdmissaoFim) {
        /* istanbul ignore next */
        cov_18l3tg43w7().b[10][0]++;
        cov_18l3tg43w7().s[34]++;
        filtros.dataAdmissao.lte = new Date(dataAdmissaoFim);
      } else
      /* istanbul ignore next */
      {
        cov_18l3tg43w7().b[10][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_18l3tg43w7().b[7][1]++;
    }
    // Aplicar filtros avançados
    cov_18l3tg43w7().s[35]++;
    if (filtrosAvancados) {
      /* istanbul ignore next */
      cov_18l3tg43w7().b[11][0]++;
      cov_18l3tg43w7().s[36]++;
      // Filtro de usuário ativo
      if (filtrosAvancados.ativo !== undefined) {
        /* istanbul ignore next */
        cov_18l3tg43w7().b[12][0]++;
        cov_18l3tg43w7().s[37]++;
        filtros.usuario = {
          ...filtros.usuario,
          ativo: filtrosAvancados.ativo
        };
      } else
      /* istanbul ignore next */
      {
        cov_18l3tg43w7().b[12][1]++;
      }
      // Filtro de foto
      cov_18l3tg43w7().s[38]++;
      if (filtrosAvancados.temFoto !== undefined) {
        /* istanbul ignore next */
        cov_18l3tg43w7().b[13][0]++;
        cov_18l3tg43w7().s[39]++;
        if (filtrosAvancados.temFoto) {
          /* istanbul ignore next */
          cov_18l3tg43w7().b[14][0]++;
          cov_18l3tg43w7().s[40]++;
          filtros.foto = {
            not: null
          };
        } else {
          /* istanbul ignore next */
          cov_18l3tg43w7().b[14][1]++;
          cov_18l3tg43w7().s[41]++;
          filtros.foto = null;
        }
      } else
      /* istanbul ignore next */
      {
        cov_18l3tg43w7().b[13][1]++;
      }
      // Filtro de salário
      cov_18l3tg43w7().s[42]++;
      if (
      /* istanbul ignore next */
      (cov_18l3tg43w7().b[16][0]++, filtrosAvancados.salarioMinimo) ||
      /* istanbul ignore next */
      (cov_18l3tg43w7().b[16][1]++, filtrosAvancados.salarioMaximo)) {
        /* istanbul ignore next */
        cov_18l3tg43w7().b[15][0]++;
        cov_18l3tg43w7().s[43]++;
        filtros.salario = {};
        /* istanbul ignore next */
        cov_18l3tg43w7().s[44]++;
        if (filtrosAvancados.salarioMinimo) {
          /* istanbul ignore next */
          cov_18l3tg43w7().b[17][0]++;
          cov_18l3tg43w7().s[45]++;
          filtros.salario.gte = filtrosAvancados.salarioMinimo;
        } else
        /* istanbul ignore next */
        {
          cov_18l3tg43w7().b[17][1]++;
        }
        cov_18l3tg43w7().s[46]++;
        if (filtrosAvancados.salarioMaximo) {
          /* istanbul ignore next */
          cov_18l3tg43w7().b[18][0]++;
          cov_18l3tg43w7().s[47]++;
          filtros.salario.lte = filtrosAvancados.salarioMaximo;
        } else
        /* istanbul ignore next */
        {
          cov_18l3tg43w7().b[18][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_18l3tg43w7().b[15][1]++;
      }
      // Filtros de idade e tempo de empresa serão aplicados após a busca
      // pois requerem cálculos que não podem ser feitos diretamente no Prisma
    } else
    /* istanbul ignore next */
    {
      cov_18l3tg43w7().b[11][1]++;
    }
    // Configurar ordenação
    const ordenacao =
    /* istanbul ignore next */
    (cov_18l3tg43w7().s[48]++, {});
    /* istanbul ignore next */
    cov_18l3tg43w7().s[49]++;
    if (ordenarPor === 'nome') {
      /* istanbul ignore next */
      cov_18l3tg43w7().b[19][0]++;
      cov_18l3tg43w7().s[50]++;
      ordenacao.usuario = {
        nome: ordem
      };
    } else {
      /* istanbul ignore next */
      cov_18l3tg43w7().b[19][1]++;
      cov_18l3tg43w7().s[51]++;
      ordenacao[ordenarPor] = ordem;
    }
    // Calcular offset
    const offset =
    /* istanbul ignore next */
    (cov_18l3tg43w7().s[52]++, (pagina - 1) * limite);
    // Buscar atendentes
    const [atendentes, total] =
    /* istanbul ignore next */
    (cov_18l3tg43w7().s[53]++, await Promise.all([_prisma.prisma.atendente.findMany({
      where: filtros,
      include: {
        usuario: {
          select: {
            id: true,
            nome: true,
            email: true,
            ativo: true,
            criadoEm: true,
            atualizadoEm: true
          }
        },
        _count: {
          select: {
            documentos: true,
            historicoAlteracoes: true
          }
        }
      },
      orderBy: ordenacao,
      skip: offset,
      take: limite * 2
    }), _prisma.prisma.atendente.count({
      where: filtros
    })]));
    // Aplicar filtros de idade e tempo de empresa
    let atendentesFiltrados =
    /* istanbul ignore next */
    (cov_18l3tg43w7().s[54]++, atendentes);
    /* istanbul ignore next */
    cov_18l3tg43w7().s[55]++;
    if (filtrosAvancados) {
      /* istanbul ignore next */
      cov_18l3tg43w7().b[20][0]++;
      cov_18l3tg43w7().s[56]++;
      atendentesFiltrados = atendentes.filter(atendente => {
        /* istanbul ignore next */
        cov_18l3tg43w7().f[2]++;
        cov_18l3tg43w7().s[57]++;
        // Filtro de idade
        if (
        /* istanbul ignore next */
        (cov_18l3tg43w7().b[22][0]++, filtrosAvancados.idadeMinima) ||
        /* istanbul ignore next */
        (cov_18l3tg43w7().b[22][1]++, filtrosAvancados.idadeMaxima)) {
          /* istanbul ignore next */
          cov_18l3tg43w7().b[21][0]++;
          cov_18l3tg43w7().s[58]++;
          if (!atendente.dataNascimento) {
            /* istanbul ignore next */
            cov_18l3tg43w7().b[23][0]++;
            cov_18l3tg43w7().s[59]++;
            return false;
          } else
          /* istanbul ignore next */
          {
            cov_18l3tg43w7().b[23][1]++;
          }
          const idade =
          /* istanbul ignore next */
          (cov_18l3tg43w7().s[60]++, _atendentes.validacaoAtendentes.calcularIdade(atendente.dataNascimento));
          /* istanbul ignore next */
          cov_18l3tg43w7().s[61]++;
          if (
          /* istanbul ignore next */
          (cov_18l3tg43w7().b[25][0]++, filtrosAvancados.idadeMinima) &&
          /* istanbul ignore next */
          (cov_18l3tg43w7().b[25][1]++, idade < filtrosAvancados.idadeMinima)) {
            /* istanbul ignore next */
            cov_18l3tg43w7().b[24][0]++;
            cov_18l3tg43w7().s[62]++;
            return false;
          } else
          /* istanbul ignore next */
          {
            cov_18l3tg43w7().b[24][1]++;
          }
          cov_18l3tg43w7().s[63]++;
          if (
          /* istanbul ignore next */
          (cov_18l3tg43w7().b[27][0]++, filtrosAvancados.idadeMaxima) &&
          /* istanbul ignore next */
          (cov_18l3tg43w7().b[27][1]++, idade > filtrosAvancados.idadeMaxima)) {
            /* istanbul ignore next */
            cov_18l3tg43w7().b[26][0]++;
            cov_18l3tg43w7().s[64]++;
            return false;
          } else
          /* istanbul ignore next */
          {
            cov_18l3tg43w7().b[26][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_18l3tg43w7().b[21][1]++;
        }
        // Filtro de tempo de empresa
        cov_18l3tg43w7().s[65]++;
        if (
        /* istanbul ignore next */
        (cov_18l3tg43w7().b[29][0]++, filtrosAvancados.tempoEmpresaMinimo) ||
        /* istanbul ignore next */
        (cov_18l3tg43w7().b[29][1]++, filtrosAvancados.tempoEmpresaMaximo)) {
          /* istanbul ignore next */
          cov_18l3tg43w7().b[28][0]++;
          const tempoEmpresa =
          /* istanbul ignore next */
          (cov_18l3tg43w7().s[66]++, _atendentes.validacaoAtendentes.calcularTempoEmpresa(atendente.dataAdmissao));
          /* istanbul ignore next */
          cov_18l3tg43w7().s[67]++;
          if (
          /* istanbul ignore next */
          (cov_18l3tg43w7().b[31][0]++, filtrosAvancados.tempoEmpresaMinimo) &&
          /* istanbul ignore next */
          (cov_18l3tg43w7().b[31][1]++, tempoEmpresa < filtrosAvancados.tempoEmpresaMinimo)) {
            /* istanbul ignore next */
            cov_18l3tg43w7().b[30][0]++;
            cov_18l3tg43w7().s[68]++;
            return false;
          } else
          /* istanbul ignore next */
          {
            cov_18l3tg43w7().b[30][1]++;
          }
          cov_18l3tg43w7().s[69]++;
          if (
          /* istanbul ignore next */
          (cov_18l3tg43w7().b[33][0]++, filtrosAvancados.tempoEmpresaMaximo) &&
          /* istanbul ignore next */
          (cov_18l3tg43w7().b[33][1]++, tempoEmpresa > filtrosAvancados.tempoEmpresaMaximo)) {
            /* istanbul ignore next */
            cov_18l3tg43w7().b[32][0]++;
            cov_18l3tg43w7().s[70]++;
            return false;
          } else
          /* istanbul ignore next */
          {
            cov_18l3tg43w7().b[32][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_18l3tg43w7().b[28][1]++;
        }
        cov_18l3tg43w7().s[71]++;
        return true;
      });
    } else
    /* istanbul ignore next */
    {
      cov_18l3tg43w7().b[20][1]++;
    }
    // Aplicar paginação aos resultados filtrados
    const atendentesPaginados =
    /* istanbul ignore next */
    (cov_18l3tg43w7().s[72]++, atendentesFiltrados.slice(0, limite));
    const totalFiltrado =
    /* istanbul ignore next */
    (cov_18l3tg43w7().s[73]++, atendentesFiltrados.length);
    // Calcular metadados de paginação
    const totalPaginas =
    /* istanbul ignore next */
    (cov_18l3tg43w7().s[74]++, Math.ceil(totalFiltrado / limite));
    const temProximaPagina =
    /* istanbul ignore next */
    (cov_18l3tg43w7().s[75]++, pagina < totalPaginas);
    const temPaginaAnterior =
    /* istanbul ignore next */
    (cov_18l3tg43w7().s[76]++, pagina > 1);
    // Preparar resposta com estatísticas adicionais
    const atendentesComEstatisticas =
    /* istanbul ignore next */
    (cov_18l3tg43w7().s[77]++, atendentesPaginados.map(atendente => {
      /* istanbul ignore next */
      cov_18l3tg43w7().f[3]++;
      const idade =
      /* istanbul ignore next */
      (cov_18l3tg43w7().s[78]++, atendente.dataNascimento ?
      /* istanbul ignore next */
      (cov_18l3tg43w7().b[34][0]++, _atendentes.validacaoAtendentes.calcularIdade(atendente.dataNascimento)) :
      /* istanbul ignore next */
      (cov_18l3tg43w7().b[34][1]++, null));
      const tempoEmpresa =
      /* istanbul ignore next */
      (cov_18l3tg43w7().s[79]++, _atendentes.validacaoAtendentes.calcularTempoEmpresa(atendente.dataAdmissao));
      /* istanbul ignore next */
      cov_18l3tg43w7().s[80]++;
      return {
        id: atendente.id,
        cpf: atendente.cpf,
        rg: atendente.rg,
        dataNascimento: atendente.dataNascimento,
        telefone: atendente.telefone,
        celular: atendente.celular,
        endereco: atendente.endereco,
        cep: atendente.cep,
        cidade: atendente.cidade,
        estado: atendente.estado,
        dataAdmissao: atendente.dataAdmissao,
        cargo: atendente.cargo,
        setor: atendente.setor,
        departamento: atendente.departamento,
        salario: atendente.salario,
        status: atendente.status,
        observacoes: atendente.observacoes,
        foto: atendente.foto,
        criadoEm: atendente.criadoEm,
        atualizadoEm: atendente.atualizadoEm,
        usuario: atendente.usuario,
        estatisticas: {
          idade,
          tempoEmpresaMeses: tempoEmpresa,
          totalDocumentos: atendente._count.documentos,
          totalAlteracoes: atendente._count.historicoAlteracoes
        }
      };
    }));
    /* istanbul ignore next */
    cov_18l3tg43w7().s[81]++;
    return _server.NextResponse.json({
      atendentes: atendentesComEstatisticas,
      paginacao: {
        paginaAtual: pagina,
        totalPaginas,
        totalItens: totalFiltrado,
        itensPorPagina: limite,
        temProximaPagina,
        temPaginaAnterior
      },
      filtrosAplicados: {
        basicos: {
          busca,
          status,
          setor,
          cargo,
          departamento,
          dataAdmissaoInicio,
          dataAdmissaoFim
        },
        avancados: filtrosAvancados
      },
      estatisticasBusca: {
        totalEncontrados: totalFiltrado,
        totalGeral: total,
        percentualFiltrado: total > 0 ?
        /* istanbul ignore next */
        (cov_18l3tg43w7().b[35][0]++, Math.round(totalFiltrado / total * 100)) :
        /* istanbul ignore next */
        (cov_18l3tg43w7().b[35][1]++, 0)
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_18l3tg43w7().s[82]++;
    console.error('Erro na busca avançada de atendentes:', error);
    /* istanbul ignore next */
    cov_18l3tg43w7().s[83]++;
    if (error instanceof _zod.ZodError) {
      /* istanbul ignore next */
      cov_18l3tg43w7().b[36][0]++;
      cov_18l3tg43w7().s[84]++;
      return _server.NextResponse.json({
        erro: _atendentes.MENSAGENS_ERRO_ATENDENTES.DADOS_INVALIDOS,
        detalhes: error.errors
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_18l3tg43w7().b[36][1]++;
    }
    cov_18l3tg43w7().s[85]++;
    return _server.NextResponse.json({
      erro: _atendentes.MENSAGENS_ERRO_ATENDENTES.ERRO_INTERNO
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,