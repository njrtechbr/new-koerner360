{"version":3,"names":["ImportarUsuarios","onSucesso","onCancelar","cov_8htfq5q4i","f","arquivo","setArquivo","s","_react","useState","carregando","setCarregando","progresso","setProgresso","resultado","setResultado","configuracao","setConfiguracao","sobrescreverExistentes","enviarEmailBoasVindas","gerarSenhaTemporaria","ativarUsuarios","inputArquivoRef","useRef","manipularSelecaoArquivo","event","arquivoSelecionado","target","files","b","tiposPermitidos","includes","type","_sonner","toast","error","tamanhoMaximo","size","removerArquivo","current","value","alternarConfiguracao","chave","prev","realizarImportacao","formData","FormData","append","JSON","stringify","response","fetch","method","body","ok","errorData","json","Error","erro","intervalos","valor","Promise","resolve","setTimeout","resultadoImportacao","erros","success","sucesso","warning","console","message","baixarModelo","blob","url","window","URL","createObjectURL","link","document","createElement","href","download","appendChild","click","removeChild","revokeObjectURL","renderizarResultado","_jsxruntime","jsxs","_card","Card","jsx","CardHeader","CardTitle","className","_lucidereact","CheckCircle","AlertCircle","CardContent","total","detalhes","length","Fragment","_separator","Separator","map","detalhe","index","_alert","Alert","variant","AlertDescription","linha","CardDescription","_button","Button","onClick","Download","_label","Label","htmlFor","_input","Input","id","ref","accept","onChange","disabled","FileText","name","_badge","Badge","toFixed","X","_checkbox","Checkbox","checked","onCheckedChange","_progress","Progress","Loader2","Upload"],"sources":["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\components\\usuarios\\importar-usuarios.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useRef } from 'react';\nimport { Button } from '@/components/ui/button';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Progress } from '@/components/ui/progress';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Badge } from '@/components/ui/badge';\nimport { Separator } from '@/components/ui/separator';\nimport { toast } from 'sonner';\nimport {\n  Upload,\n  FileText,\n  AlertCircle,\n  CheckCircle,\n  X,\n  Download,\n  Loader2,\n} from 'lucide-react';\n\ninterface ImportarUsuariosProps {\n  onSucesso: (resultado: ResultadoImportacao) => void;\n  onCancelar: () => void;\n}\n\ninterface ResultadoImportacao {\n  total: number;\n  sucesso: number;\n  erros: number;\n  detalhes: {\n    linha: number;\n    erro: string;\n    dados?: any;\n  }[];\n}\n\ninterface ConfiguracaoImportacao {\n  sobrescreverExistentes: boolean;\n  enviarEmailBoasVindas: boolean;\n  gerarSenhaTemporaria: boolean;\n  ativarUsuarios: boolean;\n}\n\nexport function ImportarUsuarios({\n  onSucesso,\n  onCancelar,\n}: ImportarUsuariosProps) {\n  const [arquivo, setArquivo] = useState<File | null>(null);\n  const [carregando, setCarregando] = useState(false);\n  const [progresso, setProgresso] = useState(0);\n  const [resultado, setResultado] = useState<ResultadoImportacao | null>(null);\n  const [configuracao, setConfiguracao] = useState<ConfiguracaoImportacao>({\n    sobrescreverExistentes: false,\n    enviarEmailBoasVindas: true,\n    gerarSenhaTemporaria: true,\n    ativarUsuarios: true,\n  });\n\n  const inputArquivoRef = useRef<HTMLInputElement>(null);\n\n  // Manipular seleção de arquivo\n  const manipularSelecaoArquivo = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const arquivoSelecionado = event.target.files?.[0];\n\n    if (arquivoSelecionado) {\n      // Validar tipo de arquivo\n      const tiposPermitidos = [\n        'text/csv',\n        'application/vnd.ms-excel',\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n        'application/json',\n      ];\n\n      if (!tiposPermitidos.includes(arquivoSelecionado.type)) {\n        toast.error('Tipo de arquivo não suportado. Use CSV, Excel ou JSON.');\n        return;\n      }\n\n      // Validar tamanho do arquivo (máximo 10MB)\n      const tamanhoMaximo = 10 * 1024 * 1024; // 10MB\n      if (arquivoSelecionado.size > tamanhoMaximo) {\n        toast.error('Arquivo muito grande. Tamanho máximo: 10MB.');\n        return;\n      }\n\n      setArquivo(arquivoSelecionado);\n      setResultado(null);\n    }\n  };\n\n  // Remover arquivo selecionado\n  const removerArquivo = () => {\n    setArquivo(null);\n    setResultado(null);\n    if (inputArquivoRef.current) {\n      inputArquivoRef.current.value = '';\n    }\n  };\n\n  // Alterar configuração\n  const alternarConfiguracao = (chave: keyof ConfiguracaoImportacao) => {\n    setConfiguracao(prev => ({\n      ...prev,\n      [chave]: !prev[chave],\n    }));\n  };\n\n  // Realizar importação\n  const realizarImportacao = async () => {\n    if (!arquivo) {\n      toast.error('Selecione um arquivo para importar');\n      return;\n    }\n\n    try {\n      setCarregando(true);\n      setProgresso(0);\n\n      // Preparar FormData\n      const formData = new FormData();\n      formData.append('arquivo', arquivo);\n      formData.append('configuracao', JSON.stringify(configuracao));\n\n      // Fazer requisição com acompanhamento de progresso\n      const response = await fetch('/api/usuarios/importar', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.erro || 'Erro ao importar usuários');\n      }\n\n      // Simular progresso (em uma implementação real, isso viria do servidor)\n      const intervalos = [20, 40, 60, 80, 95, 100];\n      for (const valor of intervalos) {\n        await new Promise(resolve => setTimeout(resolve, 200));\n        setProgresso(valor);\n      }\n\n      const resultadoImportacao: ResultadoImportacao = await response.json();\n      setResultado(resultadoImportacao);\n\n      if (resultadoImportacao.erros === 0) {\n        toast.success(\n          `Importação concluída! ${resultadoImportacao.sucesso} usuários importados.`\n        );\n      } else {\n        toast.warning(\n          `Importação concluída com ${resultadoImportacao.erros} erro(s). ${resultadoImportacao.sucesso} usuários importados.`\n        );\n      }\n\n      onSucesso(resultadoImportacao);\n    } catch (error) {\n      console.error('Erro na importação:', error);\n      toast.error(\n        error instanceof Error ? error.message : 'Erro inesperado na importação'\n      );\n    } finally {\n      setCarregando(false);\n    }\n  };\n\n  // Baixar modelo de importação\n  const baixarModelo = async () => {\n    try {\n      const response = await fetch('/api/usuarios/modelo-importacao');\n\n      if (!response.ok) {\n        throw new Error('Erro ao baixar modelo');\n      }\n\n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = 'modelo-importacao-usuarios.csv';\n\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n\n      window.URL.revokeObjectURL(url);\n\n      toast.success('Modelo baixado com sucesso');\n    } catch (error) {\n      console.error('Erro ao baixar modelo:', error);\n      toast.error('Erro ao baixar modelo de importação');\n    }\n  };\n\n  // Renderizar resultado da importação\n  const renderizarResultado = () => {\n    if (!resultado) return null;\n\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            {resultado.erros === 0 ? (\n              <CheckCircle className=\"h-5 w-5 text-green-500\" />\n            ) : (\n              <AlertCircle className=\"h-5 w-5 text-yellow-500\" />\n            )}\n            Resultado da Importação\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"grid grid-cols-3 gap-4\">\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold\">{resultado.total}</div>\n              <div className=\"text-sm text-muted-foreground\">Total</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-green-600\">\n                {resultado.sucesso}\n              </div>\n              <div className=\"text-sm text-muted-foreground\">Sucesso</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-red-600\">\n                {resultado.erros}\n              </div>\n              <div className=\"text-sm text-muted-foreground\">Erros</div>\n            </div>\n          </div>\n\n          {resultado.detalhes.length > 0 && (\n            <>\n              <Separator />\n              <div>\n                <h4 className=\"font-medium mb-2\">Detalhes dos Erros:</h4>\n                <div className=\"max-h-40 overflow-y-auto space-y-2\">\n                  {resultado.detalhes.map((detalhe, index) => (\n                    <Alert key={index} variant=\"destructive\">\n                      <AlertCircle className=\"h-4 w-4\" />\n                      <AlertDescription>\n                        <strong>Linha {detalhe.linha}:</strong> {detalhe.erro}\n                      </AlertDescription>\n                    </Alert>\n                  ))}\n                </div>\n              </div>\n            </>\n          )}\n        </CardContent>\n      </Card>\n    );\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Instruções e modelo */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Instruções de Importação</CardTitle>\n          <CardDescription>\n            Importe usuários em lote usando arquivos CSV, Excel ou JSON\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <Alert>\n            <AlertCircle className=\"h-4 w-4\" />\n            <AlertDescription>\n              <strong>Formatos suportados:</strong> CSV, Excel (.xlsx) e JSON\n              <br />\n              <strong>Tamanho máximo:</strong> 10MB\n              <br />\n              <strong>Campos obrigatórios:</strong> nome, email\n            </AlertDescription>\n          </Alert>\n\n          <Button\n            type=\"button\"\n            variant=\"outline\"\n            onClick={baixarModelo}\n            className=\"w-full sm:w-auto\"\n          >\n            <Download className=\"mr-2 h-4 w-4\" />\n            Baixar Modelo de Importação\n          </Button>\n        </CardContent>\n      </Card>\n\n      {/* Seleção de arquivo */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Selecionar Arquivo</CardTitle>\n          <CardDescription>\n            Escolha o arquivo contendo os dados dos usuários\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            <div>\n              <Label htmlFor=\"arquivo-importacao\">Arquivo</Label>\n              <Input\n                id=\"arquivo-importacao\"\n                type=\"file\"\n                ref={inputArquivoRef}\n                accept=\".csv,.xlsx,.xls,.json\"\n                onChange={manipularSelecaoArquivo}\n                disabled={carregando}\n              />\n            </div>\n\n            {arquivo && (\n              <div className=\"flex items-center justify-between p-3 bg-muted rounded-lg\">\n                <div className=\"flex items-center gap-2\">\n                  <FileText className=\"h-4 w-4\" />\n                  <span className=\"text-sm font-medium\">{arquivo.name}</span>\n                  <Badge variant=\"secondary\">\n                    {(arquivo.size / 1024 / 1024).toFixed(2)} MB\n                  </Badge>\n                </div>\n                <Button\n                  type=\"button\"\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={removerArquivo}\n                  disabled={carregando}\n                >\n                  <X className=\"h-4 w-4\" />\n                </Button>\n              </div>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Configurações de importação */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Configurações de Importação</CardTitle>\n          <CardDescription>\n            Configure como os usuários devem ser importados\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"space-y-3\">\n            <div className=\"flex items-center space-x-2\">\n              <Checkbox\n                id=\"sobrescrever-existentes\"\n                checked={configuracao.sobrescreverExistentes}\n                onCheckedChange={() =>\n                  alternarConfiguracao('sobrescreverExistentes')\n                }\n                disabled={carregando}\n              />\n              <Label htmlFor=\"sobrescrever-existentes\">\n                Sobrescrever usuários existentes (baseado no email)\n              </Label>\n            </div>\n\n            <div className=\"flex items-center space-x-2\">\n              <Checkbox\n                id=\"enviar-email-boas-vindas\"\n                checked={configuracao.enviarEmailBoasVindas}\n                onCheckedChange={() =>\n                  alternarConfiguracao('enviarEmailBoasVindas')\n                }\n                disabled={carregando}\n              />\n              <Label htmlFor=\"enviar-email-boas-vindas\">\n                Enviar email de boas-vindas para novos usuários\n              </Label>\n            </div>\n\n            <div className=\"flex items-center space-x-2\">\n              <Checkbox\n                id=\"gerar-senha-temporaria\"\n                checked={configuracao.gerarSenhaTemporaria}\n                onCheckedChange={() =>\n                  alternarConfiguracao('gerarSenhaTemporaria')\n                }\n                disabled={carregando}\n              />\n              <Label htmlFor=\"gerar-senha-temporaria\">\n                Gerar senha temporária (se não fornecida no arquivo)\n              </Label>\n            </div>\n\n            <div className=\"flex items-center space-x-2\">\n              <Checkbox\n                id=\"ativar-usuarios\"\n                checked={configuracao.ativarUsuarios}\n                onCheckedChange={() => alternarConfiguracao('ativarUsuarios')}\n                disabled={carregando}\n              />\n              <Label htmlFor=\"ativar-usuarios\">\n                Ativar usuários automaticamente após importação\n              </Label>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Progresso da importação */}\n      {carregando && (\n        <Card>\n          <CardHeader>\n            <CardTitle>Importando Usuários</CardTitle>\n            <CardDescription>\n              Aguarde enquanto os usuários são processados...\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-2\">\n              <Progress value={progresso} className=\"w-full\" />\n              <div className=\"text-center text-sm text-muted-foreground\">\n                {progresso}% concluído\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Resultado da importação */}\n      {renderizarResultado()}\n\n      {/* Botões de ação */}\n      <div className=\"flex flex-col sm:flex-row gap-3 pt-6\">\n        <Button\n          type=\"button\"\n          variant=\"outline\"\n          onClick={onCancelar}\n          disabled={carregando}\n          className=\"flex-1 sm:flex-none\"\n        >\n          {resultado ? 'Fechar' : 'Cancelar'}\n        </Button>\n\n        {!resultado && (\n          <Button\n            onClick={realizarImportacao}\n            disabled={carregando || !arquivo}\n            className=\"flex-1 sm:flex-none\"\n          >\n            {carregando && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n            <Upload className=\"mr-2 h-4 w-4\" />\n            Importar Usuários\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"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","ignoreList":[]}