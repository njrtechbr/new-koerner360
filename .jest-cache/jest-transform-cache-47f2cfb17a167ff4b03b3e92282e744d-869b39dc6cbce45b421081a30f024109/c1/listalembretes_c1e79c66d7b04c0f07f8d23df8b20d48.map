{"version":3,"sources":["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\components\\lembretes\\lista-lembretes.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Badge } from '@/components/ui/badge';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';\nimport { useLembretes } from '@/hooks/use-lembretes';\nimport { useToast } from '@/hooks/use-toast';\nimport { \n  Search, \n  Filter, \n  Mail, \n  Clock, \n  AlertTriangle, \n  CheckCircle, \n  XCircle, \n  RefreshCw, \n  Send, \n  Edit, \n  Trash2,\n  Calendar,\n  User,\n  FileText\n} from 'lucide-react';\nimport { format } from 'date-fns';\nimport { ptBR } from 'date-fns/locale';\nimport type { Lembrete, FiltrosLembretes } from '@/hooks/use-lembretes';\n\ninterface ListaLembretesProps {\n  className?: string;\n  filtrosIniciais?: FiltrosLembretes;\n}\n\nexport function ListaLembretes({ className, filtrosIniciais = {} }: ListaLembretesProps) {\n  const [filtros, setFiltros] = useState<FiltrosLembretes>({\n    limite: 50,\n    pagina: 1,\n    ...filtrosIniciais,\n  });\n  const [busca, setBusca] = useState('');\n  const [lembreteDetalhes, setLembreteDetalhes] = useState<Lembrete | null>(null);\n  const [mostrarDetalhes, setMostrarDetalhes] = useState(false);\n\n  const {\n    lembretes,\n    paginacao,\n    carregando,\n    erro,\n    buscarLembretes,\n    executarAcaoLembrete,\n    removerLembrete,\n  } = useLembretes(filtros);\n\n  const { toast } = useToast();\n\n  // Atualização automática a cada 30 segundos\n  useEffect(() => {\n    const interval = setInterval(() => {\n      buscarLembretes(filtros);\n    }, 30000);\n\n    return () => clearInterval(interval);\n  }, [filtros, buscarLembretes]);\n\n  const handleBuscar = () => {\n    const novosFiltros = { ...filtros, pagina: 1 };\n    if (busca.trim()) {\n      // Implementar busca por nome do usuário ou avaliado\n      // Por enquanto, apenas recarrega os dados\n    }\n    setFiltros(novosFiltros);\n    buscarLembretes(novosFiltros);\n  };\n\n  const handleFiltroChange = (campo: keyof FiltrosLembretes, valor: any) => {\n    const novosFiltros = { ...filtros, [campo]: valor, pagina: 1 };\n    setFiltros(novosFiltros);\n    buscarLembretes(novosFiltros);\n  };\n\n  const handlePaginacao = (novaPagina: number) => {\n    const novosFiltros = { ...filtros, pagina: novaPagina };\n    setFiltros(novosFiltros);\n    buscarLembretes(novosFiltros);\n  };\n\n  const handleVerDetalhes = (lembrete: Lembrete) => {\n    setLembreteDetalhes(lembrete);\n    setMostrarDetalhes(true);\n  };\n\n  const handleReenviar = async (lembrete: Lembrete) => {\n    try {\n      await executarAcaoLembrete(lembrete.id, 'reenviar');\n      toast({\n        title: 'Sucesso',\n        description: 'Lembrete reenviado com sucesso.',\n      });\n    } catch (error) {\n      toast({\n        title: 'Erro',\n        description: 'Erro ao reenviar lembrete.',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  const handleMarcarEnviado = async (lembrete: Lembrete) => {\n    try {\n      await executarAcaoLembrete(lembrete.id, 'marcar_enviado');\n      toast({\n        title: 'Sucesso',\n        description: 'Lembrete marcado como enviado.',\n      });\n    } catch (error) {\n      toast({\n        title: 'Erro',\n        description: 'Erro ao marcar lembrete como enviado.',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  const handleReagendar = async (lembrete: Lembrete) => {\n    const novaData = prompt('Digite a nova data/hora (YYYY-MM-DD HH:MM):');\n    if (novaData) {\n      try {\n        await executarAcaoLembrete(lembrete.id, 'reagendar', { dataEnvio: novaData });\n        toast({\n          title: 'Sucesso',\n          description: 'Lembrete reagendado com sucesso.',\n        });\n      } catch (error) {\n        toast({\n          title: 'Erro',\n          description: 'Erro ao reagendar lembrete.',\n          variant: 'destructive',\n        });\n      }\n    }\n  };\n\n  const handleRemover = async (lembrete: Lembrete) => {\n    if (confirm(`Tem certeza que deseja remover o lembrete para ${lembrete.usuario.nome}?`)) {\n      try {\n        await removerLembrete(lembrete.id);\n        toast({\n          title: 'Sucesso',\n          description: 'Lembrete removido com sucesso.',\n        });\n      } catch (error) {\n        toast({\n          title: 'Erro',\n          description: 'Erro ao remover lembrete.',\n          variant: 'destructive',\n        });\n      }\n    }\n  };\n\n  const getStatusIcon = (lembrete: Lembrete) => {\n    if (lembrete.enviado) {\n      return <CheckCircle className=\"h-4 w-4 text-green-500\" />;\n    }\n    if (lembrete.erro) {\n      return <XCircle className=\"h-4 w-4 text-red-500\" />;\n    }\n    if (new Date(lembrete.dataEnvio) < new Date()) {\n      return <AlertTriangle className=\"h-4 w-4 text-yellow-500\" />;\n    }\n    return <Clock className=\"h-4 w-4 text-blue-500\" />;\n  };\n\n  const getStatusText = (lembrete: Lembrete) => {\n    if (lembrete.enviado) return 'Enviado';\n    if (lembrete.erro) return 'Falha';\n    if (new Date(lembrete.dataEnvio) < new Date()) return 'Atrasado';\n    return 'Agendado';\n  };\n\n  const getStatusVariant = (lembrete: Lembrete): 'default' | 'secondary' | 'destructive' => {\n    if (lembrete.enviado) return 'default';\n    if (lembrete.erro) return 'destructive';\n    if (new Date(lembrete.dataEnvio) < new Date()) return 'destructive';\n    return 'secondary';\n  };\n\n  const getTipoIcon = (tipo: string) => {\n    switch (tipo) {\n      case 'lembrete':\n        return <Mail className=\"h-4 w-4 text-blue-500\" />;\n      case 'vencimento':\n        return <AlertTriangle className=\"h-4 w-4 text-red-500\" />;\n      default:\n        return <Clock className=\"h-4 w-4 text-gray-500\" />;\n    }\n  };\n\n  return (\n    <div className={className}>\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Mail className=\"h-5 w-5\" />\n            Lembretes\n          </CardTitle>\n          <CardDescription>\n            Gerencie todos os lembretes de avaliação do sistema\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          {/* Filtros */}\n          <div className=\"space-y-4 mb-6\">\n            <div className=\"flex gap-4 items-end\">\n              <div className=\"flex-1\">\n                <Label htmlFor=\"busca\">Buscar</Label>\n                <div className=\"flex gap-2\">\n                  <Input\n                    id=\"busca\"\n                    placeholder=\"Buscar por usuário ou avaliado...\"\n                    value={busca}\n                    onChange={(e) => setBusca(e.target.value)}\n                    onKeyPress={(e) => e.key === 'Enter' && handleBuscar()}\n                  />\n                  <Button onClick={handleBuscar} size=\"icon\">\n                    <Search className=\"h-4 w-4\" />\n                  </Button>\n                </div>\n              </div>\n              <Button\n                onClick={() => buscarLembretes()}\n                variant=\"outline\"\n                size=\"icon\"\n                disabled={carregando}\n              >\n                <RefreshCw className={`h-4 w-4 ${carregando ? 'animate-spin' : ''}`} />\n              </Button>\n            </div>\n\n            <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n              <div>\n                <Label>Tipo</Label>\n                <Select\n                  value={filtros.tipo || 'todos'}\n                  onValueChange={(value) => \n                    handleFiltroChange('tipo', value === 'todos' ? undefined : value)\n                  }\n                >\n                  <SelectTrigger>\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"todos\">Todos</SelectItem>\n                    <SelectItem value=\"lembrete\">Lembrete</SelectItem>\n                    <SelectItem value=\"vencimento\">Vencimento</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n\n              <div>\n                <Label>Status</Label>\n                <Select\n                  value={filtros.enviado === undefined ? 'todos' : filtros.enviado ? 'enviado' : 'pendente'}\n                  onValueChange={(value) => {\n                    let enviado: boolean | undefined;\n                    if (value === 'enviado') enviado = true;\n                    else if (value === 'pendente') enviado = false;\n                    else enviado = undefined;\n                    handleFiltroChange('enviado', enviado);\n                  }}\n                >\n                  <SelectTrigger>\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"todos\">Todos</SelectItem>\n                    <SelectItem value=\"pendente\">Pendente</SelectItem>\n                    <SelectItem value=\"enviado\">Enviado</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n\n              <div>\n                <Label>Data Início</Label>\n                <Input\n                  type=\"date\"\n                  value={filtros.dataInicio || ''}\n                  onChange={(e) => handleFiltroChange('dataInicio', e.target.value || undefined)}\n                />\n              </div>\n\n              <div>\n                <Label>Data Fim</Label>\n                <Input\n                  type=\"date\"\n                  value={filtros.dataFim || ''}\n                  onChange={(e) => handleFiltroChange('dataFim', e.target.value || undefined)}\n                />\n              </div>\n            </div>\n          </div>\n\n          {erro && (\n            <Alert className=\"mb-4\">\n              <AlertTriangle className=\"h-4 w-4\" />\n              <AlertDescription>{erro}</AlertDescription>\n            </Alert>\n          )}\n\n          {/* Lista de Lembretes */}\n          <div className=\"space-y-2\">\n            {carregando && lembretes.length === 0 ? (\n              <div className=\"text-center py-8\">\n                <RefreshCw className=\"h-8 w-8 animate-spin mx-auto mb-2\" />\n                <p>Carregando lembretes...</p>\n              </div>\n            ) : lembretes.length === 0 ? (\n              <div className=\"text-center py-8\">\n                <Mail className=\"h-8 w-8 mx-auto mb-2 text-gray-400\" />\n                <p className=\"text-gray-500\">Nenhum lembrete encontrado</p>\n              </div>\n            ) : (\n              lembretes.map((lembrete) => (\n                <Card key={lembrete.id} className=\"hover:shadow-md transition-shadow\">\n                  <CardContent className=\"p-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center space-x-4 flex-1\">\n                        <div className=\"flex items-center space-x-2\">\n                          {getTipoIcon(lembrete.tipo)}\n                          {getStatusIcon(lembrete)}\n                        </div>\n                        \n                        <div className=\"flex-1\">\n                          <div className=\"flex items-center gap-2 mb-1\">\n                            <h4 className=\"font-medium\">{lembrete.usuario.nome}</h4>\n                            <Badge variant={lembrete.tipo === 'vencimento' ? 'destructive' : 'default'}>\n                              {lembrete.tipo}\n                            </Badge>\n                            <Badge variant={getStatusVariant(lembrete)}>\n                              {getStatusText(lembrete)}\n                            </Badge>\n                          </div>\n                          \n                          <p className=\"text-sm text-muted-foreground mb-1\">\n                            <User className=\"h-3 w-3 inline mr-1\" />\n                            Avaliado: {lembrete.avaliacao.avaliado.nome}\n                          </p>\n                          \n                          <p className=\"text-sm text-muted-foreground\">\n                            <Calendar className=\"h-3 w-3 inline mr-1\" />\n                            Agendado: {format(new Date(lembrete.dataEnvio), 'dd/MM/yyyy HH:mm', { locale: ptBR })}\n                          </p>\n                          \n                          {lembrete.dataEnvioReal && (\n                            <p className=\"text-sm text-muted-foreground\">\n                              <CheckCircle className=\"h-3 w-3 inline mr-1\" />\n                              Enviado: {format(new Date(lembrete.dataEnvioReal), 'dd/MM/yyyy HH:mm', { locale: ptBR })}\n                            </p>\n                          )}\n                          \n                          {lembrete.erro && (\n                            <p className=\"text-sm text-red-600\">\n                              <XCircle className=\"h-3 w-3 inline mr-1\" />\n                              Erro: {lembrete.erro}\n                            </p>\n                          )}\n                        </div>\n                      </div>\n                      \n                      <div className=\"flex items-center space-x-2\">\n                        <Button\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={() => handleVerDetalhes(lembrete)}\n                        >\n                          <FileText className=\"h-4 w-4\" />\n                        </Button>\n                        \n                        {!lembrete.enviado && (\n                          <>\n                            <Button\n                              variant=\"outline\"\n                              size=\"sm\"\n                              onClick={() => handleReenviar(lembrete)}\n                            >\n                              <Send className=\"h-4 w-4\" />\n                            </Button>\n                            \n                            <Button\n                              variant=\"outline\"\n                              size=\"sm\"\n                              onClick={() => handleReagendar(lembrete)}\n                            >\n                              <Edit className=\"h-4 w-4\" />\n                            </Button>\n                            \n                            <Button\n                              variant=\"outline\"\n                              size=\"sm\"\n                              onClick={() => handleMarcarEnviado(lembrete)}\n                            >\n                              <CheckCircle className=\"h-4 w-4\" />\n                            </Button>\n                          </>\n                        )}\n                        \n                        <Button\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={() => handleRemover(lembrete)}\n                          className=\"text-red-600 hover:text-red-700\"\n                        >\n                          <Trash2 className=\"h-4 w-4\" />\n                        </Button>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))\n            )}\n          </div>\n\n          {/* Paginação */}\n          {paginacao.totalPaginas > 1 && (\n            <div className=\"flex items-center justify-between mt-6\">\n              <p className=\"text-sm text-muted-foreground\">\n                Mostrando {((paginacao.paginaAtual - 1) * paginacao.itensPorPagina) + 1} a{' '}\n                {Math.min(paginacao.paginaAtual * paginacao.itensPorPagina, paginacao.totalItens)} de{' '}\n                {paginacao.totalItens} lembretes\n              </p>\n              \n              <div className=\"flex items-center space-x-2\">\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => handlePaginacao(paginacao.paginaAtual - 1)}\n                  disabled={!paginacao.temPaginaAnterior || carregando}\n                >\n                  Anterior\n                </Button>\n                \n                <span className=\"text-sm\">\n                  Página {paginacao.paginaAtual} de {paginacao.totalPaginas}\n                </span>\n                \n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => handlePaginacao(paginacao.paginaAtual + 1)}\n                  disabled={!paginacao.temProximaPagina || carregando}\n                >\n                  Próxima\n                </Button>\n              </div>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Dialog de Detalhes */}\n      <Dialog open={mostrarDetalhes} onOpenChange={setMostrarDetalhes}>\n        <DialogContent className=\"max-w-2xl\">\n          <DialogHeader>\n            <DialogTitle>Detalhes do Lembrete</DialogTitle>\n            <DialogDescription>\n              Informações completas sobre o lembrete selecionado\n            </DialogDescription>\n          </DialogHeader>\n          \n          {lembreteDetalhes && (\n            <div className=\"space-y-4\">\n              <div className=\"grid gap-4 md:grid-cols-2\">\n                <div>\n                  <Label>Usuário</Label>\n                  <p className=\"font-medium\">{lembreteDetalhes.usuario.nome}</p>\n                  <p className=\"text-sm text-muted-foreground\">{lembreteDetalhes.usuario.email}</p>\n                </div>\n                \n                <div>\n                  <Label>Avaliado</Label>\n                  <p className=\"font-medium\">{lembreteDetalhes.avaliacao.avaliado.nome}</p>\n                  <p className=\"text-sm text-muted-foreground\">{lembreteDetalhes.avaliacao.avaliado.email}</p>\n                </div>\n                \n                <div>\n                  <Label>Tipo</Label>\n                  <Badge variant={lembreteDetalhes.tipo === 'vencimento' ? 'destructive' : 'default'}>\n                    {lembreteDetalhes.tipo}\n                  </Badge>\n                </div>\n                \n                <div>\n                  <Label>Status</Label>\n                  <Badge variant={getStatusVariant(lembreteDetalhes)}>\n                    {getStatusText(lembreteDetalhes)}\n                  </Badge>\n                </div>\n                \n                <div>\n                  <Label>Data Agendada</Label>\n                  <p>{format(new Date(lembreteDetalhes.dataEnvio), 'dd/MM/yyyy HH:mm', { locale: ptBR })}</p>\n                </div>\n                \n                {lembreteDetalhes.dataEnvioReal && (\n                  <div>\n                    <Label>Data de Envio</Label>\n                    <p>{format(new Date(lembreteDetalhes.dataEnvioReal), 'dd/MM/yyyy HH:mm', { locale: ptBR })}</p>\n                  </div>\n                )}\n                \n                <div>\n                  <Label>Tentativas</Label>\n                  <p>{lembreteDetalhes.tentativas}</p>\n                </div>\n                \n                <div>\n                  <Label>Prazo da Avaliação</Label>\n                  <p>{format(new Date(lembreteDetalhes.avaliacao.prazo), 'dd/MM/yyyy', { locale: ptBR })}</p>\n                </div>\n              </div>\n              \n              {lembreteDetalhes.observacoes && (\n                <div>\n                  <Label>Observações</Label>\n                  <p className=\"text-sm bg-gray-50 p-2 rounded\">{lembreteDetalhes.observacoes}</p>\n                </div>\n              )}\n              \n              {lembreteDetalhes.erro && (\n                <div>\n                  <Label>Erro</Label>\n                  <p className=\"text-sm bg-red-50 text-red-700 p-2 rounded\">{lembreteDetalhes.erro}</p>\n                </div>\n              )}\n              \n              <div>\n                <Label>Período da Avaliação</Label>\n                <p className=\"font-medium\">{lembreteDetalhes.avaliacao.periodo.nome}</p>\n                <p className=\"text-sm text-muted-foreground\">\n                  {format(new Date(lembreteDetalhes.avaliacao.periodo.dataInicio), 'dd/MM/yyyy', { locale: ptBR })} a{' '}\n                  {format(new Date(lembreteDetalhes.avaliacao.periodo.dataFim), 'dd/MM/yyyy', { locale: ptBR })}\n                </p>\n              </div>\n            </div>\n          )}\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default ListaLembretes;"],"names":["ListaLembretes","className","filtrosIniciais","filtros","setFiltros","useState","limite","pagina","busca","setBusca","lembreteDetalhes","setLembreteDetalhes","mostrarDetalhes","setMostrarDetalhes","lembretes","paginacao","carregando","erro","buscarLembretes","executarAcaoLembrete","removerLembrete","useLembretes","toast","useToast","useEffect","interval","setInterval","clearInterval","handleBuscar","novosFiltros","trim","handleFiltroChange","campo","valor","handlePaginacao","novaPagina","handleVerDetalhes","lembrete","handleReenviar","id","title","description","error","variant","handleMarcarEnviado","handleReagendar","novaData","prompt","dataEnvio","handleRemover","confirm","usuario","nome","getStatusIcon","enviado","CheckCircle","XCircle","Date","AlertTriangle","Clock","getStatusText","getStatusVariant","getTipoIcon","tipo","Mail","div","Card","CardHeader","CardTitle","CardDescription","CardContent","Label","htmlFor","Input","placeholder","value","onChange","e","target","onKeyPress","key","Button","onClick","size","Search","disabled","RefreshCw","Select","onValueChange","undefined","SelectTrigger","SelectValue","SelectContent","SelectItem","type","dataInicio","dataFim","Alert","AlertDescription","length","p","map","h4","Badge","User","avaliacao","avaliado","Calendar","format","locale","ptBR","dataEnvioReal","FileText","Send","Edit","Trash2","totalPaginas","paginaAtual","itensPorPagina","Math","min","totalItens","temPaginaAnterior","span","temProximaPagina","Dialog","open","onOpenChange","DialogContent","DialogHeader","DialogTitle","DialogDescription","email","tentativas","prazo","observacoes","periodo"],"mappings":"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"}