73a46167c2a623fe17fb396b41d162d9
"use strict";

/* istanbul ignore next */
function cov_bz01o83jd() {
  var path = "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\lib\\upload.ts";
  var hash = "99bfdb6426c923fe4d1995c9970aa239949a52d6";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\lib\\upload.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 48,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 29
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 31
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 26
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 37
        }
      },
      "8": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "9": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 30
        }
      },
      "10": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 38
        }
      },
      "11": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 32
        }
      },
      "12": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 27
        }
      },
      "13": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 24
        }
      },
      "14": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 28
        }
      },
      "15": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 37
        }
      },
      "16": {
        start: {
          line: 49,
          column: 18
        },
        end: {
          line: 49,
          column: 45
        }
      },
      "17": {
        start: {
          line: 50,
          column: 14
        },
        end: {
          line: 50,
          column: 29
        }
      },
      "18": {
        start: {
          line: 51,
          column: 16
        },
        end: {
          line: 51,
          column: 33
        }
      },
      "19": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 25
        }
      },
      "20": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 54,
          column: 51
        }
      },
      "21": {
        start: {
          line: 54,
          column: 39
        },
        end: {
          line: 54,
          column: 51
        }
      },
      "22": {
        start: {
          line: 55,
          column: 28
        },
        end: {
          line: 55,
          column: 41
        }
      },
      "23": {
        start: {
          line: 56,
          column: 27
        },
        end: {
          line: 56,
          column: 40
        }
      },
      "24": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 59,
          column: 20
        }
      },
      "25": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 66
        }
      },
      "26": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 64,
          column: 5
        }
      },
      "27": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 19
        }
      },
      "28": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 69,
          column: 5
        }
      },
      "29": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 68,
          column: 10
        }
      },
      "30": {
        start: {
          line: 70,
          column: 16
        },
        end: {
          line: 70,
          column: 53
        }
      },
      "31": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 73,
          column: 5
        }
      },
      "32": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 30
        }
      },
      "33": {
        start: {
          line: 74,
          column: 17
        },
        end: {
          line: 76,
          column: 5
        }
      },
      "34": {
        start: {
          line: 77,
          column: 32
        },
        end: {
          line: 77,
          column: 88
        }
      },
      "35": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 87,
          column: 5
        }
      },
      "36": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 86,
          column: 9
        }
      },
      "37": {
        start: {
          line: 80,
          column: 23
        },
        end: {
          line: 80,
          column: 95
        }
      },
      "38": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 85,
          column: 13
        }
      },
      "39": {
        start: {
          line: 82,
          column: 16
        },
        end: {
          line: 82,
          column: 57
        }
      },
      "40": {
        start: {
          line: 84,
          column: 16
        },
        end: {
          line: 84,
          column: 39
        }
      },
      "41": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 88,
          column: 25
        }
      },
      "42": {
        start: {
          line: 89,
          column: 4
        },
        end: {
          line: 91,
          column: 5
        }
      },
      "43": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 90,
          column: 31
        }
      },
      "44": {
        start: {
          line: 92,
          column: 4
        },
        end: {
          line: 92,
          column: 18
        }
      },
      "45": {
        start: {
          line: 94,
          column: 22
        },
        end: {
          line: 137,
          column: 1
        }
      },
      "46": {
        start: {
          line: 140,
          column: 20
        },
        end: {
          line: 140,
          column: 53
        }
      },
      "47": {
        start: {
          line: 141,
          column: 4
        },
        end: {
          line: 147,
          column: 5
        }
      },
      "48": {
        start: {
          line: 142,
          column: 26
        },
        end: {
          line: 142,
          column: 61
        }
      },
      "49": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 146,
          column: 10
        }
      },
      "50": {
        start: {
          line: 149,
          column: 25
        },
        end: {
          line: 149,
          column: 58
        }
      },
      "51": {
        start: {
          line: 150,
          column: 4
        },
        end: {
          line: 155,
          column: 5
        }
      },
      "52": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 154,
          column: 10
        }
      },
      "53": {
        start: {
          line: 157,
          column: 22
        },
        end: {
          line: 157,
          column: 49
        }
      },
      "54": {
        start: {
          line: 158,
          column: 30
        },
        end: {
          line: 158,
          column: 68
        }
      },
      "55": {
        start: {
          line: 159,
          column: 4
        },
        end: {
          line: 164,
          column: 5
        }
      },
      "56": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 163,
          column: 10
        }
      },
      "57": {
        start: {
          line: 165,
          column: 4
        },
        end: {
          line: 167,
          column: 6
        }
      },
      "58": {
        start: {
          line: 170,
          column: 25
        },
        end: {
          line: 170,
          column: 50
        }
      },
      "59": {
        start: {
          line: 171,
          column: 4
        },
        end: {
          line: 171,
          column: 85
        }
      },
      "60": {
        start: {
          line: 174,
          column: 4
        },
        end: {
          line: 179,
          column: 5
        }
      },
      "61": {
        start: {
          line: 175,
          column: 26
        },
        end: {
          line: 175,
          column: 36
        }
      },
      "62": {
        start: {
          line: 176,
          column: 26
        },
        end: {
          line: 176,
          column: 56
        }
      },
      "63": {
        start: {
          line: 177,
          column: 31
        },
        end: {
          line: 177,
          column: 87
        }
      },
      "64": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 60
        }
      },
      "65": {
        start: {
          line: 180,
          column: 22
        },
        end: {
          line: 180,
          column: 52
        }
      },
      "66": {
        start: {
          line: 181,
          column: 17
        },
        end: {
          line: 181,
          column: 42
        }
      },
      "67": {
        start: {
          line: 182,
          column: 4
        },
        end: {
          line: 182,
          column: 33
        }
      },
      "68": {
        start: {
          line: 185,
          column: 4
        },
        end: {
          line: 191,
          column: 5
        }
      },
      "69": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 186,
          column: 65
        }
      },
      "70": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 190,
          column: 11
        }
      },
      "71": {
        start: {
          line: 194,
          column: 4
        },
        end: {
          line: 232,
          column: 5
        }
      },
      "72": {
        start: {
          line: 196,
          column: 27
        },
        end: {
          line: 196,
          column: 59
        }
      },
      "73": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 202,
          column: 9
        }
      },
      "74": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 201,
          column: 14
        }
      },
      "75": {
        start: {
          line: 204,
          column: 24
        },
        end: {
          line: 204,
          column: 124
        }
      },
      "76": {
        start: {
          line: 205,
          column: 26
        },
        end: {
          line: 205,
          column: 172
        }
      },
      "77": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 207,
          column: 47
        }
      },
      "78": {
        start: {
          line: 209,
          column: 25
        },
        end: {
          line: 209,
          column: 88
        }
      },
      "79": {
        start: {
          line: 210,
          column: 25
        },
        end: {
          line: 210,
          column: 61
        }
      },
      "80": {
        start: {
          line: 212,
          column: 22
        },
        end: {
          line: 212,
          column: 46
        }
      },
      "81": {
        start: {
          line: 213,
          column: 23
        },
        end: {
          line: 213,
          column: 41
        }
      },
      "82": {
        start: {
          line: 215,
          column: 8
        },
        end: {
          line: 215,
          column: 57
        }
      },
      "83": {
        start: {
          line: 217,
          column: 29
        },
        end: {
          line: 217,
          column: 129
        }
      },
      "84": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 225,
          column: 10
        }
      },
      "85": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 227,
          column: 56
        }
      },
      "86": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 231,
          column: 10
        }
      },
      "87": {
        start: {
          line: 235,
          column: 4
        },
        end: {
          line: 246,
          column: 5
        }
      },
      "88": {
        start: {
          line: 237,
          column: 29
        },
        end: {
          line: 237,
          column: 79
        }
      },
      "89": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 239,
          column: 70
        }
      },
      "90": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 241,
          column: 50
        }
      },
      "91": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 242,
          column: 20
        }
      },
      "92": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 244,
          column: 57
        }
      },
      "93": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 245,
          column: 21
        }
      },
      "94": {
        start: {
          line: 249,
          column: 4
        },
        end: {
          line: 255,
          column: 5
        }
      },
      "95": {
        start: {
          line: 250,
          column: 29
        },
        end: {
          line: 250,
          column: 79
        }
      },
      "96": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 251,
          column: 70
        }
      },
      "97": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 252,
          column: 20
        }
      },
      "98": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 254,
          column: 21
        }
      },
      "99": {
        start: {
          line: 258,
          column: 4
        },
        end: {
          line: 281,
          column: 5
        }
      },
      "100": {
        start: {
          line: 259,
          column: 29
        },
        end: {
          line: 259,
          column: 79
        }
      },
      "101": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 260,
          column: 70
        }
      },
      "102": {
        start: {
          line: 261,
          column: 22
        },
        end: {
          line: 261,
          column: 158
        }
      },
      "103": {
        start: {
          line: 261,
          column: 69
        },
        end: {
          line: 261,
          column: 123
        }
      },
      "104": {
        start: {
          line: 261,
          column: 136
        },
        end: {
          line: 261,
          column: 157
        }
      },
      "105": {
        start: {
          line: 262,
          column: 26
        },
        end: {
          line: 262,
          column: 52
        }
      },
      "106": {
        start: {
          line: 264,
          column: 26
        },
        end: {
          line: 270,
          column: 9
        }
      },
      "107": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 276,
          column: 10
        }
      },
      "108": {
        start: {
          line: 278,
          column: 8
        },
        end: {
          line: 280,
          column: 10
        }
      },
      "109": {
        start: {
          line: 284,
          column: 4
        },
        end: {
          line: 305,
          column: 5
        }
      },
      "110": {
        start: {
          line: 285,
          column: 34
        },
        end: {
          line: 285,
          column: 136
        }
      },
      "111": {
        start: {
          line: 285,
          column: 81
        },
        end: {
          line: 285,
          column: 135
        }
      },
      "112": {
        start: {
          line: 286,
          column: 28
        },
        end: {
          line: 286,
          column: 79
        }
      },
      "113": {
        start: {
          line: 287,
          column: 22
        },
        end: {
          line: 287,
          column: 48
        }
      },
      "114": {
        start: {
          line: 288,
          column: 20
        },
        end: {
          line: 288,
          column: 30
        }
      },
      "115": {
        start: {
          line: 289,
          column: 23
        },
        end: {
          line: 289,
          column: 57
        }
      },
      "116": {
        start: {
          line: 290,
          column: 27
        },
        end: {
          line: 290,
          column: 28
        }
      },
      "117": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 300,
          column: 9
        }
      },
      "118": {
        start: {
          line: 292,
          column: 29
        },
        end: {
          line: 292,
          column: 63
        }
      },
      "119": {
        start: {
          line: 293,
          column: 26
        },
        end: {
          line: 293,
          column: 46
        }
      },
      "120": {
        start: {
          line: 294,
          column: 12
        },
        end: {
          line: 299,
          column: 13
        }
      },
      "121": {
        start: {
          line: 295,
          column: 37
        },
        end: {
          line: 295,
          column: 60
        }
      },
      "122": {
        start: {
          line: 296,
          column: 16
        },
        end: {
          line: 298,
          column: 17
        }
      },
      "123": {
        start: {
          line: 297,
          column: 20
        },
        end: {
          line: 297,
          column: 35
        }
      },
      "124": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 301,
          column: 28
        }
      },
      "125": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 303,
          column: 65
        }
      },
      "126": {
        start: {
          line: 304,
          column: 8
        },
        end: {
          line: 304,
          column: 17
        }
      },
      "127": {
        start: {
          line: 308,
          column: 4
        },
        end: {
          line: 308,
          column: 38
        }
      },
      "128": {
        start: {
          line: 308,
          column: 21
        },
        end: {
          line: 308,
          column: 38
        }
      },
      "129": {
        start: {
          line: 309,
          column: 14
        },
        end: {
          line: 309,
          column: 18
        }
      },
      "130": {
        start: {
          line: 310,
          column: 18
        },
        end: {
          line: 315,
          column: 5
        }
      },
      "131": {
        start: {
          line: 316,
          column: 14
        },
        end: {
          line: 316,
          column: 55
        }
      },
      "132": {
        start: {
          line: 317,
          column: 4
        },
        end: {
          line: 317,
          column: 76
        }
      },
      "133": {
        start: {
          line: 320,
          column: 19
        },
        end: {
          line: 320,
          column: 21
        }
      },
      "134": {
        start: {
          line: 321,
          column: 23
        },
        end: {
          line: 321,
          column: 25
        }
      },
      "135": {
        start: {
          line: 322,
          column: 4
        },
        end: {
          line: 329,
          column: 7
        }
      },
      "136": {
        start: {
          line: 323,
          column: 27
        },
        end: {
          line: 323,
          column: 51
        }
      },
      "137": {
        start: {
          line: 324,
          column: 8
        },
        end: {
          line: 328,
          column: 9
        }
      },
      "138": {
        start: {
          line: 325,
          column: 12
        },
        end: {
          line: 325,
          column: 34
        }
      },
      "139": {
        start: {
          line: 327,
          column: 12
        },
        end: {
          line: 327,
          column: 84
        }
      },
      "140": {
        start: {
          line: 330,
          column: 4
        },
        end: {
          line: 334,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 25
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 27
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 22
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 33
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 22
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 34
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 28
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 23
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 36
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        loc: {
          start: {
            line: 39,
            column: 20
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 39
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        loc: {
          start: {
            line: 42,
            column: 24
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 42
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        loc: {
          start: {
            line: 45,
            column: 33
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 45
      },
      "13": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 53,
            column: 9
          },
          end: {
            line: 53,
            column: 33
          }
        },
        loc: {
          start: {
            line: 53,
            column: 47
          },
          end: {
            line: 60,
            column: 1
          }
        },
        line: 53
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 57,
            column: 39
          },
          end: {
            line: 57,
            column: 40
          }
        },
        loc: {
          start: {
            line: 57,
            column: 61
          },
          end: {
            line: 59,
            column: 5
          }
        },
        line: 57
      },
      "15": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 61,
            column: 9
          },
          end: {
            line: 61,
            column: 34
          }
        },
        loc: {
          start: {
            line: 61,
            column: 53
          },
          end: {
            line: 93,
            column: 1
          }
        },
        line: 61
      },
      "16": {
        name: "validateFile",
        decl: {
          start: {
            line: 138,
            column: 9
          },
          end: {
            line: 138,
            column: 21
          }
        },
        loc: {
          start: {
            line: 138,
            column: 34
          },
          end: {
            line: 168,
            column: 1
          }
        },
        line: 138
      },
      "17": {
        name: "getFileExtension",
        decl: {
          start: {
            line: 169,
            column: 9
          },
          end: {
            line: 169,
            column: 25
          }
        },
        loc: {
          start: {
            line: 169,
            column: 36
          },
          end: {
            line: 172,
            column: 1
          }
        },
        line: 169
      },
      "18": {
        name: "generateUniqueFileName",
        decl: {
          start: {
            line: 173,
            column: 9
          },
          end: {
            line: 173,
            column: 31
          }
        },
        loc: {
          start: {
            line: 173,
            column: 72
          },
          end: {
            line: 183,
            column: 1
          }
        },
        line: 173
      },
      "19": {
        name: "ensureDirectoryExists",
        decl: {
          start: {
            line: 184,
            column: 15
          },
          end: {
            line: 184,
            column: 36
          }
        },
        loc: {
          start: {
            line: 184,
            column: 46
          },
          end: {
            line: 192,
            column: 1
          }
        },
        line: 184
      },
      "20": {
        name: "saveFile",
        decl: {
          start: {
            line: 193,
            column: 15
          },
          end: {
            line: 193,
            column: 23
          }
        },
        loc: {
          start: {
            line: 193,
            column: 39
          },
          end: {
            line: 233,
            column: 1
          }
        },
        line: 193
      },
      "21": {
        name: "deleteFile",
        decl: {
          start: {
            line: 234,
            column: 15
          },
          end: {
            line: 234,
            column: 25
          }
        },
        loc: {
          start: {
            line: 234,
            column: 36
          },
          end: {
            line: 247,
            column: 1
          }
        },
        line: 234
      },
      "22": {
        name: "fileExists",
        decl: {
          start: {
            line: 248,
            column: 15
          },
          end: {
            line: 248,
            column: 25
          }
        },
        loc: {
          start: {
            line: 248,
            column: 36
          },
          end: {
            line: 256,
            column: 1
          }
        },
        line: 248
      },
      "23": {
        name: "getFileInfo",
        decl: {
          start: {
            line: 257,
            column: 15
          },
          end: {
            line: 257,
            column: 26
          }
        },
        loc: {
          start: {
            line: 257,
            column: 37
          },
          end: {
            line: 282,
            column: 1
          }
        },
        line: 257
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 261,
            column: 51
          },
          end: {
            line: 261,
            column: 52
          }
        },
        loc: {
          start: {
            line: 261,
            column: 69
          },
          end: {
            line: 261,
            column: 123
          }
        },
        line: 261
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 261,
            column: 130
          },
          end: {
            line: 261,
            column: 131
          }
        },
        loc: {
          start: {
            line: 261,
            column: 136
          },
          end: {
            line: 261,
            column: 157
          }
        },
        line: 261
      },
      "26": {
        name: "cleanupOldFiles",
        decl: {
          start: {
            line: 283,
            column: 15
          },
          end: {
            line: 283,
            column: 30
          }
        },
        loc: {
          start: {
            line: 283,
            column: 61
          },
          end: {
            line: 306,
            column: 1
          }
        },
        line: 283
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 285,
            column: 63
          },
          end: {
            line: 285,
            column: 64
          }
        },
        loc: {
          start: {
            line: 285,
            column: 81
          },
          end: {
            line: 285,
            column: 135
          }
        },
        line: 285
      },
      "28": {
        name: "formatFileSize",
        decl: {
          start: {
            line: 307,
            column: 9
          },
          end: {
            line: 307,
            column: 23
          }
        },
        loc: {
          start: {
            line: 307,
            column: 31
          },
          end: {
            line: 318,
            column: 1
          }
        },
        line: 307
      },
      "29": {
        name: "validateMultipleFiles",
        decl: {
          start: {
            line: 319,
            column: 9
          },
          end: {
            line: 319,
            column: 30
          }
        },
        loc: {
          start: {
            line: 319,
            column: 44
          },
          end: {
            line: 335,
            column: 1
          }
        },
        line: 319
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 322,
            column: 18
          },
          end: {
            line: 322,
            column: 19
          }
        },
        loc: {
          start: {
            line: 322,
            column: 33
          },
          end: {
            line: 329,
            column: 5
          }
        },
        line: 322
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 54,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 54,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "1": {
        loc: {
          start: {
            line: 58,
            column: 15
          },
          end: {
            line: 58,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 58,
            column: 29
          },
          end: {
            line: 58,
            column: 45
          }
        }, {
          start: {
            line: 58,
            column: 48
          },
          end: {
            line: 58,
            column: 65
          }
        }],
        line: 58
      },
      "2": {
        loc: {
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "3": {
        loc: {
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 62,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 62,
            column: 20
          }
        }, {
          start: {
            line: 62,
            column: 24
          },
          end: {
            line: 62,
            column: 27
          }
        }, {
          start: {
            line: 62,
            column: 31
          },
          end: {
            line: 62,
            column: 45
          }
        }],
        line: 62
      },
      "4": {
        loc: {
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 69,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 69,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "5": {
        loc: {
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 65,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 65,
            column: 20
          }
        }, {
          start: {
            line: 65,
            column: 24
          },
          end: {
            line: 65,
            column: 47
          }
        }, {
          start: {
            line: 65,
            column: 51
          },
          end: {
            line: 65,
            column: 76
          }
        }],
        line: 65
      },
      "6": {
        loc: {
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "7": {
        loc: {
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 71,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 71,
            column: 13
          }
        }, {
          start: {
            line: 71,
            column: 17
          },
          end: {
            line: 71,
            column: 31
          }
        }],
        line: 71
      },
      "8": {
        loc: {
          start: {
            line: 77,
            column: 32
          },
          end: {
            line: 77,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 77,
            column: 32
          },
          end: {
            line: 77,
            column: 53
          }
        }, {
          start: {
            line: 77,
            column: 57
          },
          end: {
            line: 77,
            column: 88
          }
        }],
        line: 77
      },
      "9": {
        loc: {
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      },
      "10": {
        loc: {
          start: {
            line: 79,
            column: 12
          },
          end: {
            line: 79,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 79,
            column: 12
          },
          end: {
            line: 79,
            column: 29
          }
        }, {
          start: {
            line: 79,
            column: 33
          },
          end: {
            line: 79,
            column: 79
          }
        }],
        line: 79
      },
      "11": {
        loc: {
          start: {
            line: 80,
            column: 23
          },
          end: {
            line: 80,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 80,
            column: 47
          },
          end: {
            line: 80,
            column: 88
          }
        }, {
          start: {
            line: 80,
            column: 91
          },
          end: {
            line: 80,
            column: 95
          }
        }],
        line: 80
      },
      "12": {
        loc: {
          start: {
            line: 81,
            column: 12
          },
          end: {
            line: 85,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 12
          },
          end: {
            line: 85,
            column: 13
          }
        }, {
          start: {
            line: 83,
            column: 19
          },
          end: {
            line: 85,
            column: 13
          }
        }],
        line: 81
      },
      "13": {
        loc: {
          start: {
            line: 81,
            column: 16
          },
          end: {
            line: 81,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 16
          },
          end: {
            line: 81,
            column: 20
          }
        }, {
          start: {
            line: 81,
            column: 25
          },
          end: {
            line: 81,
            column: 33
          }
        }, {
          start: {
            line: 81,
            column: 37
          },
          end: {
            line: 81,
            column: 45
          }
        }],
        line: 81
      },
      "14": {
        loc: {
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 91,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 91,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "15": {
        loc: {
          start: {
            line: 141,
            column: 4
          },
          end: {
            line: 147,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 141,
            column: 4
          },
          end: {
            line: 147,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 141
      },
      "16": {
        loc: {
          start: {
            line: 150,
            column: 4
          },
          end: {
            line: 155,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 4
          },
          end: {
            line: 155,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "17": {
        loc: {
          start: {
            line: 159,
            column: 4
          },
          end: {
            line: 164,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 4
          },
          end: {
            line: 164,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 159
      },
      "18": {
        loc: {
          start: {
            line: 171,
            column: 11
          },
          end: {
            line: 171,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 171,
            column: 33
          },
          end: {
            line: 171,
            column: 79
          }
        }, {
          start: {
            line: 171,
            column: 82
          },
          end: {
            line: 171,
            column: 84
          }
        }],
        line: 171
      },
      "19": {
        loc: {
          start: {
            line: 173,
            column: 46
          },
          end: {
            line: 173,
            column: 70
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 173,
            column: 65
          },
          end: {
            line: 173,
            column: 70
          }
        }],
        line: 173
      },
      "20": {
        loc: {
          start: {
            line: 174,
            column: 4
          },
          end: {
            line: 179,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 4
          },
          end: {
            line: 179,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 174
      },
      "21": {
        loc: {
          start: {
            line: 197,
            column: 8
          },
          end: {
            line: 202,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 197,
            column: 8
          },
          end: {
            line: 202,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 197
      },
      "22": {
        loc: {
          start: {
            line: 204,
            column: 24
          },
          end: {
            line: 204,
            column: 124
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 204,
            column: 54
          },
          end: {
            line: 204,
            column: 89
          }
        }, {
          start: {
            line: 204,
            column: 92
          },
          end: {
            line: 204,
            column: 124
          }
        }],
        line: 204
      },
      "23": {
        loc: {
          start: {
            line: 205,
            column: 26
          },
          end: {
            line: 205,
            column: 172
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 205,
            column: 49
          },
          end: {
            line: 205,
            column: 120
          }
        }, {
          start: {
            line: 205,
            column: 123
          },
          end: {
            line: 205,
            column: 172
          }
        }],
        line: 205
      },
      "24": {
        loc: {
          start: {
            line: 217,
            column: 29
          },
          end: {
            line: 217,
            column: 129
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 217,
            column: 52
          },
          end: {
            line: 217,
            column: 101
          }
        }, {
          start: {
            line: 217,
            column: 104
          },
          end: {
            line: 217,
            column: 129
          }
        }],
        line: 217
      },
      "25": {
        loc: {
          start: {
            line: 275,
            column: 22
          },
          end: {
            line: 275,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 275,
            column: 22
          },
          end: {
            line: 275,
            column: 42
          }
        }, {
          start: {
            line: 275,
            column: 46
          },
          end: {
            line: 275,
            column: 72
          }
        }],
        line: 275
      },
      "26": {
        loc: {
          start: {
            line: 283,
            column: 42
          },
          end: {
            line: 283,
            column: 59
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 283,
            column: 57
          },
          end: {
            line: 283,
            column: 59
          }
        }],
        line: 283
      },
      "27": {
        loc: {
          start: {
            line: 294,
            column: 12
          },
          end: {
            line: 299,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 294,
            column: 12
          },
          end: {
            line: 299,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 294
      },
      "28": {
        loc: {
          start: {
            line: 296,
            column: 16
          },
          end: {
            line: 298,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 296,
            column: 16
          },
          end: {
            line: 298,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 296
      },
      "29": {
        loc: {
          start: {
            line: 308,
            column: 4
          },
          end: {
            line: 308,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 308,
            column: 4
          },
          end: {
            line: 308,
            column: 38
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 308
      },
      "30": {
        loc: {
          start: {
            line: 324,
            column: 8
          },
          end: {
            line: 328,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 324,
            column: 8
          },
          end: {
            line: 328,
            column: 9
          }
        }, {
          start: {
            line: 326,
            column: 15
          },
          end: {
            line: 328,
            column: 9
          }
        }],
        line: 324
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\lib\\upload.ts"],
      sourcesContent: ["import { writeFile, mkdir, unlink, access } from 'fs/promises';\nimport { join } from 'path';\nimport { randomUUID } from 'crypto';\nimport { constants } from 'fs';\n\n// Configura\xE7\xF5es de upload\nexport const UPLOAD_CONFIG = {\n  // Tamanhos m\xE1ximos em bytes\n  MAX_FILE_SIZE: {\n    DOCUMENT: 10 * 1024 * 1024, // 10MB para documentos\n    IMAGE: 5 * 1024 * 1024, // 5MB para imagens\n  },\n\n  // Tipos de arquivo permitidos\n  ALLOWED_TYPES: {\n    DOCUMENT: [\n      'application/pdf',\n      'image/jpeg',\n      'image/jpg',\n      'image/png',\n      'image/webp',\n    ],\n    IMAGE: ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'],\n  },\n\n  // Extens\xF5es permitidas\n  ALLOWED_EXTENSIONS: {\n    DOCUMENT: ['.pdf', '.jpg', '.jpeg', '.png', '.webp'],\n    IMAGE: ['.jpg', '.jpeg', '.png', '.webp'],\n  },\n\n  // Diret\xF3rios de upload\n  UPLOAD_DIRS: {\n    DOCUMENTS: 'uploads/documentos',\n    PHOTOS: 'uploads/fotos',\n  },\n};\n\n// Tipos\nexport interface UploadResult {\n  success: boolean;\n  filePath?: string;\n  fileName?: string;\n  originalName?: string;\n  size?: number;\n  mimeType?: string;\n  error?: string;\n}\n\nexport interface UploadOptions {\n  type: 'DOCUMENT' | 'IMAGE';\n  subDirectory?: string;\n  preserveOriginalName?: boolean;\n}\n\n/**\n * Valida se o arquivo atende aos crit\xE9rios de upload\n */\nexport function validateFile(\n  file: File,\n  type: 'DOCUMENT' | 'IMAGE'\n): { valid: boolean; error?: string } {\n  // Verificar tamanho\n  const maxSize = UPLOAD_CONFIG.MAX_FILE_SIZE[type];\n  if (file.size > maxSize) {\n    const maxSizeMB = Math.round(maxSize / (1024 * 1024));\n    return {\n      valid: false,\n      error: `Arquivo muito grande. Tamanho m\xE1ximo: ${maxSizeMB}MB`,\n    };\n  }\n\n  // Verificar tipo MIME\n  const allowedTypes = UPLOAD_CONFIG.ALLOWED_TYPES[type];\n  if (!allowedTypes.includes(file.type)) {\n    return {\n      valid: false,\n      error: `Tipo de arquivo n\xE3o permitido. Tipos aceitos: ${allowedTypes.join(', ')}`,\n    };\n  }\n\n  // Verificar extens\xE3o\n  const extension = getFileExtension(file.name);\n  const allowedExtensions = UPLOAD_CONFIG.ALLOWED_EXTENSIONS[type];\n  if (!allowedExtensions.includes(extension)) {\n    return {\n      valid: false,\n      error: `Extens\xE3o n\xE3o permitida. Extens\xF5es aceitas: ${allowedExtensions.join(', ')}`,\n    };\n  }\n\n  return { valid: true };\n}\n\n/**\n * Obt\xE9m a extens\xE3o do arquivo\n */\nexport function getFileExtension(fileName: string): string {\n  const lastDotIndex = fileName.lastIndexOf('.');\n  return lastDotIndex !== -1\n    ? fileName.substring(lastDotIndex).toLowerCase()\n    : '';\n}\n\n/**\n * Gera um nome \xFAnico para o arquivo\n */\nexport function generateUniqueFileName(\n  originalName: string,\n  preserveOriginal = false\n): string {\n  if (preserveOriginal) {\n    const timestamp = Date.now();\n    const extension = getFileExtension(originalName);\n    const nameWithoutExt = originalName.substring(\n      0,\n      originalName.lastIndexOf('.')\n    );\n    return `${nameWithoutExt}_${timestamp}${extension}`;\n  }\n\n  const extension = getFileExtension(originalName);\n  const uuid = randomUUID();\n  return `${uuid}${extension}`;\n}\n\n/**\n * Garante que o diret\xF3rio existe\n */\nexport async function ensureDirectoryExists(dirPath: string): Promise<void> {\n  try {\n    await access(dirPath, constants.F_OK);\n  } catch {\n    await mkdir(dirPath, { recursive: true });\n  }\n}\n\n/**\n * Salva um arquivo no sistema de arquivos\n */\nexport async function saveFile(\n  file: File,\n  options: UploadOptions\n): Promise<UploadResult> {\n  try {\n    // Validar arquivo\n    const validation = validateFile(file, options.type);\n    if (!validation.valid) {\n      return {\n        success: false,\n        error: validation.error,\n      };\n    }\n\n    // Determinar diret\xF3rio de upload\n    const baseDir =\n      options.type === 'DOCUMENT'\n        ? UPLOAD_CONFIG.UPLOAD_DIRS.DOCUMENTS\n        : UPLOAD_CONFIG.UPLOAD_DIRS.PHOTOS;\n\n    const uploadDir = options.subDirectory\n      ? join(process.cwd(), 'public', baseDir, options.subDirectory)\n      : join(process.cwd(), 'public', baseDir);\n\n    // Garantir que o diret\xF3rio existe\n    await ensureDirectoryExists(uploadDir);\n\n    // Gerar nome \xFAnico para o arquivo\n    const fileName = generateUniqueFileName(\n      file.name,\n      options.preserveOriginalName\n    );\n\n    const filePath = join(uploadDir, fileName);\n\n    // Converter File para Buffer\n    const bytes = await file.arrayBuffer();\n    const buffer = Buffer.from(bytes);\n\n    // Salvar arquivo\n    await writeFile(filePath, buffer);\n\n    // Retornar caminho relativo para uso na aplica\xE7\xE3o\n    const relativePath = options.subDirectory\n      ? `/${baseDir}/${options.subDirectory}/${fileName}`\n      : `/${baseDir}/${fileName}`;\n\n    return {\n      success: true,\n      filePath: relativePath,\n      fileName,\n      originalName: file.name,\n      size: file.size,\n      mimeType: file.type,\n    };\n  } catch (error) {\n    console.error('Erro ao salvar arquivo:', error);\n    return {\n      success: false,\n      error: 'Erro interno ao salvar arquivo',\n    };\n  }\n}\n\n/**\n * Remove um arquivo do sistema de arquivos\n */\nexport async function deleteFile(filePath: string): Promise<boolean> {\n  try {\n    // Construir caminho absoluto\n    const absolutePath = join(process.cwd(), 'public', filePath);\n\n    // Verificar se o arquivo existe\n    await access(absolutePath, constants.F_OK);\n\n    // Remover arquivo\n    await unlink(absolutePath);\n\n    return true;\n  } catch (error) {\n    console.error('Erro ao remover arquivo:', error);\n    return false;\n  }\n}\n\n/**\n * Verifica se um arquivo existe\n */\nexport async function fileExists(filePath: string): Promise<boolean> {\n  try {\n    const absolutePath = join(process.cwd(), 'public', filePath);\n    await access(absolutePath, constants.F_OK);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Obt\xE9m informa\xE7\xF5es sobre um arquivo\n */\nexport async function getFileInfo(filePath: string): Promise<{\n  exists: boolean;\n  size?: number;\n  extension?: string;\n  mimeType?: string;\n}> {\n  try {\n    const absolutePath = join(process.cwd(), 'public', filePath);\n    await access(absolutePath, constants.F_OK);\n\n    const stats = await import('fs/promises').then(fs => fs.stat(absolutePath));\n    const extension = getFileExtension(filePath);\n\n    // Determinar tipo MIME baseado na extens\xE3o\n    const mimeTypes: Record<string, string> = {\n      '.pdf': 'application/pdf',\n      '.jpg': 'image/jpeg',\n      '.jpeg': 'image/jpeg',\n      '.png': 'image/png',\n      '.webp': 'image/webp',\n    };\n\n    return {\n      exists: true,\n      size: stats.size,\n      extension,\n      mimeType: mimeTypes[extension] || 'application/octet-stream',\n    };\n  } catch {\n    return { exists: false };\n  }\n}\n\n/**\n * Limpa arquivos antigos (opcional - para manuten\xE7\xE3o)\n */\nexport async function cleanupOldFiles(\n  directory: string,\n  maxAgeInDays: number = 30\n): Promise<number> {\n  try {\n    const { readdir, stat } = await import('fs/promises');\n    const absoluteDir = join(process.cwd(), 'public', directory);\n\n    const files = await readdir(absoluteDir);\n    const now = Date.now();\n    const maxAge = maxAgeInDays * 24 * 60 * 60 * 1000; // em millisegundos\n\n    let deletedCount = 0;\n\n    for (const file of files) {\n      const filePath = join(absoluteDir, file);\n      const stats = await stat(filePath);\n\n      if (now - stats.mtime.getTime() > maxAge) {\n        const relativePath = `/${directory}/${file}`;\n        if (await deleteFile(relativePath)) {\n          deletedCount++;\n        }\n      }\n    }\n\n    return deletedCount;\n  } catch (error) {\n    console.error('Erro ao limpar arquivos antigos:', error);\n    return 0;\n  }\n}\n\n/**\n * Utilit\xE1rio para converter tamanho em bytes para formato leg\xEDvel\n */\nexport function formatFileSize(bytes: number): string {\n  if (bytes === 0) return '0 Bytes';\n\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}\n\n/**\n * Utilit\xE1rio para validar m\xFAltiplos arquivos\n */\nexport function validateMultipleFiles(\n  files: File[],\n  type: 'DOCUMENT' | 'IMAGE'\n): { valid: boolean; errors: string[]; validFiles: File[] } {\n  const errors: string[] = [];\n  const validFiles: File[] = [];\n\n  files.forEach((file, index) => {\n    const validation = validateFile(file, type);\n    if (validation.valid) {\n      validFiles.push(file);\n    } else {\n      errors.push(`Arquivo ${index + 1} (${file.name}): ${validation.error}`);\n    }\n  });\n\n  return {\n    valid: errors.length === 0,\n    errors,\n    validFiles,\n  };\n}\n"],
      names: ["UPLOAD_CONFIG", "cleanupOldFiles", "deleteFile", "ensureDirectoryExists", "fileExists", "formatFileSize", "generateUniqueFileName", "getFileExtension", "getFileInfo", "saveFile", "validateFile", "validateMultipleFiles", "MAX_FILE_SIZE", "DOCUMENT", "IMAGE", "ALLOWED_TYPES", "ALLOWED_EXTENSIONS", "UPLOAD_DIRS", "DOCUMENTS", "PHOTOS", "file", "type", "maxSize", "size", "maxSizeMB", "Math", "round", "valid", "error", "allowedTypes", "includes", "join", "extension", "name", "allowedExtensions", "fileName", "lastDotIndex", "lastIndexOf", "substring", "toLowerCase", "originalName", "preserveOriginal", "timestamp", "Date", "now", "nameWithoutExt", "uuid", "randomUUID", "dirPath", "access", "constants", "F_OK", "mkdir", "recursive", "options", "validation", "success", "baseDir", "uploadDir", "subDirectory", "process", "cwd", "preserveOriginalName", "filePath", "bytes", "arrayBuffer", "buffer", "Buffer", "from", "writeFile", "relativePath", "mimeType", "console", "absolutePath", "unlink", "stats", "then", "fs", "stat", "mimeTypes", "exists", "directory", "maxAgeInDays", "readdir", "absoluteDir", "files", "maxAge", "deletedCount", "mtime", "getTime", "k", "sizes", "i", "floor", "log", "parseFloat", "pow", "toFixed", "errors", "validFiles", "forEach", "index", "push", "length"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "99bfdb6426c923fe4d1995c9970aa239949a52d6"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_bz01o83jd = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_bz01o83jd();
cov_bz01o83jd().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_bz01o83jd().f[0]++;
  cov_bz01o83jd().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_bz01o83jd().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_bz01o83jd().s[3]++;
_export(exports, {
  get UPLOAD_CONFIG() {
    /* istanbul ignore next */
    cov_bz01o83jd().f[1]++;
    cov_bz01o83jd().s[4]++;
    return UPLOAD_CONFIG;
  },
  get cleanupOldFiles() {
    /* istanbul ignore next */
    cov_bz01o83jd().f[2]++;
    cov_bz01o83jd().s[5]++;
    return cleanupOldFiles;
  },
  get deleteFile() {
    /* istanbul ignore next */
    cov_bz01o83jd().f[3]++;
    cov_bz01o83jd().s[6]++;
    return deleteFile;
  },
  get ensureDirectoryExists() {
    /* istanbul ignore next */
    cov_bz01o83jd().f[4]++;
    cov_bz01o83jd().s[7]++;
    return ensureDirectoryExists;
  },
  get fileExists() {
    /* istanbul ignore next */
    cov_bz01o83jd().f[5]++;
    cov_bz01o83jd().s[8]++;
    return fileExists;
  },
  get formatFileSize() {
    /* istanbul ignore next */
    cov_bz01o83jd().f[6]++;
    cov_bz01o83jd().s[9]++;
    return formatFileSize;
  },
  get generateUniqueFileName() {
    /* istanbul ignore next */
    cov_bz01o83jd().f[7]++;
    cov_bz01o83jd().s[10]++;
    return generateUniqueFileName;
  },
  get getFileExtension() {
    /* istanbul ignore next */
    cov_bz01o83jd().f[8]++;
    cov_bz01o83jd().s[11]++;
    return getFileExtension;
  },
  get getFileInfo() {
    /* istanbul ignore next */
    cov_bz01o83jd().f[9]++;
    cov_bz01o83jd().s[12]++;
    return getFileInfo;
  },
  get saveFile() {
    /* istanbul ignore next */
    cov_bz01o83jd().f[10]++;
    cov_bz01o83jd().s[13]++;
    return saveFile;
  },
  get validateFile() {
    /* istanbul ignore next */
    cov_bz01o83jd().f[11]++;
    cov_bz01o83jd().s[14]++;
    return validateFile;
  },
  get validateMultipleFiles() {
    /* istanbul ignore next */
    cov_bz01o83jd().f[12]++;
    cov_bz01o83jd().s[15]++;
    return validateMultipleFiles;
  }
});
const _promises =
/* istanbul ignore next */
(cov_bz01o83jd().s[16]++, require("node:fs/promises"));
const _path =
/* istanbul ignore next */
(cov_bz01o83jd().s[17]++, require("path"));
const _crypto =
/* istanbul ignore next */
(cov_bz01o83jd().s[18]++, require("crypto"));
const _fs =
/* istanbul ignore next */
(cov_bz01o83jd().s[19]++, require("fs"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_bz01o83jd().f[13]++;
  cov_bz01o83jd().s[20]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_bz01o83jd().b[0][0]++;
    cov_bz01o83jd().s[21]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_bz01o83jd().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_bz01o83jd().s[22]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_bz01o83jd().s[23]++, new WeakMap());
  /* istanbul ignore next */
  cov_bz01o83jd().s[24]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_bz01o83jd().f[14]++;
    cov_bz01o83jd().s[25]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_bz01o83jd().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_bz01o83jd().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_bz01o83jd().f[15]++;
  cov_bz01o83jd().s[26]++;
  if (
  /* istanbul ignore next */
  (cov_bz01o83jd().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_bz01o83jd().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_bz01o83jd().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_bz01o83jd().b[2][0]++;
    cov_bz01o83jd().s[27]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_bz01o83jd().b[2][1]++;
  }
  cov_bz01o83jd().s[28]++;
  if (
  /* istanbul ignore next */
  (cov_bz01o83jd().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_bz01o83jd().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_bz01o83jd().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_bz01o83jd().b[4][0]++;
    cov_bz01o83jd().s[29]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_bz01o83jd().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_bz01o83jd().s[30]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_bz01o83jd().s[31]++;
  if (
  /* istanbul ignore next */
  (cov_bz01o83jd().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_bz01o83jd().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_bz01o83jd().b[6][0]++;
    cov_bz01o83jd().s[32]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_bz01o83jd().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_bz01o83jd().s[33]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_bz01o83jd().s[34]++,
  /* istanbul ignore next */
  (cov_bz01o83jd().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_bz01o83jd().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_bz01o83jd().s[35]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_bz01o83jd().s[36]++;
    if (
    /* istanbul ignore next */
    (cov_bz01o83jd().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_bz01o83jd().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_bz01o83jd().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_bz01o83jd().s[37]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_bz01o83jd().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_bz01o83jd().b[11][1]++, null));
      /* istanbul ignore next */
      cov_bz01o83jd().s[38]++;
      if (
      /* istanbul ignore next */
      (cov_bz01o83jd().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_bz01o83jd().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_bz01o83jd().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_bz01o83jd().b[12][0]++;
        cov_bz01o83jd().s[39]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_bz01o83jd().b[12][1]++;
        cov_bz01o83jd().s[40]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_bz01o83jd().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_bz01o83jd().s[41]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_bz01o83jd().s[42]++;
  if (cache) {
    /* istanbul ignore next */
    cov_bz01o83jd().b[14][0]++;
    cov_bz01o83jd().s[43]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_bz01o83jd().b[14][1]++;
  }
  cov_bz01o83jd().s[44]++;
  return newObj;
}
const UPLOAD_CONFIG =
/* istanbul ignore next */
(cov_bz01o83jd().s[45]++, {
  // Tamanhos máximos em bytes
  MAX_FILE_SIZE: {
    DOCUMENT: 10 * 1024 * 1024,
    IMAGE: 5 * 1024 * 1024
  },
  // Tipos de arquivo permitidos
  ALLOWED_TYPES: {
    DOCUMENT: ['application/pdf', 'image/jpeg', 'image/jpg', 'image/png', 'image/webp'],
    IMAGE: ['image/jpeg', 'image/jpg', 'image/png', 'image/webp']
  },
  // Extensões permitidas
  ALLOWED_EXTENSIONS: {
    DOCUMENT: ['.pdf', '.jpg', '.jpeg', '.png', '.webp'],
    IMAGE: ['.jpg', '.jpeg', '.png', '.webp']
  },
  // Diretórios de upload
  UPLOAD_DIRS: {
    DOCUMENTS: 'uploads/documentos',
    PHOTOS: 'uploads/fotos'
  }
});
function validateFile(file, type) {
  /* istanbul ignore next */
  cov_bz01o83jd().f[16]++;
  // Verificar tamanho
  const maxSize =
  /* istanbul ignore next */
  (cov_bz01o83jd().s[46]++, UPLOAD_CONFIG.MAX_FILE_SIZE[type]);
  /* istanbul ignore next */
  cov_bz01o83jd().s[47]++;
  if (file.size > maxSize) {
    /* istanbul ignore next */
    cov_bz01o83jd().b[15][0]++;
    const maxSizeMB =
    /* istanbul ignore next */
    (cov_bz01o83jd().s[48]++, Math.round(maxSize / (1024 * 1024)));
    /* istanbul ignore next */
    cov_bz01o83jd().s[49]++;
    return {
      valid: false,
      error: `Arquivo muito grande. Tamanho máximo: ${maxSizeMB}MB`
    };
  } else
  /* istanbul ignore next */
  {
    cov_bz01o83jd().b[15][1]++;
  }
  // Verificar tipo MIME
  const allowedTypes =
  /* istanbul ignore next */
  (cov_bz01o83jd().s[50]++, UPLOAD_CONFIG.ALLOWED_TYPES[type]);
  /* istanbul ignore next */
  cov_bz01o83jd().s[51]++;
  if (!allowedTypes.includes(file.type)) {
    /* istanbul ignore next */
    cov_bz01o83jd().b[16][0]++;
    cov_bz01o83jd().s[52]++;
    return {
      valid: false,
      error: `Tipo de arquivo não permitido. Tipos aceitos: ${allowedTypes.join(', ')}`
    };
  } else
  /* istanbul ignore next */
  {
    cov_bz01o83jd().b[16][1]++;
  }
  // Verificar extensão
  const extension =
  /* istanbul ignore next */
  (cov_bz01o83jd().s[53]++, getFileExtension(file.name));
  const allowedExtensions =
  /* istanbul ignore next */
  (cov_bz01o83jd().s[54]++, UPLOAD_CONFIG.ALLOWED_EXTENSIONS[type]);
  /* istanbul ignore next */
  cov_bz01o83jd().s[55]++;
  if (!allowedExtensions.includes(extension)) {
    /* istanbul ignore next */
    cov_bz01o83jd().b[17][0]++;
    cov_bz01o83jd().s[56]++;
    return {
      valid: false,
      error: `Extensão não permitida. Extensões aceitas: ${allowedExtensions.join(', ')}`
    };
  } else
  /* istanbul ignore next */
  {
    cov_bz01o83jd().b[17][1]++;
  }
  cov_bz01o83jd().s[57]++;
  return {
    valid: true
  };
}
function getFileExtension(fileName) {
  /* istanbul ignore next */
  cov_bz01o83jd().f[17]++;
  const lastDotIndex =
  /* istanbul ignore next */
  (cov_bz01o83jd().s[58]++, fileName.lastIndexOf('.'));
  /* istanbul ignore next */
  cov_bz01o83jd().s[59]++;
  return lastDotIndex !== -1 ?
  /* istanbul ignore next */
  (cov_bz01o83jd().b[18][0]++, fileName.substring(lastDotIndex).toLowerCase()) :
  /* istanbul ignore next */
  (cov_bz01o83jd().b[18][1]++, '');
}
function generateUniqueFileName(originalName, preserveOriginal =
/* istanbul ignore next */
(cov_bz01o83jd().b[19][0]++, false)) {
  /* istanbul ignore next */
  cov_bz01o83jd().f[18]++;
  cov_bz01o83jd().s[60]++;
  if (preserveOriginal) {
    /* istanbul ignore next */
    cov_bz01o83jd().b[20][0]++;
    const timestamp =
    /* istanbul ignore next */
    (cov_bz01o83jd().s[61]++, Date.now());
    const extension =
    /* istanbul ignore next */
    (cov_bz01o83jd().s[62]++, getFileExtension(originalName));
    const nameWithoutExt =
    /* istanbul ignore next */
    (cov_bz01o83jd().s[63]++, originalName.substring(0, originalName.lastIndexOf('.')));
    /* istanbul ignore next */
    cov_bz01o83jd().s[64]++;
    return `${nameWithoutExt}_${timestamp}${extension}`;
  } else
  /* istanbul ignore next */
  {
    cov_bz01o83jd().b[20][1]++;
  }
  const extension =
  /* istanbul ignore next */
  (cov_bz01o83jd().s[65]++, getFileExtension(originalName));
  const uuid =
  /* istanbul ignore next */
  (cov_bz01o83jd().s[66]++, (0, _crypto.randomUUID)());
  /* istanbul ignore next */
  cov_bz01o83jd().s[67]++;
  return `${uuid}${extension}`;
}
async function ensureDirectoryExists(dirPath) {
  /* istanbul ignore next */
  cov_bz01o83jd().f[19]++;
  cov_bz01o83jd().s[68]++;
  try {
    /* istanbul ignore next */
    cov_bz01o83jd().s[69]++;
    await (0, _promises.access)(dirPath, _fs.constants.F_OK);
  } catch {
    /* istanbul ignore next */
    cov_bz01o83jd().s[70]++;
    await (0, _promises.mkdir)(dirPath, {
      recursive: true
    });
  }
}
async function saveFile(file, options) {
  /* istanbul ignore next */
  cov_bz01o83jd().f[20]++;
  cov_bz01o83jd().s[71]++;
  try {
    // Validar arquivo
    const validation =
    /* istanbul ignore next */
    (cov_bz01o83jd().s[72]++, validateFile(file, options.type));
    /* istanbul ignore next */
    cov_bz01o83jd().s[73]++;
    if (!validation.valid) {
      /* istanbul ignore next */
      cov_bz01o83jd().b[21][0]++;
      cov_bz01o83jd().s[74]++;
      return {
        success: false,
        error: validation.error
      };
    } else
    /* istanbul ignore next */
    {
      cov_bz01o83jd().b[21][1]++;
    }
    // Determinar diretório de upload
    const baseDir =
    /* istanbul ignore next */
    (cov_bz01o83jd().s[75]++, options.type === 'DOCUMENT' ?
    /* istanbul ignore next */
    (cov_bz01o83jd().b[22][0]++, UPLOAD_CONFIG.UPLOAD_DIRS.DOCUMENTS) :
    /* istanbul ignore next */
    (cov_bz01o83jd().b[22][1]++, UPLOAD_CONFIG.UPLOAD_DIRS.PHOTOS));
    const uploadDir =
    /* istanbul ignore next */
    (cov_bz01o83jd().s[76]++, options.subDirectory ?
    /* istanbul ignore next */
    (cov_bz01o83jd().b[23][0]++, (0, _path.join)(process.cwd(), 'public', baseDir, options.subDirectory)) :
    /* istanbul ignore next */
    (cov_bz01o83jd().b[23][1]++, (0, _path.join)(process.cwd(), 'public', baseDir)));
    // Garantir que o diretório existe
    /* istanbul ignore next */
    cov_bz01o83jd().s[77]++;
    await ensureDirectoryExists(uploadDir);
    // Gerar nome único para o arquivo
    const fileName =
    /* istanbul ignore next */
    (cov_bz01o83jd().s[78]++, generateUniqueFileName(file.name, options.preserveOriginalName));
    const filePath =
    /* istanbul ignore next */
    (cov_bz01o83jd().s[79]++, (0, _path.join)(uploadDir, fileName));
    // Converter File para Buffer
    const bytes =
    /* istanbul ignore next */
    (cov_bz01o83jd().s[80]++, await file.arrayBuffer());
    const buffer =
    /* istanbul ignore next */
    (cov_bz01o83jd().s[81]++, Buffer.from(bytes));
    // Salvar arquivo
    /* istanbul ignore next */
    cov_bz01o83jd().s[82]++;
    await (0, _promises.writeFile)(filePath, buffer);
    // Retornar caminho relativo para uso na aplicação
    const relativePath =
    /* istanbul ignore next */
    (cov_bz01o83jd().s[83]++, options.subDirectory ?
    /* istanbul ignore next */
    (cov_bz01o83jd().b[24][0]++, `/${baseDir}/${options.subDirectory}/${fileName}`) :
    /* istanbul ignore next */
    (cov_bz01o83jd().b[24][1]++, `/${baseDir}/${fileName}`));
    /* istanbul ignore next */
    cov_bz01o83jd().s[84]++;
    return {
      success: true,
      filePath: relativePath,
      fileName,
      originalName: file.name,
      size: file.size,
      mimeType: file.type
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_bz01o83jd().s[85]++;
    console.error('Erro ao salvar arquivo:', error);
    /* istanbul ignore next */
    cov_bz01o83jd().s[86]++;
    return {
      success: false,
      error: 'Erro interno ao salvar arquivo'
    };
  }
}
async function deleteFile(filePath) {
  /* istanbul ignore next */
  cov_bz01o83jd().f[21]++;
  cov_bz01o83jd().s[87]++;
  try {
    // Construir caminho absoluto
    const absolutePath =
    /* istanbul ignore next */
    (cov_bz01o83jd().s[88]++, (0, _path.join)(process.cwd(), 'public', filePath));
    // Verificar se o arquivo existe
    /* istanbul ignore next */
    cov_bz01o83jd().s[89]++;
    await (0, _promises.access)(absolutePath, _fs.constants.F_OK);
    // Remover arquivo
    /* istanbul ignore next */
    cov_bz01o83jd().s[90]++;
    await (0, _promises.unlink)(absolutePath);
    /* istanbul ignore next */
    cov_bz01o83jd().s[91]++;
    return true;
  } catch (error) {
    /* istanbul ignore next */
    cov_bz01o83jd().s[92]++;
    console.error('Erro ao remover arquivo:', error);
    /* istanbul ignore next */
    cov_bz01o83jd().s[93]++;
    return false;
  }
}
async function fileExists(filePath) {
  /* istanbul ignore next */
  cov_bz01o83jd().f[22]++;
  cov_bz01o83jd().s[94]++;
  try {
    const absolutePath =
    /* istanbul ignore next */
    (cov_bz01o83jd().s[95]++, (0, _path.join)(process.cwd(), 'public', filePath));
    /* istanbul ignore next */
    cov_bz01o83jd().s[96]++;
    await (0, _promises.access)(absolutePath, _fs.constants.F_OK);
    /* istanbul ignore next */
    cov_bz01o83jd().s[97]++;
    return true;
  } catch {
    /* istanbul ignore next */
    cov_bz01o83jd().s[98]++;
    return false;
  }
}
async function getFileInfo(filePath) {
  /* istanbul ignore next */
  cov_bz01o83jd().f[23]++;
  cov_bz01o83jd().s[99]++;
  try {
    const absolutePath =
    /* istanbul ignore next */
    (cov_bz01o83jd().s[100]++, (0, _path.join)(process.cwd(), 'public', filePath));
    /* istanbul ignore next */
    cov_bz01o83jd().s[101]++;
    await (0, _promises.access)(absolutePath, _fs.constants.F_OK);
    const stats =
    /* istanbul ignore next */
    (cov_bz01o83jd().s[102]++, await Promise.resolve().then(() => {
      /* istanbul ignore next */
      cov_bz01o83jd().f[24]++;
      cov_bz01o83jd().s[103]++;
      return /*#__PURE__*/_interop_require_wildcard(require("node:fs/promises"));
    }).then(fs => {
      /* istanbul ignore next */
      cov_bz01o83jd().f[25]++;
      cov_bz01o83jd().s[104]++;
      return fs.stat(absolutePath);
    }));
    const extension =
    /* istanbul ignore next */
    (cov_bz01o83jd().s[105]++, getFileExtension(filePath));
    // Determinar tipo MIME baseado na extensão
    const mimeTypes =
    /* istanbul ignore next */
    (cov_bz01o83jd().s[106]++, {
      '.pdf': 'application/pdf',
      '.jpg': 'image/jpeg',
      '.jpeg': 'image/jpeg',
      '.png': 'image/png',
      '.webp': 'image/webp'
    });
    /* istanbul ignore next */
    cov_bz01o83jd().s[107]++;
    return {
      exists: true,
      size: stats.size,
      extension,
      mimeType:
      /* istanbul ignore next */
      (cov_bz01o83jd().b[25][0]++, mimeTypes[extension]) ||
      /* istanbul ignore next */
      (cov_bz01o83jd().b[25][1]++, 'application/octet-stream')
    };
  } catch {
    /* istanbul ignore next */
    cov_bz01o83jd().s[108]++;
    return {
      exists: false
    };
  }
}
async function cleanupOldFiles(directory, maxAgeInDays =
/* istanbul ignore next */
(cov_bz01o83jd().b[26][0]++, 30)) {
  /* istanbul ignore next */
  cov_bz01o83jd().f[26]++;
  cov_bz01o83jd().s[109]++;
  try {
    const {
      readdir,
      stat
    } =
    /* istanbul ignore next */
    (cov_bz01o83jd().s[110]++, await Promise.resolve().then(() => {
      /* istanbul ignore next */
      cov_bz01o83jd().f[27]++;
      cov_bz01o83jd().s[111]++;
      return /*#__PURE__*/_interop_require_wildcard(require("node:fs/promises"));
    }));
    const absoluteDir =
    /* istanbul ignore next */
    (cov_bz01o83jd().s[112]++, (0, _path.join)(process.cwd(), 'public', directory));
    const files =
    /* istanbul ignore next */
    (cov_bz01o83jd().s[113]++, await readdir(absoluteDir));
    const now =
    /* istanbul ignore next */
    (cov_bz01o83jd().s[114]++, Date.now());
    const maxAge =
    /* istanbul ignore next */
    (cov_bz01o83jd().s[115]++, maxAgeInDays * 24 * 60 * 60 * 1000); // em millisegundos
    let deletedCount =
    /* istanbul ignore next */
    (cov_bz01o83jd().s[116]++, 0);
    /* istanbul ignore next */
    cov_bz01o83jd().s[117]++;
    for (const file of files) {
      const filePath =
      /* istanbul ignore next */
      (cov_bz01o83jd().s[118]++, (0, _path.join)(absoluteDir, file));
      const stats =
      /* istanbul ignore next */
      (cov_bz01o83jd().s[119]++, await stat(filePath));
      /* istanbul ignore next */
      cov_bz01o83jd().s[120]++;
      if (now - stats.mtime.getTime() > maxAge) {
        /* istanbul ignore next */
        cov_bz01o83jd().b[27][0]++;
        const relativePath =
        /* istanbul ignore next */
        (cov_bz01o83jd().s[121]++, `/${directory}/${file}`);
        /* istanbul ignore next */
        cov_bz01o83jd().s[122]++;
        if (await deleteFile(relativePath)) {
          /* istanbul ignore next */
          cov_bz01o83jd().b[28][0]++;
          cov_bz01o83jd().s[123]++;
          deletedCount++;
        } else
        /* istanbul ignore next */
        {
          cov_bz01o83jd().b[28][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_bz01o83jd().b[27][1]++;
      }
    }
    /* istanbul ignore next */
    cov_bz01o83jd().s[124]++;
    return deletedCount;
  } catch (error) {
    /* istanbul ignore next */
    cov_bz01o83jd().s[125]++;
    console.error('Erro ao limpar arquivos antigos:', error);
    /* istanbul ignore next */
    cov_bz01o83jd().s[126]++;
    return 0;
  }
}
function formatFileSize(bytes) {
  /* istanbul ignore next */
  cov_bz01o83jd().f[28]++;
  cov_bz01o83jd().s[127]++;
  if (bytes === 0) {
    /* istanbul ignore next */
    cov_bz01o83jd().b[29][0]++;
    cov_bz01o83jd().s[128]++;
    return '0 Bytes';
  } else
  /* istanbul ignore next */
  {
    cov_bz01o83jd().b[29][1]++;
  }
  const k =
  /* istanbul ignore next */
  (cov_bz01o83jd().s[129]++, 1024);
  const sizes =
  /* istanbul ignore next */
  (cov_bz01o83jd().s[130]++, ['Bytes', 'KB', 'MB', 'GB']);
  const i =
  /* istanbul ignore next */
  (cov_bz01o83jd().s[131]++, Math.floor(Math.log(bytes) / Math.log(k)));
  /* istanbul ignore next */
  cov_bz01o83jd().s[132]++;
  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
}
function validateMultipleFiles(files, type) {
  /* istanbul ignore next */
  cov_bz01o83jd().f[29]++;
  const errors =
  /* istanbul ignore next */
  (cov_bz01o83jd().s[133]++, []);
  const validFiles =
  /* istanbul ignore next */
  (cov_bz01o83jd().s[134]++, []);
  /* istanbul ignore next */
  cov_bz01o83jd().s[135]++;
  files.forEach((file, index) => {
    /* istanbul ignore next */
    cov_bz01o83jd().f[30]++;
    const validation =
    /* istanbul ignore next */
    (cov_bz01o83jd().s[136]++, validateFile(file, type));
    /* istanbul ignore next */
    cov_bz01o83jd().s[137]++;
    if (validation.valid) {
      /* istanbul ignore next */
      cov_bz01o83jd().b[30][0]++;
      cov_bz01o83jd().s[138]++;
      validFiles.push(file);
    } else {
      /* istanbul ignore next */
      cov_bz01o83jd().b[30][1]++;
      cov_bz01o83jd().s[139]++;
      errors.push(`Arquivo ${index + 1} (${file.name}): ${validation.error}`);
    }
  });
  /* istanbul ignore next */
  cov_bz01o83jd().s[140]++;
  return {
    valid: errors.length === 0,
    errors,
    validFiles
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,