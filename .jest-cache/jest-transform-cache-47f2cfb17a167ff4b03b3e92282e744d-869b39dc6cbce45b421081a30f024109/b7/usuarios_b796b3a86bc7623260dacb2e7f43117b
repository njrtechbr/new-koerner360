f945d1099cd6f7d89c64fa4b399c21b3
"use strict";

/* istanbul ignore next */
function cov_wcku87v9z() {
  var path = "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\lib\\validations\\usuarios.ts";
  var hash = "cec37e9440e80970ada5aa189effb5be62723370";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\lib\\validations\\usuarios.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 72,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 30
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 34
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 42
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 38
        }
      },
      "8": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 43
        }
      },
      "9": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 34
        }
      },
      "10": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 27
        }
      },
      "11": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 38
        }
      },
      "12": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 31
        }
      },
      "13": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 38
        }
      },
      "14": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 36
        }
      },
      "15": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 26
        }
      },
      "16": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 35
        }
      },
      "17": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 36
        }
      },
      "18": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 27
        }
      },
      "19": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 36
        }
      },
      "20": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 35
        }
      },
      "21": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 28
        }
      },
      "22": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 67,
          column: 32
        }
      },
      "23": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 70,
          column: 28
        }
      },
      "24": {
        start: {
          line: 73,
          column: 13
        },
        end: {
          line: 73,
          column: 27
        }
      },
      "25": {
        start: {
          line: 74,
          column: 24
        },
        end: {
          line: 74,
          column: 74
        }
      },
      "26": {
        start: {
          line: 75,
          column: 20
        },
        end: {
          line: 75,
          column: 80
        }
      },
      "27": {
        start: {
          line: 76,
          column: 20
        },
        end: {
          line: 76,
          column: 254
        }
      },
      "28": {
        start: {
          line: 77,
          column: 19
        },
        end: {
          line: 77,
          column: 140
        }
      },
      "29": {
        start: {
          line: 78,
          column: 28
        },
        end: {
          line: 86,
          column: 2
        }
      },
      "30": {
        start: {
          line: 83,
          column: 19
        },
        end: {
          line: 85,
          column: 9
        }
      },
      "31": {
        start: {
          line: 87,
          column: 27
        },
        end: {
          line: 93,
          column: 2
        }
      },
      "32": {
        start: {
          line: 94,
          column: 31
        },
        end: {
          line: 100,
          column: 2
        }
      },
      "33": {
        start: {
          line: 101,
          column: 29
        },
        end: {
          line: 117,
          column: 2
        }
      },
      "34": {
        start: {
          line: 118,
          column: 27
        },
        end: {
          line: 127,
          column: 2
        }
      },
      "35": {
        start: {
          line: 122,
          column: 18
        },
        end: {
          line: 122,
          column: 56
        }
      },
      "36": {
        start: {
          line: 128,
          column: 29
        },
        end: {
          line: 137,
          column: 2
        }
      },
      "37": {
        start: {
          line: 132,
          column: 18
        },
        end: {
          line: 132,
          column: 56
        }
      },
      "38": {
        start: {
          line: 138,
          column: 35
        },
        end: {
          line: 140,
          column: 2
        }
      },
      "39": {
        start: {
          line: 141,
          column: 36
        },
        end: {
          line: 160,
          column: 2
        }
      },
      "40": {
        start: {
          line: 161,
          column: 31
        },
        end: {
          line: 176,
          column: 2
        }
      },
      "41": {
        start: {
          line: 177,
          column: 31
        },
        end: {
          line: 181,
          column: 2
        }
      },
      "42": {
        start: {
          line: 182,
          column: 25
        },
        end: {
          line: 184,
          column: 1
        }
      },
      "43": {
        start: {
          line: 183,
          column: 4
        },
        end: {
          line: 183,
          column: 41
        }
      },
      "44": {
        start: {
          line: 185,
          column: 21
        },
        end: {
          line: 187,
          column: 1
        }
      },
      "45": {
        start: {
          line: 186,
          column: 4
        },
        end: {
          line: 186,
          column: 40
        }
      },
      "46": {
        start: {
          line: 188,
          column: 21
        },
        end: {
          line: 190,
          column: 1
        }
      },
      "47": {
        start: {
          line: 189,
          column: 4
        },
        end: {
          line: 189,
          column: 40
        }
      },
      "48": {
        start: {
          line: 191,
          column: 28
        },
        end: {
          line: 193,
          column: 1
        }
      },
      "49": {
        start: {
          line: 192,
          column: 4
        },
        end: {
          line: 192,
          column: 47
        }
      },
      "50": {
        start: {
          line: 194,
          column: 23
        },
        end: {
          line: 203,
          column: 1
        }
      },
      "51": {
        start: {
          line: 204,
          column: 29
        },
        end: {
          line: 227,
          column: 1
        }
      },
      "52": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 210,
          column: 20
        }
      },
      "53": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 216,
          column: 55
        }
      },
      "54": {
        start: {
          line: 216,
          column: 43
        },
        end: {
          line: 216,
          column: 55
        }
      },
      "55": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 217,
          column: 81
        }
      },
      "56": {
        start: {
          line: 217,
          column: 69
        },
        end: {
          line: 217,
          column: 81
        }
      },
      "57": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 218,
          column: 21
        }
      },
      "58": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 225,
          column: 20
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 26
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 30
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 38
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 34
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 39
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 30
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 23
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 34
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 27
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 36
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        loc: {
          start: {
            line: 39,
            column: 34
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 39
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        loc: {
          start: {
            line: 42,
            column: 32
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 42
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        loc: {
          start: {
            line: 45,
            column: 22
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 45
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        loc: {
          start: {
            line: 48,
            column: 31
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 48
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        loc: {
          start: {
            line: 51,
            column: 32
          },
          end: {
            line: 53,
            column: 5
          }
        },
        line: 51
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        loc: {
          start: {
            line: 54,
            column: 23
          },
          end: {
            line: 56,
            column: 5
          }
        },
        line: 54
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        loc: {
          start: {
            line: 57,
            column: 32
          },
          end: {
            line: 59,
            column: 5
          }
        },
        line: 57
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        },
        loc: {
          start: {
            line: 60,
            column: 31
          },
          end: {
            line: 62,
            column: 5
          }
        },
        line: 60
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        },
        loc: {
          start: {
            line: 63,
            column: 24
          },
          end: {
            line: 65,
            column: 5
          }
        },
        line: 63
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        },
        loc: {
          start: {
            line: 66,
            column: 28
          },
          end: {
            line: 68,
            column: 5
          }
        },
        line: 66
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 69,
            column: 4
          },
          end: {
            line: 69,
            column: 5
          }
        },
        loc: {
          start: {
            line: 69,
            column: 24
          },
          end: {
            line: 71,
            column: 5
          }
        },
        line: 69
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 83,
            column: 14
          },
          end: {
            line: 83,
            column: 15
          }
        },
        loc: {
          start: {
            line: 83,
            column: 19
          },
          end: {
            line: 85,
            column: 9
          }
        },
        line: 83
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 122,
            column: 10
          },
          end: {
            line: 122,
            column: 11
          }
        },
        loc: {
          start: {
            line: 122,
            column: 18
          },
          end: {
            line: 122,
            column: 56
          }
        },
        line: 122
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 132,
            column: 10
          },
          end: {
            line: 132,
            column: 11
          }
        },
        loc: {
          start: {
            line: 132,
            column: 18
          },
          end: {
            line: 132,
            column: 56
          }
        },
        line: 132
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 182,
            column: 25
          },
          end: {
            line: 182,
            column: 26
          }
        },
        loc: {
          start: {
            line: 182,
            column: 31
          },
          end: {
            line: 184,
            column: 1
          }
        },
        line: 182
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 185,
            column: 21
          },
          end: {
            line: 185,
            column: 22
          }
        },
        loc: {
          start: {
            line: 185,
            column: 30
          },
          end: {
            line: 187,
            column: 1
          }
        },
        line: 185
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 188,
            column: 21
          },
          end: {
            line: 188,
            column: 22
          }
        },
        loc: {
          start: {
            line: 188,
            column: 30
          },
          end: {
            line: 190,
            column: 1
          }
        },
        line: 188
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 191,
            column: 28
          },
          end: {
            line: 191,
            column: 29
          }
        },
        loc: {
          start: {
            line: 191,
            column: 37
          },
          end: {
            line: 193,
            column: 1
          }
        },
        line: 191
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 207,
            column: 18
          },
          end: {
            line: 207,
            column: 19
          }
        },
        loc: {
          start: {
            line: 207,
            column: 44
          },
          end: {
            line: 211,
            column: 5
          }
        },
        line: 207
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 214,
            column: 25
          },
          end: {
            line: 214,
            column: 26
          }
        },
        loc: {
          start: {
            line: 214,
            column: 70
          },
          end: {
            line: 219,
            column: 5
          }
        },
        line: 214
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 222,
            column: 25
          },
          end: {
            line: 222,
            column: 26
          }
        },
        loc: {
          start: {
            line: 222,
            column: 56
          },
          end: {
            line: 226,
            column: 5
          }
        },
        line: 222
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 216,
            column: 8
          },
          end: {
            line: 216,
            column: 55
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 216,
            column: 8
          },
          end: {
            line: 216,
            column: 55
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 216
      },
      "1": {
        loc: {
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 217,
            column: 81
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 217,
            column: 81
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 217
      },
      "2": {
        loc: {
          start: {
            line: 217,
            column: 12
          },
          end: {
            line: 217,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 217,
            column: 12
          },
          end: {
            line: 217,
            column: 42
          }
        }, {
          start: {
            line: 217,
            column: 46
          },
          end: {
            line: 217,
            column: 67
          }
        }],
        line: 217
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\lib\\validations\\usuarios.ts"],
      sourcesContent: ["import { z } from 'zod';\n\n/**\n * Schemas de valida\xE7\xE3o para opera\xE7\xF5es relacionadas a usu\xE1rios\n * Centralizando todas as valida\xE7\xF5es em um local para melhor manuten\xE7\xE3o\n */\n\n// Schema base para valida\xE7\xE3o de ID UUID\nexport const idUsuarioSchema = z.string().uuid('ID deve ser um UUID v\xE1lido');\n\n// Schema para valida\xE7\xE3o de email\nexport const emailSchema = z\n  .string()\n  .email('Email inv\xE1lido')\n  .toLowerCase()\n  .trim();\n\n// Schema para valida\xE7\xE3o de senha\nexport const senhaSchema = z\n  .string()\n  .min(8, 'Senha deve ter pelo menos 8 caracteres')\n  .regex(\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]/,\n    'Senha deve conter pelo menos: 1 letra min\xFAscula, 1 mai\xFAscula, 1 n\xFAmero e 1 caractere especial'\n  );\n\n// Schema para valida\xE7\xE3o de nome\nexport const nomeSchema = z\n  .string()\n  .min(3, 'Nome deve ter pelo menos 3 caracteres')\n  .max(100, 'Nome deve ter no m\xE1ximo 100 caracteres')\n  .trim();\n\n// Schema para valida\xE7\xE3o de perfil de usu\xE1rio\nexport const perfilUsuarioSchema = z.enum(['ADMIN', 'GESTOR', 'OPERADOR'], {\n  errorMap: () => ({ message: 'Perfil deve ser ADMIN, GESTOR ou OPERADOR' }),\n});\n\n// Schema para cria\xE7\xE3o de usu\xE1rio\nexport const criarUsuarioSchema = z.object({\n  nome: nomeSchema,\n  email: emailSchema,\n  senha: senhaSchema,\n  perfil: perfilUsuarioSchema,\n  ativo: z.boolean().default(true),\n});\n\n// Schema para atualiza\xE7\xE3o de usu\xE1rio\nexport const atualizarUsuarioSchema = z.object({\n  nome: nomeSchema.optional(),\n  email: emailSchema.optional(),\n  senha: senhaSchema.optional(),\n  perfil: perfilUsuarioSchema.optional(),\n  ativo: z.boolean().optional(),\n});\n\n// Schema para listagem de usu\xE1rios com filtros e pagina\xE7\xE3o\nexport const listarUsuariosSchema = z.object({\n  pagina: z.coerce.number().min(1, 'P\xE1gina deve ser maior que 0').default(1),\n  limite: z.coerce\n    .number()\n    .min(1, 'Limite deve ser maior que 0')\n    .max(100, 'Limite m\xE1ximo \xE9 100')\n    .default(10),\n  busca: z.string().trim().optional(),\n  perfil: perfilUsuarioSchema.optional(),\n  ativo: z.coerce.boolean().optional(),\n  ordenarPor: z\n    .enum(['nome', 'email', 'criadoEm', 'atualizadoEm'])\n    .default('nome'),\n  ordem: z.enum(['asc', 'desc']).default('asc'),\n});\n\n// Schema para altera\xE7\xE3o de senha\nexport const alterarSenhaSchema = z\n  .object({\n    senhaAtual: z.string().min(1, 'Senha atual \xE9 obrigat\xF3ria'),\n    novaSenha: senhaSchema,\n    confirmarSenha: z.string().min(1, 'Confirma\xE7\xE3o de senha \xE9 obrigat\xF3ria'),\n  })\n  .refine(data => data.novaSenha === data.confirmarSenha, {\n    message: 'Nova senha e confirma\xE7\xE3o devem ser iguais',\n    path: ['confirmarSenha'],\n  });\n\n// Schema para redefini\xE7\xE3o de senha (admin)\nexport const redefinirSenhaSchema = z\n  .object({\n    novaSenha: senhaSchema,\n    confirmarSenha: z.string().min(1, 'Confirma\xE7\xE3o de senha \xE9 obrigat\xF3ria'),\n    forcarAlteracao: z.boolean().default(false),\n  })\n  .refine(data => data.novaSenha === data.confirmarSenha, {\n    message: 'Nova senha e confirma\xE7\xE3o devem ser iguais',\n    path: ['confirmarSenha'],\n  });\n\n// Schema para ativa\xE7\xE3o/desativa\xE7\xE3o de usu\xE1rio\nexport const alterarStatusUsuarioSchema = z.object({\n  ativo: z.boolean(),\n});\n\n// Schema para busca avan\xE7ada de usu\xE1rios\nexport const buscaAvancadaUsuariosSchema = z.object({\n  termo: z.string().trim().optional(),\n  perfis: z.array(perfilUsuarioSchema).optional(),\n  ativo: z.boolean().optional(),\n  dataInicio: z.string().datetime().optional(),\n  dataFim: z.string().datetime().optional(),\n  ordenacao: z\n    .object({\n      campo: z.enum(['nome', 'email', 'perfil', 'criadoEm', 'atualizadoEm']),\n      direcao: z.enum(['asc', 'desc']),\n    })\n    .optional(),\n});\n\n// Schema para exporta\xE7\xE3o de dados de usu\xE1rios\nexport const exportarUsuariosSchema = z.object({\n  formato: z.enum(['csv', 'xlsx', 'pdf']).default('csv'),\n  filtros: buscaAvancadaUsuariosSchema.optional(),\n  campos: z\n    .array(\n      z.enum(['nome', 'email', 'perfil', 'ativo', 'criadoEm', 'atualizadoEm'])\n    )\n    .optional(),\n});\n\n// Schema para importa\xE7\xE3o de usu\xE1rios\nexport const importarUsuariosSchema = z.object({\n  usuarios: z.array(criarUsuarioSchema),\n  sobrescrever: z.boolean().default(false),\n  enviarEmail: z.boolean().default(true),\n});\n\n// Tipos TypeScript derivados dos schemas\nexport type CriarUsuarioInput = z.infer<typeof criarUsuarioSchema>;\nexport type AtualizarUsuarioInput = z.infer<typeof atualizarUsuarioSchema>;\nexport type ListarUsuariosInput = z.infer<typeof listarUsuariosSchema>;\nexport type AlterarSenhaInput = z.infer<typeof alterarSenhaSchema>;\nexport type RedefinirSenhaInput = z.infer<typeof redefinirSenhaSchema>;\nexport type BuscaAvancadaUsuariosInput = z.infer<\n  typeof buscaAvancadaUsuariosSchema\n>;\nexport type ExportarUsuariosInput = z.infer<typeof exportarUsuariosSchema>;\nexport type ImportarUsuariosInput = z.infer<typeof importarUsuariosSchema>;\n\n// Utilit\xE1rios de valida\xE7\xE3o\nexport const validarIdUsuario = (id: string) => {\n  return idUsuarioSchema.safeParse(id);\n};\n\nexport const validarEmail = (email: string) => {\n  return emailSchema.safeParse(email);\n};\n\nexport const validarSenha = (senha: string) => {\n  return senhaSchema.safeParse(senha);\n};\n\nexport const validarDadosUsuario = (dados: unknown) => {\n  return criarUsuarioSchema.safeParse(dados);\n};\n\n// Mensagens de erro personalizadas\nexport const MENSAGENS_ERRO = {\n  ID_INVALIDO: 'ID do usu\xE1rio inv\xE1lido',\n  EMAIL_INVALIDO: 'Email inv\xE1lido',\n  EMAIL_JA_EXISTE: 'Este email j\xE1 est\xE1 em uso',\n  SENHA_FRACA: 'Senha n\xE3o atende aos crit\xE9rios de seguran\xE7a',\n  USUARIO_NAO_ENCONTRADO: 'Usu\xE1rio n\xE3o encontrado',\n  PERMISSAO_NEGADA: 'Voc\xEA n\xE3o tem permiss\xE3o para esta opera\xE7\xE3o',\n  DADOS_OBRIGATORIOS: 'Todos os campos obrigat\xF3rios devem ser preenchidos',\n  OPERACAO_NAO_PERMITIDA: 'Opera\xE7\xE3o n\xE3o permitida para este usu\xE1rio',\n} as const;\n\n// Valida\xE7\xF5es customizadas\nexport const validacaoCustomizada = {\n  /**\n   * Valida se o email \xE9 \xFAnico no sistema\n   */\n  emailUnico: async (email: string, idExcluir?: string) => {\n    // Esta fun\xE7\xE3o deve ser implementada com acesso ao banco de dados\n    // Retorna true se o email \xE9 \xFAnico, false caso contr\xE1rio\n    return true; // Placeholder\n  },\n\n  /**\n   * Valida se o usu\xE1rio pode alterar o perfil\n   */\n  podeAlterarPerfil: (\n    perfilAtual: string,\n    novoPerfi: string,\n    perfilSolicitante: string\n  ) => {\n    // L\xF3gica de valida\xE7\xE3o de permiss\xF5es para altera\xE7\xE3o de perfil\n    if (perfilSolicitante === 'ADMIN') return true;\n    if (perfilSolicitante === 'GESTOR' && novoPerfi !== 'ADMIN') return true;\n    return false;\n  },\n\n  /**\n   * Valida se a senha atual est\xE1 correta\n   */\n  senhaAtualCorreta: async (senhaAtual: string, hashSenha: string) => {\n    // Esta fun\xE7\xE3o deve ser implementada com bcrypt\n    // Retorna true se a senha est\xE1 correta, false caso contr\xE1rio\n    return true; // Placeholder\n  },\n};\n"],
      names: ["MENSAGENS_ERRO", "alterarSenhaSchema", "alterarStatusUsuarioSchema", "atualizarUsuarioSchema", "buscaAvancadaUsuariosSchema", "criarUsuarioSchema", "emailSchema", "exportarUsuariosSchema", "idUsuarioSchema", "importarUsuariosSchema", "listarUsuariosSchema", "nomeSchema", "perfilUsuarioSchema", "redefinirSenhaSchema", "senhaSchema", "validacaoCustomizada", "validarDadosUsuario", "validarEmail", "validarIdUsuario", "validarSenha", "z", "string", "uuid", "email", "toLowerCase", "trim", "min", "regex", "max", "enum", "errorMap", "message", "object", "nome", "senha", "perfil", "ativo", "boolean", "default", "optional", "pagina", "coerce", "number", "limite", "busca", "ordenarPor", "ordem", "senhaAtual", "novaSenha", "confirmarSenha", "refine", "data", "path", "forcarAlteracao", "termo", "perfis", "array", "dataInicio", "datetime", "dataFim", "ordenacao", "campo", "direcao", "formato", "filtros", "campos", "usuarios", "sobrescrever", "enviarEmail", "id", "safeParse", "dados", "ID_INVALIDO", "EMAIL_INVALIDO", "EMAIL_JA_EXISTE", "SENHA_FRACA", "USUARIO_NAO_ENCONTRADO", "PERMISSAO_NEGADA", "DADOS_OBRIGATORIOS", "OPERACAO_NAO_PERMITIDA", "emailUnico", "idExcluir", "podeAlterarPerfil", "perfilAtual", "novoPerfi", "perfilSolicitante", "senhaAtualCorreta", "hashSenha"],
      mappings: ";;;;;;;;;;;QAqKaA;eAAAA;;QA3FAC;eAAAA;;QAwBAC;eAAAA;;QAlDAC;eAAAA;;QAuDAC;eAAAA;;QAhEAC;eAAAA;;QA5BAC;eAAAA;;QA2GAC;eAAAA;;QA9GAC;eAAAA;;QAyHAC;eAAAA;;QAxEAC;eAAAA;;QA9BAC;eAAAA;;QAOAC;eAAAA;;QAoDAC;eAAAA;;QApEAC;eAAAA;;QA+JAC;eAAAA;;QAjBAC;eAAAA;;QARAC;eAAAA;;QAJAC;eAAAA;;QAQAC;eAAAA;;;qBA5JK;AAQX,MAAMX,kBAAkBY,MAAC,CAACC,MAAM,GAAGC,IAAI,CAAC;AAGxC,MAAMhB,cAAcc,MAAC,CACzBC,MAAM,GACNE,KAAK,CAAC,kBACNC,WAAW,GACXC,IAAI;AAGA,MAAMX,cAAcM,MAAC,CACzBC,MAAM,GACNK,GAAG,CAAC,GAAG,0CACPC,KAAK,CACJ,mEACA;AAIG,MAAMhB,aAAaS,MAAC,CACxBC,MAAM,GACNK,GAAG,CAAC,GAAG,yCACPE,GAAG,CAAC,KAAK,0CACTH,IAAI;AAGA,MAAMb,sBAAsBQ,MAAC,CAACS,IAAI,CAAC;IAAC;IAAS;IAAU;CAAW,EAAE;IACzEC,UAAU,IAAO,CAAA;YAAEC,SAAS;QAA4C,CAAA;AAC1E;AAGO,MAAM1B,qBAAqBe,MAAC,CAACY,MAAM,CAAC;IACzCC,MAAMtB;IACNY,OAAOjB;IACP4B,OAAOpB;IACPqB,QAAQvB;IACRwB,OAAOhB,MAAC,CAACiB,OAAO,GAAGC,OAAO,CAAC;AAC7B;AAGO,MAAMnC,yBAAyBiB,MAAC,CAACY,MAAM,CAAC;IAC7CC,MAAMtB,WAAW4B,QAAQ;IACzBhB,OAAOjB,YAAYiC,QAAQ;IAC3BL,OAAOpB,YAAYyB,QAAQ;IAC3BJ,QAAQvB,oBAAoB2B,QAAQ;IACpCH,OAAOhB,MAAC,CAACiB,OAAO,GAAGE,QAAQ;AAC7B;AAGO,MAAM7B,uBAAuBU,MAAC,CAACY,MAAM,CAAC;IAC3CQ,QAAQpB,MAAC,CAACqB,MAAM,CAACC,MAAM,GAAGhB,GAAG,CAAC,GAAG,+BAA+BY,OAAO,CAAC;IACxEK,QAAQvB,MAAC,CAACqB,MAAM,CACbC,MAAM,GACNhB,GAAG,CAAC,GAAG,+BACPE,GAAG,CAAC,KAAK,uBACTU,OAAO,CAAC;IACXM,OAAOxB,MAAC,CAACC,MAAM,GAAGI,IAAI,GAAGc,QAAQ;IACjCJ,QAAQvB,oBAAoB2B,QAAQ;IACpCH,OAAOhB,MAAC,CAACqB,MAAM,CAACJ,OAAO,GAAGE,QAAQ;IAClCM,YAAYzB,MAAC,CACVS,IAAI,CAAC;QAAC;QAAQ;QAAS;QAAY;KAAe,EAClDS,OAAO,CAAC;IACXQ,OAAO1B,MAAC,CAACS,IAAI,CAAC;QAAC;QAAO;KAAO,EAAES,OAAO,CAAC;AACzC;AAGO,MAAMrC,qBAAqBmB,MAAC,CAChCY,MAAM,CAAC;IACNe,YAAY3B,MAAC,CAACC,MAAM,GAAGK,GAAG,CAAC,GAAG;IAC9BsB,WAAWlC;IACXmC,gBAAgB7B,MAAC,CAACC,MAAM,GAAGK,GAAG,CAAC,GAAG;AACpC,GACCwB,MAAM,CAACC,CAAAA,OAAQA,KAAKH,SAAS,KAAKG,KAAKF,cAAc,EAAE;IACtDlB,SAAS;IACTqB,MAAM;QAAC;KAAiB;AAC1B;AAGK,MAAMvC,uBAAuBO,MAAC,CAClCY,MAAM,CAAC;IACNgB,WAAWlC;IACXmC,gBAAgB7B,MAAC,CAACC,MAAM,GAAGK,GAAG,CAAC,GAAG;IAClC2B,iBAAiBjC,MAAC,CAACiB,OAAO,GAAGC,OAAO,CAAC;AACvC,GACCY,MAAM,CAACC,CAAAA,OAAQA,KAAKH,SAAS,KAAKG,KAAKF,cAAc,EAAE;IACtDlB,SAAS;IACTqB,MAAM;QAAC;KAAiB;AAC1B;AAGK,MAAMlD,6BAA6BkB,MAAC,CAACY,MAAM,CAAC;IACjDI,OAAOhB,MAAC,CAACiB,OAAO;AAClB;AAGO,MAAMjC,8BAA8BgB,MAAC,CAACY,MAAM,CAAC;IAClDsB,OAAOlC,MAAC,CAACC,MAAM,GAAGI,IAAI,GAAGc,QAAQ;IACjCgB,QAAQnC,MAAC,CAACoC,KAAK,CAAC5C,qBAAqB2B,QAAQ;IAC7CH,OAAOhB,MAAC,CAACiB,OAAO,GAAGE,QAAQ;IAC3BkB,YAAYrC,MAAC,CAACC,MAAM,GAAGqC,QAAQ,GAAGnB,QAAQ;IAC1CoB,SAASvC,MAAC,CAACC,MAAM,GAAGqC,QAAQ,GAAGnB,QAAQ;IACvCqB,WAAWxC,MAAC,CACTY,MAAM,CAAC;QACN6B,OAAOzC,MAAC,CAACS,IAAI,CAAC;YAAC;YAAQ;YAAS;YAAU;YAAY;SAAe;QACrEiC,SAAS1C,MAAC,CAACS,IAAI,CAAC;YAAC;YAAO;SAAO;IACjC,GACCU,QAAQ;AACb;AAGO,MAAMhC,yBAAyBa,MAAC,CAACY,MAAM,CAAC;IAC7C+B,SAAS3C,MAAC,CAACS,IAAI,CAAC;QAAC;QAAO;QAAQ;KAAM,EAAES,OAAO,CAAC;IAChD0B,SAAS5D,4BAA4BmC,QAAQ;IAC7C0B,QAAQ7C,MAAC,CACNoC,KAAK,CACJpC,MAAC,CAACS,IAAI,CAAC;QAAC;QAAQ;QAAS;QAAU;QAAS;QAAY;KAAe,GAExEU,QAAQ;AACb;AAGO,MAAM9B,yBAAyBW,MAAC,CAACY,MAAM,CAAC;IAC7CkC,UAAU9C,MAAC,CAACoC,KAAK,CAACnD;IAClB8D,cAAc/C,MAAC,CAACiB,OAAO,GAAGC,OAAO,CAAC;IAClC8B,aAAahD,MAAC,CAACiB,OAAO,GAAGC,OAAO,CAAC;AACnC;AAeO,MAAMpB,mBAAmB,CAACmD;IAC/B,OAAO7D,gBAAgB8D,SAAS,CAACD;AACnC;AAEO,MAAMpD,eAAe,CAACM;IAC3B,OAAOjB,YAAYgE,SAAS,CAAC/C;AAC/B;AAEO,MAAMJ,eAAe,CAACe;IAC3B,OAAOpB,YAAYwD,SAAS,CAACpC;AAC/B;AAEO,MAAMlB,sBAAsB,CAACuD;IAClC,OAAOlE,mBAAmBiE,SAAS,CAACC;AACtC;AAGO,MAAMvE,iBAAiB;IAC5BwE,aAAa;IACbC,gBAAgB;IAChBC,iBAAiB;IACjBC,aAAa;IACbC,wBAAwB;IACxBC,kBAAkB;IAClBC,oBAAoB;IACpBC,wBAAwB;AAC1B;AAGO,MAAMhE,uBAAuB;IAClC;;GAEC,GACDiE,YAAY,OAAOzD,OAAe0D;QAChC,iEAAiE;QACjE,wDAAwD;QACxD,OAAO,MAAM,cAAc;IAC7B;IAEA;;GAEC,GACDC,mBAAmB,CACjBC,aACAC,WACAC;QAEA,6DAA6D;QAC7D,IAAIA,sBAAsB,SAAS,OAAO;QAC1C,IAAIA,sBAAsB,YAAYD,cAAc,SAAS,OAAO;QACpE,OAAO;IACT;IAEA;;GAEC,GACDE,mBAAmB,OAAOvC,YAAoBwC;QAC5C,+CAA+C;QAC/C,6DAA6D;QAC7D,OAAO,MAAM,cAAc;IAC7B;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "cec37e9440e80970ada5aa189effb5be62723370"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_wcku87v9z = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_wcku87v9z();
cov_wcku87v9z().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_wcku87v9z().f[0]++;
  cov_wcku87v9z().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_wcku87v9z().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_wcku87v9z().s[3]++;
_export(exports, {
  get MENSAGENS_ERRO() {
    /* istanbul ignore next */
    cov_wcku87v9z().f[1]++;
    cov_wcku87v9z().s[4]++;
    return MENSAGENS_ERRO;
  },
  get alterarSenhaSchema() {
    /* istanbul ignore next */
    cov_wcku87v9z().f[2]++;
    cov_wcku87v9z().s[5]++;
    return alterarSenhaSchema;
  },
  get alterarStatusUsuarioSchema() {
    /* istanbul ignore next */
    cov_wcku87v9z().f[3]++;
    cov_wcku87v9z().s[6]++;
    return alterarStatusUsuarioSchema;
  },
  get atualizarUsuarioSchema() {
    /* istanbul ignore next */
    cov_wcku87v9z().f[4]++;
    cov_wcku87v9z().s[7]++;
    return atualizarUsuarioSchema;
  },
  get buscaAvancadaUsuariosSchema() {
    /* istanbul ignore next */
    cov_wcku87v9z().f[5]++;
    cov_wcku87v9z().s[8]++;
    return buscaAvancadaUsuariosSchema;
  },
  get criarUsuarioSchema() {
    /* istanbul ignore next */
    cov_wcku87v9z().f[6]++;
    cov_wcku87v9z().s[9]++;
    return criarUsuarioSchema;
  },
  get emailSchema() {
    /* istanbul ignore next */
    cov_wcku87v9z().f[7]++;
    cov_wcku87v9z().s[10]++;
    return emailSchema;
  },
  get exportarUsuariosSchema() {
    /* istanbul ignore next */
    cov_wcku87v9z().f[8]++;
    cov_wcku87v9z().s[11]++;
    return exportarUsuariosSchema;
  },
  get idUsuarioSchema() {
    /* istanbul ignore next */
    cov_wcku87v9z().f[9]++;
    cov_wcku87v9z().s[12]++;
    return idUsuarioSchema;
  },
  get importarUsuariosSchema() {
    /* istanbul ignore next */
    cov_wcku87v9z().f[10]++;
    cov_wcku87v9z().s[13]++;
    return importarUsuariosSchema;
  },
  get listarUsuariosSchema() {
    /* istanbul ignore next */
    cov_wcku87v9z().f[11]++;
    cov_wcku87v9z().s[14]++;
    return listarUsuariosSchema;
  },
  get nomeSchema() {
    /* istanbul ignore next */
    cov_wcku87v9z().f[12]++;
    cov_wcku87v9z().s[15]++;
    return nomeSchema;
  },
  get perfilUsuarioSchema() {
    /* istanbul ignore next */
    cov_wcku87v9z().f[13]++;
    cov_wcku87v9z().s[16]++;
    return perfilUsuarioSchema;
  },
  get redefinirSenhaSchema() {
    /* istanbul ignore next */
    cov_wcku87v9z().f[14]++;
    cov_wcku87v9z().s[17]++;
    return redefinirSenhaSchema;
  },
  get senhaSchema() {
    /* istanbul ignore next */
    cov_wcku87v9z().f[15]++;
    cov_wcku87v9z().s[18]++;
    return senhaSchema;
  },
  get validacaoCustomizada() {
    /* istanbul ignore next */
    cov_wcku87v9z().f[16]++;
    cov_wcku87v9z().s[19]++;
    return validacaoCustomizada;
  },
  get validarDadosUsuario() {
    /* istanbul ignore next */
    cov_wcku87v9z().f[17]++;
    cov_wcku87v9z().s[20]++;
    return validarDadosUsuario;
  },
  get validarEmail() {
    /* istanbul ignore next */
    cov_wcku87v9z().f[18]++;
    cov_wcku87v9z().s[21]++;
    return validarEmail;
  },
  get validarIdUsuario() {
    /* istanbul ignore next */
    cov_wcku87v9z().f[19]++;
    cov_wcku87v9z().s[22]++;
    return validarIdUsuario;
  },
  get validarSenha() {
    /* istanbul ignore next */
    cov_wcku87v9z().f[20]++;
    cov_wcku87v9z().s[23]++;
    return validarSenha;
  }
});
const _zod =
/* istanbul ignore next */
(cov_wcku87v9z().s[24]++, require("zod"));
const idUsuarioSchema =
/* istanbul ignore next */
(cov_wcku87v9z().s[25]++, _zod.z.string().uuid('ID deve ser um UUID válido'));
const emailSchema =
/* istanbul ignore next */
(cov_wcku87v9z().s[26]++, _zod.z.string().email('Email inválido').toLowerCase().trim());
const senhaSchema =
/* istanbul ignore next */
(cov_wcku87v9z().s[27]++, _zod.z.string().min(8, 'Senha deve ter pelo menos 8 caracteres').regex(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]/, 'Senha deve conter pelo menos: 1 letra minúscula, 1 maiúscula, 1 número e 1 caractere especial'));
const nomeSchema =
/* istanbul ignore next */
(cov_wcku87v9z().s[28]++, _zod.z.string().min(3, 'Nome deve ter pelo menos 3 caracteres').max(100, 'Nome deve ter no máximo 100 caracteres').trim());
const perfilUsuarioSchema =
/* istanbul ignore next */
(cov_wcku87v9z().s[29]++, _zod.z.enum(['ADMIN', 'GESTOR', 'OPERADOR'], {
  errorMap: () => {
    /* istanbul ignore next */
    cov_wcku87v9z().f[21]++;
    cov_wcku87v9z().s[30]++;
    return {
      message: 'Perfil deve ser ADMIN, GESTOR ou OPERADOR'
    };
  }
}));
const criarUsuarioSchema =
/* istanbul ignore next */
(cov_wcku87v9z().s[31]++, _zod.z.object({
  nome: nomeSchema,
  email: emailSchema,
  senha: senhaSchema,
  perfil: perfilUsuarioSchema,
  ativo: _zod.z.boolean().default(true)
}));
const atualizarUsuarioSchema =
/* istanbul ignore next */
(cov_wcku87v9z().s[32]++, _zod.z.object({
  nome: nomeSchema.optional(),
  email: emailSchema.optional(),
  senha: senhaSchema.optional(),
  perfil: perfilUsuarioSchema.optional(),
  ativo: _zod.z.boolean().optional()
}));
const listarUsuariosSchema =
/* istanbul ignore next */
(cov_wcku87v9z().s[33]++, _zod.z.object({
  pagina: _zod.z.coerce.number().min(1, 'Página deve ser maior que 0').default(1),
  limite: _zod.z.coerce.number().min(1, 'Limite deve ser maior que 0').max(100, 'Limite máximo é 100').default(10),
  busca: _zod.z.string().trim().optional(),
  perfil: perfilUsuarioSchema.optional(),
  ativo: _zod.z.coerce.boolean().optional(),
  ordenarPor: _zod.z.enum(['nome', 'email', 'criadoEm', 'atualizadoEm']).default('nome'),
  ordem: _zod.z.enum(['asc', 'desc']).default('asc')
}));
const alterarSenhaSchema =
/* istanbul ignore next */
(cov_wcku87v9z().s[34]++, _zod.z.object({
  senhaAtual: _zod.z.string().min(1, 'Senha atual é obrigatória'),
  novaSenha: senhaSchema,
  confirmarSenha: _zod.z.string().min(1, 'Confirmação de senha é obrigatória')
}).refine(data => {
  /* istanbul ignore next */
  cov_wcku87v9z().f[22]++;
  cov_wcku87v9z().s[35]++;
  return data.novaSenha === data.confirmarSenha;
}, {
  message: 'Nova senha e confirmação devem ser iguais',
  path: ['confirmarSenha']
}));
const redefinirSenhaSchema =
/* istanbul ignore next */
(cov_wcku87v9z().s[36]++, _zod.z.object({
  novaSenha: senhaSchema,
  confirmarSenha: _zod.z.string().min(1, 'Confirmação de senha é obrigatória'),
  forcarAlteracao: _zod.z.boolean().default(false)
}).refine(data => {
  /* istanbul ignore next */
  cov_wcku87v9z().f[23]++;
  cov_wcku87v9z().s[37]++;
  return data.novaSenha === data.confirmarSenha;
}, {
  message: 'Nova senha e confirmação devem ser iguais',
  path: ['confirmarSenha']
}));
const alterarStatusUsuarioSchema =
/* istanbul ignore next */
(cov_wcku87v9z().s[38]++, _zod.z.object({
  ativo: _zod.z.boolean()
}));
const buscaAvancadaUsuariosSchema =
/* istanbul ignore next */
(cov_wcku87v9z().s[39]++, _zod.z.object({
  termo: _zod.z.string().trim().optional(),
  perfis: _zod.z.array(perfilUsuarioSchema).optional(),
  ativo: _zod.z.boolean().optional(),
  dataInicio: _zod.z.string().datetime().optional(),
  dataFim: _zod.z.string().datetime().optional(),
  ordenacao: _zod.z.object({
    campo: _zod.z.enum(['nome', 'email', 'perfil', 'criadoEm', 'atualizadoEm']),
    direcao: _zod.z.enum(['asc', 'desc'])
  }).optional()
}));
const exportarUsuariosSchema =
/* istanbul ignore next */
(cov_wcku87v9z().s[40]++, _zod.z.object({
  formato: _zod.z.enum(['csv', 'xlsx', 'pdf']).default('csv'),
  filtros: buscaAvancadaUsuariosSchema.optional(),
  campos: _zod.z.array(_zod.z.enum(['nome', 'email', 'perfil', 'ativo', 'criadoEm', 'atualizadoEm'])).optional()
}));
const importarUsuariosSchema =
/* istanbul ignore next */
(cov_wcku87v9z().s[41]++, _zod.z.object({
  usuarios: _zod.z.array(criarUsuarioSchema),
  sobrescrever: _zod.z.boolean().default(false),
  enviarEmail: _zod.z.boolean().default(true)
}));
/* istanbul ignore next */
cov_wcku87v9z().s[42]++;
const validarIdUsuario = id => {
  /* istanbul ignore next */
  cov_wcku87v9z().f[24]++;
  cov_wcku87v9z().s[43]++;
  return idUsuarioSchema.safeParse(id);
};
/* istanbul ignore next */
cov_wcku87v9z().s[44]++;
const validarEmail = email => {
  /* istanbul ignore next */
  cov_wcku87v9z().f[25]++;
  cov_wcku87v9z().s[45]++;
  return emailSchema.safeParse(email);
};
/* istanbul ignore next */
cov_wcku87v9z().s[46]++;
const validarSenha = senha => {
  /* istanbul ignore next */
  cov_wcku87v9z().f[26]++;
  cov_wcku87v9z().s[47]++;
  return senhaSchema.safeParse(senha);
};
/* istanbul ignore next */
cov_wcku87v9z().s[48]++;
const validarDadosUsuario = dados => {
  /* istanbul ignore next */
  cov_wcku87v9z().f[27]++;
  cov_wcku87v9z().s[49]++;
  return criarUsuarioSchema.safeParse(dados);
};
const MENSAGENS_ERRO =
/* istanbul ignore next */
(cov_wcku87v9z().s[50]++, {
  ID_INVALIDO: 'ID do usuário inválido',
  EMAIL_INVALIDO: 'Email inválido',
  EMAIL_JA_EXISTE: 'Este email já está em uso',
  SENHA_FRACA: 'Senha não atende aos critérios de segurança',
  USUARIO_NAO_ENCONTRADO: 'Usuário não encontrado',
  PERMISSAO_NEGADA: 'Você não tem permissão para esta operação',
  DADOS_OBRIGATORIOS: 'Todos os campos obrigatórios devem ser preenchidos',
  OPERACAO_NAO_PERMITIDA: 'Operação não permitida para este usuário'
});
const validacaoCustomizada =
/* istanbul ignore next */
(cov_wcku87v9z().s[51]++, {
  /**
  * Valida se o email é único no sistema
  */
  emailUnico: async (email, idExcluir) => {
    /* istanbul ignore next */
    cov_wcku87v9z().f[28]++;
    cov_wcku87v9z().s[52]++;
    // Esta função deve ser implementada com acesso ao banco de dados
    // Retorna true se o email é único, false caso contrário
    return true; // Placeholder
  },
  /**
  * Valida se o usuário pode alterar o perfil
  */
  podeAlterarPerfil: (perfilAtual, novoPerfi, perfilSolicitante) => {
    /* istanbul ignore next */
    cov_wcku87v9z().f[29]++;
    cov_wcku87v9z().s[53]++;
    // Lógica de validação de permissões para alteração de perfil
    if (perfilSolicitante === 'ADMIN') {
      /* istanbul ignore next */
      cov_wcku87v9z().b[0][0]++;
      cov_wcku87v9z().s[54]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_wcku87v9z().b[0][1]++;
    }
    cov_wcku87v9z().s[55]++;
    if (
    /* istanbul ignore next */
    (cov_wcku87v9z().b[2][0]++, perfilSolicitante === 'GESTOR') &&
    /* istanbul ignore next */
    (cov_wcku87v9z().b[2][1]++, novoPerfi !== 'ADMIN')) {
      /* istanbul ignore next */
      cov_wcku87v9z().b[1][0]++;
      cov_wcku87v9z().s[56]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_wcku87v9z().b[1][1]++;
    }
    cov_wcku87v9z().s[57]++;
    return false;
  },
  /**
  * Valida se a senha atual está correta
  */
  senhaAtualCorreta: async (senhaAtual, hashSenha) => {
    /* istanbul ignore next */
    cov_wcku87v9z().f[30]++;
    cov_wcku87v9z().s[58]++;
    // Esta função deve ser implementada com bcrypt
    // Retorna true se a senha está correta, false caso contrário
    return true; // Placeholder
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJNRU5TQUdFTlNfRVJSTyIsImNvdl93Y2t1ODd2OXoiLCJmIiwicyIsImFsdGVyYXJTZW5oYVNjaGVtYSIsImFsdGVyYXJTdGF0dXNVc3VhcmlvU2NoZW1hIiwiYXR1YWxpemFyVXN1YXJpb1NjaGVtYSIsImJ1c2NhQXZhbmNhZGFVc3Vhcmlvc1NjaGVtYSIsImNyaWFyVXN1YXJpb1NjaGVtYSIsImVtYWlsU2NoZW1hIiwiZXhwb3J0YXJVc3Vhcmlvc1NjaGVtYSIsImlkVXN1YXJpb1NjaGVtYSIsImltcG9ydGFyVXN1YXJpb3NTY2hlbWEiLCJsaXN0YXJVc3Vhcmlvc1NjaGVtYSIsIm5vbWVTY2hlbWEiLCJwZXJmaWxVc3VhcmlvU2NoZW1hIiwicmVkZWZpbmlyU2VuaGFTY2hlbWEiLCJzZW5oYVNjaGVtYSIsInZhbGlkYWNhb0N1c3RvbWl6YWRhIiwidmFsaWRhckRhZG9zVXN1YXJpbyIsInZhbGlkYXJFbWFpbCIsInZhbGlkYXJJZFVzdWFyaW8iLCJ2YWxpZGFyU2VuaGEiLCJfem9kIiwieiIsInN0cmluZyIsInV1aWQiLCJlbWFpbCIsInRvTG93ZXJDYXNlIiwidHJpbSIsIm1pbiIsInJlZ2V4IiwibWF4IiwiZW51bSIsImVycm9yTWFwIiwibWVzc2FnZSIsIm9iamVjdCIsIm5vbWUiLCJzZW5oYSIsInBlcmZpbCIsImF0aXZvIiwiYm9vbGVhbiIsImRlZmF1bHQiLCJvcHRpb25hbCIsInBhZ2luYSIsImNvZXJjZSIsIm51bWJlciIsImxpbWl0ZSIsImJ1c2NhIiwib3JkZW5hclBvciIsIm9yZGVtIiwic2VuaGFBdHVhbCIsIm5vdmFTZW5oYSIsImNvbmZpcm1hclNlbmhhIiwicmVmaW5lIiwiZGF0YSIsInBhdGgiLCJmb3JjYXJBbHRlcmFjYW8iLCJ0ZXJtbyIsInBlcmZpcyIsImFycmF5IiwiZGF0YUluaWNpbyIsImRhdGV0aW1lIiwiZGF0YUZpbSIsIm9yZGVuYWNhbyIsImNhbXBvIiwiZGlyZWNhbyIsImZvcm1hdG8iLCJmaWx0cm9zIiwiY2FtcG9zIiwidXN1YXJpb3MiLCJzb2JyZXNjcmV2ZXIiLCJlbnZpYXJFbWFpbCIsImlkIiwic2FmZVBhcnNlIiwiZGFkb3MiLCJJRF9JTlZBTElETyIsIkVNQUlMX0lOVkFMSURPIiwiRU1BSUxfSkFfRVhJU1RFIiwiU0VOSEFfRlJBQ0EiLCJVU1VBUklPX05BT19FTkNPTlRSQURPIiwiUEVSTUlTU0FPX05FR0FEQSIsIkRBRE9TX09CUklHQVRPUklPUyIsIk9QRVJBQ0FPX05BT19QRVJNSVRJREEiLCJlbWFpbFVuaWNvIiwiaWRFeGNsdWlyIiwicG9kZUFsdGVyYXJQZXJmaWwiLCJwZXJmaWxBdHVhbCIsIm5vdm9QZXJmaSIsInBlcmZpbFNvbGljaXRhbnRlIiwiYiIsInNlbmhhQXR1YWxDb3JyZXRhIiwiaGFzaFNlbmhhIl0sInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxOZXJldSBKclxcRG9jdW1lbnRzXFxEZXZcXG5ld1xcc3JjXFxsaWJcXHZhbGlkYXRpb25zXFx1c3Vhcmlvcy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB6IH0gZnJvbSAnem9kJztcblxuLyoqXG4gKiBTY2hlbWFzIGRlIHZhbGlkYcOnw6NvIHBhcmEgb3BlcmHDp8O1ZXMgcmVsYWNpb25hZGFzIGEgdXN1w6FyaW9zXG4gKiBDZW50cmFsaXphbmRvIHRvZGFzIGFzIHZhbGlkYcOnw7VlcyBlbSB1bSBsb2NhbCBwYXJhIG1lbGhvciBtYW51dGVuw6fDo29cbiAqL1xuXG4vLyBTY2hlbWEgYmFzZSBwYXJhIHZhbGlkYcOnw6NvIGRlIElEIFVVSURcbmV4cG9ydCBjb25zdCBpZFVzdWFyaW9TY2hlbWEgPSB6LnN0cmluZygpLnV1aWQoJ0lEIGRldmUgc2VyIHVtIFVVSUQgdsOhbGlkbycpO1xuXG4vLyBTY2hlbWEgcGFyYSB2YWxpZGHDp8OjbyBkZSBlbWFpbFxuZXhwb3J0IGNvbnN0IGVtYWlsU2NoZW1hID0gelxuICAuc3RyaW5nKClcbiAgLmVtYWlsKCdFbWFpbCBpbnbDoWxpZG8nKVxuICAudG9Mb3dlckNhc2UoKVxuICAudHJpbSgpO1xuXG4vLyBTY2hlbWEgcGFyYSB2YWxpZGHDp8OjbyBkZSBzZW5oYVxuZXhwb3J0IGNvbnN0IHNlbmhhU2NoZW1hID0gelxuICAuc3RyaW5nKClcbiAgLm1pbig4LCAnU2VuaGEgZGV2ZSB0ZXIgcGVsbyBtZW5vcyA4IGNhcmFjdGVyZXMnKVxuICAucmVnZXgoXG4gICAgL14oPz0uKlthLXpdKSg/PS4qW0EtWl0pKD89LipcXGQpKD89LipbQCQhJSo/Jl0pW0EtWmEtelxcZEAkISUqPyZdLyxcbiAgICAnU2VuaGEgZGV2ZSBjb250ZXIgcGVsbyBtZW5vczogMSBsZXRyYSBtaW7DunNjdWxhLCAxIG1hacO6c2N1bGEsIDEgbsO6bWVybyBlIDEgY2FyYWN0ZXJlIGVzcGVjaWFsJ1xuICApO1xuXG4vLyBTY2hlbWEgcGFyYSB2YWxpZGHDp8OjbyBkZSBub21lXG5leHBvcnQgY29uc3Qgbm9tZVNjaGVtYSA9IHpcbiAgLnN0cmluZygpXG4gIC5taW4oMywgJ05vbWUgZGV2ZSB0ZXIgcGVsbyBtZW5vcyAzIGNhcmFjdGVyZXMnKVxuICAubWF4KDEwMCwgJ05vbWUgZGV2ZSB0ZXIgbm8gbcOheGltbyAxMDAgY2FyYWN0ZXJlcycpXG4gIC50cmltKCk7XG5cbi8vIFNjaGVtYSBwYXJhIHZhbGlkYcOnw6NvIGRlIHBlcmZpbCBkZSB1c3XDoXJpb1xuZXhwb3J0IGNvbnN0IHBlcmZpbFVzdWFyaW9TY2hlbWEgPSB6LmVudW0oWydBRE1JTicsICdHRVNUT1InLCAnT1BFUkFET1InXSwge1xuICBlcnJvck1hcDogKCkgPT4gKHsgbWVzc2FnZTogJ1BlcmZpbCBkZXZlIHNlciBBRE1JTiwgR0VTVE9SIG91IE9QRVJBRE9SJyB9KSxcbn0pO1xuXG4vLyBTY2hlbWEgcGFyYSBjcmlhw6fDo28gZGUgdXN1w6FyaW9cbmV4cG9ydCBjb25zdCBjcmlhclVzdWFyaW9TY2hlbWEgPSB6Lm9iamVjdCh7XG4gIG5vbWU6IG5vbWVTY2hlbWEsXG4gIGVtYWlsOiBlbWFpbFNjaGVtYSxcbiAgc2VuaGE6IHNlbmhhU2NoZW1hLFxuICBwZXJmaWw6IHBlcmZpbFVzdWFyaW9TY2hlbWEsXG4gIGF0aXZvOiB6LmJvb2xlYW4oKS5kZWZhdWx0KHRydWUpLFxufSk7XG5cbi8vIFNjaGVtYSBwYXJhIGF0dWFsaXphw6fDo28gZGUgdXN1w6FyaW9cbmV4cG9ydCBjb25zdCBhdHVhbGl6YXJVc3VhcmlvU2NoZW1hID0gei5vYmplY3Qoe1xuICBub21lOiBub21lU2NoZW1hLm9wdGlvbmFsKCksXG4gIGVtYWlsOiBlbWFpbFNjaGVtYS5vcHRpb25hbCgpLFxuICBzZW5oYTogc2VuaGFTY2hlbWEub3B0aW9uYWwoKSxcbiAgcGVyZmlsOiBwZXJmaWxVc3VhcmlvU2NoZW1hLm9wdGlvbmFsKCksXG4gIGF0aXZvOiB6LmJvb2xlYW4oKS5vcHRpb25hbCgpLFxufSk7XG5cbi8vIFNjaGVtYSBwYXJhIGxpc3RhZ2VtIGRlIHVzdcOhcmlvcyBjb20gZmlsdHJvcyBlIHBhZ2luYcOnw6NvXG5leHBvcnQgY29uc3QgbGlzdGFyVXN1YXJpb3NTY2hlbWEgPSB6Lm9iamVjdCh7XG4gIHBhZ2luYTogei5jb2VyY2UubnVtYmVyKCkubWluKDEsICdQw6FnaW5hIGRldmUgc2VyIG1haW9yIHF1ZSAwJykuZGVmYXVsdCgxKSxcbiAgbGltaXRlOiB6LmNvZXJjZVxuICAgIC5udW1iZXIoKVxuICAgIC5taW4oMSwgJ0xpbWl0ZSBkZXZlIHNlciBtYWlvciBxdWUgMCcpXG4gICAgLm1heCgxMDAsICdMaW1pdGUgbcOheGltbyDDqSAxMDAnKVxuICAgIC5kZWZhdWx0KDEwKSxcbiAgYnVzY2E6IHouc3RyaW5nKCkudHJpbSgpLm9wdGlvbmFsKCksXG4gIHBlcmZpbDogcGVyZmlsVXN1YXJpb1NjaGVtYS5vcHRpb25hbCgpLFxuICBhdGl2bzogei5jb2VyY2UuYm9vbGVhbigpLm9wdGlvbmFsKCksXG4gIG9yZGVuYXJQb3I6IHpcbiAgICAuZW51bShbJ25vbWUnLCAnZW1haWwnLCAnY3JpYWRvRW0nLCAnYXR1YWxpemFkb0VtJ10pXG4gICAgLmRlZmF1bHQoJ25vbWUnKSxcbiAgb3JkZW06IHouZW51bShbJ2FzYycsICdkZXNjJ10pLmRlZmF1bHQoJ2FzYycpLFxufSk7XG5cbi8vIFNjaGVtYSBwYXJhIGFsdGVyYcOnw6NvIGRlIHNlbmhhXG5leHBvcnQgY29uc3QgYWx0ZXJhclNlbmhhU2NoZW1hID0gelxuICAub2JqZWN0KHtcbiAgICBzZW5oYUF0dWFsOiB6LnN0cmluZygpLm1pbigxLCAnU2VuaGEgYXR1YWwgw6kgb2JyaWdhdMOzcmlhJyksXG4gICAgbm92YVNlbmhhOiBzZW5oYVNjaGVtYSxcbiAgICBjb25maXJtYXJTZW5oYTogei5zdHJpbmcoKS5taW4oMSwgJ0NvbmZpcm1hw6fDo28gZGUgc2VuaGEgw6kgb2JyaWdhdMOzcmlhJyksXG4gIH0pXG4gIC5yZWZpbmUoZGF0YSA9PiBkYXRhLm5vdmFTZW5oYSA9PT0gZGF0YS5jb25maXJtYXJTZW5oYSwge1xuICAgIG1lc3NhZ2U6ICdOb3ZhIHNlbmhhIGUgY29uZmlybWHDp8OjbyBkZXZlbSBzZXIgaWd1YWlzJyxcbiAgICBwYXRoOiBbJ2NvbmZpcm1hclNlbmhhJ10sXG4gIH0pO1xuXG4vLyBTY2hlbWEgcGFyYSByZWRlZmluacOnw6NvIGRlIHNlbmhhIChhZG1pbilcbmV4cG9ydCBjb25zdCByZWRlZmluaXJTZW5oYVNjaGVtYSA9IHpcbiAgLm9iamVjdCh7XG4gICAgbm92YVNlbmhhOiBzZW5oYVNjaGVtYSxcbiAgICBjb25maXJtYXJTZW5oYTogei5zdHJpbmcoKS5taW4oMSwgJ0NvbmZpcm1hw6fDo28gZGUgc2VuaGEgw6kgb2JyaWdhdMOzcmlhJyksXG4gICAgZm9yY2FyQWx0ZXJhY2FvOiB6LmJvb2xlYW4oKS5kZWZhdWx0KGZhbHNlKSxcbiAgfSlcbiAgLnJlZmluZShkYXRhID0+IGRhdGEubm92YVNlbmhhID09PSBkYXRhLmNvbmZpcm1hclNlbmhhLCB7XG4gICAgbWVzc2FnZTogJ05vdmEgc2VuaGEgZSBjb25maXJtYcOnw6NvIGRldmVtIHNlciBpZ3VhaXMnLFxuICAgIHBhdGg6IFsnY29uZmlybWFyU2VuaGEnXSxcbiAgfSk7XG5cbi8vIFNjaGVtYSBwYXJhIGF0aXZhw6fDo28vZGVzYXRpdmHDp8OjbyBkZSB1c3XDoXJpb1xuZXhwb3J0IGNvbnN0IGFsdGVyYXJTdGF0dXNVc3VhcmlvU2NoZW1hID0gei5vYmplY3Qoe1xuICBhdGl2bzogei5ib29sZWFuKCksXG59KTtcblxuLy8gU2NoZW1hIHBhcmEgYnVzY2EgYXZhbsOnYWRhIGRlIHVzdcOhcmlvc1xuZXhwb3J0IGNvbnN0IGJ1c2NhQXZhbmNhZGFVc3Vhcmlvc1NjaGVtYSA9IHoub2JqZWN0KHtcbiAgdGVybW86IHouc3RyaW5nKCkudHJpbSgpLm9wdGlvbmFsKCksXG4gIHBlcmZpczogei5hcnJheShwZXJmaWxVc3VhcmlvU2NoZW1hKS5vcHRpb25hbCgpLFxuICBhdGl2bzogei5ib29sZWFuKCkub3B0aW9uYWwoKSxcbiAgZGF0YUluaWNpbzogei5zdHJpbmcoKS5kYXRldGltZSgpLm9wdGlvbmFsKCksXG4gIGRhdGFGaW06IHouc3RyaW5nKCkuZGF0ZXRpbWUoKS5vcHRpb25hbCgpLFxuICBvcmRlbmFjYW86IHpcbiAgICAub2JqZWN0KHtcbiAgICAgIGNhbXBvOiB6LmVudW0oWydub21lJywgJ2VtYWlsJywgJ3BlcmZpbCcsICdjcmlhZG9FbScsICdhdHVhbGl6YWRvRW0nXSksXG4gICAgICBkaXJlY2FvOiB6LmVudW0oWydhc2MnLCAnZGVzYyddKSxcbiAgICB9KVxuICAgIC5vcHRpb25hbCgpLFxufSk7XG5cbi8vIFNjaGVtYSBwYXJhIGV4cG9ydGHDp8OjbyBkZSBkYWRvcyBkZSB1c3XDoXJpb3NcbmV4cG9ydCBjb25zdCBleHBvcnRhclVzdWFyaW9zU2NoZW1hID0gei5vYmplY3Qoe1xuICBmb3JtYXRvOiB6LmVudW0oWydjc3YnLCAneGxzeCcsICdwZGYnXSkuZGVmYXVsdCgnY3N2JyksXG4gIGZpbHRyb3M6IGJ1c2NhQXZhbmNhZGFVc3Vhcmlvc1NjaGVtYS5vcHRpb25hbCgpLFxuICBjYW1wb3M6IHpcbiAgICAuYXJyYXkoXG4gICAgICB6LmVudW0oWydub21lJywgJ2VtYWlsJywgJ3BlcmZpbCcsICdhdGl2bycsICdjcmlhZG9FbScsICdhdHVhbGl6YWRvRW0nXSlcbiAgICApXG4gICAgLm9wdGlvbmFsKCksXG59KTtcblxuLy8gU2NoZW1hIHBhcmEgaW1wb3J0YcOnw6NvIGRlIHVzdcOhcmlvc1xuZXhwb3J0IGNvbnN0IGltcG9ydGFyVXN1YXJpb3NTY2hlbWEgPSB6Lm9iamVjdCh7XG4gIHVzdWFyaW9zOiB6LmFycmF5KGNyaWFyVXN1YXJpb1NjaGVtYSksXG4gIHNvYnJlc2NyZXZlcjogei5ib29sZWFuKCkuZGVmYXVsdChmYWxzZSksXG4gIGVudmlhckVtYWlsOiB6LmJvb2xlYW4oKS5kZWZhdWx0KHRydWUpLFxufSk7XG5cbi8vIFRpcG9zIFR5cGVTY3JpcHQgZGVyaXZhZG9zIGRvcyBzY2hlbWFzXG5leHBvcnQgdHlwZSBDcmlhclVzdWFyaW9JbnB1dCA9IHouaW5mZXI8dHlwZW9mIGNyaWFyVXN1YXJpb1NjaGVtYT47XG5leHBvcnQgdHlwZSBBdHVhbGl6YXJVc3VhcmlvSW5wdXQgPSB6LmluZmVyPHR5cGVvZiBhdHVhbGl6YXJVc3VhcmlvU2NoZW1hPjtcbmV4cG9ydCB0eXBlIExpc3RhclVzdWFyaW9zSW5wdXQgPSB6LmluZmVyPHR5cGVvZiBsaXN0YXJVc3Vhcmlvc1NjaGVtYT47XG5leHBvcnQgdHlwZSBBbHRlcmFyU2VuaGFJbnB1dCA9IHouaW5mZXI8dHlwZW9mIGFsdGVyYXJTZW5oYVNjaGVtYT47XG5leHBvcnQgdHlwZSBSZWRlZmluaXJTZW5oYUlucHV0ID0gei5pbmZlcjx0eXBlb2YgcmVkZWZpbmlyU2VuaGFTY2hlbWE+O1xuZXhwb3J0IHR5cGUgQnVzY2FBdmFuY2FkYVVzdWFyaW9zSW5wdXQgPSB6LmluZmVyPFxuICB0eXBlb2YgYnVzY2FBdmFuY2FkYVVzdWFyaW9zU2NoZW1hXG4+O1xuZXhwb3J0IHR5cGUgRXhwb3J0YXJVc3Vhcmlvc0lucHV0ID0gei5pbmZlcjx0eXBlb2YgZXhwb3J0YXJVc3Vhcmlvc1NjaGVtYT47XG5leHBvcnQgdHlwZSBJbXBvcnRhclVzdWFyaW9zSW5wdXQgPSB6LmluZmVyPHR5cGVvZiBpbXBvcnRhclVzdWFyaW9zU2NoZW1hPjtcblxuLy8gVXRpbGl0w6FyaW9zIGRlIHZhbGlkYcOnw6NvXG5leHBvcnQgY29uc3QgdmFsaWRhcklkVXN1YXJpbyA9IChpZDogc3RyaW5nKSA9PiB7XG4gIHJldHVybiBpZFVzdWFyaW9TY2hlbWEuc2FmZVBhcnNlKGlkKTtcbn07XG5cbmV4cG9ydCBjb25zdCB2YWxpZGFyRW1haWwgPSAoZW1haWw6IHN0cmluZykgPT4ge1xuICByZXR1cm4gZW1haWxTY2hlbWEuc2FmZVBhcnNlKGVtYWlsKTtcbn07XG5cbmV4cG9ydCBjb25zdCB2YWxpZGFyU2VuaGEgPSAoc2VuaGE6IHN0cmluZykgPT4ge1xuICByZXR1cm4gc2VuaGFTY2hlbWEuc2FmZVBhcnNlKHNlbmhhKTtcbn07XG5cbmV4cG9ydCBjb25zdCB2YWxpZGFyRGFkb3NVc3VhcmlvID0gKGRhZG9zOiB1bmtub3duKSA9PiB7XG4gIHJldHVybiBjcmlhclVzdWFyaW9TY2hlbWEuc2FmZVBhcnNlKGRhZG9zKTtcbn07XG5cbi8vIE1lbnNhZ2VucyBkZSBlcnJvIHBlcnNvbmFsaXphZGFzXG5leHBvcnQgY29uc3QgTUVOU0FHRU5TX0VSUk8gPSB7XG4gIElEX0lOVkFMSURPOiAnSUQgZG8gdXN1w6FyaW8gaW52w6FsaWRvJyxcbiAgRU1BSUxfSU5WQUxJRE86ICdFbWFpbCBpbnbDoWxpZG8nLFxuICBFTUFJTF9KQV9FWElTVEU6ICdFc3RlIGVtYWlsIGrDoSBlc3TDoSBlbSB1c28nLFxuICBTRU5IQV9GUkFDQTogJ1NlbmhhIG7Do28gYXRlbmRlIGFvcyBjcml0w6lyaW9zIGRlIHNlZ3VyYW7Dp2EnLFxuICBVU1VBUklPX05BT19FTkNPTlRSQURPOiAnVXN1w6FyaW8gbsOjbyBlbmNvbnRyYWRvJyxcbiAgUEVSTUlTU0FPX05FR0FEQTogJ1ZvY8OqIG7Do28gdGVtIHBlcm1pc3PDo28gcGFyYSBlc3RhIG9wZXJhw6fDo28nLFxuICBEQURPU19PQlJJR0FUT1JJT1M6ICdUb2RvcyBvcyBjYW1wb3Mgb2JyaWdhdMOzcmlvcyBkZXZlbSBzZXIgcHJlZW5jaGlkb3MnLFxuICBPUEVSQUNBT19OQU9fUEVSTUlUSURBOiAnT3BlcmHDp8OjbyBuw6NvIHBlcm1pdGlkYSBwYXJhIGVzdGUgdXN1w6FyaW8nLFxufSBhcyBjb25zdDtcblxuLy8gVmFsaWRhw6fDtWVzIGN1c3RvbWl6YWRhc1xuZXhwb3J0IGNvbnN0IHZhbGlkYWNhb0N1c3RvbWl6YWRhID0ge1xuICAvKipcbiAgICogVmFsaWRhIHNlIG8gZW1haWwgw6kgw7puaWNvIG5vIHNpc3RlbWFcbiAgICovXG4gIGVtYWlsVW5pY286IGFzeW5jIChlbWFpbDogc3RyaW5nLCBpZEV4Y2x1aXI/OiBzdHJpbmcpID0+IHtcbiAgICAvLyBFc3RhIGZ1bsOnw6NvIGRldmUgc2VyIGltcGxlbWVudGFkYSBjb20gYWNlc3NvIGFvIGJhbmNvIGRlIGRhZG9zXG4gICAgLy8gUmV0b3JuYSB0cnVlIHNlIG8gZW1haWwgw6kgw7puaWNvLCBmYWxzZSBjYXNvIGNvbnRyw6FyaW9cbiAgICByZXR1cm4gdHJ1ZTsgLy8gUGxhY2Vob2xkZXJcbiAgfSxcblxuICAvKipcbiAgICogVmFsaWRhIHNlIG8gdXN1w6FyaW8gcG9kZSBhbHRlcmFyIG8gcGVyZmlsXG4gICAqL1xuICBwb2RlQWx0ZXJhclBlcmZpbDogKFxuICAgIHBlcmZpbEF0dWFsOiBzdHJpbmcsXG4gICAgbm92b1BlcmZpOiBzdHJpbmcsXG4gICAgcGVyZmlsU29saWNpdGFudGU6IHN0cmluZ1xuICApID0+IHtcbiAgICAvLyBMw7NnaWNhIGRlIHZhbGlkYcOnw6NvIGRlIHBlcm1pc3PDtWVzIHBhcmEgYWx0ZXJhw6fDo28gZGUgcGVyZmlsXG4gICAgaWYgKHBlcmZpbFNvbGljaXRhbnRlID09PSAnQURNSU4nKSByZXR1cm4gdHJ1ZTtcbiAgICBpZiAocGVyZmlsU29saWNpdGFudGUgPT09ICdHRVNUT1InICYmIG5vdm9QZXJmaSAhPT0gJ0FETUlOJykgcmV0dXJuIHRydWU7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9LFxuXG4gIC8qKlxuICAgKiBWYWxpZGEgc2UgYSBzZW5oYSBhdHVhbCBlc3TDoSBjb3JyZXRhXG4gICAqL1xuICBzZW5oYUF0dWFsQ29ycmV0YTogYXN5bmMgKHNlbmhhQXR1YWw6IHN0cmluZywgaGFzaFNlbmhhOiBzdHJpbmcpID0+IHtcbiAgICAvLyBFc3RhIGZ1bsOnw6NvIGRldmUgc2VyIGltcGxlbWVudGFkYSBjb20gYmNyeXB0XG4gICAgLy8gUmV0b3JuYSB0cnVlIHNlIGEgc2VuaGEgZXN0w6EgY29ycmV0YSwgZmFsc2UgY2FzbyBjb250csOhcmlvXG4gICAgcmV0dXJuIHRydWU7IC8vIFBsYWNlaG9sZGVyXG4gIH0sXG59O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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