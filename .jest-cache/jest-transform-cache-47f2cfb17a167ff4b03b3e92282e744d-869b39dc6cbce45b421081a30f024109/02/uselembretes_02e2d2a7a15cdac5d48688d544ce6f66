b4219624d51006cd9df190f222ad34ba
"use strict";

/* istanbul ignore next */
function cov_12g70wwm6d() {
  var path = "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\hooks\\use-lembretes.ts";
  var hash = "0347c1d2950ce9d44d594cbaa24ab9b8248236db";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\hooks\\use-lembretes.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 37
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 28
        }
      },
      "6": {
        start: {
          line: 19,
          column: 15
        },
        end: {
          line: 19,
          column: 31
        }
      },
      "7": {
        start: {
          line: 20,
          column: 18
        },
        end: {
          line: 20,
          column: 40
        }
      },
      "8": {
        start: {
          line: 22,
          column: 38
        },
        end: {
          line: 22,
          column: 62
        }
      },
      "9": {
        start: {
          line: 23,
          column: 38
        },
        end: {
          line: 30,
          column: 6
        }
      },
      "10": {
        start: {
          line: 31,
          column: 40
        },
        end: {
          line: 31,
          column: 67
        }
      },
      "11": {
        start: {
          line: 32,
          column: 28
        },
        end: {
          line: 32,
          column: 54
        }
      },
      "12": {
        start: {
          line: 33,
          column: 22
        },
        end: {
          line: 33,
          column: 47
        }
      },
      "13": {
        start: {
          line: 36,
          column: 30
        },
        end: {
          line: 71,
          column: 6
        }
      },
      "14": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 28
        }
      },
      "15": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 22
        }
      },
      "16": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 67,
          column: 9
        }
      },
      "17": {
        start: {
          line: 40,
          column: 37
        },
        end: {
          line: 43,
          column: 13
        }
      },
      "18": {
        start: {
          line: 44,
          column: 27
        },
        end: {
          line: 44,
          column: 48
        }
      },
      "19": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 49,
          column: 15
        }
      },
      "20": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 48,
          column: 17
        }
      },
      "21": {
        start: {
          line: 47,
          column: 20
        },
        end: {
          line: 47,
          column: 57
        }
      },
      "22": {
        start: {
          line: 50,
          column: 29
        },
        end: {
          line: 50,
          column: 79
        }
      },
      "23": {
        start: {
          line: 51,
          column: 25
        },
        end: {
          line: 51,
          column: 46
        }
      },
      "24": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 54,
          column: 13
        }
      },
      "25": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 53,
          column: 73
        }
      },
      "26": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 37
        }
      },
      "27": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 41
        }
      },
      "28": {
        start: {
          line: 58,
          column: 33
        },
        end: {
          line: 58,
          column: 93
        }
      },
      "29": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 34
        }
      },
      "30": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 64,
          column: 15
        }
      },
      "31": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 33
        }
      },
      "32": {
        start: {
          line: 74,
          column: 29
        },
        end: {
          line: 93,
          column: 6
        }
      },
      "33": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 90,
          column: 9
        }
      },
      "34": {
        start: {
          line: 76,
          column: 29
        },
        end: {
          line: 76,
          column: 64
        }
      },
      "35": {
        start: {
          line: 77,
          column: 25
        },
        end: {
          line: 77,
          column: 46
        }
      },
      "36": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 80,
          column: 13
        }
      },
      "37": {
        start: {
          line: 79,
          column: 16
        },
        end: {
          line: 79,
          column: 72
        }
      },
      "38": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 30
        }
      },
      "39": {
        start: {
          line: 83,
          column: 33
        },
        end: {
          line: 83,
          column: 93
        }
      },
      "40": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 88,
          column: 15
        }
      },
      "41": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 24
        }
      },
      "42": {
        start: {
          line: 96,
          column: 28
        },
        end: {
          line: 128,
          column: 6
        }
      },
      "43": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 124,
          column: 9
        }
      },
      "44": {
        start: {
          line: 98,
          column: 29
        },
        end: {
          line: 104,
          column: 14
        }
      },
      "45": {
        start: {
          line: 105,
          column: 25
        },
        end: {
          line: 105,
          column: 46
        }
      },
      "46": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 108,
          column: 13
        }
      },
      "47": {
        start: {
          line: 107,
          column: 16
        },
        end: {
          line: 107,
          column: 71
        }
      },
      "48": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 112,
          column: 15
        }
      },
      "49": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 36
        }
      },
      "50": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 24
        }
      },
      "51": {
        start: {
          line: 117,
          column: 33
        },
        end: {
          line: 117,
          column: 93
        }
      },
      "52": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 122,
          column: 15
        }
      },
      "53": {
        start: {
          line: 123,
          column: 12
        },
        end: {
          line: 123,
          column: 25
        }
      },
      "54": {
        start: {
          line: 131,
          column: 32
        },
        end: {
          line: 163,
          column: 6
        }
      },
      "55": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 159,
          column: 9
        }
      },
      "56": {
        start: {
          line: 133,
          column: 29
        },
        end: {
          line: 139,
          column: 14
        }
      },
      "57": {
        start: {
          line: 140,
          column: 25
        },
        end: {
          line: 140,
          column: 46
        }
      },
      "58": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 143,
          column: 13
        }
      },
      "59": {
        start: {
          line: 142,
          column: 16
        },
        end: {
          line: 142,
          column: 75
        }
      },
      "60": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 147,
          column: 15
        }
      },
      "61": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 36
        }
      },
      "62": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 150,
          column: 24
        }
      },
      "63": {
        start: {
          line: 152,
          column: 33
        },
        end: {
          line: 152,
          column: 93
        }
      },
      "64": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 157,
          column: 15
        }
      },
      "65": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 158,
          column: 25
        }
      },
      "66": {
        start: {
          line: 166,
          column: 30
        },
        end: {
          line: 194,
          column: 6
        }
      },
      "67": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 190,
          column: 9
        }
      },
      "68": {
        start: {
          line: 168,
          column: 29
        },
        end: {
          line: 170,
          column: 14
        }
      },
      "69": {
        start: {
          line: 171,
          column: 25
        },
        end: {
          line: 171,
          column: 46
        }
      },
      "70": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 174,
          column: 13
        }
      },
      "71": {
        start: {
          line: 173,
          column: 16
        },
        end: {
          line: 173,
          column: 73
        }
      },
      "72": {
        start: {
          line: 175,
          column: 12
        },
        end: {
          line: 178,
          column: 15
        }
      },
      "73": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 180,
          column: 36
        }
      },
      "74": {
        start: {
          line: 181,
          column: 12
        },
        end: {
          line: 181,
          column: 24
        }
      },
      "75": {
        start: {
          line: 183,
          column: 33
        },
        end: {
          line: 183,
          column: 93
        }
      },
      "76": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 188,
          column: 15
        }
      },
      "77": {
        start: {
          line: 189,
          column: 12
        },
        end: {
          line: 189,
          column: 25
        }
      },
      "78": {
        start: {
          line: 197,
          column: 35
        },
        end: {
          line: 232,
          column: 6
        }
      },
      "79": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 228,
          column: 9
        }
      },
      "80": {
        start: {
          line: 199,
          column: 29
        },
        end: {
          line: 208,
          column: 14
        }
      },
      "81": {
        start: {
          line: 209,
          column: 25
        },
        end: {
          line: 209,
          column: 46
        }
      },
      "82": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 212,
          column: 13
        }
      },
      "83": {
        start: {
          line: 211,
          column: 16
        },
        end: {
          line: 211,
          column: 70
        }
      },
      "84": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 216,
          column: 15
        }
      },
      "85": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 218,
          column: 36
        }
      },
      "86": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 219,
          column: 24
        }
      },
      "87": {
        start: {
          line: 221,
          column: 33
        },
        end: {
          line: 221,
          column: 93
        }
      },
      "88": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 226,
          column: 15
        }
      },
      "89": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 227,
          column: 25
        }
      },
      "90": {
        start: {
          line: 235,
          column: 35
        },
        end: {
          line: 267,
          column: 6
        }
      },
      "91": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 263,
          column: 9
        }
      },
      "92": {
        start: {
          line: 237,
          column: 27
        },
        end: {
          line: 240,
          column: 14
        }
      },
      "93": {
        start: {
          line: 241,
          column: 29
        },
        end: {
          line: 243,
          column: 14
        }
      },
      "94": {
        start: {
          line: 244,
          column: 25
        },
        end: {
          line: 244,
          column: 46
        }
      },
      "95": {
        start: {
          line: 245,
          column: 12
        },
        end: {
          line: 247,
          column: 13
        }
      },
      "96": {
        start: {
          line: 246,
          column: 16
        },
        end: {
          line: 246,
          column: 74
        }
      },
      "97": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 251,
          column: 15
        }
      },
      "98": {
        start: {
          line: 253,
          column: 12
        },
        end: {
          line: 253,
          column: 36
        }
      },
      "99": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 254,
          column: 24
        }
      },
      "100": {
        start: {
          line: 256,
          column: 33
        },
        end: {
          line: 256,
          column: 93
        }
      },
      "101": {
        start: {
          line: 257,
          column: 12
        },
        end: {
          line: 261,
          column: 15
        }
      },
      "102": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 262,
          column: 25
        }
      },
      "103": {
        start: {
          line: 269,
          column: 4
        },
        end: {
          line: 273,
          column: 7
        }
      },
      "104": {
        start: {
          line: 270,
          column: 8
        },
        end: {
          line: 270,
          column: 26
        }
      },
      "105": {
        start: {
          line: 274,
          column: 4
        },
        end: {
          line: 286,
          column: 6
        }
      },
      "106": {
        start: {
          line: 289,
          column: 32
        },
        end: {
          line: 289,
          column: 58
        }
      },
      "107": {
        start: {
          line: 290,
          column: 40
        },
        end: {
          line: 290,
          column: 67
        }
      },
      "108": {
        start: {
          line: 291,
          column: 28
        },
        end: {
          line: 291,
          column: 54
        }
      },
      "109": {
        start: {
          line: 292,
          column: 22
        },
        end: {
          line: 292,
          column: 47
        }
      },
      "110": {
        start: {
          line: 295,
          column: 27
        },
        end: {
          line: 318,
          column: 6
        }
      },
      "111": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 296,
          column: 28
        }
      },
      "112": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 297,
          column: 22
        }
      },
      "113": {
        start: {
          line: 298,
          column: 8
        },
        end: {
          line: 315,
          column: 9
        }
      },
      "114": {
        start: {
          line: 299,
          column: 29
        },
        end: {
          line: 299,
          column: 70
        }
      },
      "115": {
        start: {
          line: 300,
          column: 25
        },
        end: {
          line: 300,
          column: 46
        }
      },
      "116": {
        start: {
          line: 301,
          column: 12
        },
        end: {
          line: 303,
          column: 13
        }
      },
      "117": {
        start: {
          line: 302,
          column: 16
        },
        end: {
          line: 302,
          column: 83
        }
      },
      "118": {
        start: {
          line: 304,
          column: 12
        },
        end: {
          line: 304,
          column: 34
        }
      },
      "119": {
        start: {
          line: 306,
          column: 33
        },
        end: {
          line: 306,
          column: 93
        }
      },
      "120": {
        start: {
          line: 307,
          column: 12
        },
        end: {
          line: 307,
          column: 34
        }
      },
      "121": {
        start: {
          line: 308,
          column: 12
        },
        end: {
          line: 312,
          column: 15
        }
      },
      "122": {
        start: {
          line: 314,
          column: 12
        },
        end: {
          line: 314,
          column: 33
        }
      },
      "123": {
        start: {
          line: 321,
          column: 36
        },
        end: {
          line: 353,
          column: 6
        }
      },
      "124": {
        start: {
          line: 322,
          column: 8
        },
        end: {
          line: 349,
          column: 9
        }
      },
      "125": {
        start: {
          line: 323,
          column: 29
        },
        end: {
          line: 329,
          column: 14
        }
      },
      "126": {
        start: {
          line: 330,
          column: 25
        },
        end: {
          line: 330,
          column: 46
        }
      },
      "127": {
        start: {
          line: 331,
          column: 12
        },
        end: {
          line: 333,
          column: 13
        }
      },
      "128": {
        start: {
          line: 332,
          column: 16
        },
        end: {
          line: 332,
          column: 79
        }
      },
      "129": {
        start: {
          line: 334,
          column: 12
        },
        end: {
          line: 337,
          column: 15
        }
      },
      "130": {
        start: {
          line: 339,
          column: 12
        },
        end: {
          line: 339,
          column: 33
        }
      },
      "131": {
        start: {
          line: 340,
          column: 12
        },
        end: {
          line: 340,
          column: 24
        }
      },
      "132": {
        start: {
          line: 342,
          column: 33
        },
        end: {
          line: 342,
          column: 93
        }
      },
      "133": {
        start: {
          line: 343,
          column: 12
        },
        end: {
          line: 347,
          column: 15
        }
      },
      "134": {
        start: {
          line: 348,
          column: 12
        },
        end: {
          line: 348,
          column: 25
        }
      },
      "135": {
        start: {
          line: 356,
          column: 27
        },
        end: {
          line: 391,
          column: 6
        }
      },
      "136": {
        start: {
          line: 357,
          column: 8
        },
        end: {
          line: 387,
          column: 9
        }
      },
      "137": {
        start: {
          line: 358,
          column: 29
        },
        end: {
          line: 367,
          column: 14
        }
      },
      "138": {
        start: {
          line: 368,
          column: 25
        },
        end: {
          line: 368,
          column: 46
        }
      },
      "139": {
        start: {
          line: 369,
          column: 12
        },
        end: {
          line: 371,
          column: 13
        }
      },
      "140": {
        start: {
          line: 370,
          column: 16
        },
        end: {
          line: 370,
          column: 70
        }
      },
      "141": {
        start: {
          line: 372,
          column: 12
        },
        end: {
          line: 375,
          column: 15
        }
      },
      "142": {
        start: {
          line: 377,
          column: 12
        },
        end: {
          line: 377,
          column: 33
        }
      },
      "143": {
        start: {
          line: 378,
          column: 12
        },
        end: {
          line: 378,
          column: 24
        }
      },
      "144": {
        start: {
          line: 380,
          column: 33
        },
        end: {
          line: 380,
          column: 93
        }
      },
      "145": {
        start: {
          line: 381,
          column: 12
        },
        end: {
          line: 385,
          column: 15
        }
      },
      "146": {
        start: {
          line: 386,
          column: 12
        },
        end: {
          line: 386,
          column: 25
        }
      },
      "147": {
        start: {
          line: 393,
          column: 4
        },
        end: {
          line: 397,
          column: 7
        }
      },
      "148": {
        start: {
          line: 394,
          column: 8
        },
        end: {
          line: 394,
          column: 23
        }
      },
      "149": {
        start: {
          line: 398,
          column: 4
        },
        end: {
          line: 405,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 33
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 24
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "useLembretes",
        decl: {
          start: {
            line: 21,
            column: 9
          },
          end: {
            line: 21,
            column: 21
          }
        },
        loc: {
          start: {
            line: 21,
            column: 36
          },
          end: {
            line: 287,
            column: 1
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 36,
            column: 54
          },
          end: {
            line: 36,
            column: 55
          }
        },
        loc: {
          start: {
            line: 36,
            column: 81
          },
          end: {
            line: 68,
            column: 5
          }
        },
        line: 36
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 45,
            column: 53
          },
          end: {
            line: 45,
            column: 54
          }
        },
        loc: {
          start: {
            line: 45,
            column: 69
          },
          end: {
            line: 49,
            column: 13
          }
        },
        line: 45
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 74,
            column: 53
          },
          end: {
            line: 74,
            column: 54
          }
        },
        loc: {
          start: {
            line: 74,
            column: 65
          },
          end: {
            line: 91,
            column: 5
          }
        },
        line: 74
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 96,
            column: 52
          },
          end: {
            line: 96,
            column: 53
          }
        },
        loc: {
          start: {
            line: 96,
            column: 67
          },
          end: {
            line: 125,
            column: 5
          }
        },
        line: 96
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 131,
            column: 56
          },
          end: {
            line: 131,
            column: 57
          }
        },
        loc: {
          start: {
            line: 131,
            column: 75
          },
          end: {
            line: 160,
            column: 5
          }
        },
        line: 131
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 166,
            column: 54
          },
          end: {
            line: 166,
            column: 55
          }
        },
        loc: {
          start: {
            line: 166,
            column: 66
          },
          end: {
            line: 191,
            column: 5
          }
        },
        line: 166
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 197,
            column: 59
          },
          end: {
            line: 197,
            column: 60
          }
        },
        loc: {
          start: {
            line: 197,
            column: 84
          },
          end: {
            line: 229,
            column: 5
          }
        },
        line: 197
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 235,
            column: 59
          },
          end: {
            line: 235,
            column: 60
          }
        },
        loc: {
          start: {
            line: 235,
            column: 90
          },
          end: {
            line: 264,
            column: 5
          }
        },
        line: 235
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 269,
            column: 26
          },
          end: {
            line: 269,
            column: 27
          }
        },
        loc: {
          start: {
            line: 269,
            column: 30
          },
          end: {
            line: 271,
            column: 5
          }
        },
        line: 269
      },
      "13": {
        name: "useAgendadorLembretes",
        decl: {
          start: {
            line: 288,
            column: 9
          },
          end: {
            line: 288,
            column: 30
          }
        },
        loc: {
          start: {
            line: 288,
            column: 33
          },
          end: {
            line: 406,
            column: 1
          }
        },
        line: 288
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 295,
            column: 51
          },
          end: {
            line: 295,
            column: 52
          }
        },
        loc: {
          start: {
            line: 295,
            column: 61
          },
          end: {
            line: 316,
            column: 5
          }
        },
        line: 295
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 321,
            column: 60
          },
          end: {
            line: 321,
            column: 61
          }
        },
        loc: {
          start: {
            line: 321,
            column: 82
          },
          end: {
            line: 350,
            column: 5
          }
        },
        line: 321
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 356,
            column: 51
          },
          end: {
            line: 356,
            column: 52
          }
        },
        loc: {
          start: {
            line: 356,
            column: 72
          },
          end: {
            line: 388,
            column: 5
          }
        },
        line: 356
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 393,
            column: 26
          },
          end: {
            line: 393,
            column: 27
          }
        },
        loc: {
          start: {
            line: 393,
            column: 30
          },
          end: {
            line: 395,
            column: 5
          }
        },
        line: 393
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 22
          },
          end: {
            line: 21,
            column: 34
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 21,
            column: 32
          },
          end: {
            line: 21,
            column: 34
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 36,
            column: 61
          },
          end: {
            line: 36,
            column: 78
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 36,
            column: 76
          },
          end: {
            line: 36,
            column: 78
          }
        }],
        line: 36
      },
      "2": {
        loc: {
          start: {
            line: 46,
            column: 16
          },
          end: {
            line: 48,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 16
          },
          end: {
            line: 48,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "3": {
        loc: {
          start: {
            line: 46,
            column: 20
          },
          end: {
            line: 46,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 46,
            column: 20
          },
          end: {
            line: 46,
            column: 39
          }
        }, {
          start: {
            line: 46,
            column: 43
          },
          end: {
            line: 46,
            column: 57
          }
        }],
        line: 46
      },
      "4": {
        loc: {
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 54,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 54,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "5": {
        loc: {
          start: {
            line: 53,
            column: 32
          },
          end: {
            line: 53,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 32
          },
          end: {
            line: 53,
            column: 41
          }
        }, {
          start: {
            line: 53,
            column: 45
          },
          end: {
            line: 53,
            column: 71
          }
        }],
        line: 53
      },
      "6": {
        loc: {
          start: {
            line: 58,
            column: 33
          },
          end: {
            line: 58,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 58,
            column: 58
          },
          end: {
            line: 58,
            column: 71
          }
        }, {
          start: {
            line: 58,
            column: 74
          },
          end: {
            line: 58,
            column: 93
          }
        }],
        line: 58
      },
      "7": {
        loc: {
          start: {
            line: 78,
            column: 12
          },
          end: {
            line: 80,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 12
          },
          end: {
            line: 80,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "8": {
        loc: {
          start: {
            line: 79,
            column: 32
          },
          end: {
            line: 79,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 79,
            column: 32
          },
          end: {
            line: 79,
            column: 41
          }
        }, {
          start: {
            line: 79,
            column: 45
          },
          end: {
            line: 79,
            column: 70
          }
        }],
        line: 79
      },
      "9": {
        loc: {
          start: {
            line: 83,
            column: 33
          },
          end: {
            line: 83,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 83,
            column: 58
          },
          end: {
            line: 83,
            column: 71
          }
        }, {
          start: {
            line: 83,
            column: 74
          },
          end: {
            line: 83,
            column: 93
          }
        }],
        line: 83
      },
      "10": {
        loc: {
          start: {
            line: 106,
            column: 12
          },
          end: {
            line: 108,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 12
          },
          end: {
            line: 108,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "11": {
        loc: {
          start: {
            line: 107,
            column: 32
          },
          end: {
            line: 107,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 107,
            column: 32
          },
          end: {
            line: 107,
            column: 41
          }
        }, {
          start: {
            line: 107,
            column: 45
          },
          end: {
            line: 107,
            column: 69
          }
        }],
        line: 107
      },
      "12": {
        loc: {
          start: {
            line: 117,
            column: 33
          },
          end: {
            line: 117,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 117,
            column: 58
          },
          end: {
            line: 117,
            column: 71
          }
        }, {
          start: {
            line: 117,
            column: 74
          },
          end: {
            line: 117,
            column: 93
          }
        }],
        line: 117
      },
      "13": {
        loc: {
          start: {
            line: 141,
            column: 12
          },
          end: {
            line: 143,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 141,
            column: 12
          },
          end: {
            line: 143,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 141
      },
      "14": {
        loc: {
          start: {
            line: 142,
            column: 32
          },
          end: {
            line: 142,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 142,
            column: 32
          },
          end: {
            line: 142,
            column: 41
          }
        }, {
          start: {
            line: 142,
            column: 45
          },
          end: {
            line: 142,
            column: 73
          }
        }],
        line: 142
      },
      "15": {
        loc: {
          start: {
            line: 152,
            column: 33
          },
          end: {
            line: 152,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 152,
            column: 58
          },
          end: {
            line: 152,
            column: 71
          }
        }, {
          start: {
            line: 152,
            column: 74
          },
          end: {
            line: 152,
            column: 93
          }
        }],
        line: 152
      },
      "16": {
        loc: {
          start: {
            line: 172,
            column: 12
          },
          end: {
            line: 174,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 12
          },
          end: {
            line: 174,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "17": {
        loc: {
          start: {
            line: 173,
            column: 32
          },
          end: {
            line: 173,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 173,
            column: 32
          },
          end: {
            line: 173,
            column: 41
          }
        }, {
          start: {
            line: 173,
            column: 45
          },
          end: {
            line: 173,
            column: 71
          }
        }],
        line: 173
      },
      "18": {
        loc: {
          start: {
            line: 183,
            column: 33
          },
          end: {
            line: 183,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 183,
            column: 58
          },
          end: {
            line: 183,
            column: 71
          }
        }, {
          start: {
            line: 183,
            column: 74
          },
          end: {
            line: 183,
            column: 93
          }
        }],
        line: 183
      },
      "19": {
        loc: {
          start: {
            line: 210,
            column: 12
          },
          end: {
            line: 212,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 210,
            column: 12
          },
          end: {
            line: 212,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 210
      },
      "20": {
        loc: {
          start: {
            line: 211,
            column: 32
          },
          end: {
            line: 211,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 211,
            column: 32
          },
          end: {
            line: 211,
            column: 41
          }
        }, {
          start: {
            line: 211,
            column: 45
          },
          end: {
            line: 211,
            column: 68
          }
        }],
        line: 211
      },
      "21": {
        loc: {
          start: {
            line: 215,
            column: 29
          },
          end: {
            line: 215,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 215,
            column: 29
          },
          end: {
            line: 215,
            column: 42
          }
        }, {
          start: {
            line: 215,
            column: 46
          },
          end: {
            line: 215,
            column: 74
          }
        }],
        line: 215
      },
      "22": {
        loc: {
          start: {
            line: 221,
            column: 33
          },
          end: {
            line: 221,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 221,
            column: 58
          },
          end: {
            line: 221,
            column: 71
          }
        }, {
          start: {
            line: 221,
            column: 74
          },
          end: {
            line: 221,
            column: 93
          }
        }],
        line: 221
      },
      "23": {
        loc: {
          start: {
            line: 235,
            column: 72
          },
          end: {
            line: 235,
            column: 87
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 235,
            column: 85
          },
          end: {
            line: 235,
            column: 87
          }
        }],
        line: 235
      },
      "24": {
        loc: {
          start: {
            line: 245,
            column: 12
          },
          end: {
            line: 247,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 245,
            column: 12
          },
          end: {
            line: 247,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 245
      },
      "25": {
        loc: {
          start: {
            line: 246,
            column: 32
          },
          end: {
            line: 246,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 246,
            column: 32
          },
          end: {
            line: 246,
            column: 41
          }
        }, {
          start: {
            line: 246,
            column: 45
          },
          end: {
            line: 246,
            column: 72
          }
        }],
        line: 246
      },
      "26": {
        loc: {
          start: {
            line: 250,
            column: 29
          },
          end: {
            line: 250,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 250,
            column: 29
          },
          end: {
            line: 250,
            column: 42
          }
        }, {
          start: {
            line: 250,
            column: 46
          },
          end: {
            line: 250,
            column: 79
          }
        }],
        line: 250
      },
      "27": {
        loc: {
          start: {
            line: 256,
            column: 33
          },
          end: {
            line: 256,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 256,
            column: 58
          },
          end: {
            line: 256,
            column: 71
          }
        }, {
          start: {
            line: 256,
            column: 74
          },
          end: {
            line: 256,
            column: 93
          }
        }],
        line: 256
      },
      "28": {
        loc: {
          start: {
            line: 301,
            column: 12
          },
          end: {
            line: 303,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 301,
            column: 12
          },
          end: {
            line: 303,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 301
      },
      "29": {
        loc: {
          start: {
            line: 302,
            column: 32
          },
          end: {
            line: 302,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 302,
            column: 32
          },
          end: {
            line: 302,
            column: 41
          }
        }, {
          start: {
            line: 302,
            column: 45
          },
          end: {
            line: 302,
            column: 81
          }
        }],
        line: 302
      },
      "30": {
        loc: {
          start: {
            line: 306,
            column: 33
          },
          end: {
            line: 306,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 306,
            column: 58
          },
          end: {
            line: 306,
            column: 71
          }
        }, {
          start: {
            line: 306,
            column: 74
          },
          end: {
            line: 306,
            column: 93
          }
        }],
        line: 306
      },
      "31": {
        loc: {
          start: {
            line: 331,
            column: 12
          },
          end: {
            line: 333,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 331,
            column: 12
          },
          end: {
            line: 333,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 331
      },
      "32": {
        loc: {
          start: {
            line: 332,
            column: 32
          },
          end: {
            line: 332,
            column: 77
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 332,
            column: 32
          },
          end: {
            line: 332,
            column: 41
          }
        }, {
          start: {
            line: 332,
            column: 45
          },
          end: {
            line: 332,
            column: 77
          }
        }],
        line: 332
      },
      "33": {
        loc: {
          start: {
            line: 342,
            column: 33
          },
          end: {
            line: 342,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 342,
            column: 58
          },
          end: {
            line: 342,
            column: 71
          }
        }, {
          start: {
            line: 342,
            column: 74
          },
          end: {
            line: 342,
            column: 93
          }
        }],
        line: 342
      },
      "34": {
        loc: {
          start: {
            line: 369,
            column: 12
          },
          end: {
            line: 371,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 369,
            column: 12
          },
          end: {
            line: 371,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 369
      },
      "35": {
        loc: {
          start: {
            line: 370,
            column: 32
          },
          end: {
            line: 370,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 370,
            column: 32
          },
          end: {
            line: 370,
            column: 41
          }
        }, {
          start: {
            line: 370,
            column: 45
          },
          end: {
            line: 370,
            column: 68
          }
        }],
        line: 370
      },
      "36": {
        loc: {
          start: {
            line: 374,
            column: 29
          },
          end: {
            line: 374,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 374,
            column: 29
          },
          end: {
            line: 374,
            column: 42
          }
        }, {
          start: {
            line: 374,
            column: 46
          },
          end: {
            line: 374,
            column: 74
          }
        }],
        line: 374
      },
      "37": {
        loc: {
          start: {
            line: 380,
            column: 33
          },
          end: {
            line: 380,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 380,
            column: 58
          },
          end: {
            line: 380,
            column: 71
          }
        }, {
          start: {
            line: 380,
            column: 74
          },
          end: {
            line: 380,
            column: 93
          }
        }],
        line: 380
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\hooks\\use-lembretes.ts"],
      sourcesContent: ["import { useState, useEffect, useCallback } from 'react';\nimport { useToast } from '@/hooks/use-toast';\n\ninterface Lembrete {\n  id: string;\n  avaliacaoId: string;\n  usuarioId: string;\n  tipo: 'lembrete' | 'vencimento';\n  dataEnvio: string;\n  enviado: boolean;\n  tentativas: number;\n  ultimaTentativa?: string;\n  dataEnvioReal?: string;\n  erro?: string;\n  observacoes?: string;\n  criadoEm: string;\n  atualizadoEm?: string;\n  usuario: {\n    id: string;\n    nome: string;\n    email: string;\n    cargo?: string;\n  };\n  avaliacao: {\n    id: string;\n    prazo: string;\n    status: string;\n    avaliado: {\n      id: string;\n      nome: string;\n      cargo?: string;\n      email: string;\n    };\n    avaliador: {\n      id: string;\n      nome: string;\n      email: string;\n    };\n    periodo: {\n      id: string;\n      nome: string;\n      dataInicio: string;\n      dataFim: string;\n    };\n  };\n  criadoPorUsuario?: {\n    id: string;\n    nome: string;\n  };\n}\n\ninterface ConfiguracaoAgendador {\n  diasAntecedencia: number[];\n  horarioEnvio: string;\n  ativo: boolean;\n  incluirFimDeSemana: boolean;\n  incluirFeriados: boolean;\n}\n\ninterface StatusAgendador {\n  ativo: boolean;\n  configuracao: ConfiguracaoAgendador;\n  estatisticas: {\n    totalAgendados: number;\n    totalEnviados: number;\n    totalPendentes: number;\n    totalFalhas: number;\n    proximosEnvios: Lembrete[];\n    ultimosEnviados: Lembrete[];\n  };\n}\n\ninterface FiltrosLembretes {\n  usuarioId?: string;\n  avaliacaoId?: string;\n  tipo?: 'lembrete' | 'vencimento';\n  enviado?: boolean;\n  dataInicio?: string;\n  dataFim?: string;\n  limite?: number;\n  pagina?: number;\n}\n\ninterface PaginacaoLembretes {\n  paginaAtual: number;\n  totalPaginas: number;\n  totalItens: number;\n  itensPorPagina: number;\n  temProximaPagina: boolean;\n  temPaginaAnterior: boolean;\n}\n\ninterface ResultadoLembretes {\n  lembretes: Lembrete[];\n  paginacao: PaginacaoLembretes;\n  carregando: boolean;\n  erro: string | null;\n}\n\nexport function useLembretes(filtros: FiltrosLembretes = {}) {\n  const [lembretes, setLembretes] = useState<Lembrete[]>([]);\n  const [paginacao, setPaginacao] = useState<PaginacaoLembretes>({\n    paginaAtual: 1,\n    totalPaginas: 1,\n    totalItens: 0,\n    itensPorPagina: 50,\n    temProximaPagina: false,\n    temPaginaAnterior: false,\n  });\n  const [carregando, setCarregando] = useState(false);\n  const [erro, setErro] = useState<string | null>(null);\n  const { toast } = useToast();\n\n  /**\n   * Busca lembretes com filtros\n   */\n  const buscarLembretes = useCallback(async (novosFiltros: FiltrosLembretes = {}) => {\n    setCarregando(true);\n    setErro(null);\n\n    try {\n      const filtrosCompletos = { ...filtros, ...novosFiltros };\n      const params = new URLSearchParams();\n\n      Object.entries(filtrosCompletos).forEach(([key, value]) => {\n        if (value !== undefined && value !== null) {\n          params.append(key, value.toString());\n        }\n      });\n\n      const response = await fetch(`/api/lembretes?${params.toString()}`);\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.erro || 'Erro ao buscar lembretes');\n      }\n\n      setLembretes(data.dados);\n      setPaginacao(data.paginacao);\n\n    } catch (error) {\n      const mensagemErro = error instanceof Error ? error.message : 'Erro desconhecido';\n      setErro(mensagemErro);\n      toast({\n        title: 'Erro ao buscar lembretes',\n        description: mensagemErro,\n        variant: 'destructive',\n      });\n    } finally {\n      setCarregando(false);\n    }\n  }, [filtros, toast]);\n\n  /**\n   * Busca um lembrete espec\xEDfico por ID\n   */\n  const buscarLembrete = useCallback(async (id: string): Promise<Lembrete | null> => {\n    try {\n      const response = await fetch(`/api/lembretes/${id}`);\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.erro || 'Erro ao buscar lembrete');\n      }\n\n      return data.dados;\n\n    } catch (error) {\n      const mensagemErro = error instanceof Error ? error.message : 'Erro desconhecido';\n      toast({\n        title: 'Erro ao buscar lembrete',\n        description: mensagemErro,\n        variant: 'destructive',\n      });\n      return null;\n    }\n  }, [toast]);\n\n  /**\n   * Cria um novo lembrete\n   */\n  const criarLembrete = useCallback(async (dados: {\n    avaliacaoId: string;\n    usuarioId: string;\n    tipo: 'lembrete' | 'vencimento';\n    dataEnvio: string;\n    observacoes?: string;\n  }): Promise<boolean> => {\n    try {\n      const response = await fetch('/api/lembretes', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(dados),\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.erro || 'Erro ao criar lembrete');\n      }\n\n      toast({\n        title: 'Lembrete criado',\n        description: 'Lembrete criado com sucesso',\n      });\n\n      // Atualizar lista de lembretes\n      await buscarLembretes();\n      return true;\n\n    } catch (error) {\n      const mensagemErro = error instanceof Error ? error.message : 'Erro desconhecido';\n      toast({\n        title: 'Erro ao criar lembrete',\n        description: mensagemErro,\n        variant: 'destructive',\n      });\n      return false;\n    }\n  }, [buscarLembretes, toast]);\n\n  /**\n   * Atualiza um lembrete\n   */\n  const atualizarLembrete = useCallback(async (id: string, dados: {\n    dataEnvio?: string;\n    observacoes?: string;\n    enviado?: boolean;\n    erro?: string;\n  }): Promise<boolean> => {\n    try {\n      const response = await fetch(`/api/lembretes/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(dados),\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.erro || 'Erro ao atualizar lembrete');\n      }\n\n      toast({\n        title: 'Lembrete atualizado',\n        description: 'Lembrete atualizado com sucesso',\n      });\n\n      // Atualizar lista de lembretes\n      await buscarLembretes();\n      return true;\n\n    } catch (error) {\n      const mensagemErro = error instanceof Error ? error.message : 'Erro desconhecido';\n      toast({\n        title: 'Erro ao atualizar lembrete',\n        description: mensagemErro,\n        variant: 'destructive',\n      });\n      return false;\n    }\n  }, [buscarLembretes, toast]);\n\n  /**\n   * Remove um lembrete\n   */\n  const removerLembrete = useCallback(async (id: string): Promise<boolean> => {\n    try {\n      const response = await fetch(`/api/lembretes/${id}`, {\n        method: 'DELETE',\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.erro || 'Erro ao remover lembrete');\n      }\n\n      toast({\n        title: 'Lembrete removido',\n        description: 'Lembrete removido com sucesso',\n      });\n\n      // Atualizar lista de lembretes\n      await buscarLembretes();\n      return true;\n\n    } catch (error) {\n      const mensagemErro = error instanceof Error ? error.message : 'Erro desconhecido';\n      toast({\n        title: 'Erro ao remover lembrete',\n        description: mensagemErro,\n        variant: 'destructive',\n      });\n      return false;\n    }\n  }, [buscarLembretes, toast]);\n\n  /**\n   * Executa a\xE7\xE3o em um lembrete\n   */\n  const executarAcaoLembrete = useCallback(async (id: string, acao: string, dados?: any): Promise<boolean> => {\n    try {\n      const response = await fetch(`/api/lembretes/${id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ acao, ...dados }),\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.erro || 'Erro ao executar a\xE7\xE3o');\n      }\n\n      toast({\n        title: 'A\xE7\xE3o executada',\n        description: data.mensagem || 'A\xE7\xE3o executada com sucesso',\n      });\n\n      // Atualizar lista de lembretes\n      await buscarLembretes();\n      return true;\n\n    } catch (error) {\n      const mensagemErro = error instanceof Error ? error.message : 'Erro desconhecido';\n      toast({\n        title: 'Erro ao executar a\xE7\xE3o',\n        description: mensagemErro,\n        variant: 'destructive',\n      });\n      return false;\n    }\n  }, [buscarLembretes, toast]);\n\n  /**\n   * Remove lembretes em lote\n   */\n  const removerLembretesLote = useCallback(async (acao: string, parametros: any = {}): Promise<boolean> => {\n    try {\n      const params = new URLSearchParams({ acao, ...parametros });\n      const response = await fetch(`/api/lembretes?${params.toString()}`, {\n        method: 'DELETE',\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.erro || 'Erro ao remover lembretes');\n      }\n\n      toast({\n        title: 'Lembretes removidos',\n        description: data.mensagem || 'Lembretes removidos com sucesso',\n      });\n\n      // Atualizar lista de lembretes\n      await buscarLembretes();\n      return true;\n\n    } catch (error) {\n      const mensagemErro = error instanceof Error ? error.message : 'Erro desconhecido';\n      toast({\n        title: 'Erro ao remover lembretes',\n        description: mensagemErro,\n        variant: 'destructive',\n      });\n      return false;\n    }\n  }, [buscarLembretes, toast]);\n\n  // Carregar lembretes na inicializa\xE7\xE3o\n  useEffect(() => {\n    buscarLembretes();\n  }, [buscarLembretes]);\n\n  return {\n    lembretes,\n    paginacao,\n    carregando,\n    erro,\n    buscarLembretes,\n    buscarLembrete,\n    criarLembrete,\n    atualizarLembrete,\n    removerLembrete,\n    executarAcaoLembrete,\n    removerLembretesLote,\n  };\n}\n\n/**\n * Hook para gerenciar o agendador de lembretes\n */\nexport function useAgendadorLembretes() {\n  const [status, setStatus] = useState<StatusAgendador | null>(null);\n  const [carregando, setCarregando] = useState(false);\n  const [erro, setErro] = useState<string | null>(null);\n  const { toast } = useToast();\n\n  /**\n   * Busca o status do agendador\n   */\n  const buscarStatus = useCallback(async () => {\n    setCarregando(true);\n    setErro(null);\n\n    try {\n      const response = await fetch('/api/lembretes/agendamento');\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.erro || 'Erro ao buscar status do agendador');\n      }\n\n      setStatus(data.dados);\n\n    } catch (error) {\n      const mensagemErro = error instanceof Error ? error.message : 'Erro desconhecido';\n      setErro(mensagemErro);\n      toast({\n        title: 'Erro ao buscar status',\n        description: mensagemErro,\n        variant: 'destructive',\n      });\n    } finally {\n      setCarregando(false);\n    }\n  }, [toast]);\n\n  /**\n   * Atualiza a configura\xE7\xE3o do agendador\n   */\n  const atualizarConfiguracao = useCallback(async (configuracao: ConfiguracaoAgendador): Promise<boolean> => {\n    try {\n      const response = await fetch('/api/lembretes/agendamento', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(configuracao),\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.erro || 'Erro ao atualizar configura\xE7\xE3o');\n      }\n\n      toast({\n        title: 'Configura\xE7\xE3o atualizada',\n        description: 'Configura\xE7\xE3o do agendador atualizada com sucesso',\n      });\n\n      // Atualizar status\n      await buscarStatus();\n      return true;\n\n    } catch (error) {\n      const mensagemErro = error instanceof Error ? error.message : 'Erro desconhecido';\n      toast({\n        title: 'Erro ao atualizar configura\xE7\xE3o',\n        description: mensagemErro,\n        variant: 'destructive',\n      });\n      return false;\n    }\n  }, [buscarStatus, toast]);\n\n  /**\n   * Executa a\xE7\xE3o no agendador\n   */\n  const executarAcao = useCallback(async (acao: string, dados?: any): Promise<boolean> => {\n    try {\n      const response = await fetch('/api/lembretes/agendamento', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ acao, ...dados }),\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.erro || 'Erro ao executar a\xE7\xE3o');\n      }\n\n      toast({\n        title: 'A\xE7\xE3o executada',\n        description: data.mensagem || 'A\xE7\xE3o executada com sucesso',\n      });\n\n      // Atualizar status\n      await buscarStatus();\n      return true;\n\n    } catch (error) {\n      const mensagemErro = error instanceof Error ? error.message : 'Erro desconhecido';\n      toast({\n        title: 'Erro ao executar a\xE7\xE3o',\n        description: mensagemErro,\n        variant: 'destructive',\n      });\n      return false;\n    }\n  }, [buscarStatus, toast]);\n\n  // Carregar status na inicializa\xE7\xE3o\n  useEffect(() => {\n    buscarStatus();\n  }, [buscarStatus]);\n\n  return {\n    status,\n    carregando,\n    erro,\n    buscarStatus,\n    atualizarConfiguracao,\n    executarAcao,\n  };\n}\n\nexport type {\n  Lembrete,\n  ConfiguracaoAgendador,\n  StatusAgendador,\n  FiltrosLembretes,\n  PaginacaoLembretes,\n  ResultadoLembretes,\n};"],
      names: ["useAgendadorLembretes", "useLembretes", "filtros", "lembretes", "setLembretes", "useState", "paginacao", "setPaginacao", "paginaAtual", "totalPaginas", "totalItens", "itensPorPagina", "temProximaPagina", "temPaginaAnterior", "carregando", "setCarregando", "erro", "setErro", "toast", "useToast", "buscarLembretes", "useCallback", "novosFiltros", "filtrosCompletos", "params", "URLSearchParams", "Object", "entries", "forEach", "key", "value", "undefined", "append", "toString", "response", "fetch", "data", "json", "ok", "Error", "dados", "error", "mensagemErro", "message", "title", "description", "variant", "buscarLembrete", "id", "criarLembrete", "method", "headers", "body", "JSON", "stringify", "atualizarLembrete", "removerLembrete", "executarAcaoLembrete", "acao", "mensagem", "removerLembretesLote", "parametros", "useEffect", "status", "setStatus", "buscarStatus", "atualizarConfiguracao", "configuracao", "executarAcao"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0347c1d2950ce9d44d594cbaa24ab9b8248236db"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_12g70wwm6d = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_12g70wwm6d();
cov_12g70wwm6d().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_12g70wwm6d().f[0]++;
  cov_12g70wwm6d().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_12g70wwm6d().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_12g70wwm6d().s[3]++;
_export(exports, {
  get useAgendadorLembretes() {
    /* istanbul ignore next */
    cov_12g70wwm6d().f[1]++;
    cov_12g70wwm6d().s[4]++;
    return useAgendadorLembretes;
  },
  get useLembretes() {
    /* istanbul ignore next */
    cov_12g70wwm6d().f[2]++;
    cov_12g70wwm6d().s[5]++;
    return useLembretes;
  }
});
const _react =
/* istanbul ignore next */
(cov_12g70wwm6d().s[6]++, require("react"));
const _usetoast =
/* istanbul ignore next */
(cov_12g70wwm6d().s[7]++, require("./use-toast"));
function useLembretes(filtros =
/* istanbul ignore next */
(cov_12g70wwm6d().b[0][0]++, {})) {
  /* istanbul ignore next */
  cov_12g70wwm6d().f[3]++;
  const [lembretes, setLembretes] =
  /* istanbul ignore next */
  (cov_12g70wwm6d().s[8]++, (0, _react.useState)([]));
  const [paginacao, setPaginacao] =
  /* istanbul ignore next */
  (cov_12g70wwm6d().s[9]++, (0, _react.useState)({
    paginaAtual: 1,
    totalPaginas: 1,
    totalItens: 0,
    itensPorPagina: 50,
    temProximaPagina: false,
    temPaginaAnterior: false
  }));
  const [carregando, setCarregando] =
  /* istanbul ignore next */
  (cov_12g70wwm6d().s[10]++, (0, _react.useState)(false));
  const [erro, setErro] =
  /* istanbul ignore next */
  (cov_12g70wwm6d().s[11]++, (0, _react.useState)(null));
  const {
    toast
  } =
  /* istanbul ignore next */
  (cov_12g70wwm6d().s[12]++, (0, _usetoast.useToast)());
  /**
  * Busca lembretes com filtros
  */
  const buscarLembretes =
  /* istanbul ignore next */
  (cov_12g70wwm6d().s[13]++, (0, _react.useCallback)(async (novosFiltros =
  /* istanbul ignore next */
  (cov_12g70wwm6d().b[1][0]++, {})) => {
    /* istanbul ignore next */
    cov_12g70wwm6d().f[4]++;
    cov_12g70wwm6d().s[14]++;
    setCarregando(true);
    /* istanbul ignore next */
    cov_12g70wwm6d().s[15]++;
    setErro(null);
    /* istanbul ignore next */
    cov_12g70wwm6d().s[16]++;
    try {
      const filtrosCompletos =
      /* istanbul ignore next */
      (cov_12g70wwm6d().s[17]++, {
        ...filtros,
        ...novosFiltros
      });
      const params =
      /* istanbul ignore next */
      (cov_12g70wwm6d().s[18]++, new URLSearchParams());
      /* istanbul ignore next */
      cov_12g70wwm6d().s[19]++;
      Object.entries(filtrosCompletos).forEach(([key, value]) => {
        /* istanbul ignore next */
        cov_12g70wwm6d().f[5]++;
        cov_12g70wwm6d().s[20]++;
        if (
        /* istanbul ignore next */
        (cov_12g70wwm6d().b[3][0]++, value !== undefined) &&
        /* istanbul ignore next */
        (cov_12g70wwm6d().b[3][1]++, value !== null)) {
          /* istanbul ignore next */
          cov_12g70wwm6d().b[2][0]++;
          cov_12g70wwm6d().s[21]++;
          params.append(key, value.toString());
        } else
        /* istanbul ignore next */
        {
          cov_12g70wwm6d().b[2][1]++;
        }
      });
      const response =
      /* istanbul ignore next */
      (cov_12g70wwm6d().s[22]++, await fetch(`/api/lembretes?${params.toString()}`));
      const data =
      /* istanbul ignore next */
      (cov_12g70wwm6d().s[23]++, await response.json());
      /* istanbul ignore next */
      cov_12g70wwm6d().s[24]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_12g70wwm6d().b[4][0]++;
        cov_12g70wwm6d().s[25]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_12g70wwm6d().b[5][0]++, data.erro) ||
        /* istanbul ignore next */
        (cov_12g70wwm6d().b[5][1]++, 'Erro ao buscar lembretes'));
      } else
      /* istanbul ignore next */
      {
        cov_12g70wwm6d().b[4][1]++;
      }
      cov_12g70wwm6d().s[26]++;
      setLembretes(data.dados);
      /* istanbul ignore next */
      cov_12g70wwm6d().s[27]++;
      setPaginacao(data.paginacao);
    } catch (error) {
      const mensagemErro =
      /* istanbul ignore next */
      (cov_12g70wwm6d().s[28]++, error instanceof Error ?
      /* istanbul ignore next */
      (cov_12g70wwm6d().b[6][0]++, error.message) :
      /* istanbul ignore next */
      (cov_12g70wwm6d().b[6][1]++, 'Erro desconhecido'));
      /* istanbul ignore next */
      cov_12g70wwm6d().s[29]++;
      setErro(mensagemErro);
      /* istanbul ignore next */
      cov_12g70wwm6d().s[30]++;
      toast({
        title: 'Erro ao buscar lembretes',
        description: mensagemErro,
        variant: 'destructive'
      });
    } finally {
      /* istanbul ignore next */
      cov_12g70wwm6d().s[31]++;
      setCarregando(false);
    }
  }, [filtros, toast]));
  /**
  * Busca um lembrete específico por ID
  */
  const buscarLembrete =
  /* istanbul ignore next */
  (cov_12g70wwm6d().s[32]++, (0, _react.useCallback)(async id => {
    /* istanbul ignore next */
    cov_12g70wwm6d().f[6]++;
    cov_12g70wwm6d().s[33]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_12g70wwm6d().s[34]++, await fetch(`/api/lembretes/${id}`));
      const data =
      /* istanbul ignore next */
      (cov_12g70wwm6d().s[35]++, await response.json());
      /* istanbul ignore next */
      cov_12g70wwm6d().s[36]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_12g70wwm6d().b[7][0]++;
        cov_12g70wwm6d().s[37]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_12g70wwm6d().b[8][0]++, data.erro) ||
        /* istanbul ignore next */
        (cov_12g70wwm6d().b[8][1]++, 'Erro ao buscar lembrete'));
      } else
      /* istanbul ignore next */
      {
        cov_12g70wwm6d().b[7][1]++;
      }
      cov_12g70wwm6d().s[38]++;
      return data.dados;
    } catch (error) {
      const mensagemErro =
      /* istanbul ignore next */
      (cov_12g70wwm6d().s[39]++, error instanceof Error ?
      /* istanbul ignore next */
      (cov_12g70wwm6d().b[9][0]++, error.message) :
      /* istanbul ignore next */
      (cov_12g70wwm6d().b[9][1]++, 'Erro desconhecido'));
      /* istanbul ignore next */
      cov_12g70wwm6d().s[40]++;
      toast({
        title: 'Erro ao buscar lembrete',
        description: mensagemErro,
        variant: 'destructive'
      });
      /* istanbul ignore next */
      cov_12g70wwm6d().s[41]++;
      return null;
    }
  }, [toast]));
  /**
  * Cria um novo lembrete
  */
  const criarLembrete =
  /* istanbul ignore next */
  (cov_12g70wwm6d().s[42]++, (0, _react.useCallback)(async dados => {
    /* istanbul ignore next */
    cov_12g70wwm6d().f[7]++;
    cov_12g70wwm6d().s[43]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_12g70wwm6d().s[44]++, await fetch('/api/lembretes', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(dados)
      }));
      const data =
      /* istanbul ignore next */
      (cov_12g70wwm6d().s[45]++, await response.json());
      /* istanbul ignore next */
      cov_12g70wwm6d().s[46]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_12g70wwm6d().b[10][0]++;
        cov_12g70wwm6d().s[47]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_12g70wwm6d().b[11][0]++, data.erro) ||
        /* istanbul ignore next */
        (cov_12g70wwm6d().b[11][1]++, 'Erro ao criar lembrete'));
      } else
      /* istanbul ignore next */
      {
        cov_12g70wwm6d().b[10][1]++;
      }
      cov_12g70wwm6d().s[48]++;
      toast({
        title: 'Lembrete criado',
        description: 'Lembrete criado com sucesso'
      });
      // Atualizar lista de lembretes
      /* istanbul ignore next */
      cov_12g70wwm6d().s[49]++;
      await buscarLembretes();
      /* istanbul ignore next */
      cov_12g70wwm6d().s[50]++;
      return true;
    } catch (error) {
      const mensagemErro =
      /* istanbul ignore next */
      (cov_12g70wwm6d().s[51]++, error instanceof Error ?
      /* istanbul ignore next */
      (cov_12g70wwm6d().b[12][0]++, error.message) :
      /* istanbul ignore next */
      (cov_12g70wwm6d().b[12][1]++, 'Erro desconhecido'));
      /* istanbul ignore next */
      cov_12g70wwm6d().s[52]++;
      toast({
        title: 'Erro ao criar lembrete',
        description: mensagemErro,
        variant: 'destructive'
      });
      /* istanbul ignore next */
      cov_12g70wwm6d().s[53]++;
      return false;
    }
  }, [buscarLembretes, toast]));
  /**
  * Atualiza um lembrete
  */
  const atualizarLembrete =
  /* istanbul ignore next */
  (cov_12g70wwm6d().s[54]++, (0, _react.useCallback)(async (id, dados) => {
    /* istanbul ignore next */
    cov_12g70wwm6d().f[8]++;
    cov_12g70wwm6d().s[55]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_12g70wwm6d().s[56]++, await fetch(`/api/lembretes/${id}`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(dados)
      }));
      const data =
      /* istanbul ignore next */
      (cov_12g70wwm6d().s[57]++, await response.json());
      /* istanbul ignore next */
      cov_12g70wwm6d().s[58]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_12g70wwm6d().b[13][0]++;
        cov_12g70wwm6d().s[59]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_12g70wwm6d().b[14][0]++, data.erro) ||
        /* istanbul ignore next */
        (cov_12g70wwm6d().b[14][1]++, 'Erro ao atualizar lembrete'));
      } else
      /* istanbul ignore next */
      {
        cov_12g70wwm6d().b[13][1]++;
      }
      cov_12g70wwm6d().s[60]++;
      toast({
        title: 'Lembrete atualizado',
        description: 'Lembrete atualizado com sucesso'
      });
      // Atualizar lista de lembretes
      /* istanbul ignore next */
      cov_12g70wwm6d().s[61]++;
      await buscarLembretes();
      /* istanbul ignore next */
      cov_12g70wwm6d().s[62]++;
      return true;
    } catch (error) {
      const mensagemErro =
      /* istanbul ignore next */
      (cov_12g70wwm6d().s[63]++, error instanceof Error ?
      /* istanbul ignore next */
      (cov_12g70wwm6d().b[15][0]++, error.message) :
      /* istanbul ignore next */
      (cov_12g70wwm6d().b[15][1]++, 'Erro desconhecido'));
      /* istanbul ignore next */
      cov_12g70wwm6d().s[64]++;
      toast({
        title: 'Erro ao atualizar lembrete',
        description: mensagemErro,
        variant: 'destructive'
      });
      /* istanbul ignore next */
      cov_12g70wwm6d().s[65]++;
      return false;
    }
  }, [buscarLembretes, toast]));
  /**
  * Remove um lembrete
  */
  const removerLembrete =
  /* istanbul ignore next */
  (cov_12g70wwm6d().s[66]++, (0, _react.useCallback)(async id => {
    /* istanbul ignore next */
    cov_12g70wwm6d().f[9]++;
    cov_12g70wwm6d().s[67]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_12g70wwm6d().s[68]++, await fetch(`/api/lembretes/${id}`, {
        method: 'DELETE'
      }));
      const data =
      /* istanbul ignore next */
      (cov_12g70wwm6d().s[69]++, await response.json());
      /* istanbul ignore next */
      cov_12g70wwm6d().s[70]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_12g70wwm6d().b[16][0]++;
        cov_12g70wwm6d().s[71]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_12g70wwm6d().b[17][0]++, data.erro) ||
        /* istanbul ignore next */
        (cov_12g70wwm6d().b[17][1]++, 'Erro ao remover lembrete'));
      } else
      /* istanbul ignore next */
      {
        cov_12g70wwm6d().b[16][1]++;
      }
      cov_12g70wwm6d().s[72]++;
      toast({
        title: 'Lembrete removido',
        description: 'Lembrete removido com sucesso'
      });
      // Atualizar lista de lembretes
      /* istanbul ignore next */
      cov_12g70wwm6d().s[73]++;
      await buscarLembretes();
      /* istanbul ignore next */
      cov_12g70wwm6d().s[74]++;
      return true;
    } catch (error) {
      const mensagemErro =
      /* istanbul ignore next */
      (cov_12g70wwm6d().s[75]++, error instanceof Error ?
      /* istanbul ignore next */
      (cov_12g70wwm6d().b[18][0]++, error.message) :
      /* istanbul ignore next */
      (cov_12g70wwm6d().b[18][1]++, 'Erro desconhecido'));
      /* istanbul ignore next */
      cov_12g70wwm6d().s[76]++;
      toast({
        title: 'Erro ao remover lembrete',
        description: mensagemErro,
        variant: 'destructive'
      });
      /* istanbul ignore next */
      cov_12g70wwm6d().s[77]++;
      return false;
    }
  }, [buscarLembretes, toast]));
  /**
  * Executa ação em um lembrete
  */
  const executarAcaoLembrete =
  /* istanbul ignore next */
  (cov_12g70wwm6d().s[78]++, (0, _react.useCallback)(async (id, acao, dados) => {
    /* istanbul ignore next */
    cov_12g70wwm6d().f[10]++;
    cov_12g70wwm6d().s[79]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_12g70wwm6d().s[80]++, await fetch(`/api/lembretes/${id}`, {
        method: 'PATCH',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          acao,
          ...dados
        })
      }));
      const data =
      /* istanbul ignore next */
      (cov_12g70wwm6d().s[81]++, await response.json());
      /* istanbul ignore next */
      cov_12g70wwm6d().s[82]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_12g70wwm6d().b[19][0]++;
        cov_12g70wwm6d().s[83]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_12g70wwm6d().b[20][0]++, data.erro) ||
        /* istanbul ignore next */
        (cov_12g70wwm6d().b[20][1]++, 'Erro ao executar ação'));
      } else
      /* istanbul ignore next */
      {
        cov_12g70wwm6d().b[19][1]++;
      }
      cov_12g70wwm6d().s[84]++;
      toast({
        title: 'Ação executada',
        description:
        /* istanbul ignore next */
        (cov_12g70wwm6d().b[21][0]++, data.mensagem) ||
        /* istanbul ignore next */
        (cov_12g70wwm6d().b[21][1]++, 'Ação executada com sucesso')
      });
      // Atualizar lista de lembretes
      /* istanbul ignore next */
      cov_12g70wwm6d().s[85]++;
      await buscarLembretes();
      /* istanbul ignore next */
      cov_12g70wwm6d().s[86]++;
      return true;
    } catch (error) {
      const mensagemErro =
      /* istanbul ignore next */
      (cov_12g70wwm6d().s[87]++, error instanceof Error ?
      /* istanbul ignore next */
      (cov_12g70wwm6d().b[22][0]++, error.message) :
      /* istanbul ignore next */
      (cov_12g70wwm6d().b[22][1]++, 'Erro desconhecido'));
      /* istanbul ignore next */
      cov_12g70wwm6d().s[88]++;
      toast({
        title: 'Erro ao executar ação',
        description: mensagemErro,
        variant: 'destructive'
      });
      /* istanbul ignore next */
      cov_12g70wwm6d().s[89]++;
      return false;
    }
  }, [buscarLembretes, toast]));
  /**
  * Remove lembretes em lote
  */
  const removerLembretesLote =
  /* istanbul ignore next */
  (cov_12g70wwm6d().s[90]++, (0, _react.useCallback)(async (acao, parametros =
  /* istanbul ignore next */
  (cov_12g70wwm6d().b[23][0]++, {})) => {
    /* istanbul ignore next */
    cov_12g70wwm6d().f[11]++;
    cov_12g70wwm6d().s[91]++;
    try {
      const params =
      /* istanbul ignore next */
      (cov_12g70wwm6d().s[92]++, new URLSearchParams({
        acao,
        ...parametros
      }));
      const response =
      /* istanbul ignore next */
      (cov_12g70wwm6d().s[93]++, await fetch(`/api/lembretes?${params.toString()}`, {
        method: 'DELETE'
      }));
      const data =
      /* istanbul ignore next */
      (cov_12g70wwm6d().s[94]++, await response.json());
      /* istanbul ignore next */
      cov_12g70wwm6d().s[95]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_12g70wwm6d().b[24][0]++;
        cov_12g70wwm6d().s[96]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_12g70wwm6d().b[25][0]++, data.erro) ||
        /* istanbul ignore next */
        (cov_12g70wwm6d().b[25][1]++, 'Erro ao remover lembretes'));
      } else
      /* istanbul ignore next */
      {
        cov_12g70wwm6d().b[24][1]++;
      }
      cov_12g70wwm6d().s[97]++;
      toast({
        title: 'Lembretes removidos',
        description:
        /* istanbul ignore next */
        (cov_12g70wwm6d().b[26][0]++, data.mensagem) ||
        /* istanbul ignore next */
        (cov_12g70wwm6d().b[26][1]++, 'Lembretes removidos com sucesso')
      });
      // Atualizar lista de lembretes
      /* istanbul ignore next */
      cov_12g70wwm6d().s[98]++;
      await buscarLembretes();
      /* istanbul ignore next */
      cov_12g70wwm6d().s[99]++;
      return true;
    } catch (error) {
      const mensagemErro =
      /* istanbul ignore next */
      (cov_12g70wwm6d().s[100]++, error instanceof Error ?
      /* istanbul ignore next */
      (cov_12g70wwm6d().b[27][0]++, error.message) :
      /* istanbul ignore next */
      (cov_12g70wwm6d().b[27][1]++, 'Erro desconhecido'));
      /* istanbul ignore next */
      cov_12g70wwm6d().s[101]++;
      toast({
        title: 'Erro ao remover lembretes',
        description: mensagemErro,
        variant: 'destructive'
      });
      /* istanbul ignore next */
      cov_12g70wwm6d().s[102]++;
      return false;
    }
  }, [buscarLembretes, toast]));
  // Carregar lembretes na inicialização
  /* istanbul ignore next */
  cov_12g70wwm6d().s[103]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_12g70wwm6d().f[12]++;
    cov_12g70wwm6d().s[104]++;
    buscarLembretes();
  }, [buscarLembretes]);
  /* istanbul ignore next */
  cov_12g70wwm6d().s[105]++;
  return {
    lembretes,
    paginacao,
    carregando,
    erro,
    buscarLembretes,
    buscarLembrete,
    criarLembrete,
    atualizarLembrete,
    removerLembrete,
    executarAcaoLembrete,
    removerLembretesLote
  };
}
function useAgendadorLembretes() {
  /* istanbul ignore next */
  cov_12g70wwm6d().f[13]++;
  const [status, setStatus] =
  /* istanbul ignore next */
  (cov_12g70wwm6d().s[106]++, (0, _react.useState)(null));
  const [carregando, setCarregando] =
  /* istanbul ignore next */
  (cov_12g70wwm6d().s[107]++, (0, _react.useState)(false));
  const [erro, setErro] =
  /* istanbul ignore next */
  (cov_12g70wwm6d().s[108]++, (0, _react.useState)(null));
  const {
    toast
  } =
  /* istanbul ignore next */
  (cov_12g70wwm6d().s[109]++, (0, _usetoast.useToast)());
  /**
  * Busca o status do agendador
  */
  const buscarStatus =
  /* istanbul ignore next */
  (cov_12g70wwm6d().s[110]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_12g70wwm6d().f[14]++;
    cov_12g70wwm6d().s[111]++;
    setCarregando(true);
    /* istanbul ignore next */
    cov_12g70wwm6d().s[112]++;
    setErro(null);
    /* istanbul ignore next */
    cov_12g70wwm6d().s[113]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_12g70wwm6d().s[114]++, await fetch('/api/lembretes/agendamento'));
      const data =
      /* istanbul ignore next */
      (cov_12g70wwm6d().s[115]++, await response.json());
      /* istanbul ignore next */
      cov_12g70wwm6d().s[116]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_12g70wwm6d().b[28][0]++;
        cov_12g70wwm6d().s[117]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_12g70wwm6d().b[29][0]++, data.erro) ||
        /* istanbul ignore next */
        (cov_12g70wwm6d().b[29][1]++, 'Erro ao buscar status do agendador'));
      } else
      /* istanbul ignore next */
      {
        cov_12g70wwm6d().b[28][1]++;
      }
      cov_12g70wwm6d().s[118]++;
      setStatus(data.dados);
    } catch (error) {
      const mensagemErro =
      /* istanbul ignore next */
      (cov_12g70wwm6d().s[119]++, error instanceof Error ?
      /* istanbul ignore next */
      (cov_12g70wwm6d().b[30][0]++, error.message) :
      /* istanbul ignore next */
      (cov_12g70wwm6d().b[30][1]++, 'Erro desconhecido'));
      /* istanbul ignore next */
      cov_12g70wwm6d().s[120]++;
      setErro(mensagemErro);
      /* istanbul ignore next */
      cov_12g70wwm6d().s[121]++;
      toast({
        title: 'Erro ao buscar status',
        description: mensagemErro,
        variant: 'destructive'
      });
    } finally {
      /* istanbul ignore next */
      cov_12g70wwm6d().s[122]++;
      setCarregando(false);
    }
  }, [toast]));
  /**
  * Atualiza a configuração do agendador
  */
  const atualizarConfiguracao =
  /* istanbul ignore next */
  (cov_12g70wwm6d().s[123]++, (0, _react.useCallback)(async configuracao => {
    /* istanbul ignore next */
    cov_12g70wwm6d().f[15]++;
    cov_12g70wwm6d().s[124]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_12g70wwm6d().s[125]++, await fetch('/api/lembretes/agendamento', {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(configuracao)
      }));
      const data =
      /* istanbul ignore next */
      (cov_12g70wwm6d().s[126]++, await response.json());
      /* istanbul ignore next */
      cov_12g70wwm6d().s[127]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_12g70wwm6d().b[31][0]++;
        cov_12g70wwm6d().s[128]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_12g70wwm6d().b[32][0]++, data.erro) ||
        /* istanbul ignore next */
        (cov_12g70wwm6d().b[32][1]++, 'Erro ao atualizar configuração'));
      } else
      /* istanbul ignore next */
      {
        cov_12g70wwm6d().b[31][1]++;
      }
      cov_12g70wwm6d().s[129]++;
      toast({
        title: 'Configuração atualizada',
        description: 'Configuração do agendador atualizada com sucesso'
      });
      // Atualizar status
      /* istanbul ignore next */
      cov_12g70wwm6d().s[130]++;
      await buscarStatus();
      /* istanbul ignore next */
      cov_12g70wwm6d().s[131]++;
      return true;
    } catch (error) {
      const mensagemErro =
      /* istanbul ignore next */
      (cov_12g70wwm6d().s[132]++, error instanceof Error ?
      /* istanbul ignore next */
      (cov_12g70wwm6d().b[33][0]++, error.message) :
      /* istanbul ignore next */
      (cov_12g70wwm6d().b[33][1]++, 'Erro desconhecido'));
      /* istanbul ignore next */
      cov_12g70wwm6d().s[133]++;
      toast({
        title: 'Erro ao atualizar configuração',
        description: mensagemErro,
        variant: 'destructive'
      });
      /* istanbul ignore next */
      cov_12g70wwm6d().s[134]++;
      return false;
    }
  }, [buscarStatus, toast]));
  /**
  * Executa ação no agendador
  */
  const executarAcao =
  /* istanbul ignore next */
  (cov_12g70wwm6d().s[135]++, (0, _react.useCallback)(async (acao, dados) => {
    /* istanbul ignore next */
    cov_12g70wwm6d().f[16]++;
    cov_12g70wwm6d().s[136]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_12g70wwm6d().s[137]++, await fetch('/api/lembretes/agendamento', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          acao,
          ...dados
        })
      }));
      const data =
      /* istanbul ignore next */
      (cov_12g70wwm6d().s[138]++, await response.json());
      /* istanbul ignore next */
      cov_12g70wwm6d().s[139]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_12g70wwm6d().b[34][0]++;
        cov_12g70wwm6d().s[140]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_12g70wwm6d().b[35][0]++, data.erro) ||
        /* istanbul ignore next */
        (cov_12g70wwm6d().b[35][1]++, 'Erro ao executar ação'));
      } else
      /* istanbul ignore next */
      {
        cov_12g70wwm6d().b[34][1]++;
      }
      cov_12g70wwm6d().s[141]++;
      toast({
        title: 'Ação executada',
        description:
        /* istanbul ignore next */
        (cov_12g70wwm6d().b[36][0]++, data.mensagem) ||
        /* istanbul ignore next */
        (cov_12g70wwm6d().b[36][1]++, 'Ação executada com sucesso')
      });
      // Atualizar status
      /* istanbul ignore next */
      cov_12g70wwm6d().s[142]++;
      await buscarStatus();
      /* istanbul ignore next */
      cov_12g70wwm6d().s[143]++;
      return true;
    } catch (error) {
      const mensagemErro =
      /* istanbul ignore next */
      (cov_12g70wwm6d().s[144]++, error instanceof Error ?
      /* istanbul ignore next */
      (cov_12g70wwm6d().b[37][0]++, error.message) :
      /* istanbul ignore next */
      (cov_12g70wwm6d().b[37][1]++, 'Erro desconhecido'));
      /* istanbul ignore next */
      cov_12g70wwm6d().s[145]++;
      toast({
        title: 'Erro ao executar ação',
        description: mensagemErro,
        variant: 'destructive'
      });
      /* istanbul ignore next */
      cov_12g70wwm6d().s[146]++;
      return false;
    }
  }, [buscarStatus, toast]));
  // Carregar status na inicialização
  /* istanbul ignore next */
  cov_12g70wwm6d().s[147]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_12g70wwm6d().f[17]++;
    cov_12g70wwm6d().s[148]++;
    buscarStatus();
  }, [buscarStatus]);
  /* istanbul ignore next */
  cov_12g70wwm6d().s[149]++;
  return {
    status,
    carregando,
    erro,
    buscarStatus,
    atualizarConfiguracao,
    executarAcao
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,