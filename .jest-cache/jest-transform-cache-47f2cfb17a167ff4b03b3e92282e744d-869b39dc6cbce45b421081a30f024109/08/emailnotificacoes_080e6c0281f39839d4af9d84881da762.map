{"version":3,"sources":["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\lib\\utils\\email-notificacoes.ts"],"sourcesContent":["import { AvaliacaoPendente, formatarMensagemNotificacao } from './notificacoes-avaliacoes';\nimport { format } from 'date-fns';\nimport { ptBR } from 'date-fns/locale';\n\n/**\n * Interface para configuração de e-mail\n */\nexport interface ConfiguracaoEmail {\n  smtp: {\n    host: string;\n    port: number;\n    secure: boolean;\n    auth: {\n      user: string;\n      pass: string;\n    };\n  };\n  remetente: {\n    nome: string;\n    email: string;\n  };\n  templates: {\n    avaliacaoPendente: string;\n    lembretePrazo: string;\n    avaliacaoVencida: string;\n  };\n}\n\n/**\n * Interface para dados do destinatário\n */\nexport interface DestinatarioEmail {\n  nome: string;\n  email: string;\n  cargo?: string;\n  setor?: string;\n}\n\n/**\n * Interface para resultado do envio de e-mail\n */\nexport interface ResultadoEnvioEmail {\n  sucesso: boolean;\n  messageId?: string;\n  erro?: string;\n  destinatario: string;\n  timestamp: Date;\n}\n\n/**\n * Interface para estatísticas de envio\n */\nexport interface EstatisticasEnvio {\n  totalEnviados: number;\n  sucessos: number;\n  falhas: number;\n  taxaSucesso: number;\n  tempoMedio: number;\n  ultimoEnvio?: Date;\n}\n\n/**\n * Tipos de notificação por e-mail\n */\nexport type TipoNotificacaoEmail = \n  | 'avaliacao_pendente'\n  | 'lembrete_prazo'\n  | 'avaliacao_vencida'\n  | 'resumo_semanal'\n  | 'resumo_mensal';\n\n/**\n * Interface para template de e-mail\n */\nexport interface TemplateEmail {\n  assunto: string;\n  corpo: string;\n  tipoConteudo: 'text' | 'html';\n}\n\n/**\n * Classe para gerenciar envio de e-mails de notificações\n */\nexport class GerenciadorEmailNotificacoes {\n  private configuracao: ConfiguracaoEmail;\n  private estatisticas: Map<string, EstatisticasEnvio> = new Map();\n\n  constructor(configuracao: ConfiguracaoEmail) {\n    this.configuracao = configuracao;\n  }\n\n  /**\n   * Envia e-mail de notificação para avaliação pendente\n   */\n  async enviarNotificacaoAvaliacaoPendente(\n    avaliacao: AvaliacaoPendente,\n    destinatario: DestinatarioEmail\n  ): Promise<ResultadoEnvioEmail> {\n    const template = this.gerarTemplateAvaliacaoPendente(avaliacao, destinatario);\n    return this.enviarEmail(destinatario, template, 'avaliacao_pendente');\n  }\n\n  /**\n   * Envia lembrete de prazo\n   */\n  async enviarLembretePrazo(\n    avaliacao: AvaliacaoPendente,\n    destinatario: DestinatarioEmail,\n    diasRestantes: number\n  ): Promise<ResultadoEnvioEmail> {\n    const template = this.gerarTemplateLembretePrazo(avaliacao, destinatario, diasRestantes);\n    return this.enviarEmail(destinatario, template, 'lembrete_prazo');\n  }\n\n  /**\n   * Envia notificação de avaliação vencida\n   */\n  async enviarNotificacaoVencida(\n    avaliacao: AvaliacaoPendente,\n    destinatario: DestinatarioEmail\n  ): Promise<ResultadoEnvioEmail> {\n    const template = this.gerarTemplateAvaliacaoVencida(avaliacao, destinatario);\n    return this.enviarEmail(destinatario, template, 'avaliacao_vencida');\n  }\n\n  /**\n   * Envia resumo semanal de avaliações\n   */\n  async enviarResumoSemanal(\n    avaliacoes: AvaliacaoPendente[],\n    destinatario: DestinatarioEmail\n  ): Promise<ResultadoEnvioEmail> {\n    const template = this.gerarTemplateResumoSemanal(avaliacoes, destinatario);\n    return this.enviarEmail(destinatario, template, 'resumo_semanal');\n  }\n\n  /**\n   * Envia múltiplas notificações em lote\n   */\n  async enviarLoteNotificacoes(\n    notificacoes: Array<{\n      avaliacao: AvaliacaoPendente;\n      destinatario: DestinatarioEmail;\n      tipo: TipoNotificacaoEmail;\n    }>\n  ): Promise<ResultadoEnvioEmail[]> {\n    const resultados: ResultadoEnvioEmail[] = [];\n    \n    for (const notificacao of notificacoes) {\n      try {\n        let resultado: ResultadoEnvioEmail;\n        \n        switch (notificacao.tipo) {\n          case 'avaliacao_pendente':\n            resultado = await this.enviarNotificacaoAvaliacaoPendente(\n              notificacao.avaliacao,\n              notificacao.destinatario\n            );\n            break;\n          case 'avaliacao_vencida':\n            resultado = await this.enviarNotificacaoVencida(\n              notificacao.avaliacao,\n              notificacao.destinatario\n            );\n            break;\n          default:\n            resultado = {\n              sucesso: false,\n              erro: `Tipo de notificação não suportado: ${notificacao.tipo}`,\n              destinatario: notificacao.destinatario.email,\n              timestamp: new Date()\n            };\n        }\n        \n        resultados.push(resultado);\n        \n        // Pequeno delay entre envios para evitar spam\n        await new Promise(resolve => setTimeout(resolve, 100));\n      } catch (error) {\n        resultados.push({\n          sucesso: false,\n          erro: error instanceof Error ? error.message : 'Erro desconhecido',\n          destinatario: notificacao.destinatario.email,\n          timestamp: new Date()\n        });\n      }\n    }\n    \n    return resultados;\n  }\n\n  /**\n   * Método principal para envio de e-mail\n   */\n  private async enviarEmail(\n    destinatario: DestinatarioEmail,\n    template: TemplateEmail,\n    tipo: TipoNotificacaoEmail\n  ): Promise<ResultadoEnvioEmail> {\n    const inicioEnvio = Date.now();\n    \n    try {\n      // Simular envio de e-mail (em produção, usar biblioteca como nodemailer)\n      const sucesso = Math.random() > 0.1; // 90% de taxa de sucesso simulada\n      \n      if (!sucesso) {\n        throw new Error('Falha na entrega do e-mail');\n      }\n      \n      const messageId = `msg_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n      const tempoEnvio = Date.now() - inicioEnvio;\n      \n      // Atualizar estatísticas\n      this.atualizarEstatisticas(tipo, true, tempoEnvio);\n      \n      return {\n        sucesso: true,\n        messageId,\n        destinatario: destinatario.email,\n        timestamp: new Date()\n      };\n    } catch (error) {\n      const tempoEnvio = Date.now() - inicioEnvio;\n      \n      // Atualizar estatísticas\n      this.atualizarEstatisticas(tipo, false, tempoEnvio);\n      \n      return {\n        sucesso: false,\n        erro: error instanceof Error ? error.message : 'Erro desconhecido',\n        destinatario: destinatario.email,\n        timestamp: new Date()\n      };\n    }\n  }\n\n  /**\n   * Gera template para notificação de avaliação pendente\n   */\n  private gerarTemplateAvaliacaoPendente(\n    avaliacao: AvaliacaoPendente,\n    destinatario: DestinatarioEmail\n  ): TemplateEmail {\n    const prazoFormatado = format(avaliacao.prazo, \"dd 'de' MMMM 'de' yyyy\", { locale: ptBR });\n    const mensagem = formatarMensagemNotificacao(avaliacao);\n    \n    return {\n      assunto: `Avaliação 360° Pendente - ${avaliacao.avaliado.nome}`,\n      corpo: `\n        <html>\n          <body style=\"font-family: Arial, sans-serif; line-height: 1.6; color: #333;\">\n            <div style=\"max-width: 600px; margin: 0 auto; padding: 20px;\">\n              <h2 style=\"color: #2563eb;\">Avaliação 360° Pendente</h2>\n              \n              <p>Olá, <strong>${destinatario.nome}</strong>!</p>\n              \n              <p>Você tem uma avaliação 360° pendente que requer sua atenção:</p>\n              \n              <div style=\"background-color: #f8fafc; border-left: 4px solid #2563eb; padding: 15px; margin: 20px 0;\">\n                <h3 style=\"margin: 0 0 10px 0; color: #1e40af;\">Detalhes da Avaliação</h3>\n                <p><strong>Avaliado:</strong> ${avaliacao.avaliado.nome}</p>\n                <p><strong>Cargo:</strong> ${avaliacao.avaliado.cargo}</p>\n                <p><strong>Setor:</strong> ${avaliacao.avaliado.setor}</p>\n                <p><strong>Prazo:</strong> ${prazoFormatado}</p>\n                <p><strong>Status:</strong> ${mensagem}</p>\n              </div>\n              \n              <div style=\"text-align: center; margin: 30px 0;\">\n                <a href=\"${process.env.NEXT_PUBLIC_APP_URL}/avaliacoes/${avaliacao.id}\" \n                   style=\"background-color: #2563eb; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; display: inline-block;\">\n                  Realizar Avaliação\n                </a>\n              </div>\n              \n              <p style=\"color: #6b7280; font-size: 14px;\">\n                Este e-mail foi enviado automaticamente pelo sistema de avaliações 360°.\n                Se você não deve receber este e-mail, entre em contato com o administrador.\n              </p>\n            </div>\n          </body>\n        </html>\n      `,\n      tipoConteudo: 'html'\n    };\n  }\n\n  /**\n   * Gera template para lembrete de prazo\n   */\n  private gerarTemplateLembretePrazo(\n    avaliacao: AvaliacaoPendente,\n    destinatario: DestinatarioEmail,\n    diasRestantes: number\n  ): TemplateEmail {\n    const prazoFormatado = format(avaliacao.prazo, \"dd 'de' MMMM 'de' yyyy\", { locale: ptBR });\n    const urgencia = diasRestantes <= 1 ? 'URGENTE' : diasRestantes <= 3 ? 'IMPORTANTE' : 'LEMBRETE';\n    \n    return {\n      assunto: `${urgencia}: Avaliação 360° vence em ${diasRestantes} dia${diasRestantes !== 1 ? 's' : ''}`,\n      corpo: `\n        <html>\n          <body style=\"font-family: Arial, sans-serif; line-height: 1.6; color: #333;\">\n            <div style=\"max-width: 600px; margin: 0 auto; padding: 20px;\">\n              <div style=\"background-color: ${diasRestantes <= 1 ? '#fef2f2' : diasRestantes <= 3 ? '#fefbeb' : '#f0f9ff'}; \n                          border: 2px solid ${diasRestantes <= 1 ? '#ef4444' : diasRestantes <= 3 ? '#f59e0b' : '#3b82f6'}; \n                          border-radius: 8px; padding: 20px; margin-bottom: 20px;\">\n                <h2 style=\"color: ${diasRestantes <= 1 ? '#dc2626' : diasRestantes <= 3 ? '#d97706' : '#2563eb'}; margin: 0;\">\n                  ${urgencia}: Prazo da Avaliação se Aproxima\n                </h2>\n              </div>\n              \n              <p>Olá, <strong>${destinatario.nome}</strong>!</p>\n              \n              <p>Este é um lembrete de que você tem uma avaliação 360° que vence em <strong>${diasRestantes} dia${diasRestantes !== 1 ? 's' : ''}</strong>:</p>\n              \n              <div style=\"background-color: #f8fafc; border-left: 4px solid #2563eb; padding: 15px; margin: 20px 0;\">\n                <h3 style=\"margin: 0 0 10px 0; color: #1e40af;\">Detalhes da Avaliação</h3>\n                <p><strong>Avaliado:</strong> ${avaliacao.avaliado.nome}</p>\n                <p><strong>Prazo:</strong> ${prazoFormatado}</p>\n                <p><strong>Dias Restantes:</strong> ${diasRestantes}</p>\n              </div>\n              \n              <div style=\"text-align: center; margin: 30px 0;\">\n                <a href=\"${process.env.NEXT_PUBLIC_APP_URL}/avaliacoes/${avaliacao.id}\" \n                   style=\"background-color: ${diasRestantes <= 1 ? '#ef4444' : diasRestantes <= 3 ? '#f59e0b' : '#2563eb'}; \n                          color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; display: inline-block;\">\n                  Realizar Avaliação Agora\n                </a>\n              </div>\n              \n              <p style=\"color: #6b7280; font-size: 14px;\">\n                Este e-mail foi enviado automaticamente pelo sistema de avaliações 360°.\n              </p>\n            </div>\n          </body>\n        </html>\n      `,\n      tipoConteudo: 'html'\n    };\n  }\n\n  /**\n   * Gera template para avaliação vencida\n   */\n  private gerarTemplateAvaliacaoVencida(\n    avaliacao: AvaliacaoPendente,\n    destinatario: DestinatarioEmail\n  ): TemplateEmail {\n    const prazoFormatado = format(avaliacao.prazo, \"dd 'de' MMMM 'de' yyyy\", { locale: ptBR });\n    \n    return {\n      assunto: `VENCIDA: Avaliação 360° - ${avaliacao.avaliado.nome}`,\n      corpo: `\n        <html>\n          <body style=\"font-family: Arial, sans-serif; line-height: 1.6; color: #333;\">\n            <div style=\"max-width: 600px; margin: 0 auto; padding: 20px;\">\n              <div style=\"background-color: #fef2f2; border: 2px solid #ef4444; border-radius: 8px; padding: 20px; margin-bottom: 20px;\">\n                <h2 style=\"color: #dc2626; margin: 0;\">⚠️ Avaliação 360° Vencida</h2>\n              </div>\n              \n              <p>Olá, <strong>${destinatario.nome}</strong>!</p>\n              \n              <p>A avaliação 360° abaixo <strong>venceu</strong> e ainda não foi concluída:</p>\n              \n              <div style=\"background-color: #f8fafc; border-left: 4px solid #ef4444; padding: 15px; margin: 20px 0;\">\n                <h3 style=\"margin: 0 0 10px 0; color: #dc2626;\">Detalhes da Avaliação</h3>\n                <p><strong>Avaliado:</strong> ${avaliacao.avaliado.nome}</p>\n                <p><strong>Prazo (vencido):</strong> ${prazoFormatado}</p>\n                <p><strong>Status:</strong> Vencida</p>\n              </div>\n              \n              <p style=\"color: #dc2626; font-weight: bold;\">\n                Por favor, complete esta avaliação o mais breve possível ou entre em contato com seu gestor.\n              </p>\n              \n              <div style=\"text-align: center; margin: 30px 0;\">\n                <a href=\"${process.env.NEXT_PUBLIC_APP_URL}/avaliacoes/${avaliacao.id}\" \n                   style=\"background-color: #ef4444; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; display: inline-block;\">\n                  Realizar Avaliação\n                </a>\n              </div>\n              \n              <p style=\"color: #6b7280; font-size: 14px;\">\n                Este e-mail foi enviado automaticamente pelo sistema de avaliações 360°.\n              </p>\n            </div>\n          </body>\n        </html>\n      `,\n      tipoConteudo: 'html'\n    };\n  }\n\n  /**\n   * Gera template para resumo semanal\n   */\n  private gerarTemplateResumoSemanal(\n    avaliacoes: AvaliacaoPendente[],\n    destinatario: DestinatarioEmail\n  ): TemplateEmail {\n    const totalAvaliacoes = avaliacoes.length;\n    const avaliacoesVencidas = avaliacoes.filter(a => a.urgencia === 'vencida').length;\n    const avaliacoesUrgentes = avaliacoes.filter(a => a.urgencia === 'alta').length;\n    \n    const listaAvaliacoes = avaliacoes.map(avaliacao => {\n      const prazoFormatado = format(avaliacao.prazo, \"dd/MM/yyyy\", { locale: ptBR });\n      const corUrgencia = avaliacao.urgencia === 'vencida' ? '#ef4444' : \n                         avaliacao.urgencia === 'alta' ? '#f59e0b' : '#6b7280';\n      \n      return `\n        <tr style=\"border-bottom: 1px solid #e5e7eb;\">\n          <td style=\"padding: 10px; border-right: 1px solid #e5e7eb;\">${avaliacao.avaliado.nome}</td>\n          <td style=\"padding: 10px; border-right: 1px solid #e5e7eb;\">${avaliacao.avaliado.cargo}</td>\n          <td style=\"padding: 10px; border-right: 1px solid #e5e7eb;\">${prazoFormatado}</td>\n          <td style=\"padding: 10px; color: ${corUrgencia}; font-weight: bold;\">\n            ${avaliacao.urgencia === 'vencida' ? 'Vencida' : \n              avaliacao.urgencia === 'alta' ? 'Urgente' : 'Normal'}\n          </td>\n        </tr>\n      `;\n    }).join('');\n    \n    return {\n      assunto: `Resumo Semanal - ${totalAvaliacoes} Avaliação${totalAvaliacoes !== 1 ? 'ões' : ''} Pendente${totalAvaliacoes !== 1 ? 's' : ''}`,\n      corpo: `\n        <html>\n          <body style=\"font-family: Arial, sans-serif; line-height: 1.6; color: #333;\">\n            <div style=\"max-width: 700px; margin: 0 auto; padding: 20px;\">\n              <h2 style=\"color: #2563eb;\">📊 Resumo Semanal de Avaliações</h2>\n              \n              <p>Olá, <strong>${destinatario.nome}</strong>!</p>\n              \n              <p>Aqui está o resumo das suas avaliações 360° pendentes:</p>\n              \n              <div style=\"display: flex; gap: 15px; margin: 20px 0;\">\n                <div style=\"background-color: #f0f9ff; border: 1px solid #3b82f6; border-radius: 8px; padding: 15px; flex: 1; text-align: center;\">\n                  <h3 style=\"margin: 0; color: #2563eb;\">${totalAvaliacoes}</h3>\n                  <p style=\"margin: 5px 0 0 0; color: #6b7280;\">Total Pendentes</p>\n                </div>\n                <div style=\"background-color: #fefbeb; border: 1px solid #f59e0b; border-radius: 8px; padding: 15px; flex: 1; text-align: center;\">\n                  <h3 style=\"margin: 0; color: #d97706;\">${avaliacoesUrgentes}</h3>\n                  <p style=\"margin: 5px 0 0 0; color: #6b7280;\">Urgentes</p>\n                </div>\n                <div style=\"background-color: #fef2f2; border: 1px solid #ef4444; border-radius: 8px; padding: 15px; flex: 1; text-align: center;\">\n                  <h3 style=\"margin: 0; color: #dc2626;\">${avaliacoesVencidas}</h3>\n                  <p style=\"margin: 5px 0 0 0; color: #6b7280;\">Vencidas</p>\n                </div>\n              </div>\n              \n              ${totalAvaliacoes > 0 ? `\n                <h3 style=\"color: #1f2937; margin-top: 30px;\">Detalhes das Avaliações</h3>\n                <table style=\"width: 100%; border-collapse: collapse; border: 1px solid #e5e7eb; margin: 20px 0;\">\n                  <thead>\n                    <tr style=\"background-color: #f9fafb;\">\n                      <th style=\"padding: 12px; text-align: left; border-right: 1px solid #e5e7eb;\">Avaliado</th>\n                      <th style=\"padding: 12px; text-align: left; border-right: 1px solid #e5e7eb;\">Cargo</th>\n                      <th style=\"padding: 12px; text-align: left; border-right: 1px solid #e5e7eb;\">Prazo</th>\n                      <th style=\"padding: 12px; text-align: left;\">Status</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    ${listaAvaliacoes}\n                  </tbody>\n                </table>\n              ` : '<p style=\"color: #6b7280; font-style: italic;\">Parabéns! Você não tem avaliações pendentes.</p>'}\n              \n              <div style=\"text-align: center; margin: 30px 0;\">\n                <a href=\"${process.env.NEXT_PUBLIC_APP_URL}/avaliacoes\" \n                   style=\"background-color: #2563eb; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; display: inline-block;\">\n                  Ver Todas as Avaliações\n                </a>\n              </div>\n              \n              <p style=\"color: #6b7280; font-size: 14px;\">\n                Este resumo é enviado automaticamente todas as segundas-feiras.\n                Para alterar suas preferências de notificação, acesse as configurações do sistema.\n              </p>\n            </div>\n          </body>\n        </html>\n      `,\n      tipoConteudo: 'html'\n    };\n  }\n\n  /**\n   * Atualiza estatísticas de envio\n   */\n  private atualizarEstatisticas(\n    tipo: TipoNotificacaoEmail,\n    sucesso: boolean,\n    tempoEnvio: number\n  ): void {\n    const estatisticasAtuais = this.estatisticas.get(tipo) || {\n      totalEnviados: 0,\n      sucessos: 0,\n      falhas: 0,\n      taxaSucesso: 0,\n      tempoMedio: 0\n    };\n    \n    estatisticasAtuais.totalEnviados++;\n    \n    if (sucesso) {\n      estatisticasAtuais.sucessos++;\n    } else {\n      estatisticasAtuais.falhas++;\n    }\n    \n    estatisticasAtuais.taxaSucesso = (estatisticasAtuais.sucessos / estatisticasAtuais.totalEnviados) * 100;\n    estatisticasAtuais.tempoMedio = ((estatisticasAtuais.tempoMedio * (estatisticasAtuais.totalEnviados - 1)) + tempoEnvio) / estatisticasAtuais.totalEnviados;\n    estatisticasAtuais.ultimoEnvio = new Date();\n    \n    this.estatisticas.set(tipo, estatisticasAtuais);\n  }\n\n  /**\n   * Obtém estatísticas de envio\n   */\n  obterEstatisticas(tipo?: TipoNotificacaoEmail): EstatisticasEnvio | Map<string, EstatisticasEnvio> {\n    if (tipo) {\n      return this.estatisticas.get(tipo) || {\n        totalEnviados: 0,\n        sucessos: 0,\n        falhas: 0,\n        taxaSucesso: 0,\n        tempoMedio: 0\n      };\n    }\n    \n    return new Map(this.estatisticas);\n  }\n\n  /**\n   * Limpa estatísticas\n   */\n  limparEstatisticas(tipo?: TipoNotificacaoEmail): void {\n    if (tipo) {\n      this.estatisticas.delete(tipo);\n    } else {\n      this.estatisticas.clear();\n    }\n  }\n}\n\n/**\n * Instância singleton do gerenciador de e-mail\n */\nlet gerenciadorEmail: GerenciadorEmailNotificacoes | null = null;\n\n/**\n * Obtém ou cria instância do gerenciador de e-mail\n */\nexport function obterGerenciadorEmail(): GerenciadorEmailNotificacoes {\n  if (!gerenciadorEmail) {\n    const configuracao: ConfiguracaoEmail = {\n      smtp: {\n        host: process.env.SMTP_HOST || 'localhost',\n        port: parseInt(process.env.SMTP_PORT || '587'),\n        secure: process.env.SMTP_SECURE === 'true',\n        auth: {\n          user: process.env.SMTP_USER || '',\n          pass: process.env.SMTP_PASS || ''\n        }\n      },\n      remetente: {\n        nome: process.env.EMAIL_FROM_NAME || 'Sistema de Avaliações 360°',\n        email: process.env.EMAIL_FROM_ADDRESS || 'noreply@avaliacoes360.com'\n      },\n      templates: {\n        avaliacaoPendente: 'avaliacao_pendente',\n        lembretePrazo: 'lembrete_prazo',\n        avaliacaoVencida: 'avaliacao_vencida'\n      }\n    };\n    \n    gerenciadorEmail = new GerenciadorEmailNotificacoes(configuracao);\n  }\n  \n  return gerenciadorEmail;\n}\n\n/**\n * Funções utilitárias para envio rápido\n */\nexport const emailUtils = {\n  /**\n   * Envia notificação simples de avaliação pendente\n   */\n  async notificarAvaliacaoPendente(\n    avaliacao: AvaliacaoPendente,\n    destinatario: DestinatarioEmail\n  ): Promise<ResultadoEnvioEmail> {\n    const gerenciador = obterGerenciadorEmail();\n    return gerenciador.enviarNotificacaoAvaliacaoPendente(avaliacao, destinatario);\n  },\n\n  /**\n   * Envia lembrete de prazo\n   */\n  async enviarLembrete(\n    avaliacao: AvaliacaoPendente,\n    destinatario: DestinatarioEmail,\n    diasRestantes: number\n  ): Promise<ResultadoEnvioEmail> {\n    const gerenciador = obterGerenciadorEmail();\n    return gerenciador.enviarLembretePrazo(avaliacao, destinatario, diasRestantes);\n  },\n\n  /**\n   * Envia notificação de vencimento\n   */\n  async notificarVencimento(\n    avaliacao: AvaliacaoPendente,\n    destinatario: DestinatarioEmail\n  ): Promise<ResultadoEnvioEmail> {\n    const gerenciador = obterGerenciadorEmail();\n    return gerenciador.enviarNotificacaoVencida(avaliacao, destinatario);\n  },\n\n  /**\n   * Envia resumo semanal\n   */\n  async enviarResumo(\n    avaliacoes: AvaliacaoPendente[],\n    destinatario: DestinatarioEmail\n  ): Promise<ResultadoEnvioEmail> {\n    const gerenciador = obterGerenciadorEmail();\n    return gerenciador.enviarResumoSemanal(avaliacoes, destinatario);\n  }\n};"],"names":["GerenciadorEmailNotificacoes","emailUtils","obterGerenciadorEmail","configuracao","estatisticas","Map","enviarNotificacaoAvaliacaoPendente","avaliacao","destinatario","template","gerarTemplateAvaliacaoPendente","enviarEmail","enviarLembretePrazo","diasRestantes","gerarTemplateLembretePrazo","enviarNotificacaoVencida","gerarTemplateAvaliacaoVencida","enviarResumoSemanal","avaliacoes","gerarTemplateResumoSemanal","enviarLoteNotificacoes","notificacoes","resultados","notificacao","resultado","tipo","sucesso","erro","email","timestamp","Date","push","Promise","resolve","setTimeout","error","Error","message","inicioEnvio","now","Math","random","messageId","toString","substr","tempoEnvio","atualizarEstatisticas","prazoFormatado","format","prazo","locale","ptBR","mensagem","formatarMensagemNotificacao","assunto","avaliado","nome","corpo","cargo","setor","process","env","NEXT_PUBLIC_APP_URL","id","tipoConteudo","urgencia","totalAvaliacoes","length","avaliacoesVencidas","filter","a","avaliacoesUrgentes","listaAvaliacoes","map","corUrgencia","join","estatisticasAtuais","get","totalEnviados","sucessos","falhas","taxaSucesso","tempoMedio","ultimoEnvio","set","obterEstatisticas","limparEstatisticas","delete","clear","gerenciadorEmail","smtp","host","SMTP_HOST","port","parseInt","SMTP_PORT","secure","SMTP_SECURE","auth","user","SMTP_USER","pass","SMTP_PASS","remetente","EMAIL_FROM_NAME","EMAIL_FROM_ADDRESS","templates","avaliacaoPendente","lembretePrazo","avaliacaoVencida","notificarAvaliacaoPendente","gerenciador","enviarLembrete","notificarVencimento","enviarResumo"],"mappings":"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"}