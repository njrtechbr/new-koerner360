{"version":3,"names":["cov_c8zih9l63","actualCoverage","s","ExportarRelatorios","f","default","_default","TIPOS_EXPORTACAO","tipo","nome","descricao","icone","_jsxruntime","jsx","_lucidereact","FileText","className","extensao","suportaGraficos","suportaTabelas","tamanhoEstimado","FileSpreadsheet","FileImage","dados","onExportar","carregando","b","configuracao","setConfiguracao","_react","useState","incluirGraficos","incluirTabelas","incluirResumo","incluirDetalhes","formatoData","idioma","mostrarConfiguracoes","setMostrarConfiguracoes","tipoSelecionado","find","t","atualizarConfiguracao","campo","valor","prev","gerarNomeArquivo","agora","Date","data","toISOString","split","replace","hora","toTimeString","slice","join","handleExportar","config","nomeArquivo","estimarConteudo","itens","graficos","length","tabelas","jsxs","_card","Card","CardHeader","CardTitle","Download","CardDescription","CardContent","_label","Label","map","_utils","cn","onClick","_badge","Badge","variant","_checkbox","Checkbox","id","checked","onCheckedChange","htmlFor","_button","Button","size","Settings","_input","Input","placeholder","value","onChange","e","target","_select","Select","onValueChange","SelectTrigger","SelectValue","SelectContent","SelectItem","_textarea","Textarea","observacoes","rows","BarChart3","filtros","dataInicio","dataFim","periodo","disabled","Fragment","Loader2"],"sources":["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\components\\metricas\\exportar-relatorios.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Label } from '@/components/ui/label';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Badge } from '@/components/ui/badge';\nimport {\n  Download,\n  FileText,\n  FileSpreadsheet,\n  FileImage,\n  Loader2,\n  Settings,\n  Calendar,\n  Users,\n  BarChart3,\n  CheckCircle,\n} from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport { FiltrosPeriodo } from './filtros-periodo';\n\n/**\n * Tipos de exportação disponíveis\n */\nexport type TipoExportacao = 'pdf' | 'excel' | 'csv' | 'png' | 'jpeg';\n\n/**\n * Interface para configurações de exportação\n */\nexport interface ConfiguracaoExportacao {\n  tipo: TipoExportacao;\n  incluirGraficos: boolean;\n  incluirTabelas: boolean;\n  incluirResumo: boolean;\n  incluirDetalhes: boolean;\n  nomeArquivo?: string;\n  observacoes?: string;\n  formatoData?: 'dd/mm/yyyy' | 'yyyy-mm-dd' | 'mm/dd/yyyy';\n  idioma?: 'pt-BR' | 'en-US';\n}\n\n/**\n * Interface para dados a serem exportados\n */\nexport interface DadosExportacao {\n  filtros: FiltrosPeriodo;\n  metricas: any;\n  graficos?: any[];\n  tabelas?: any[];\n  resumo?: any;\n}\n\n/**\n * Props do componente\n */\ninterface ExportarRelatoriosProps {\n  dados: DadosExportacao;\n  onExportar: (configuracao: ConfiguracaoExportacao) => Promise<void>;\n  carregando?: boolean;\n  className?: string;\n}\n\n/**\n * Tipos de exportação com suas configurações\n */\nconst TIPOS_EXPORTACAO = [\n  {\n    tipo: 'pdf' as TipoExportacao,\n    nome: 'PDF',\n    descricao: 'Documento portátil com formatação completa',\n    icone: <FileText className=\"h-4 w-4\" />,\n    extensao: '.pdf',\n    suportaGraficos: true,\n    suportaTabelas: true,\n    tamanhoEstimado: 'Médio',\n  },\n  {\n    tipo: 'excel' as TipoExportacao,\n    nome: 'Excel',\n    descricao: 'Planilha com dados estruturados',\n    icone: <FileSpreadsheet className=\"h-4 w-4\" />,\n    extensao: '.xlsx',\n    suportaGraficos: true,\n    suportaTabelas: true,\n    tamanhoEstimado: 'Pequeno',\n  },\n  {\n    tipo: 'csv' as TipoExportacao,\n    nome: 'CSV',\n    descricao: 'Dados tabulares simples',\n    icone: <FileText className=\"h-4 w-4\" />,\n    extensao: '.csv',\n    suportaGraficos: false,\n    suportaTabelas: true,\n    tamanhoEstimado: 'Muito pequeno',\n  },\n  {\n    tipo: 'png' as TipoExportacao,\n    nome: 'PNG',\n    descricao: 'Imagem dos gráficos',\n    icone: <FileImage className=\"h-4 w-4\" />,\n    extensao: '.png',\n    suportaGraficos: true,\n    suportaTabelas: false,\n    tamanhoEstimado: 'Médio',\n  },\n  {\n    tipo: 'jpeg' as TipoExportacao,\n    nome: 'JPEG',\n    descricao: 'Imagem comprimida dos gráficos',\n    icone: <FileImage className=\"h-4 w-4\" />,\n    extensao: '.jpg',\n    suportaGraficos: true,\n    suportaTabelas: false,\n    tamanhoEstimado: 'Pequeno',\n  },\n];\n\n/**\n * Componente principal para exportação de relatórios\n */\nexport function ExportarRelatorios({\n  dados,\n  onExportar,\n  carregando = false,\n  className,\n}: ExportarRelatoriosProps) {\n  const [configuracao, setConfiguracao] = useState<ConfiguracaoExportacao>({\n    tipo: 'pdf',\n    incluirGraficos: true,\n    incluirTabelas: true,\n    incluirResumo: true,\n    incluirDetalhes: false,\n    formatoData: 'dd/mm/yyyy',\n    idioma: 'pt-BR',\n  });\n\n  const [mostrarConfiguracoes, setMostrarConfiguracoes] = useState(false);\n\n  // Obter configurações do tipo selecionado\n  const tipoSelecionado = TIPOS_EXPORTACAO.find(\n    t => t.tipo === configuracao.tipo\n  );\n\n  // Função para atualizar configuração\n  const atualizarConfiguracao = (\n    campo: keyof ConfiguracaoExportacao,\n    valor: any\n  ) => {\n    setConfiguracao(prev => ({ ...prev, [campo]: valor }));\n  };\n\n  // Função para gerar nome do arquivo automaticamente\n  const gerarNomeArquivo = () => {\n    const agora = new Date();\n    const data = agora.toISOString().split('T')[0].replace(/-/g, '');\n    const hora = agora.toTimeString().split(':').slice(0, 2).join('');\n    return `relatorio-atendentes-${data}-${hora}`;\n  };\n\n  // Função para executar exportação\n  const handleExportar = async () => {\n    const config = {\n      ...configuracao,\n      nomeArquivo: configuracao.nomeArquivo || gerarNomeArquivo(),\n    };\n\n    await onExportar(config);\n  };\n\n  // Calcular estimativa de conteúdo\n  const estimarConteudo = () => {\n    let itens = 0;\n    if (configuracao.incluirResumo) itens++;\n    if (configuracao.incluirGraficos && tipoSelecionado?.suportaGraficos)\n      itens += dados.graficos?.length || 3;\n    if (configuracao.incluirTabelas && tipoSelecionado?.suportaTabelas)\n      itens += dados.tabelas?.length || 2;\n    if (configuracao.incluirDetalhes) itens++;\n    return itens;\n  };\n\n  return (\n    <Card className={className}>\n      <CardHeader>\n        <CardTitle className=\"flex items-center space-x-2\">\n          <Download className=\"h-5 w-5\" />\n          <span>Exportar Relatório</span>\n        </CardTitle>\n        <CardDescription>\n          Configure e exporte os dados de métricas em diferentes formatos\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"space-y-6\">\n        {/* Seleção do tipo de exportação */}\n        <div className=\"space-y-3\">\n          <Label className=\"text-sm font-medium\">Formato de Exportação</Label>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-5 gap-3\">\n            {TIPOS_EXPORTACAO.map(tipo => (\n              <div\n                key={tipo.tipo}\n                className={cn(\n                  'p-3 border rounded-lg cursor-pointer transition-all hover:border-primary/50',\n                  configuracao.tipo === tipo.tipo\n                    ? 'border-primary bg-primary/5'\n                    : 'border-gray-200'\n                )}\n                onClick={() => atualizarConfiguracao('tipo', tipo.tipo)}\n              >\n                <div className=\"flex items-center space-x-2 mb-2\">\n                  {tipo.icone}\n                  <span className=\"font-medium text-sm\">{tipo.nome}</span>\n                  <Badge variant=\"outline\" className=\"text-xs\">\n                    {tipo.extensao}\n                  </Badge>\n                </div>\n                <p className=\"text-xs text-gray-600 mb-1\">{tipo.descricao}</p>\n                <p className=\"text-xs text-gray-500\">\n                  Tamanho: {tipo.tamanhoEstimado}\n                </p>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Configurações de conteúdo */}\n        <div className=\"space-y-4\">\n          <Label className=\"text-sm font-medium\">Conteúdo a Incluir</Label>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div className=\"flex items-center space-x-2\">\n              <Checkbox\n                id=\"incluirResumo\"\n                checked={configuracao.incluirResumo}\n                onCheckedChange={checked =>\n                  atualizarConfiguracao('incluirResumo', checked)\n                }\n              />\n              <Label htmlFor=\"incluirResumo\" className=\"text-sm\">\n                Resumo executivo\n              </Label>\n            </div>\n\n            {tipoSelecionado?.suportaGraficos && (\n              <div className=\"flex items-center space-x-2\">\n                <Checkbox\n                  id=\"incluirGraficos\"\n                  checked={configuracao.incluirGraficos}\n                  onCheckedChange={checked =>\n                    atualizarConfiguracao('incluirGraficos', checked)\n                  }\n                />\n                <Label htmlFor=\"incluirGraficos\" className=\"text-sm\">\n                  Gráficos e visualizações\n                </Label>\n              </div>\n            )}\n\n            {tipoSelecionado?.suportaTabelas && (\n              <div className=\"flex items-center space-x-2\">\n                <Checkbox\n                  id=\"incluirTabelas\"\n                  checked={configuracao.incluirTabelas}\n                  onCheckedChange={checked =>\n                    atualizarConfiguracao('incluirTabelas', checked)\n                  }\n                />\n                <Label htmlFor=\"incluirTabelas\" className=\"text-sm\">\n                  Tabelas de dados\n                </Label>\n              </div>\n            )}\n\n            <div className=\"flex items-center space-x-2\">\n              <Checkbox\n                id=\"incluirDetalhes\"\n                checked={configuracao.incluirDetalhes}\n                onCheckedChange={checked =>\n                  atualizarConfiguracao('incluirDetalhes', checked)\n                }\n              />\n              <Label htmlFor=\"incluirDetalhes\" className=\"text-sm\">\n                Detalhes individuais\n              </Label>\n            </div>\n          </div>\n        </div>\n\n        {/* Configurações avançadas */}\n        <div className=\"space-y-3\">\n          <div className=\"flex items-center justify-between\">\n            <Label className=\"text-sm font-medium\">\n              Configurações Avançadas\n            </Label>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => setMostrarConfiguracoes(!mostrarConfiguracoes)}\n            >\n              <Settings className=\"h-4 w-4 mr-1\" />\n              {mostrarConfiguracoes ? 'Ocultar' : 'Mostrar'}\n            </Button>\n          </div>\n\n          {mostrarConfiguracoes && (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 p-4 bg-gray-50 rounded-lg\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"nomeArquivo\" className=\"text-sm\">\n                  Nome do Arquivo\n                </Label>\n                <Input\n                  id=\"nomeArquivo\"\n                  placeholder={gerarNomeArquivo()}\n                  value={configuracao.nomeArquivo || ''}\n                  onChange={e =>\n                    atualizarConfiguracao('nomeArquivo', e.target.value)\n                  }\n                />\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label className=\"text-sm\">Formato de Data</Label>\n                <Select\n                  value={configuracao.formatoData}\n                  onValueChange={valor =>\n                    atualizarConfiguracao('formatoData', valor)\n                  }\n                >\n                  <SelectTrigger>\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"dd/mm/yyyy\">DD/MM/AAAA</SelectItem>\n                    <SelectItem value=\"yyyy-mm-dd\">AAAA-MM-DD</SelectItem>\n                    <SelectItem value=\"mm/dd/yyyy\">MM/DD/AAAA</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n\n              <div className=\"md:col-span-2 space-y-2\">\n                <Label htmlFor=\"observacoes\" className=\"text-sm\">\n                  Observações\n                </Label>\n                <Textarea\n                  id=\"observacoes\"\n                  placeholder=\"Adicione observações ou comentários ao relatório...\"\n                  value={configuracao.observacoes || ''}\n                  onChange={e =>\n                    atualizarConfiguracao('observacoes', e.target.value)\n                  }\n                  rows={3}\n                />\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Resumo da exportação */}\n        <div className=\"p-4 bg-blue-50 rounded-lg border border-blue-200\">\n          <div className=\"flex items-center space-x-2 mb-3\">\n            <BarChart3 className=\"h-4 w-4 text-blue-600\" />\n            <span className=\"font-medium text-blue-800\">\n              Resumo da Exportação\n            </span>\n          </div>\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\n            <div>\n              <span className=\"text-gray-600\">Formato:</span>\n              <div className=\"font-medium\">\n                {tipoSelecionado?.nome} {tipoSelecionado?.extensao}\n              </div>\n            </div>\n            <div>\n              <span className=\"text-gray-600\">Itens:</span>\n              <div className=\"font-medium\">{estimarConteudo()} componentes</div>\n            </div>\n            <div>\n              <span className=\"text-gray-600\">Período:</span>\n              <div className=\"font-medium\">\n                {dados.filtros.dataInicio && dados.filtros.dataFim\n                  ? `${dados.filtros.dataInicio} a ${dados.filtros.dataFim}`\n                  : dados.filtros.periodo || 'Não definido'}\n              </div>\n            </div>\n            <div>\n              <span className=\"text-gray-600\">Tamanho:</span>\n              <div className=\"font-medium\">\n                {tipoSelecionado?.tamanhoEstimado}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Botão de exportação */}\n        <div className=\"flex justify-end space-x-3\">\n          <Button\n            variant=\"outline\"\n            onClick={() => {\n              setConfiguracao({\n                tipo: 'pdf',\n                incluirGraficos: true,\n                incluirTabelas: true,\n                incluirResumo: true,\n                incluirDetalhes: false,\n                formatoData: 'dd/mm/yyyy',\n                idioma: 'pt-BR',\n              });\n              setMostrarConfiguracoes(false);\n            }}\n          >\n            Redefinir\n          </Button>\n          <Button\n            onClick={handleExportar}\n            disabled={\n              carregando ||\n              (!configuracao.incluirResumo &&\n                !configuracao.incluirGraficos &&\n                !configuracao.incluirTabelas &&\n                !configuracao.incluirDetalhes)\n            }\n            className=\"min-w-32\"\n          >\n            {carregando ? (\n              <>\n                <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n                Exportando...\n              </>\n            ) : (\n              <>\n                <Download className=\"h-4 w-4 mr-2\" />\n                Exportar\n              </>\n            )}\n          </Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default ExportarRelatorios;\n"],"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","ignoreList":[]}