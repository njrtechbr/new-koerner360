2ea5b82a4a54732c9be34d5c2fdc9c9c
"use strict";

/* istanbul ignore next */
function cov_2klbh5wike() {
  var path = "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\upload\\documentos\\route.ts";
  var hash = "ff4aa404d08b14f897f7804bc4636ad43339d5fc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\upload\\documentos\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 19
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 20
        }
      },
      "6": {
        start: {
          line: 19,
          column: 16
        },
        end: {
          line: 19,
          column: 38
        }
      },
      "7": {
        start: {
          line: 20,
          column: 18
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "8": {
        start: {
          line: 21,
          column: 14
        },
        end: {
          line: 21,
          column: 45
        }
      },
      "9": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 49
        }
      },
      "10": {
        start: {
          line: 23,
          column: 13
        },
        end: {
          line: 23,
          column: 27
        }
      },
      "11": {
        start: {
          line: 26,
          column: 34
        },
        end: {
          line: 42,
          column: 2
        }
      },
      "12": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 141,
          column: 5
        }
      },
      "13": {
        start: {
          line: 46,
          column: 24
        },
        end: {
          line: 46,
          column: 80
        }
      },
      "14": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "15": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 52,
          column: 15
        }
      },
      "16": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 64,
          column: 9
        }
      },
      "17": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 63,
          column: 15
        }
      },
      "18": {
        start: {
          line: 66,
          column: 25
        },
        end: {
          line: 66,
          column: 49
        }
      },
      "19": {
        start: {
          line: 67,
          column: 24
        },
        end: {
          line: 67,
          column: 47
        }
      },
      "20": {
        start: {
          line: 68,
          column: 28
        },
        end: {
          line: 68,
          column: 55
        }
      },
      "21": {
        start: {
          line: 69,
          column: 21
        },
        end: {
          line: 69,
          column: 41
        }
      },
      "22": {
        start: {
          line: 70,
          column: 26
        },
        end: {
          line: 70,
          column: 66
        }
      },
      "23": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "24": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 77,
          column: 15
        }
      },
      "25": {
        start: {
          line: 80,
          column: 36
        },
        end: {
          line: 84,
          column: 10
        }
      },
      "26": {
        start: {
          line: 86,
          column: 27
        },
        end: {
          line: 86,
          column: 90
        }
      },
      "27": {
        start: {
          line: 88,
          column: 26
        },
        end: {
          line: 88,
          column: 72
        }
      },
      "28": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 95,
          column: 9
        }
      },
      "29": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 94,
          column: 15
        }
      },
      "30": {
        start: {
          line: 97,
          column: 29
        },
        end: {
          line: 97,
          column: 118
        }
      },
      "31": {
        start: {
          line: 99,
          column: 26
        },
        end: {
          line: 103,
          column: 10
        }
      },
      "32": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 110,
          column: 9
        }
      },
      "33": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 109,
          column: 15
        }
      },
      "34": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 125,
          column: 11
        }
      },
      "35": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 61
        }
      },
      "36": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 135,
          column: 9
        }
      },
      "37": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 134,
          column: 15
        }
      },
      "38": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 140,
          column: 11
        }
      },
      "39": {
        start: {
          line: 144,
          column: 4
        },
        end: {
          line: 168,
          column: 5
        }
      },
      "40": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 160,
          column: 11
        }
      },
      "41": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 71
        }
      },
      "42": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 167,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 15
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 16
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "POST",
        decl: {
          start: {
            line: 43,
            column: 15
          },
          end: {
            line: 43,
            column: 19
          }
        },
        loc: {
          start: {
            line: 43,
            column: 29
          },
          end: {
            line: 142,
            column: 1
          }
        },
        line: 43
      },
      "4": {
        name: "GET",
        decl: {
          start: {
            line: 143,
            column: 15
          },
          end: {
            line: 143,
            column: 18
          }
        },
        loc: {
          start: {
            line: 143,
            column: 21
          },
          end: {
            line: 169,
            column: 1
          }
        },
        line: 143
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "1": {
        loc: {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "2": {
        loc: {
          start: {
            line: 70,
            column: 26
          },
          end: {
            line: 70,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 26
          },
          end: {
            line: 70,
            column: 51
          }
        }, {
          start: {
            line: 70,
            column: 55
          },
          end: {
            line: 70,
            column: 66
          }
        }],
        line: 70
      },
      "3": {
        loc: {
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 78,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 8
          },
          end: {
            line: 78,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "4": {
        loc: {
          start: {
            line: 86,
            column: 27
          },
          end: {
            line: 86,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 86,
            column: 70
          },
          end: {
            line: 86,
            column: 77
          }
        }, {
          start: {
            line: 86,
            column: 80
          },
          end: {
            line: 86,
            column: 90
          }
        }],
        line: 86
      },
      "5": {
        loc: {
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "6": {
        loc: {
          start: {
            line: 97,
            column: 29
          },
          end: {
            line: 97,
            column: 118
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 97,
            column: 63
          },
          end: {
            line: 97,
            column: 109
          }
        }, {
          start: {
            line: 97,
            column: 112
          },
          end: {
            line: 97,
            column: 118
          }
        }],
        line: 97
      },
      "7": {
        loc: {
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 104
      },
      "8": {
        loc: {
          start: {
            line: 106,
            column: 22
          },
          end: {
            line: 106,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 106,
            column: 22
          },
          end: {
            line: 106,
            column: 37
          }
        }, {
          start: {
            line: 106,
            column: 41
          },
          end: {
            line: 106,
            column: 74
          }
        }],
        line: 106
      },
      "9": {
        loc: {
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 135,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 8
          },
          end: {
            line: 135,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\upload\\documentos\\route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { getServerSession } from 'next-auth';\nimport { authOptions } from '@/lib/auth';\nimport { saveFile, validateFile, UPLOAD_CONFIG } from '@/lib/upload';\nimport { z } from 'zod';\n\n/**\n * Schema para valida\xE7\xE3o dos par\xE2metros de upload\n */\nconst uploadDocumentoSchema = z.object({\n  atendenteId: z\n    .string()\n    .uuid('ID do atendente deve ser um UUID v\xE1lido')\n    .optional(),\n  tipo: z\n    .enum([\n      'RG',\n      'CPF',\n      'CNH',\n      'CTPS',\n      'TITULO_ELEITOR',\n      'CERTIFICADO',\n      'DIPLOMA',\n      'OUTRO',\n    ])\n    .optional(),\n  categoria: z.enum(['documento', 'foto']).default('documento'),\n});\n\n/**\n * POST /api/upload/documentos\n * Faz upload de documentos e fotos para atendentes\n */\nexport async function POST(request: NextRequest) {\n  try {\n    // Verificar autentica\xE7\xE3o\n    const session = await getServerSession(authOptions);\n    if (!session?.user) {\n      return NextResponse.json({ erro: 'N\xE3o autorizado' }, { status: 401 });\n    }\n\n    // Verificar permiss\xF5es\n    if (!['ADMIN', 'GERENTE'].includes(session.user.userType)) {\n      return NextResponse.json(\n        { erro: 'Sem permiss\xE3o para fazer upload de documentos' },\n        { status: 403 }\n      );\n    }\n\n    // Extrair dados do FormData\n    const formData = await request.formData();\n    const arquivo = formData.get('arquivo') as File;\n    const atendenteId = formData.get('atendenteId') as string;\n    const tipo = formData.get('tipo') as string;\n    const categoria = (formData.get('categoria') as string) || 'documento';\n\n    // Validar se o arquivo foi enviado\n    if (!arquivo) {\n      return NextResponse.json(\n        { erro: 'Nenhum arquivo foi enviado' },\n        { status: 400 }\n      );\n    }\n\n    // Validar par\xE2metros\n    const parametrosValidados = uploadDocumentoSchema.parse({\n      atendenteId,\n      tipo,\n      categoria,\n    });\n\n    // Determinar tipo de upload baseado na categoria\n    const tipoUpload =\n      parametrosValidados.categoria === 'foto' ? 'IMAGE' : 'DOCUMENT';\n\n    // Validar arquivo\n    const validacao = validateFile(arquivo, tipoUpload);\n    if (!validacao.valid) {\n      return NextResponse.json({ erro: validacao.error }, { status: 400 });\n    }\n\n    // Determinar subdiret\xF3rio baseado no atendente (se fornecido)\n    const subDirectory = parametrosValidados.atendenteId\n      ? `atendente_${parametrosValidados.atendenteId}`\n      : 'temp';\n\n    // Fazer upload do arquivo\n    const resultado = await saveFile(arquivo, {\n      type: tipoUpload,\n      subDirectory,\n      preserveOriginalName: false,\n    });\n\n    if (!resultado.success) {\n      return NextResponse.json(\n        { erro: resultado.error || 'Erro ao fazer upload do arquivo' },\n        { status: 500 }\n      );\n    }\n\n    // Retornar informa\xE7\xF5es do arquivo\n    return NextResponse.json(\n      {\n        mensagem: 'Upload realizado com sucesso',\n        arquivo: {\n          url: resultado.filePath,\n          nomeArquivo: resultado.fileName,\n          nomeOriginal: resultado.originalName,\n          tamanho: resultado.size,\n          tipoMime: resultado.mimeType,\n          categoria: parametrosValidados.categoria,\n          tipo: parametrosValidados.tipo,\n        },\n      },\n      { status: 201 }\n    );\n  } catch (error) {\n    console.error('Erro no upload de documento:', error);\n\n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        {\n          erro: 'Dados inv\xE1lidos',\n          detalhes: error.errors,\n        },\n        { status: 400 }\n      );\n    }\n\n    return NextResponse.json(\n      { erro: 'Erro interno do servidor' },\n      { status: 500 }\n    );\n  }\n}\n\n/**\n * GET /api/upload/documentos\n * Retorna informa\xE7\xF5es sobre os tipos de arquivo permitidos\n */\nexport async function GET() {\n  try {\n    return NextResponse.json({\n      configuracao: {\n        tamanhoMaximo: {\n          documento: `${UPLOAD_CONFIG.MAX_FILE_SIZE.DOCUMENT / (1024 * 1024)}MB`,\n          imagem: `${UPLOAD_CONFIG.MAX_FILE_SIZE.IMAGE / (1024 * 1024)}MB`,\n        },\n        tiposPermitidos: {\n          documento: UPLOAD_CONFIG.ALLOWED_TYPES.DOCUMENT,\n          imagem: UPLOAD_CONFIG.ALLOWED_TYPES.IMAGE,\n        },\n        extensoesPermitidas: {\n          documento: UPLOAD_CONFIG.ALLOWED_EXTENSIONS.DOCUMENT,\n          imagem: UPLOAD_CONFIG.ALLOWED_EXTENSIONS.IMAGE,\n        },\n      },\n    });\n  } catch (error) {\n    console.error('Erro ao obter configura\xE7\xF5es de upload:', error);\n    return NextResponse.json(\n      { erro: 'Erro interno do servidor' },\n      { status: 500 }\n    );\n  }\n}\n"],
      names: ["GET", "POST", "uploadDocumentoSchema", "z", "object", "atendenteId", "string", "uuid", "optional", "tipo", "enum", "categoria", "default", "request", "session", "getServerSession", "authOptions", "user", "NextResponse", "json", "erro", "status", "includes", "userType", "formData", "arquivo", "get", "parametrosValidados", "parse", "tipoUpload", "validacao", "validateFile", "valid", "error", "subDirectory", "resultado", "saveFile", "type", "preserveOriginalName", "success", "mensagem", "url", "filePath", "nomeArquivo", "fileName", "nomeOriginal", "originalName", "tamanho", "size", "tipoMime", "mimeType", "console", "ZodError", "detalhes", "errors", "configuracao", "tamanhoMaximo", "documento", "UPLOAD_CONFIG", "MAX_FILE_SIZE", "DOCUMENT", "imagem", "IMAGE", "tiposPermitidos", "ALLOWED_TYPES", "extensoesPermitidas", "ALLOWED_EXTENSIONS"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ff4aa404d08b14f897f7804bc4636ad43339d5fc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2klbh5wike = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2klbh5wike();
cov_2klbh5wike().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2klbh5wike().f[0]++;
  cov_2klbh5wike().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2klbh5wike().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2klbh5wike().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_2klbh5wike().f[1]++;
    cov_2klbh5wike().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_2klbh5wike().f[2]++;
    cov_2klbh5wike().s[5]++;
    return POST;
  }
});
const _server =
/* istanbul ignore next */
(cov_2klbh5wike().s[6]++, require("next/server"));
const _nextauth =
/* istanbul ignore next */
(cov_2klbh5wike().s[7]++, require("next-auth"));
const _auth =
/* istanbul ignore next */
(cov_2klbh5wike().s[8]++, require("../../../../lib/auth"));
const _upload =
/* istanbul ignore next */
(cov_2klbh5wike().s[9]++, require("../../../../lib/upload"));
const _zod =
/* istanbul ignore next */
(cov_2klbh5wike().s[10]++, require("zod"));
/**
 * Schema para validação dos parâmetros de upload
 */
const uploadDocumentoSchema =
/* istanbul ignore next */
(cov_2klbh5wike().s[11]++, _zod.z.object({
  atendenteId: _zod.z.string().uuid('ID do atendente deve ser um UUID válido').optional(),
  tipo: _zod.z.enum(['RG', 'CPF', 'CNH', 'CTPS', 'TITULO_ELEITOR', 'CERTIFICADO', 'DIPLOMA', 'OUTRO']).optional(),
  categoria: _zod.z.enum(['documento', 'foto']).default('documento')
}));
async function POST(request) {
  /* istanbul ignore next */
  cov_2klbh5wike().f[3]++;
  cov_2klbh5wike().s[12]++;
  try {
    // Verificar autenticação
    const session =
    /* istanbul ignore next */
    (cov_2klbh5wike().s[13]++, await (0, _nextauth.getServerSession)(_auth.authOptions));
    /* istanbul ignore next */
    cov_2klbh5wike().s[14]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_2klbh5wike().b[0][0]++;
      cov_2klbh5wike().s[15]++;
      return _server.NextResponse.json({
        erro: 'Não autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_2klbh5wike().b[0][1]++;
    }
    // Verificar permissões
    cov_2klbh5wike().s[16]++;
    if (!['ADMIN', 'GERENTE'].includes(session.user.userType)) {
      /* istanbul ignore next */
      cov_2klbh5wike().b[1][0]++;
      cov_2klbh5wike().s[17]++;
      return _server.NextResponse.json({
        erro: 'Sem permissão para fazer upload de documentos'
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_2klbh5wike().b[1][1]++;
    }
    // Extrair dados do FormData
    const formData =
    /* istanbul ignore next */
    (cov_2klbh5wike().s[18]++, await request.formData());
    const arquivo =
    /* istanbul ignore next */
    (cov_2klbh5wike().s[19]++, formData.get('arquivo'));
    const atendenteId =
    /* istanbul ignore next */
    (cov_2klbh5wike().s[20]++, formData.get('atendenteId'));
    const tipo =
    /* istanbul ignore next */
    (cov_2klbh5wike().s[21]++, formData.get('tipo'));
    const categoria =
    /* istanbul ignore next */
    (cov_2klbh5wike().s[22]++,
    /* istanbul ignore next */
    (cov_2klbh5wike().b[2][0]++, formData.get('categoria')) ||
    /* istanbul ignore next */
    (cov_2klbh5wike().b[2][1]++, 'documento'));
    // Validar se o arquivo foi enviado
    /* istanbul ignore next */
    cov_2klbh5wike().s[23]++;
    if (!arquivo) {
      /* istanbul ignore next */
      cov_2klbh5wike().b[3][0]++;
      cov_2klbh5wike().s[24]++;
      return _server.NextResponse.json({
        erro: 'Nenhum arquivo foi enviado'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_2klbh5wike().b[3][1]++;
    }
    // Validar parâmetros
    const parametrosValidados =
    /* istanbul ignore next */
    (cov_2klbh5wike().s[25]++, uploadDocumentoSchema.parse({
      atendenteId,
      tipo,
      categoria
    }));
    // Determinar tipo de upload baseado na categoria
    const tipoUpload =
    /* istanbul ignore next */
    (cov_2klbh5wike().s[26]++, parametrosValidados.categoria === 'foto' ?
    /* istanbul ignore next */
    (cov_2klbh5wike().b[4][0]++, 'IMAGE') :
    /* istanbul ignore next */
    (cov_2klbh5wike().b[4][1]++, 'DOCUMENT'));
    // Validar arquivo
    const validacao =
    /* istanbul ignore next */
    (cov_2klbh5wike().s[27]++, (0, _upload.validateFile)(arquivo, tipoUpload));
    /* istanbul ignore next */
    cov_2klbh5wike().s[28]++;
    if (!validacao.valid) {
      /* istanbul ignore next */
      cov_2klbh5wike().b[5][0]++;
      cov_2klbh5wike().s[29]++;
      return _server.NextResponse.json({
        erro: validacao.error
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_2klbh5wike().b[5][1]++;
    }
    // Determinar subdiretório baseado no atendente (se fornecido)
    const subDirectory =
    /* istanbul ignore next */
    (cov_2klbh5wike().s[30]++, parametrosValidados.atendenteId ?
    /* istanbul ignore next */
    (cov_2klbh5wike().b[6][0]++, `atendente_${parametrosValidados.atendenteId}`) :
    /* istanbul ignore next */
    (cov_2klbh5wike().b[6][1]++, 'temp'));
    // Fazer upload do arquivo
    const resultado =
    /* istanbul ignore next */
    (cov_2klbh5wike().s[31]++, await (0, _upload.saveFile)(arquivo, {
      type: tipoUpload,
      subDirectory,
      preserveOriginalName: false
    }));
    /* istanbul ignore next */
    cov_2klbh5wike().s[32]++;
    if (!resultado.success) {
      /* istanbul ignore next */
      cov_2klbh5wike().b[7][0]++;
      cov_2klbh5wike().s[33]++;
      return _server.NextResponse.json({
        erro:
        /* istanbul ignore next */
        (cov_2klbh5wike().b[8][0]++, resultado.error) ||
        /* istanbul ignore next */
        (cov_2klbh5wike().b[8][1]++, 'Erro ao fazer upload do arquivo')
      }, {
        status: 500
      });
    } else
    /* istanbul ignore next */
    {
      cov_2klbh5wike().b[7][1]++;
    }
    // Retornar informações do arquivo
    cov_2klbh5wike().s[34]++;
    return _server.NextResponse.json({
      mensagem: 'Upload realizado com sucesso',
      arquivo: {
        url: resultado.filePath,
        nomeArquivo: resultado.fileName,
        nomeOriginal: resultado.originalName,
        tamanho: resultado.size,
        tipoMime: resultado.mimeType,
        categoria: parametrosValidados.categoria,
        tipo: parametrosValidados.tipo
      }
    }, {
      status: 201
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2klbh5wike().s[35]++;
    console.error('Erro no upload de documento:', error);
    /* istanbul ignore next */
    cov_2klbh5wike().s[36]++;
    if (error instanceof _zod.z.ZodError) {
      /* istanbul ignore next */
      cov_2klbh5wike().b[9][0]++;
      cov_2klbh5wike().s[37]++;
      return _server.NextResponse.json({
        erro: 'Dados inválidos',
        detalhes: error.errors
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_2klbh5wike().b[9][1]++;
    }
    cov_2klbh5wike().s[38]++;
    return _server.NextResponse.json({
      erro: 'Erro interno do servidor'
    }, {
      status: 500
    });
  }
}
async function GET() {
  /* istanbul ignore next */
  cov_2klbh5wike().f[4]++;
  cov_2klbh5wike().s[39]++;
  try {
    /* istanbul ignore next */
    cov_2klbh5wike().s[40]++;
    return _server.NextResponse.json({
      configuracao: {
        tamanhoMaximo: {
          documento: `${_upload.UPLOAD_CONFIG.MAX_FILE_SIZE.DOCUMENT / (1024 * 1024)}MB`,
          imagem: `${_upload.UPLOAD_CONFIG.MAX_FILE_SIZE.IMAGE / (1024 * 1024)}MB`
        },
        tiposPermitidos: {
          documento: _upload.UPLOAD_CONFIG.ALLOWED_TYPES.DOCUMENT,
          imagem: _upload.UPLOAD_CONFIG.ALLOWED_TYPES.IMAGE
        },
        extensoesPermitidas: {
          documento: _upload.UPLOAD_CONFIG.ALLOWED_EXTENSIONS.DOCUMENT,
          imagem: _upload.UPLOAD_CONFIG.ALLOWED_EXTENSIONS.IMAGE
        }
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2klbh5wike().s[41]++;
    console.error('Erro ao obter configurações de upload:', error);
    /* istanbul ignore next */
    cov_2klbh5wike().s[42]++;
    return _server.NextResponse.json({
      erro: 'Erro interno do servidor'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJHRVQiLCJjb3ZfMmtsYmg1d2lrZSIsImYiLCJzIiwiUE9TVCIsInVwbG9hZERvY3VtZW50b1NjaGVtYSIsIl96b2QiLCJ6Iiwib2JqZWN0IiwiYXRlbmRlbnRlSWQiLCJzdHJpbmciLCJ1dWlkIiwib3B0aW9uYWwiLCJ0aXBvIiwiZW51bSIsImNhdGVnb3JpYSIsImRlZmF1bHQiLCJyZXF1ZXN0Iiwic2Vzc2lvbiIsIl9uZXh0YXV0aCIsImdldFNlcnZlclNlc3Npb24iLCJfYXV0aCIsImF1dGhPcHRpb25zIiwidXNlciIsImIiLCJfc2VydmVyIiwiTmV4dFJlc3BvbnNlIiwianNvbiIsImVycm8iLCJzdGF0dXMiLCJpbmNsdWRlcyIsInVzZXJUeXBlIiwiZm9ybURhdGEiLCJhcnF1aXZvIiwiZ2V0IiwicGFyYW1ldHJvc1ZhbGlkYWRvcyIsInBhcnNlIiwidGlwb1VwbG9hZCIsInZhbGlkYWNhbyIsIl91cGxvYWQiLCJ2YWxpZGF0ZUZpbGUiLCJ2YWxpZCIsImVycm9yIiwic3ViRGlyZWN0b3J5IiwicmVzdWx0YWRvIiwic2F2ZUZpbGUiLCJ0eXBlIiwicHJlc2VydmVPcmlnaW5hbE5hbWUiLCJzdWNjZXNzIiwibWVuc2FnZW0iLCJ1cmwiLCJmaWxlUGF0aCIsIm5vbWVBcnF1aXZvIiwiZmlsZU5hbWUiLCJub21lT3JpZ2luYWwiLCJvcmlnaW5hbE5hbWUiLCJ0YW1hbmhvIiwic2l6ZSIsInRpcG9NaW1lIiwibWltZVR5cGUiLCJjb25zb2xlIiwiWm9kRXJyb3IiLCJkZXRhbGhlcyIsImVycm9ycyIsImNvbmZpZ3VyYWNhbyIsInRhbWFuaG9NYXhpbW8iLCJkb2N1bWVudG8iLCJVUExPQURfQ09ORklHIiwiTUFYX0ZJTEVfU0laRSIsIkRPQ1VNRU5UIiwiaW1hZ2VtIiwiSU1BR0UiLCJ0aXBvc1Blcm1pdGlkb3MiLCJBTExPV0VEX1RZUEVTIiwiZXh0ZW5zb2VzUGVybWl0aWRhcyIsIkFMTE9XRURfRVhURU5TSU9OUyJdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTmVyZXUgSnJcXERvY3VtZW50c1xcRGV2XFxuZXdcXHNyY1xcYXBwXFxhcGlcXHVwbG9hZFxcZG9jdW1lbnRvc1xccm91dGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlcXVlc3QsIE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJztcbmltcG9ydCB7IGdldFNlcnZlclNlc3Npb24gfSBmcm9tICduZXh0LWF1dGgnO1xuaW1wb3J0IHsgYXV0aE9wdGlvbnMgfSBmcm9tICdAL2xpYi9hdXRoJztcbmltcG9ydCB7IHNhdmVGaWxlLCB2YWxpZGF0ZUZpbGUsIFVQTE9BRF9DT05GSUcgfSBmcm9tICdAL2xpYi91cGxvYWQnO1xuaW1wb3J0IHsgeiB9IGZyb20gJ3pvZCc7XG5cbi8qKlxuICogU2NoZW1hIHBhcmEgdmFsaWRhw6fDo28gZG9zIHBhcsOibWV0cm9zIGRlIHVwbG9hZFxuICovXG5jb25zdCB1cGxvYWREb2N1bWVudG9TY2hlbWEgPSB6Lm9iamVjdCh7XG4gIGF0ZW5kZW50ZUlkOiB6XG4gICAgLnN0cmluZygpXG4gICAgLnV1aWQoJ0lEIGRvIGF0ZW5kZW50ZSBkZXZlIHNlciB1bSBVVUlEIHbDoWxpZG8nKVxuICAgIC5vcHRpb25hbCgpLFxuICB0aXBvOiB6XG4gICAgLmVudW0oW1xuICAgICAgJ1JHJyxcbiAgICAgICdDUEYnLFxuICAgICAgJ0NOSCcsXG4gICAgICAnQ1RQUycsXG4gICAgICAnVElUVUxPX0VMRUlUT1InLFxuICAgICAgJ0NFUlRJRklDQURPJyxcbiAgICAgICdESVBMT01BJyxcbiAgICAgICdPVVRSTycsXG4gICAgXSlcbiAgICAub3B0aW9uYWwoKSxcbiAgY2F0ZWdvcmlhOiB6LmVudW0oWydkb2N1bWVudG8nLCAnZm90byddKS5kZWZhdWx0KCdkb2N1bWVudG8nKSxcbn0pO1xuXG4vKipcbiAqIFBPU1QgL2FwaS91cGxvYWQvZG9jdW1lbnRvc1xuICogRmF6IHVwbG9hZCBkZSBkb2N1bWVudG9zIGUgZm90b3MgcGFyYSBhdGVuZGVudGVzXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBQT1NUKHJlcXVlc3Q6IE5leHRSZXF1ZXN0KSB7XG4gIHRyeSB7XG4gICAgLy8gVmVyaWZpY2FyIGF1dGVudGljYcOnw6NvXG4gICAgY29uc3Qgc2Vzc2lvbiA9IGF3YWl0IGdldFNlcnZlclNlc3Npb24oYXV0aE9wdGlvbnMpO1xuICAgIGlmICghc2Vzc2lvbj8udXNlcikge1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgZXJybzogJ07Do28gYXV0b3JpemFkbycgfSwgeyBzdGF0dXM6IDQwMSB9KTtcbiAgICB9XG5cbiAgICAvLyBWZXJpZmljYXIgcGVybWlzc8O1ZXNcbiAgICBpZiAoIVsnQURNSU4nLCAnR0VSRU5URSddLmluY2x1ZGVzKHNlc3Npb24udXNlci51c2VyVHlwZSkpIHtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgICAgeyBlcnJvOiAnU2VtIHBlcm1pc3PDo28gcGFyYSBmYXplciB1cGxvYWQgZGUgZG9jdW1lbnRvcycgfSxcbiAgICAgICAgeyBzdGF0dXM6IDQwMyB9XG4gICAgICApO1xuICAgIH1cblxuICAgIC8vIEV4dHJhaXIgZGFkb3MgZG8gRm9ybURhdGFcbiAgICBjb25zdCBmb3JtRGF0YSA9IGF3YWl0IHJlcXVlc3QuZm9ybURhdGEoKTtcbiAgICBjb25zdCBhcnF1aXZvID0gZm9ybURhdGEuZ2V0KCdhcnF1aXZvJykgYXMgRmlsZTtcbiAgICBjb25zdCBhdGVuZGVudGVJZCA9IGZvcm1EYXRhLmdldCgnYXRlbmRlbnRlSWQnKSBhcyBzdHJpbmc7XG4gICAgY29uc3QgdGlwbyA9IGZvcm1EYXRhLmdldCgndGlwbycpIGFzIHN0cmluZztcbiAgICBjb25zdCBjYXRlZ29yaWEgPSAoZm9ybURhdGEuZ2V0KCdjYXRlZ29yaWEnKSBhcyBzdHJpbmcpIHx8ICdkb2N1bWVudG8nO1xuXG4gICAgLy8gVmFsaWRhciBzZSBvIGFycXVpdm8gZm9pIGVudmlhZG9cbiAgICBpZiAoIWFycXVpdm8pIHtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgICAgeyBlcnJvOiAnTmVuaHVtIGFycXVpdm8gZm9pIGVudmlhZG8nIH0sXG4gICAgICAgIHsgc3RhdHVzOiA0MDAgfVxuICAgICAgKTtcbiAgICB9XG5cbiAgICAvLyBWYWxpZGFyIHBhcsOibWV0cm9zXG4gICAgY29uc3QgcGFyYW1ldHJvc1ZhbGlkYWRvcyA9IHVwbG9hZERvY3VtZW50b1NjaGVtYS5wYXJzZSh7XG4gICAgICBhdGVuZGVudGVJZCxcbiAgICAgIHRpcG8sXG4gICAgICBjYXRlZ29yaWEsXG4gICAgfSk7XG5cbiAgICAvLyBEZXRlcm1pbmFyIHRpcG8gZGUgdXBsb2FkIGJhc2VhZG8gbmEgY2F0ZWdvcmlhXG4gICAgY29uc3QgdGlwb1VwbG9hZCA9XG4gICAgICBwYXJhbWV0cm9zVmFsaWRhZG9zLmNhdGVnb3JpYSA9PT0gJ2ZvdG8nID8gJ0lNQUdFJyA6ICdET0NVTUVOVCc7XG5cbiAgICAvLyBWYWxpZGFyIGFycXVpdm9cbiAgICBjb25zdCB2YWxpZGFjYW8gPSB2YWxpZGF0ZUZpbGUoYXJxdWl2bywgdGlwb1VwbG9hZCk7XG4gICAgaWYgKCF2YWxpZGFjYW8udmFsaWQpIHtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IGVycm86IHZhbGlkYWNhby5lcnJvciB9LCB7IHN0YXR1czogNDAwIH0pO1xuICAgIH1cblxuICAgIC8vIERldGVybWluYXIgc3ViZGlyZXTDs3JpbyBiYXNlYWRvIG5vIGF0ZW5kZW50ZSAoc2UgZm9ybmVjaWRvKVxuICAgIGNvbnN0IHN1YkRpcmVjdG9yeSA9IHBhcmFtZXRyb3NWYWxpZGFkb3MuYXRlbmRlbnRlSWRcbiAgICAgID8gYGF0ZW5kZW50ZV8ke3BhcmFtZXRyb3NWYWxpZGFkb3MuYXRlbmRlbnRlSWR9YFxuICAgICAgOiAndGVtcCc7XG5cbiAgICAvLyBGYXplciB1cGxvYWQgZG8gYXJxdWl2b1xuICAgIGNvbnN0IHJlc3VsdGFkbyA9IGF3YWl0IHNhdmVGaWxlKGFycXVpdm8sIHtcbiAgICAgIHR5cGU6IHRpcG9VcGxvYWQsXG4gICAgICBzdWJEaXJlY3RvcnksXG4gICAgICBwcmVzZXJ2ZU9yaWdpbmFsTmFtZTogZmFsc2UsXG4gICAgfSk7XG5cbiAgICBpZiAoIXJlc3VsdGFkby5zdWNjZXNzKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgIHsgZXJybzogcmVzdWx0YWRvLmVycm9yIHx8ICdFcnJvIGFvIGZhemVyIHVwbG9hZCBkbyBhcnF1aXZvJyB9LFxuICAgICAgICB7IHN0YXR1czogNTAwIH1cbiAgICAgICk7XG4gICAgfVxuXG4gICAgLy8gUmV0b3JuYXIgaW5mb3JtYcOnw7VlcyBkbyBhcnF1aXZvXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAge1xuICAgICAgICBtZW5zYWdlbTogJ1VwbG9hZCByZWFsaXphZG8gY29tIHN1Y2Vzc28nLFxuICAgICAgICBhcnF1aXZvOiB7XG4gICAgICAgICAgdXJsOiByZXN1bHRhZG8uZmlsZVBhdGgsXG4gICAgICAgICAgbm9tZUFycXVpdm86IHJlc3VsdGFkby5maWxlTmFtZSxcbiAgICAgICAgICBub21lT3JpZ2luYWw6IHJlc3VsdGFkby5vcmlnaW5hbE5hbWUsXG4gICAgICAgICAgdGFtYW5obzogcmVzdWx0YWRvLnNpemUsXG4gICAgICAgICAgdGlwb01pbWU6IHJlc3VsdGFkby5taW1lVHlwZSxcbiAgICAgICAgICBjYXRlZ29yaWE6IHBhcmFtZXRyb3NWYWxpZGFkb3MuY2F0ZWdvcmlhLFxuICAgICAgICAgIHRpcG86IHBhcmFtZXRyb3NWYWxpZGFkb3MudGlwbyxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgICB7IHN0YXR1czogMjAxIH1cbiAgICApO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm8gbm8gdXBsb2FkIGRlIGRvY3VtZW50bzonLCBlcnJvcik7XG5cbiAgICBpZiAoZXJyb3IgaW5zdGFuY2VvZiB6LlpvZEVycm9yKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgIHtcbiAgICAgICAgICBlcnJvOiAnRGFkb3MgaW52w6FsaWRvcycsXG4gICAgICAgICAgZGV0YWxoZXM6IGVycm9yLmVycm9ycyxcbiAgICAgICAgfSxcbiAgICAgICAgeyBzdGF0dXM6IDQwMCB9XG4gICAgICApO1xuICAgIH1cblxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgIHsgZXJybzogJ0Vycm8gaW50ZXJubyBkbyBzZXJ2aWRvcicgfSxcbiAgICAgIHsgc3RhdHVzOiA1MDAgfVxuICAgICk7XG4gIH1cbn1cblxuLyoqXG4gKiBHRVQgL2FwaS91cGxvYWQvZG9jdW1lbnRvc1xuICogUmV0b3JuYSBpbmZvcm1hw6fDtWVzIHNvYnJlIG9zIHRpcG9zIGRlIGFycXVpdm8gcGVybWl0aWRvc1xuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gR0VUKCkge1xuICB0cnkge1xuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XG4gICAgICBjb25maWd1cmFjYW86IHtcbiAgICAgICAgdGFtYW5ob01heGltbzoge1xuICAgICAgICAgIGRvY3VtZW50bzogYCR7VVBMT0FEX0NPTkZJRy5NQVhfRklMRV9TSVpFLkRPQ1VNRU5UIC8gKDEwMjQgKiAxMDI0KX1NQmAsXG4gICAgICAgICAgaW1hZ2VtOiBgJHtVUExPQURfQ09ORklHLk1BWF9GSUxFX1NJWkUuSU1BR0UgLyAoMTAyNCAqIDEwMjQpfU1CYCxcbiAgICAgICAgfSxcbiAgICAgICAgdGlwb3NQZXJtaXRpZG9zOiB7XG4gICAgICAgICAgZG9jdW1lbnRvOiBVUExPQURfQ09ORklHLkFMTE9XRURfVFlQRVMuRE9DVU1FTlQsXG4gICAgICAgICAgaW1hZ2VtOiBVUExPQURfQ09ORklHLkFMTE9XRURfVFlQRVMuSU1BR0UsXG4gICAgICAgIH0sXG4gICAgICAgIGV4dGVuc29lc1Blcm1pdGlkYXM6IHtcbiAgICAgICAgICBkb2N1bWVudG86IFVQTE9BRF9DT05GSUcuQUxMT1dFRF9FWFRFTlNJT05TLkRPQ1VNRU5ULFxuICAgICAgICAgIGltYWdlbTogVVBMT0FEX0NPTkZJRy5BTExPV0VEX0VYVEVOU0lPTlMuSU1BR0UsXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgIH0pO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm8gYW8gb2J0ZXIgY29uZmlndXJhw6fDtWVzIGRlIHVwbG9hZDonLCBlcnJvcik7XG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgeyBlcnJvOiAnRXJybyBpbnRlcm5vIGRvIHNlcnZpZG9yJyB9LFxuICAgICAgeyBzdGF0dXM6IDUwMCB9XG4gICAgKTtcbiAgfVxufVxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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