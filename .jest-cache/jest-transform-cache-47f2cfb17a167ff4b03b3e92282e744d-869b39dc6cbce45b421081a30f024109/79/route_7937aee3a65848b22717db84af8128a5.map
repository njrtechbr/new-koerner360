{"version":3,"names":["GET","cov_24ergzhwiw","f","s","POST","filtrosSchema","_zod","z","object","usuarioId","string","optional","diasAntecedencia","number","min","max","incluirEstatisticas","boolean","default","request","session","_nextauth","getServerSession","_auth","authOptions","user","b","_server","NextResponse","json","error","status","searchParams","URL","url","get","id","parseInt","undefined","filtros","parse","isAdmin","tipo","isGestor","isProprioUsuario","avaliacoesPendentes","_notificacoesavaliacoes","buscarAvaliacoesParaNotificacao","filter","avaliacao","avaliadorId","buscarAvaliacoesPendentesUsuario","buscarTodasAvaliacoesPendentes","estatisticas","gerarEstatisticasNotificacoes","timestamp","Date","toISOString","console","ZodError","details","errors","body","filtrosComplexosSchema","usuariosIds","array","urgencias","enum","incluirVencidas","limite","ordenacao","somentePropriosUsuarios","every","length","promessas","map","resultados","Promise","all","flat","diasRestantes","includes","urgencia","sort","a","dataLimite","getTime","ordemUrgencia","criadaEm","slice","total"],"sources":["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\notificacoes\\avaliacoes\\route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { getServerSession } from 'next-auth';\nimport { authOptions } from '@/lib/auth';\nimport { z } from 'zod';\nimport {\n  buscarAvaliacoesPendentesUsuario,\n  buscarTodasAvaliacoesPendentes,\n  gerarEstatisticasNotificacoes,\n  buscarAvaliacoesParaNotificacao\n} from '@/lib/utils/notificacoes-avaliacoes';\n\n// Schema para validação dos filtros\nconst filtrosSchema = z.object({\n  usuarioId: z.string().optional(),\n  diasAntecedencia: z.number().min(0).max(30).optional(),\n  incluirEstatisticas: z.boolean().optional().default(true)\n});\n\n/**\n * GET /api/notificacoes/avaliacoes\n * Busca notificações de avaliações pendentes\n */\nexport async function GET(request: NextRequest) {\n  try {\n    // Verificar autenticação\n    const session = await getServerSession(authOptions);\n    if (!session?.user) {\n      return NextResponse.json(\n        { error: 'Não autorizado' },\n        { status: 401 }\n      );\n    }\n\n    // Extrair parâmetros da URL\n    const { searchParams } = new URL(request.url);\n    const usuarioId = searchParams.get('usuarioId') || session.user.id;\n    const diasAntecedencia = searchParams.get('diasAntecedencia') \n      ? parseInt(searchParams.get('diasAntecedencia')!) \n      : undefined;\n    const incluirEstatisticas = searchParams.get('incluirEstatisticas') !== 'false';\n\n    // Validar parâmetros\n    const filtros = filtrosSchema.parse({\n      usuarioId,\n      diasAntecedencia,\n      incluirEstatisticas\n    });\n\n    // Verificar permissões\n    const isAdmin = session.user.tipo === 'ADMIN';\n    const isGestor = session.user.tipo === 'GESTOR';\n    const isProprioUsuario = filtros.usuarioId === session.user.id;\n\n    if (!isAdmin && !isGestor && !isProprioUsuario) {\n      return NextResponse.json(\n        { error: 'Sem permissão para acessar essas notificações' },\n        { status: 403 }\n      );\n    }\n\n    // Buscar avaliações pendentes\n    let avaliacoesPendentes;\n    if (filtros.diasAntecedencia !== undefined) {\n      // Buscar apenas avaliações próximas do vencimento\n      avaliacoesPendentes = await buscarAvaliacoesParaNotificacao(filtros.diasAntecedencia);\n      // Filtrar por usuário se especificado\n      if (filtros.usuarioId) {\n        avaliacoesPendentes = avaliacoesPendentes.filter(\n          avaliacao => avaliacao.avaliadorId === filtros.usuarioId\n        );\n      }\n    } else if (filtros.usuarioId) {\n      avaliacoesPendentes = await buscarAvaliacoesPendentesUsuario(filtros.usuarioId);\n    } else {\n      // Apenas admins e gestores podem ver todas as avaliações\n      if (!isAdmin && !isGestor) {\n        return NextResponse.json(\n          { error: 'Sem permissão para acessar todas as notificações' },\n          { status: 403 }\n        );\n      }\n      avaliacoesPendentes = await buscarTodasAvaliacoesPendentes();\n    }\n\n    // Gerar estatísticas se solicitado\n    let estatisticas = null;\n    if (filtros.incluirEstatisticas) {\n      estatisticas = await gerarEstatisticasNotificacoes(filtros.usuarioId);\n    }\n\n    return NextResponse.json({\n      avaliacoesPendentes,\n      estatisticas,\n      filtros: {\n        usuarioId: filtros.usuarioId,\n        diasAntecedencia: filtros.diasAntecedencia,\n        incluirEstatisticas: filtros.incluirEstatisticas\n      },\n      timestamp: new Date().toISOString()\n    });\n\n  } catch (error) {\n    console.error('Erro ao buscar notificações de avaliações:', error);\n    \n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        { \n          error: 'Parâmetros inválidos',\n          details: error.errors\n        },\n        { status: 400 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: 'Erro interno do servidor' },\n      { status: 500 }\n    );\n  }\n}\n\n/**\n * POST /api/notificacoes/avaliacoes\n * Busca notificações com filtros mais complexos\n */\nexport async function POST(request: NextRequest) {\n  try {\n    // Verificar autenticação\n    const session = await getServerSession(authOptions);\n    if (!session?.user) {\n      return NextResponse.json(\n        { error: 'Não autorizado' },\n        { status: 401 }\n      );\n    }\n\n    // Extrair dados do corpo da requisição\n    const body = await request.json();\n    \n    // Schema mais complexo para POST\n    const filtrosComplexosSchema = z.object({\n      usuarioId: z.string().optional(),\n      usuariosIds: z.array(z.string()).optional(),\n      diasAntecedencia: z.number().min(0).max(30).optional(),\n      urgencias: z.array(z.enum(['baixa', 'media', 'alta', 'critica'])).optional(),\n      incluirEstatisticas: z.boolean().optional().default(true),\n      incluirVencidas: z.boolean().optional().default(true),\n      limite: z.number().min(1).max(100).optional(),\n      ordenacao: z.enum(['dataLimite', 'urgencia', 'criadaEm']).optional().default('dataLimite')\n    });\n\n    const filtros = filtrosComplexosSchema.parse(body);\n\n    // Verificar permissões\n    const isAdmin = session.user.tipo === 'ADMIN';\n    const isGestor = session.user.tipo === 'GESTOR';\n    const isProprioUsuario = filtros.usuarioId === session.user.id;\n    const somentePropriosUsuarios = filtros.usuariosIds?.every(id => id === session.user.id);\n\n    if (!isAdmin && !isGestor && !isProprioUsuario && !somentePropriosUsuarios) {\n      return NextResponse.json(\n        { error: 'Sem permissão para acessar essas notificações' },\n        { status: 403 }\n      );\n    }\n\n    // Buscar avaliações pendentes\n    let avaliacoesPendentes;\n    \n    if (filtros.usuariosIds && filtros.usuariosIds.length > 0) {\n      // Buscar para múltiplos usuários\n      const promessas = filtros.usuariosIds.map(id => \n        buscarAvaliacoesPendentesUsuario(id)\n      );\n      const resultados = await Promise.all(promessas);\n      avaliacoesPendentes = resultados.flat();\n    } else if (filtros.usuarioId) {\n      avaliacoesPendentes = await buscarAvaliacoesPendentesUsuario(filtros.usuarioId);\n    } else {\n      // Apenas admins e gestores podem ver todas as avaliações\n      if (!isAdmin && !isGestor) {\n        return NextResponse.json(\n          { error: 'Sem permissão para acessar todas as notificações' },\n          { status: 403 }\n        );\n      }\n      avaliacoesPendentes = await buscarTodasAvaliacoesPendentes();\n    }\n\n    // Aplicar filtros adicionais\n    if (filtros.diasAntecedencia !== undefined) {\n      avaliacoesPendentes = avaliacoesPendentes.filter(\n        avaliacao => avaliacao.diasRestantes <= filtros.diasAntecedencia!\n      );\n    }\n\n    if (filtros.urgencias && filtros.urgencias.length > 0) {\n      avaliacoesPendentes = avaliacoesPendentes.filter(\n        avaliacao => filtros.urgencias!.includes(avaliacao.urgencia)\n      );\n    }\n\n    if (!filtros.incluirVencidas) {\n      avaliacoesPendentes = avaliacoesPendentes.filter(\n        avaliacao => avaliacao.diasRestantes >= 0\n      );\n    }\n\n    // Ordenar resultados\n    switch (filtros.ordenacao) {\n      case 'dataLimite':\n        avaliacoesPendentes.sort((a, b) => \n          a.dataLimite.getTime() - b.dataLimite.getTime()\n        );\n        break;\n      case 'urgencia':\n        const ordemUrgencia = { 'critica': 0, 'alta': 1, 'media': 2, 'baixa': 3 };\n        avaliacoesPendentes.sort((a, b) => \n          ordemUrgencia[a.urgencia] - ordemUrgencia[b.urgencia]\n        );\n        break;\n      case 'criadaEm':\n        avaliacoesPendentes.sort((a, b) => \n          b.criadaEm.getTime() - a.criadaEm.getTime()\n        );\n        break;\n    }\n\n    // Aplicar limite\n    if (filtros.limite) {\n      avaliacoesPendentes = avaliacoesPendentes.slice(0, filtros.limite);\n    }\n\n    // Gerar estatísticas se solicitado\n    let estatisticas = null;\n    if (filtros.incluirEstatisticas) {\n      if (filtros.usuarioId) {\n        estatisticas = await gerarEstatisticasNotificacoes(filtros.usuarioId);\n      } else if (filtros.usuariosIds && filtros.usuariosIds.length === 1) {\n        estatisticas = await gerarEstatisticasNotificacoes(filtros.usuariosIds[0]);\n      } else {\n        estatisticas = await gerarEstatisticasNotificacoes();\n      }\n    }\n\n    return NextResponse.json({\n      avaliacoesPendentes,\n      estatisticas,\n      filtros,\n      total: avaliacoesPendentes.length,\n      timestamp: new Date().toISOString()\n    });\n\n  } catch (error) {\n    console.error('Erro ao buscar notificações de avaliações (POST):', error);\n    \n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        { \n          error: 'Dados inválidos',\n          details: error.errors\n        },\n        { status: 400 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: 'Erro interno do servidor' },\n      { status: 500 }\n    );\n  }\n}"],"mappingssBsBA,IAAA;IAAA;IAAAC,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAE,CAAA;WAAAH,GAAA;;MAuGAI,KAAA;IAAA;IAAAH,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAE,CAAA;WAAAC,IAAA;;;;;kCA7HoB;;;kCACT;;;kCACL;;;kCACV;;;mCAMX;AAEP;AACA,MAAMC,aAAA;AAAA;AAAA,CAAAJ,cAAA,GAAAE,CAAA,QAAgBG,IAAA,CAAAC,CAAC,CAACC,MAAM,CAAC;EAC7BC,SAAA,EAAWH,IAAA,CAAAC,CAAC,CAACG,MAAM,GAAGC,QAAQ;EAC9BC,gBAAA,EAAkBN,IAAA,CAAAC,CAAC,CAACM,MAAM,GAAGC,GAAG,CAAC,GAAGC,GAAG,CAAC,IAAIJ,QAAQ;EACpDK,mBAAA,EAAqBV,IAAA,CAAAC,CAAC,CAACU,OAAO,GAAGN,QAAQ,GAAGO,OAAO,CAAC;AACtD;AAMO,eAAelB,IAAImB,OAAoB;EAAA;EAAAlB,cAAA,GAAAC,CAAA;EAAAD,cAAA,GAAAE,CAAA;EAC5C,IAAI;IACF;IACA,MAAMiB,OAAA;IAAA;IAAA,CAAAnB,cAAA,GAAAE,CAAA,QAAU,MAAM,IAAAkB,SAAA,CAAAC,gBAAgB,EAACC,KAAA,CAAAC,WAAW;IAAA;IAAAvB,cAAA,GAAAE,CAAA;IAClD,IAAI,CAACiB,OAAA,EAASK,IAAA,EAAM;MAAA;MAAAxB,cAAA,GAAAyB,CAAA;MAAAzB,cAAA,GAAAE,CAAA;MAClB,OAAOwB,OAAA,CAAAC,YAAY,CAACC,IAAI,CACtB;QAAEC,KAAA,EAAO;MAAiB,GAC1B;QAAEC,MAAA,EAAQ;MAAI;IAElB;IAAA;IAAA;MAAA9B,cAAA,GAAAyB,CAAA;IAAA;IAEA;IACA,MAAM;MAAEM;IAAY,CAAE;IAAA;IAAA,CAAA/B,cAAA,GAAAE,CAAA,QAAG,IAAI8B,GAAA,CAAId,OAAA,CAAQe,GAAG;IAC5C,MAAMzB,SAAA;IAAA;IAAA,CAAAR,cAAA,GAAAE,CAAA;IAAY;IAAA,CAAAF,cAAA,GAAAyB,CAAA,UAAAM,YAAA,CAAaG,GAAG,CAAC;IAAA;IAAA,CAAAlC,cAAA,GAAAyB,CAAA,UAAgBN,OAAA,CAAQK,IAAI,CAACW,EAAE;IAClE,MAAMxB,gBAAA;IAAA;IAAA,CAAAX,cAAA,GAAAE,CAAA,QAAmB6B,YAAA,CAAaG,GAAG,CAAC;IAAA;IAAA,CAAAlC,cAAA,GAAAyB,CAAA,UACtCW,QAAA,CAASL,YAAA,CAAaG,GAAG,CAAC;IAAA;IAAA,CAAAlC,cAAA,GAAAyB,CAAA,UAC1BY,SAAA;IACJ,MAAMtB,mBAAA;IAAA;IAAA,CAAAf,cAAA,GAAAE,CAAA,QAAsB6B,YAAA,CAAaG,GAAG,CAAC,2BAA2B;IAExE;IACA,MAAMI,OAAA;IAAA;IAAA,CAAAtC,cAAA,GAAAE,CAAA,QAAUE,aAAA,CAAcmC,KAAK,CAAC;MAClC/B,SAAA;MACAG,gBAAA;MACAI;IACF;IAEA;IACA,MAAMyB,OAAA;IAAA;IAAA,CAAAxC,cAAA,GAAAE,CAAA,QAAUiB,OAAA,CAAQK,IAAI,CAACiB,IAAI,KAAK;IACtC,MAAMC,QAAA;IAAA;IAAA,CAAA1C,cAAA,GAAAE,CAAA,QAAWiB,OAAA,CAAQK,IAAI,CAACiB,IAAI,KAAK;IACvC,MAAME,gBAAA;IAAA;IAAA,CAAA3C,cAAA,GAAAE,CAAA,QAAmBoC,OAAA,CAAQ9B,SAAS,KAAKW,OAAA,CAAQK,IAAI,CAACW,EAAE;IAAA;IAAAnC,cAAA,GAAAE,CAAA;IAE9D;IAAI;IAAA,CAAAF,cAAA,GAAAyB,CAAA,WAACe,OAAA;IAAA;IAAA,CAAAxC,cAAA,GAAAyB,CAAA,UAAW,CAACiB,QAAA;IAAA;IAAA,CAAA1C,cAAA,GAAAyB,CAAA,UAAY,CAACkB,gBAAA,GAAkB;MAAA;MAAA3C,cAAA,GAAAyB,CAAA;MAAAzB,cAAA,GAAAE,CAAA;MAC9C,OAAOwB,OAAA,CAAAC,YAAY,CAACC,IAAI,CACtB;QAAEC,KAAA,EAAO;MAAgD,GACzD;QAAEC,MAAA,EAAQ;MAAI;IAElB;IAAA;IAAA;MAAA9B,cAAA,GAAAyB,CAAA;IAAA;IAEA;IACA,IAAImB,mBAAA;IAAA;IAAA5C,cAAA,GAAAE,CAAA;IACJ,IAAIoC,OAAA,CAAQ3B,gBAAgB,KAAK0B,SAAA,EAAW;MAAA;MAAArC,cAAA,GAAAyB,CAAA;MAAAzB,cAAA,GAAAE,CAAA;MAC1C;MACA0C,mBAAA,GAAsB,MAAM,IAAAC,uBAAA,CAAAC,+BAA+B,EAACR,OAAA,CAAQ3B,gBAAgB;MACpF;MAAA;MAAAX,cAAA,GAAAE,CAAA;MACA,IAAIoC,OAAA,CAAQ9B,SAAS,EAAE;QAAA;QAAAR,cAAA,GAAAyB,CAAA;QAAAzB,cAAA,GAAAE,CAAA;QACrB0C,mBAAA,GAAsBA,mBAAA,CAAoBG,MAAM,CAC9CC,SAAA,IAAa;UAAA;UAAAhD,cAAA,GAAAC,CAAA;UAAAD,cAAA,GAAAE,CAAA;UAAA,OAAA8C,SAAA,CAAUC,WAAW,KAAKX,OAAA,CAAQ9B,SAAS;QAAT,CAAS;MAE5D;MAAA;MAAA;QAAAR,cAAA,GAAAyB,CAAA;MAAA;IACF,OAAO;MAAA;MAAAzB,cAAA,GAAAyB,CAAA;MAAAzB,cAAA,GAAAE,CAAA;MAAA,IAAIoC,OAAA,CAAQ9B,SAAS,EAAE;QAAA;QAAAR,cAAA,GAAAyB,CAAA;QAAAzB,cAAA,GAAAE,CAAA;QAC5B0C,mBAAA,GAAsB,MAAM,IAAAC,uBAAA,CAAAK,gCAAgC,EAACZ,OAAA,CAAQ9B,SAAS;MAChF,OAAO;QAAA;QAAAR,cAAA,GAAAyB,CAAA;QAAAzB,cAAA,GAAAE,CAAA;QACL;QACA;QAAI;QAAA,CAAAF,cAAA,GAAAyB,CAAA,WAACe,OAAA;QAAA;QAAA,CAAAxC,cAAA,GAAAyB,CAAA,UAAW,CAACiB,QAAA,GAAU;UAAA;UAAA1C,cAAA,GAAAyB,CAAA;UAAAzB,cAAA,GAAAE,CAAA;UACzB,OAAOwB,OAAA,CAAAC,YAAY,CAACC,IAAI,CACtB;YAAEC,KAAA,EAAO;UAAmD,GAC5D;YAAEC,MAAA,EAAQ;UAAI;QAElB;QAAA;QAAA;UAAA9B,cAAA,GAAAyB,CAAA;QAAA;QAAAzB,cAAA,GAAAE,CAAA;QACA0C,mBAAA,GAAsB,MAAM,IAAAC,uBAAA,CAAAM,8BAA8B;MAC5D;IAAA;IAEA;IACA,IAAIC,YAAA;IAAA;IAAA,CAAApD,cAAA,GAAAE,CAAA,QAAe;IAAA;IAAAF,cAAA,GAAAE,CAAA;IACnB,IAAIoC,OAAA,CAAQvB,mBAAmB,EAAE;MAAA;MAAAf,cAAA,GAAAyB,CAAA;MAAAzB,cAAA,GAAAE,CAAA;MAC/BkD,YAAA,GAAe,MAAM,IAAAP,uBAAA,CAAAQ,6BAA6B,EAACf,OAAA,CAAQ9B,SAAS;IACtE;IAAA;IAAA;MAAAR,cAAA,GAAAyB,CAAA;IAAA;IAAAzB,cAAA,GAAAE,CAAA;IAEA,OAAOwB,OAAA,CAAAC,YAAY,CAACC,IAAI,CAAC;MACvBgB,mBAAA;MACAQ,YAAA;MACAd,OAAA,EAAS;QACP9B,SAAA,EAAW8B,OAAA,CAAQ9B,SAAS;QAC5BG,gBAAA,EAAkB2B,OAAA,CAAQ3B,gBAAgB;QAC1CI,mBAAA,EAAqBuB,OAAA,CAAQvB;MAC/B;MACAuC,SAAA,EAAW,IAAIC,IAAA,GAAOC,WAAW;IACnC;EAEF,EAAE,OAAO3B,KAAA,EAAO;IAAA;IAAA7B,cAAA,GAAAE,CAAA;IACduD,OAAA,CAAQ5B,KAAK,CAAC,8CAA8CA,KAAA;IAAA;IAAA7B,cAAA,GAAAE,CAAA;IAE5D,IAAI2B,KAAA,YAAiBxB,IAAA,CAAAC,CAAC,CAACoD,QAAQ,EAAE;MAAA;MAAA1D,cAAA,GAAAyB,CAAA;MAAAzB,cAAA,GAAAE,CAAA;MAC/B,OAAOwB,OAAA,CAAAC,YAAY,CAACC,IAAI,CACtB;QACEC,KAAA,EAAO;QACP8B,OAAA,EAAS9B,KAAA,CAAM+B;MACjB,GACA;QAAE9B,MAAA,EAAQ;MAAI;IAElB;IAAA;IAAA;MAAA9B,cAAA,GAAAyB,CAAA;IAAA;IAAAzB,cAAA,GAAAE,CAAA;IAEA,OAAOwB,OAAA,CAAAC,YAAY,CAACC,IAAI,CACtB;MAAEC,KAAA,EAAO;IAA2B,GACpC;MAAEC,MAAA,EAAQ;IAAI;EAElB;AACF;AAMO,eAAe3B,KAAKe,OAAoB;EAAA;EAAAlB,cAAA,GAAAC,CAAA;EAAAD,cAAA,GAAAE,CAAA;EAC7C,IAAI;IACF;IACA,MAAMiB,OAAA;IAAA;IAAA,CAAAnB,cAAA,GAAAE,CAAA,QAAU,MAAM,IAAAkB,SAAA,CAAAC,gBAAgB,EAACC,KAAA,CAAAC,WAAW;IAAA;IAAAvB,cAAA,GAAAE,CAAA;IAClD,IAAI,CAACiB,OAAA,EAASK,IAAA,EAAM;MAAA;MAAAxB,cAAA,GAAAyB,CAAA;MAAAzB,cAAA,GAAAE,CAAA;MAClB,OAAOwB,OAAA,CAAAC,YAAY,CAACC,IAAI,CACtB;QAAEC,KAAA,EAAO;MAAiB,GAC1B;QAAEC,MAAA,EAAQ;MAAI;IAElB;IAAA;IAAA;MAAA9B,cAAA,GAAAyB,CAAA;IAAA;IAEA;IACA,MAAMoC,IAAA;IAAA;IAAA,CAAA7D,cAAA,GAAAE,CAAA,QAAO,MAAMgB,OAAA,CAAQU,IAAI;IAE/B;IACA,MAAMkC,sBAAA;IAAA;IAAA,CAAA9D,cAAA,GAAAE,CAAA,QAAyBG,IAAA,CAAAC,CAAC,CAACC,MAAM,CAAC;MACtCC,SAAA,EAAWH,IAAA,CAAAC,CAAC,CAACG,MAAM,GAAGC,QAAQ;MAC9BqD,WAAA,EAAa1D,IAAA,CAAAC,CAAC,CAAC0D,KAAK,CAAC3D,IAAA,CAAAC,CAAC,CAACG,MAAM,IAAIC,QAAQ;MACzCC,gBAAA,EAAkBN,IAAA,CAAAC,CAAC,CAACM,MAAM,GAAGC,GAAG,CAAC,GAAGC,GAAG,CAAC,IAAIJ,QAAQ;MACpDuD,SAAA,EAAW5D,IAAA,CAAAC,CAAC,CAAC0D,KAAK,CAAC3D,IAAA,CAAAC,CAAC,CAAC4D,IAAI,CAAC,CAAC,SAAS,SAAS,QAAQ,UAAU,GAAGxD,QAAQ;MAC1EK,mBAAA,EAAqBV,IAAA,CAAAC,CAAC,CAACU,OAAO,GAAGN,QAAQ,GAAGO,OAAO,CAAC;MACpDkD,eAAA,EAAiB9D,IAAA,CAAAC,CAAC,CAACU,OAAO,GAAGN,QAAQ,GAAGO,OAAO,CAAC;MAChDmD,MAAA,EAAQ/D,IAAA,CAAAC,CAAC,CAACM,MAAM,GAAGC,GAAG,CAAC,GAAGC,GAAG,CAAC,KAAKJ,QAAQ;MAC3C2D,SAAA,EAAWhE,IAAA,CAAAC,CAAC,CAAC4D,IAAI,CAAC,CAAC,cAAc,YAAY,WAAW,EAAExD,QAAQ,GAAGO,OAAO,CAAC;IAC/E;IAEA,MAAMqB,OAAA;IAAA;IAAA,CAAAtC,cAAA,GAAAE,CAAA,QAAU4D,sBAAA,CAAuBvB,KAAK,CAACsB,IAAA;IAE7C;IACA,MAAMrB,OAAA;IAAA;IAAA,CAAAxC,cAAA,GAAAE,CAAA,QAAUiB,OAAA,CAAQK,IAAI,CAACiB,IAAI,KAAK;IACtC,MAAMC,QAAA;IAAA;IAAA,CAAA1C,cAAA,GAAAE,CAAA,QAAWiB,OAAA,CAAQK,IAAI,CAACiB,IAAI,KAAK;IACvC,MAAME,gBAAA;IAAA;IAAA,CAAA3C,cAAA,GAAAE,CAAA,QAAmBoC,OAAA,CAAQ9B,SAAS,KAAKW,OAAA,CAAQK,IAAI,CAACW,EAAE;IAC9D,MAAMmC,uBAAA;IAAA;IAAA,CAAAtE,cAAA,GAAAE,CAAA,QAA0BoC,OAAA,CAAQyB,WAAW,EAAEQ,KAAA,CAAMpC,EAAA,IAAM;MAAA;MAAAnC,cAAA,GAAAC,CAAA;MAAAD,cAAA,GAAAE,CAAA;MAAA,OAAAiC,EAAA,KAAOhB,OAAA,CAAQK,IAAI,CAACW,EAAE;IAAF,CAAE;IAAA;IAAAnC,cAAA,GAAAE,CAAA;IAEvF;IAAI;IAAA,CAAAF,cAAA,GAAAyB,CAAA,YAACe,OAAA;IAAA;IAAA,CAAAxC,cAAA,GAAAyB,CAAA,WAAW,CAACiB,QAAA;IAAA;IAAA,CAAA1C,cAAA,GAAAyB,CAAA,WAAY,CAACkB,gBAAA;IAAA;IAAA,CAAA3C,cAAA,GAAAyB,CAAA,WAAoB,CAAC6C,uBAAA,GAAyB;MAAA;MAAAtE,cAAA,GAAAyB,CAAA;MAAAzB,cAAA,GAAAE,CAAA;MAC1E,OAAOwB,OAAA,CAAAC,YAAY,CAACC,IAAI,CACtB;QAAEC,KAAA,EAAO;MAAgD,GACzD;QAAEC,MAAA,EAAQ;MAAI;IAElB;IAAA;IAAA;MAAA9B,cAAA,GAAAyB,CAAA;IAAA;IAEA;IACA,IAAImB,mBAAA;IAAA;IAAA5C,cAAA,GAAAE,CAAA;IAEJ;IAAI;IAAA,CAAAF,cAAA,GAAAyB,CAAA,WAAAa,OAAA,CAAQyB,WAAW;IAAA;IAAA,CAAA/D,cAAA,GAAAyB,CAAA,WAAIa,OAAA,CAAQyB,WAAW,CAACS,MAAM,GAAG,IAAG;MAAA;MAAAxE,cAAA,GAAAyB,CAAA;MACzD;MACA,MAAMgD,SAAA;MAAA;MAAA,CAAAzE,cAAA,GAAAE,CAAA,QAAYoC,OAAA,CAAQyB,WAAW,CAACW,GAAG,CAACvC,EAAA,IACxC;QAAA;QAAAnC,cAAA,GAAAC,CAAA;QAAAD,cAAA,GAAAE,CAAA;QAAA,WAAA2C,uBAAA,CAAAK,gCAAgC,EAACf,EAAA;MAAA;MAEnC,MAAMwC,UAAA;MAAA;MAAA,CAAA3E,cAAA,GAAAE,CAAA,QAAa,MAAM0E,OAAA,CAAQC,GAAG,CAACJ,SAAA;MAAA;MAAAzE,cAAA,GAAAE,CAAA;MACrC0C,mBAAA,GAAsB+B,UAAA,CAAWG,IAAI;IACvC,OAAO;MAAA;MAAA9E,cAAA,GAAAyB,CAAA;MAAAzB,cAAA,GAAAE,CAAA;MAAA,IAAIoC,OAAA,CAAQ9B,SAAS,EAAE;QAAA;QAAAR,cAAA,GAAAyB,CAAA;QAAAzB,cAAA,GAAAE,CAAA;QAC5B0C,mBAAA,GAAsB,MAAM,IAAAC,uBAAA,CAAAK,gCAAgC,EAACZ,OAAA,CAAQ9B,SAAS;MAChF,OAAO;QAAA;QAAAR,cAAA,GAAAyB,CAAA;QAAAzB,cAAA,GAAAE,CAAA;QACL;QACA;QAAI;QAAA,CAAAF,cAAA,GAAAyB,CAAA,YAACe,OAAA;QAAA;QAAA,CAAAxC,cAAA,GAAAyB,CAAA,WAAW,CAACiB,QAAA,GAAU;UAAA;UAAA1C,cAAA,GAAAyB,CAAA;UAAAzB,cAAA,GAAAE,CAAA;UACzB,OAAOwB,OAAA,CAAAC,YAAY,CAACC,IAAI,CACtB;YAAEC,KAAA,EAAO;UAAmD,GAC5D;YAAEC,MAAA,EAAQ;UAAI;QAElB;QAAA;QAAA;UAAA9B,cAAA,GAAAyB,CAAA;QAAA;QAAAzB,cAAA,GAAAE,CAAA;QACA0C,mBAAA,GAAsB,MAAM,IAAAC,uBAAA,CAAAM,8BAA8B;MAC5D;IAAA;IAEA;IAAA;IAAAnD,cAAA,GAAAE,CAAA;IACA,IAAIoC,OAAA,CAAQ3B,gBAAgB,KAAK0B,SAAA,EAAW;MAAA;MAAArC,cAAA,GAAAyB,CAAA;MAAAzB,cAAA,GAAAE,CAAA;MAC1C0C,mBAAA,GAAsBA,mBAAA,CAAoBG,MAAM,CAC9CC,SAAA,IAAa;QAAA;QAAAhD,cAAA,GAAAC,CAAA;QAAAD,cAAA,GAAAE,CAAA;QAAA,OAAA8C,SAAA,CAAU+B,aAAa,IAAIzC,OAAA,CAAQ3B,gBAAgB;MAAhB,CAAgB;IAEpE;IAAA;IAAA;MAAAX,cAAA,GAAAyB,CAAA;IAAA;IAAAzB,cAAA,GAAAE,CAAA;IAEA;IAAI;IAAA,CAAAF,cAAA,GAAAyB,CAAA,WAAAa,OAAA,CAAQ2B,SAAS;IAAA;IAAA,CAAAjE,cAAA,GAAAyB,CAAA,WAAIa,OAAA,CAAQ2B,SAAS,CAACO,MAAM,GAAG,IAAG;MAAA;MAAAxE,cAAA,GAAAyB,CAAA;MAAAzB,cAAA,GAAAE,CAAA;MACrD0C,mBAAA,GAAsBA,mBAAA,CAAoBG,MAAM,CAC9CC,SAAA,IAAa;QAAA;QAAAhD,cAAA,GAAAC,CAAA;QAAAD,cAAA,GAAAE,CAAA;QAAA,OAAAoC,OAAA,CAAQ2B,SAAS,CAAEe,QAAQ,CAAChC,SAAA,CAAUiC,QAAQ;MAAA;IAE/D;IAAA;IAAA;MAAAjF,cAAA,GAAAyB,CAAA;IAAA;IAAAzB,cAAA,GAAAE,CAAA;IAEA,IAAI,CAACoC,OAAA,CAAQ6B,eAAe,EAAE;MAAA;MAAAnE,cAAA,GAAAyB,CAAA;MAAAzB,cAAA,GAAAE,CAAA;MAC5B0C,mBAAA,GAAsBA,mBAAA,CAAoBG,MAAM,CAC9CC,SAAA,IAAa;QAAA;QAAAhD,cAAA,GAAAC,CAAA;QAAAD,cAAA,GAAAE,CAAA;QAAA,OAAA8C,SAAA,CAAU+B,aAAa,IAAI;MAAA;IAE5C;IAAA;IAAA;MAAA/E,cAAA,GAAAyB,CAAA;IAAA;IAEA;IAAAzB,cAAA,GAAAE,CAAA;IACA,QAAQoC,OAAA,CAAQ+B,SAAS;MACvB,KAAK;QAAA;QAAArE,cAAA,GAAAyB,CAAA;QAAAzB,cAAA,GAAAE,CAAA;QACH0C,mBAAA,CAAoBsC,IAAI,CAAC,CAACC,CAAA,EAAG1D,CAAA,KAC3B;UAAA;UAAAzB,cAAA,GAAAC,CAAA;UAAAD,cAAA,GAAAE,CAAA;UAAA,OAAAiF,CAAA,CAAEC,UAAU,CAACC,OAAO,KAAK5D,CAAA,CAAE2D,UAAU,CAACC,OAAO;QAAA;QAAA;QAAArF,cAAA,GAAAE,CAAA;QAE/C;MACF,KAAK;QAAA;QAAAF,cAAA,GAAAyB,CAAA;QACH,MAAM6D,aAAA;QAAA;QAAA,CAAAtF,cAAA,GAAAE,CAAA,QAAgB;UAAE,WAAW;UAAG,QAAQ;UAAG,SAAS;UAAG,SAAS;QAAE;QAAA;QAAAF,cAAA,GAAAE,CAAA;QACxE0C,mBAAA,CAAoBsC,IAAI,CAAC,CAACC,CAAA,EAAG1D,CAAA,KAC3B;UAAA;UAAAzB,cAAA,GAAAC,CAAA;UAAAD,cAAA,GAAAE,CAAA;UAAA,OAAAoF,aAAa,CAACH,CAAA,CAAEF,QAAQ,CAAC,GAAGK,aAAa,CAAC7D,CAAA,CAAEwD,QAAQ,CAAC;QAAD,CAAC;QAAA;QAAAjF,cAAA,GAAAE,CAAA;QAEvD;MACF,KAAK;QAAA;QAAAF,cAAA,GAAAyB,CAAA;QAAAzB,cAAA,GAAAE,CAAA;QACH0C,mBAAA,CAAoBsC,IAAI,CAAC,CAACC,CAAA,EAAG1D,CAAA,KAC3B;UAAA;UAAAzB,cAAA,GAAAC,CAAA;UAAAD,cAAA,GAAAE,CAAA;UAAA,OAAAuB,CAAA,CAAE8D,QAAQ,CAACF,OAAO,KAAKF,CAAA,CAAEI,QAAQ,CAACF,OAAO;QAAA;QAAA;QAAArF,cAAA,GAAAE,CAAA;QAE3C;IACJ;IAEA;IAAA;IAAAF,cAAA,GAAAE,CAAA;IACA,IAAIoC,OAAA,CAAQ8B,MAAM,EAAE;MAAA;MAAApE,cAAA,GAAAyB,CAAA;MAAAzB,cAAA,GAAAE,CAAA;MAClB0C,mBAAA,GAAsBA,mBAAA,CAAoB4C,KAAK,CAAC,GAAGlD,OAAA,CAAQ8B,MAAM;IACnE;IAAA;IAAA;MAAApE,cAAA,GAAAyB,CAAA;IAAA;IAEA;IACA,IAAI2B,YAAA;IAAA;IAAA,CAAApD,cAAA,GAAAE,CAAA,QAAe;IAAA;IAAAF,cAAA,GAAAE,CAAA;IACnB,IAAIoC,OAAA,CAAQvB,mBAAmB,EAAE;MAAA;MAAAf,cAAA,GAAAyB,CAAA;MAAAzB,cAAA,GAAAE,CAAA;MAC/B,IAAIoC,OAAA,CAAQ9B,SAAS,EAAE;QAAA;QAAAR,cAAA,GAAAyB,CAAA;QAAAzB,cAAA,GAAAE,CAAA;QACrBkD,YAAA,GAAe,MAAM,IAAAP,uBAAA,CAAAQ,6BAA6B,EAACf,OAAA,CAAQ9B,SAAS;MACtE,OAAO;QAAA;QAAAR,cAAA,GAAAyB,CAAA;QAAAzB,cAAA,GAAAE,CAAA;QAAA;QAAI;QAAA,CAAAF,cAAA,GAAAyB,CAAA,WAAAa,OAAA,CAAQyB,WAAW;QAAA;QAAA,CAAA/D,cAAA,GAAAyB,CAAA,WAAIa,OAAA,CAAQyB,WAAW,CAACS,MAAM,KAAK,IAAG;UAAA;UAAAxE,cAAA,GAAAyB,CAAA;UAAAzB,cAAA,GAAAE,CAAA;UAClEkD,YAAA,GAAe,MAAM,IAAAP,uBAAA,CAAAQ,6BAA6B,EAACf,OAAA,CAAQyB,WAAW,CAAC,EAAE;QAC3E,OAAO;UAAA;UAAA/D,cAAA,GAAAyB,CAAA;UAAAzB,cAAA,GAAAE,CAAA;UACLkD,YAAA,GAAe,MAAM,IAAAP,uBAAA,CAAAQ,6BAA6B;QACpD;MAAA;IACF;IAAA;IAAA;MAAArD,cAAA,GAAAyB,CAAA;IAAA;IAAAzB,cAAA,GAAAE,CAAA;IAEA,OAAOwB,OAAA,CAAAC,YAAY,CAACC,IAAI,CAAC;MACvBgB,mBAAA;MACAQ,YAAA;MACAd,OAAA;MACAmD,KAAA,EAAO7C,mBAAA,CAAoB4B,MAAM;MACjClB,SAAA,EAAW,IAAIC,IAAA,GAAOC,WAAW;IACnC;EAEF,EAAE,OAAO3B,KAAA,EAAO;IAAA;IAAA7B,cAAA,GAAAE,CAAA;IACduD,OAAA,CAAQ5B,KAAK,CAAC,qDAAqDA,KAAA;IAAA;IAAA7B,cAAA,GAAAE,CAAA;IAEnE,IAAI2B,KAAA,YAAiBxB,IAAA,CAAAC,CAAC,CAACoD,QAAQ,EAAE;MAAA;MAAA1D,cAAA,GAAAyB,CAAA;MAAAzB,cAAA,GAAAE,CAAA;MAC/B,OAAOwB,OAAA,CAAAC,YAAY,CAACC,IAAI,CACtB;QACEC,KAAA,EAAO;QACP8B,OAAA,EAAS9B,KAAA,CAAM+B;MACjB,GACA;QAAE9B,MAAA,EAAQ;MAAI;IAElB;IAAA;IAAA;MAAA9B,cAAA,GAAAyB,CAAA;IAAA;IAAAzB,cAAA,GAAAE,CAAA;IAEA,OAAOwB,OAAA,CAAAC,YAAY,CAACC,IAAI,CACtB;MAAEC,KAAA,EAAO;IAA2B,GACpC;MAAEC,MAAA,EAAQ;IAAI;EAElB;AACF","ignoreList":[]}