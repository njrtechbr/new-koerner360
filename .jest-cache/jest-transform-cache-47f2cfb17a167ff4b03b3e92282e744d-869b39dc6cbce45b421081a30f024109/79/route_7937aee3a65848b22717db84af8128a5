4f0f00066f9b0c657cf0063ab72675ba
"use strict";

/* istanbul ignore next */
function cov_24ergzhwiw() {
  var path = "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\notificacoes\\avaliacoes\\route.ts";
  var hash = "e513f1c1f2f667af234d5fcfdcc6b24f3914c3fd";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\notificacoes\\avaliacoes\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 19
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 20
        }
      },
      "6": {
        start: {
          line: 19,
          column: 16
        },
        end: {
          line: 19,
          column: 38
        }
      },
      "7": {
        start: {
          line: 20,
          column: 18
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "8": {
        start: {
          line: 21,
          column: 14
        },
        end: {
          line: 21,
          column: 45
        }
      },
      "9": {
        start: {
          line: 22,
          column: 13
        },
        end: {
          line: 22,
          column: 27
        }
      },
      "10": {
        start: {
          line: 23,
          column: 32
        },
        end: {
          line: 23,
          column: 88
        }
      },
      "11": {
        start: {
          line: 25,
          column: 22
        },
        end: {
          line: 29,
          column: 2
        }
      },
      "12": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 115,
          column: 5
        }
      },
      "13": {
        start: {
          line: 33,
          column: 24
        },
        end: {
          line: 33,
          column: 80
        }
      },
      "14": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 40,
          column: 9
        }
      },
      "15": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 39,
          column: 15
        }
      },
      "16": {
        start: {
          line: 42,
          column: 33
        },
        end: {
          line: 42,
          column: 53
        }
      },
      "17": {
        start: {
          line: 43,
          column: 26
        },
        end: {
          line: 43,
          column: 74
        }
      },
      "18": {
        start: {
          line: 44,
          column: 33
        },
        end: {
          line: 44,
          column: 130
        }
      },
      "19": {
        start: {
          line: 45,
          column: 36
        },
        end: {
          line: 45,
          column: 87
        }
      },
      "20": {
        start: {
          line: 47,
          column: 24
        },
        end: {
          line: 51,
          column: 10
        }
      },
      "21": {
        start: {
          line: 53,
          column: 24
        },
        end: {
          line: 53,
          column: 53
        }
      },
      "22": {
        start: {
          line: 54,
          column: 25
        },
        end: {
          line: 54,
          column: 55
        }
      },
      "23": {
        start: {
          line: 55,
          column: 33
        },
        end: {
          line: 55,
          column: 70
        }
      },
      "24": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "25": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 61,
          column: 15
        }
      },
      "26": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "27": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 127
        }
      },
      "28": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 71,
          column: 13
        }
      },
      "29": {
        start: {
          line: 70,
          column: 16
        },
        end: {
          line: 70,
          column: 123
        }
      },
      "30": {
        start: {
          line: 70,
          column: 78
        },
        end: {
          line: 70,
          column: 121
        }
      },
      "31": {
        start: {
          line: 72,
          column: 15
        },
        end: {
          line: 84,
          column: 9
        }
      },
      "32": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 121
        }
      },
      "33": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 82,
          column: 13
        }
      },
      "34": {
        start: {
          line: 77,
          column: 16
        },
        end: {
          line: 81,
          column: 19
        }
      },
      "35": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 102
        }
      },
      "36": {
        start: {
          line: 86,
          column: 27
        },
        end: {
          line: 86,
          column: 31
        }
      },
      "37": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 89,
          column: 9
        }
      },
      "38": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 111
        }
      },
      "39": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 99,
          column: 11
        }
      },
      "40": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 101,
          column: 75
        }
      },
      "41": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 109,
          column: 9
        }
      },
      "42": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 108,
          column: 15
        }
      },
      "43": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 114,
          column: 11
        }
      },
      "44": {
        start: {
          line: 118,
          column: 4
        },
        end: {
          line: 248,
          column: 5
        }
      },
      "45": {
        start: {
          line: 120,
          column: 24
        },
        end: {
          line: 120,
          column: 80
        }
      },
      "46": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 127,
          column: 9
        }
      },
      "47": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 126,
          column: 15
        }
      },
      "48": {
        start: {
          line: 129,
          column: 21
        },
        end: {
          line: 129,
          column: 41
        }
      },
      "49": {
        start: {
          line: 131,
          column: 39
        },
        end: {
          line: 149,
          column: 10
        }
      },
      "50": {
        start: {
          line: 150,
          column: 24
        },
        end: {
          line: 150,
          column: 58
        }
      },
      "51": {
        start: {
          line: 152,
          column: 24
        },
        end: {
          line: 152,
          column: 53
        }
      },
      "52": {
        start: {
          line: 153,
          column: 25
        },
        end: {
          line: 153,
          column: 55
        }
      },
      "53": {
        start: {
          line: 154,
          column: 33
        },
        end: {
          line: 154,
          column: 70
        }
      },
      "54": {
        start: {
          line: 155,
          column: 40
        },
        end: {
          line: 155,
          column: 96
        }
      },
      "55": {
        start: {
          line: 155,
          column: 73
        },
        end: {
          line: 155,
          column: 95
        }
      },
      "56": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 162,
          column: 9
        }
      },
      "57": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 161,
          column: 15
        }
      },
      "58": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 182,
          column: 9
        }
      },
      "59": {
        start: {
          line: 167,
          column: 30
        },
        end: {
          line: 167,
          column: 126
        }
      },
      "60": {
        start: {
          line: 167,
          column: 60
        },
        end: {
          line: 167,
          column: 125
        }
      },
      "61": {
        start: {
          line: 168,
          column: 31
        },
        end: {
          line: 168,
          column: 59
        }
      },
      "62": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 169,
          column: 52
        }
      },
      "63": {
        start: {
          line: 170,
          column: 15
        },
        end: {
          line: 182,
          column: 9
        }
      },
      "64": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 171,
          column: 121
        }
      },
      "65": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 180,
          column: 13
        }
      },
      "66": {
        start: {
          line: 175,
          column: 16
        },
        end: {
          line: 179,
          column: 19
        }
      },
      "67": {
        start: {
          line: 181,
          column: 12
        },
        end: {
          line: 181,
          column: 102
        }
      },
      "68": {
        start: {
          line: 184,
          column: 8
        },
        end: {
          line: 186,
          column: 9
        }
      },
      "69": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 185,
          column: 127
        }
      },
      "70": {
        start: {
          line: 185,
          column: 74
        },
        end: {
          line: 185,
          column: 125
        }
      },
      "71": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 189,
          column: 9
        }
      },
      "72": {
        start: {
          line: 188,
          column: 12
        },
        end: {
          line: 188,
          column: 122
        }
      },
      "73": {
        start: {
          line: 188,
          column: 74
        },
        end: {
          line: 188,
          column: 120
        }
      },
      "74": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 192,
          column: 9
        }
      },
      "75": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 191,
          column: 104
        }
      },
      "76": {
        start: {
          line: 191,
          column: 74
        },
        end: {
          line: 191,
          column: 102
        }
      },
      "77": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 210,
          column: 9
        }
      },
      "78": {
        start: {
          line: 196,
          column: 16
        },
        end: {
          line: 196,
          column: 98
        }
      },
      "79": {
        start: {
          line: 196,
          column: 49
        },
        end: {
          line: 196,
          column: 96
        }
      },
      "80": {
        start: {
          line: 197,
          column: 16
        },
        end: {
          line: 197,
          column: 22
        }
      },
      "81": {
        start: {
          line: 199,
          column: 38
        },
        end: {
          line: 204,
          column: 17
        }
      },
      "82": {
        start: {
          line: 205,
          column: 16
        },
        end: {
          line: 205,
          column: 104
        }
      },
      "83": {
        start: {
          line: 205,
          column: 49
        },
        end: {
          line: 205,
          column: 102
        }
      },
      "84": {
        start: {
          line: 206,
          column: 16
        },
        end: {
          line: 206,
          column: 22
        }
      },
      "85": {
        start: {
          line: 208,
          column: 16
        },
        end: {
          line: 208,
          column: 94
        }
      },
      "86": {
        start: {
          line: 208,
          column: 49
        },
        end: {
          line: 208,
          column: 92
        }
      },
      "87": {
        start: {
          line: 209,
          column: 16
        },
        end: {
          line: 209,
          column: 22
        }
      },
      "88": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 214,
          column: 9
        }
      },
      "89": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 213,
          column: 79
        }
      },
      "90": {
        start: {
          line: 216,
          column: 27
        },
        end: {
          line: 216,
          column: 31
        }
      },
      "91": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 225,
          column: 9
        }
      },
      "92": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 224,
          column: 13
        }
      },
      "93": {
        start: {
          line: 219,
          column: 16
        },
        end: {
          line: 219,
          column: 115
        }
      },
      "94": {
        start: {
          line: 220,
          column: 19
        },
        end: {
          line: 224,
          column: 13
        }
      },
      "95": {
        start: {
          line: 221,
          column: 16
        },
        end: {
          line: 221,
          column: 120
        }
      },
      "96": {
        start: {
          line: 223,
          column: 16
        },
        end: {
          line: 223,
          column: 98
        }
      },
      "97": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 232,
          column: 11
        }
      },
      "98": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 234,
          column: 82
        }
      },
      "99": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 242,
          column: 9
        }
      },
      "100": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 241,
          column: 15
        }
      },
      "101": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 247,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 15
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 16
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "GET",
        decl: {
          start: {
            line: 30,
            column: 15
          },
          end: {
            line: 30,
            column: 18
          }
        },
        loc: {
          start: {
            line: 30,
            column: 28
          },
          end: {
            line: 116,
            column: 1
          }
        },
        line: 30
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 70,
            column: 65
          },
          end: {
            line: 70,
            column: 66
          }
        },
        loc: {
          start: {
            line: 70,
            column: 78
          },
          end: {
            line: 70,
            column: 121
          }
        },
        line: 70
      },
      "5": {
        name: "POST",
        decl: {
          start: {
            line: 117,
            column: 15
          },
          end: {
            line: 117,
            column: 19
          }
        },
        loc: {
          start: {
            line: 117,
            column: 29
          },
          end: {
            line: 249,
            column: 1
          }
        },
        line: 117
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 155,
            column: 67
          },
          end: {
            line: 155,
            column: 68
          }
        },
        loc: {
          start: {
            line: 155,
            column: 73
          },
          end: {
            line: 155,
            column: 95
          }
        },
        line: 155
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 167,
            column: 54
          },
          end: {
            line: 167,
            column: 55
          }
        },
        loc: {
          start: {
            line: 167,
            column: 60
          },
          end: {
            line: 167,
            column: 125
          }
        },
        line: 167
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 185,
            column: 61
          },
          end: {
            line: 185,
            column: 62
          }
        },
        loc: {
          start: {
            line: 185,
            column: 74
          },
          end: {
            line: 185,
            column: 125
          }
        },
        line: 185
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 188,
            column: 61
          },
          end: {
            line: 188,
            column: 62
          }
        },
        loc: {
          start: {
            line: 188,
            column: 74
          },
          end: {
            line: 188,
            column: 120
          }
        },
        line: 188
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 191,
            column: 61
          },
          end: {
            line: 191,
            column: 62
          }
        },
        loc: {
          start: {
            line: 191,
            column: 74
          },
          end: {
            line: 191,
            column: 102
          }
        },
        line: 191
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 196,
            column: 41
          },
          end: {
            line: 196,
            column: 42
          }
        },
        loc: {
          start: {
            line: 196,
            column: 49
          },
          end: {
            line: 196,
            column: 96
          }
        },
        line: 196
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 205,
            column: 41
          },
          end: {
            line: 205,
            column: 42
          }
        },
        loc: {
          start: {
            line: 205,
            column: 49
          },
          end: {
            line: 205,
            column: 102
          }
        },
        line: 205
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 208,
            column: 41
          },
          end: {
            line: 208,
            column: 42
          }
        },
        loc: {
          start: {
            line: 208,
            column: 49
          },
          end: {
            line: 208,
            column: 92
          }
        },
        line: 208
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 40,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 40,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "1": {
        loc: {
          start: {
            line: 43,
            column: 26
          },
          end: {
            line: 43,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 26
          },
          end: {
            line: 43,
            column: 55
          }
        }, {
          start: {
            line: 43,
            column: 59
          },
          end: {
            line: 43,
            column: 74
          }
        }],
        line: 43
      },
      "2": {
        loc: {
          start: {
            line: 44,
            column: 33
          },
          end: {
            line: 44,
            column: 130
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 44,
            column: 72
          },
          end: {
            line: 44,
            column: 118
          }
        }, {
          start: {
            line: 44,
            column: 121
          },
          end: {
            line: 44,
            column: 130
          }
        }],
        line: 44
      },
      "3": {
        loc: {
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "4": {
        loc: {
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 56,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 56,
            column: 20
          }
        }, {
          start: {
            line: 56,
            column: 24
          },
          end: {
            line: 56,
            column: 33
          }
        }, {
          start: {
            line: 56,
            column: 37
          },
          end: {
            line: 56,
            column: 54
          }
        }],
        line: 56
      },
      "5": {
        loc: {
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 84,
            column: 9
          }
        }, {
          start: {
            line: 72,
            column: 15
          },
          end: {
            line: 84,
            column: 9
          }
        }],
        line: 65
      },
      "6": {
        loc: {
          start: {
            line: 69,
            column: 12
          },
          end: {
            line: 71,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 12
          },
          end: {
            line: 71,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "7": {
        loc: {
          start: {
            line: 72,
            column: 15
          },
          end: {
            line: 84,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 15
          },
          end: {
            line: 84,
            column: 9
          }
        }, {
          start: {
            line: 74,
            column: 15
          },
          end: {
            line: 84,
            column: 9
          }
        }],
        line: 72
      },
      "8": {
        loc: {
          start: {
            line: 76,
            column: 12
          },
          end: {
            line: 82,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 12
          },
          end: {
            line: 82,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 76
      },
      "9": {
        loc: {
          start: {
            line: 76,
            column: 16
          },
          end: {
            line: 76,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 76,
            column: 16
          },
          end: {
            line: 76,
            column: 24
          }
        }, {
          start: {
            line: 76,
            column: 28
          },
          end: {
            line: 76,
            column: 37
          }
        }],
        line: 76
      },
      "10": {
        loc: {
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 89,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 8
          },
          end: {
            line: 89,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "11": {
        loc: {
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "12": {
        loc: {
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "13": {
        loc: {
          start: {
            line: 156,
            column: 8
          },
          end: {
            line: 162,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 156,
            column: 8
          },
          end: {
            line: 162,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 156
      },
      "14": {
        loc: {
          start: {
            line: 156,
            column: 12
          },
          end: {
            line: 156,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 156,
            column: 12
          },
          end: {
            line: 156,
            column: 20
          }
        }, {
          start: {
            line: 156,
            column: 24
          },
          end: {
            line: 156,
            column: 33
          }
        }, {
          start: {
            line: 156,
            column: 37
          },
          end: {
            line: 156,
            column: 54
          }
        }, {
          start: {
            line: 156,
            column: 58
          },
          end: {
            line: 156,
            column: 82
          }
        }],
        line: 156
      },
      "15": {
        loc: {
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 182,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 182,
            column: 9
          }
        }, {
          start: {
            line: 170,
            column: 15
          },
          end: {
            line: 182,
            column: 9
          }
        }],
        line: 165
      },
      "16": {
        loc: {
          start: {
            line: 165,
            column: 12
          },
          end: {
            line: 165,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 165,
            column: 12
          },
          end: {
            line: 165,
            column: 31
          }
        }, {
          start: {
            line: 165,
            column: 35
          },
          end: {
            line: 165,
            column: 65
          }
        }],
        line: 165
      },
      "17": {
        loc: {
          start: {
            line: 170,
            column: 15
          },
          end: {
            line: 182,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 15
          },
          end: {
            line: 182,
            column: 9
          }
        }, {
          start: {
            line: 172,
            column: 15
          },
          end: {
            line: 182,
            column: 9
          }
        }],
        line: 170
      },
      "18": {
        loc: {
          start: {
            line: 174,
            column: 12
          },
          end: {
            line: 180,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 12
          },
          end: {
            line: 180,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 174
      },
      "19": {
        loc: {
          start: {
            line: 174,
            column: 16
          },
          end: {
            line: 174,
            column: 37
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 174,
            column: 16
          },
          end: {
            line: 174,
            column: 24
          }
        }, {
          start: {
            line: 174,
            column: 28
          },
          end: {
            line: 174,
            column: 37
          }
        }],
        line: 174
      },
      "20": {
        loc: {
          start: {
            line: 184,
            column: 8
          },
          end: {
            line: 186,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 184,
            column: 8
          },
          end: {
            line: 186,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 184
      },
      "21": {
        loc: {
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 189,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 187,
            column: 8
          },
          end: {
            line: 189,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 187
      },
      "22": {
        loc: {
          start: {
            line: 187,
            column: 12
          },
          end: {
            line: 187,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 187,
            column: 12
          },
          end: {
            line: 187,
            column: 29
          }
        }, {
          start: {
            line: 187,
            column: 33
          },
          end: {
            line: 187,
            column: 61
          }
        }],
        line: 187
      },
      "23": {
        loc: {
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 192,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 192,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 190
      },
      "24": {
        loc: {
          start: {
            line: 194,
            column: 8
          },
          end: {
            line: 210,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 195,
            column: 12
          },
          end: {
            line: 197,
            column: 22
          }
        }, {
          start: {
            line: 198,
            column: 12
          },
          end: {
            line: 206,
            column: 22
          }
        }, {
          start: {
            line: 207,
            column: 12
          },
          end: {
            line: 209,
            column: 22
          }
        }],
        line: 194
      },
      "25": {
        loc: {
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 214,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 214,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 212
      },
      "26": {
        loc: {
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 225,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 225,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 217
      },
      "27": {
        loc: {
          start: {
            line: 218,
            column: 12
          },
          end: {
            line: 224,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 218,
            column: 12
          },
          end: {
            line: 224,
            column: 13
          }
        }, {
          start: {
            line: 220,
            column: 19
          },
          end: {
            line: 224,
            column: 13
          }
        }],
        line: 218
      },
      "28": {
        loc: {
          start: {
            line: 220,
            column: 19
          },
          end: {
            line: 224,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 220,
            column: 19
          },
          end: {
            line: 224,
            column: 13
          }
        }, {
          start: {
            line: 222,
            column: 19
          },
          end: {
            line: 224,
            column: 13
          }
        }],
        line: 220
      },
      "29": {
        loc: {
          start: {
            line: 220,
            column: 23
          },
          end: {
            line: 220,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 220,
            column: 23
          },
          end: {
            line: 220,
            column: 42
          }
        }, {
          start: {
            line: 220,
            column: 46
          },
          end: {
            line: 220,
            column: 78
          }
        }],
        line: 220
      },
      "30": {
        loc: {
          start: {
            line: 235,
            column: 8
          },
          end: {
            line: 242,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 235,
            column: 8
          },
          end: {
            line: 242,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 235
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0, 0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\notificacoes\\avaliacoes\\route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { getServerSession } from 'next-auth';\nimport { authOptions } from '@/lib/auth';\nimport { z } from 'zod';\nimport {\n  buscarAvaliacoesPendentesUsuario,\n  buscarTodasAvaliacoesPendentes,\n  gerarEstatisticasNotificacoes,\n  buscarAvaliacoesParaNotificacao\n} from '@/lib/utils/notificacoes-avaliacoes';\n\n// Schema para valida\xE7\xE3o dos filtros\nconst filtrosSchema = z.object({\n  usuarioId: z.string().optional(),\n  diasAntecedencia: z.number().min(0).max(30).optional(),\n  incluirEstatisticas: z.boolean().optional().default(true)\n});\n\n/**\n * GET /api/notificacoes/avaliacoes\n * Busca notifica\xE7\xF5es de avalia\xE7\xF5es pendentes\n */\nexport async function GET(request: NextRequest) {\n  try {\n    // Verificar autentica\xE7\xE3o\n    const session = await getServerSession(authOptions);\n    if (!session?.user) {\n      return NextResponse.json(\n        { error: 'N\xE3o autorizado' },\n        { status: 401 }\n      );\n    }\n\n    // Extrair par\xE2metros da URL\n    const { searchParams } = new URL(request.url);\n    const usuarioId = searchParams.get('usuarioId') || session.user.id;\n    const diasAntecedencia = searchParams.get('diasAntecedencia') \n      ? parseInt(searchParams.get('diasAntecedencia')!) \n      : undefined;\n    const incluirEstatisticas = searchParams.get('incluirEstatisticas') !== 'false';\n\n    // Validar par\xE2metros\n    const filtros = filtrosSchema.parse({\n      usuarioId,\n      diasAntecedencia,\n      incluirEstatisticas\n    });\n\n    // Verificar permiss\xF5es\n    const isAdmin = session.user.tipo === 'ADMIN';\n    const isGestor = session.user.tipo === 'GESTOR';\n    const isProprioUsuario = filtros.usuarioId === session.user.id;\n\n    if (!isAdmin && !isGestor && !isProprioUsuario) {\n      return NextResponse.json(\n        { error: 'Sem permiss\xE3o para acessar essas notifica\xE7\xF5es' },\n        { status: 403 }\n      );\n    }\n\n    // Buscar avalia\xE7\xF5es pendentes\n    let avaliacoesPendentes;\n    if (filtros.diasAntecedencia !== undefined) {\n      // Buscar apenas avalia\xE7\xF5es pr\xF3ximas do vencimento\n      avaliacoesPendentes = await buscarAvaliacoesParaNotificacao(filtros.diasAntecedencia);\n      // Filtrar por usu\xE1rio se especificado\n      if (filtros.usuarioId) {\n        avaliacoesPendentes = avaliacoesPendentes.filter(\n          avaliacao => avaliacao.avaliadorId === filtros.usuarioId\n        );\n      }\n    } else if (filtros.usuarioId) {\n      avaliacoesPendentes = await buscarAvaliacoesPendentesUsuario(filtros.usuarioId);\n    } else {\n      // Apenas admins e gestores podem ver todas as avalia\xE7\xF5es\n      if (!isAdmin && !isGestor) {\n        return NextResponse.json(\n          { error: 'Sem permiss\xE3o para acessar todas as notifica\xE7\xF5es' },\n          { status: 403 }\n        );\n      }\n      avaliacoesPendentes = await buscarTodasAvaliacoesPendentes();\n    }\n\n    // Gerar estat\xEDsticas se solicitado\n    let estatisticas = null;\n    if (filtros.incluirEstatisticas) {\n      estatisticas = await gerarEstatisticasNotificacoes(filtros.usuarioId);\n    }\n\n    return NextResponse.json({\n      avaliacoesPendentes,\n      estatisticas,\n      filtros: {\n        usuarioId: filtros.usuarioId,\n        diasAntecedencia: filtros.diasAntecedencia,\n        incluirEstatisticas: filtros.incluirEstatisticas\n      },\n      timestamp: new Date().toISOString()\n    });\n\n  } catch (error) {\n    console.error('Erro ao buscar notifica\xE7\xF5es de avalia\xE7\xF5es:', error);\n    \n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        { \n          error: 'Par\xE2metros inv\xE1lidos',\n          details: error.errors\n        },\n        { status: 400 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: 'Erro interno do servidor' },\n      { status: 500 }\n    );\n  }\n}\n\n/**\n * POST /api/notificacoes/avaliacoes\n * Busca notifica\xE7\xF5es com filtros mais complexos\n */\nexport async function POST(request: NextRequest) {\n  try {\n    // Verificar autentica\xE7\xE3o\n    const session = await getServerSession(authOptions);\n    if (!session?.user) {\n      return NextResponse.json(\n        { error: 'N\xE3o autorizado' },\n        { status: 401 }\n      );\n    }\n\n    // Extrair dados do corpo da requisi\xE7\xE3o\n    const body = await request.json();\n    \n    // Schema mais complexo para POST\n    const filtrosComplexosSchema = z.object({\n      usuarioId: z.string().optional(),\n      usuariosIds: z.array(z.string()).optional(),\n      diasAntecedencia: z.number().min(0).max(30).optional(),\n      urgencias: z.array(z.enum(['baixa', 'media', 'alta', 'critica'])).optional(),\n      incluirEstatisticas: z.boolean().optional().default(true),\n      incluirVencidas: z.boolean().optional().default(true),\n      limite: z.number().min(1).max(100).optional(),\n      ordenacao: z.enum(['dataLimite', 'urgencia', 'criadaEm']).optional().default('dataLimite')\n    });\n\n    const filtros = filtrosComplexosSchema.parse(body);\n\n    // Verificar permiss\xF5es\n    const isAdmin = session.user.tipo === 'ADMIN';\n    const isGestor = session.user.tipo === 'GESTOR';\n    const isProprioUsuario = filtros.usuarioId === session.user.id;\n    const somentePropriosUsuarios = filtros.usuariosIds?.every(id => id === session.user.id);\n\n    if (!isAdmin && !isGestor && !isProprioUsuario && !somentePropriosUsuarios) {\n      return NextResponse.json(\n        { error: 'Sem permiss\xE3o para acessar essas notifica\xE7\xF5es' },\n        { status: 403 }\n      );\n    }\n\n    // Buscar avalia\xE7\xF5es pendentes\n    let avaliacoesPendentes;\n    \n    if (filtros.usuariosIds && filtros.usuariosIds.length > 0) {\n      // Buscar para m\xFAltiplos usu\xE1rios\n      const promessas = filtros.usuariosIds.map(id => \n        buscarAvaliacoesPendentesUsuario(id)\n      );\n      const resultados = await Promise.all(promessas);\n      avaliacoesPendentes = resultados.flat();\n    } else if (filtros.usuarioId) {\n      avaliacoesPendentes = await buscarAvaliacoesPendentesUsuario(filtros.usuarioId);\n    } else {\n      // Apenas admins e gestores podem ver todas as avalia\xE7\xF5es\n      if (!isAdmin && !isGestor) {\n        return NextResponse.json(\n          { error: 'Sem permiss\xE3o para acessar todas as notifica\xE7\xF5es' },\n          { status: 403 }\n        );\n      }\n      avaliacoesPendentes = await buscarTodasAvaliacoesPendentes();\n    }\n\n    // Aplicar filtros adicionais\n    if (filtros.diasAntecedencia !== undefined) {\n      avaliacoesPendentes = avaliacoesPendentes.filter(\n        avaliacao => avaliacao.diasRestantes <= filtros.diasAntecedencia!\n      );\n    }\n\n    if (filtros.urgencias && filtros.urgencias.length > 0) {\n      avaliacoesPendentes = avaliacoesPendentes.filter(\n        avaliacao => filtros.urgencias!.includes(avaliacao.urgencia)\n      );\n    }\n\n    if (!filtros.incluirVencidas) {\n      avaliacoesPendentes = avaliacoesPendentes.filter(\n        avaliacao => avaliacao.diasRestantes >= 0\n      );\n    }\n\n    // Ordenar resultados\n    switch (filtros.ordenacao) {\n      case 'dataLimite':\n        avaliacoesPendentes.sort((a, b) => \n          a.dataLimite.getTime() - b.dataLimite.getTime()\n        );\n        break;\n      case 'urgencia':\n        const ordemUrgencia = { 'critica': 0, 'alta': 1, 'media': 2, 'baixa': 3 };\n        avaliacoesPendentes.sort((a, b) => \n          ordemUrgencia[a.urgencia] - ordemUrgencia[b.urgencia]\n        );\n        break;\n      case 'criadaEm':\n        avaliacoesPendentes.sort((a, b) => \n          b.criadaEm.getTime() - a.criadaEm.getTime()\n        );\n        break;\n    }\n\n    // Aplicar limite\n    if (filtros.limite) {\n      avaliacoesPendentes = avaliacoesPendentes.slice(0, filtros.limite);\n    }\n\n    // Gerar estat\xEDsticas se solicitado\n    let estatisticas = null;\n    if (filtros.incluirEstatisticas) {\n      if (filtros.usuarioId) {\n        estatisticas = await gerarEstatisticasNotificacoes(filtros.usuarioId);\n      } else if (filtros.usuariosIds && filtros.usuariosIds.length === 1) {\n        estatisticas = await gerarEstatisticasNotificacoes(filtros.usuariosIds[0]);\n      } else {\n        estatisticas = await gerarEstatisticasNotificacoes();\n      }\n    }\n\n    return NextResponse.json({\n      avaliacoesPendentes,\n      estatisticas,\n      filtros,\n      total: avaliacoesPendentes.length,\n      timestamp: new Date().toISOString()\n    });\n\n  } catch (error) {\n    console.error('Erro ao buscar notifica\xE7\xF5es de avalia\xE7\xF5es (POST):', error);\n    \n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        { \n          error: 'Dados inv\xE1lidos',\n          details: error.errors\n        },\n        { status: 400 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: 'Erro interno do servidor' },\n      { status: 500 }\n    );\n  }\n}"],
      names: ["GET", "POST", "filtrosSchema", "z", "object", "usuarioId", "string", "optional", "diasAntecedencia", "number", "min", "max", "incluirEstatisticas", "boolean", "default", "request", "session", "getServerSession", "authOptions", "user", "NextResponse", "json", "error", "status", "searchParams", "URL", "url", "get", "id", "parseInt", "undefined", "filtros", "parse", "isAdmin", "tipo", "isGestor", "isProprioUsuario", "avaliacoesPendentes", "buscarAvaliacoesParaNotificacao", "filter", "avaliacao", "avaliadorId", "buscarAvaliacoesPendentesUsuario", "buscarTodasAvaliacoesPendentes", "estatisticas", "gerarEstatisticasNotificacoes", "timestamp", "Date", "toISOString", "console", "ZodError", "details", "errors", "body", "filtrosComplexosSchema", "usuariosIds", "array", "urgencias", "enum", "incluirVencidas", "limite", "ordenacao", "somentePropriosUsuarios", "every", "length", "promessas", "map", "resultados", "Promise", "all", "flat", "diasRestantes", "includes", "urgencia", "sort", "a", "b", "dataLimite", "getTime", "ordemUrgencia", "criadaEm", "slice", "total"],
      mappings: ";;;;;;;;;;;QAsBsBA;eAAAA;;QAuGAC;eAAAA;;;wBA7HoB;0BACT;sBACL;qBACV;wCAMX;AAEP,oCAAoC;AACpC,MAAMC,gBAAgBC,MAAC,CAACC,MAAM,CAAC;IAC7BC,WAAWF,MAAC,CAACG,MAAM,GAAGC,QAAQ;IAC9BC,kBAAkBL,MAAC,CAACM,MAAM,GAAGC,GAAG,CAAC,GAAGC,GAAG,CAAC,IAAIJ,QAAQ;IACpDK,qBAAqBT,MAAC,CAACU,OAAO,GAAGN,QAAQ,GAAGO,OAAO,CAAC;AACtD;AAMO,eAAed,IAAIe,OAAoB;IAC5C,IAAI;QACF,yBAAyB;QACzB,MAAMC,UAAU,MAAMC,IAAAA,0BAAgB,EAACC,iBAAW;QAClD,IAAI,CAACF,SAASG,MAAM;YAClB,OAAOC,oBAAY,CAACC,IAAI,CACtB;gBAAEC,OAAO;YAAiB,GAC1B;gBAAEC,QAAQ;YAAI;QAElB;QAEA,4BAA4B;QAC5B,MAAM,EAAEC,YAAY,EAAE,GAAG,IAAIC,IAAIV,QAAQW,GAAG;QAC5C,MAAMrB,YAAYmB,aAAaG,GAAG,CAAC,gBAAgBX,QAAQG,IAAI,CAACS,EAAE;QAClE,MAAMpB,mBAAmBgB,aAAaG,GAAG,CAAC,sBACtCE,SAASL,aAAaG,GAAG,CAAC,uBAC1BG;QACJ,MAAMlB,sBAAsBY,aAAaG,GAAG,CAAC,2BAA2B;QAExE,qBAAqB;QACrB,MAAMI,UAAU7B,cAAc8B,KAAK,CAAC;YAClC3B;YACAG;YACAI;QACF;QAEA,uBAAuB;QACvB,MAAMqB,UAAUjB,QAAQG,IAAI,CAACe,IAAI,KAAK;QACtC,MAAMC,WAAWnB,QAAQG,IAAI,CAACe,IAAI,KAAK;QACvC,MAAME,mBAAmBL,QAAQ1B,SAAS,KAAKW,QAAQG,IAAI,CAACS,EAAE;QAE9D,IAAI,CAACK,WAAW,CAACE,YAAY,CAACC,kBAAkB;YAC9C,OAAOhB,oBAAY,CAACC,IAAI,CACtB;gBAAEC,OAAO;YAAgD,GACzD;gBAAEC,QAAQ;YAAI;QAElB;QAEA,8BAA8B;QAC9B,IAAIc;QACJ,IAAIN,QAAQvB,gBAAgB,KAAKsB,WAAW;YAC1C,kDAAkD;YAClDO,sBAAsB,MAAMC,IAAAA,uDAA+B,EAACP,QAAQvB,gBAAgB;YACpF,sCAAsC;YACtC,IAAIuB,QAAQ1B,SAAS,EAAE;gBACrBgC,sBAAsBA,oBAAoBE,MAAM,CAC9CC,CAAAA,YAAaA,UAAUC,WAAW,KAAKV,QAAQ1B,SAAS;YAE5D;QACF,OAAO,IAAI0B,QAAQ1B,SAAS,EAAE;YAC5BgC,sBAAsB,MAAMK,IAAAA,wDAAgC,EAACX,QAAQ1B,SAAS;QAChF,OAAO;YACL,yDAAyD;YACzD,IAAI,CAAC4B,WAAW,CAACE,UAAU;gBACzB,OAAOf,oBAAY,CAACC,IAAI,CACtB;oBAAEC,OAAO;gBAAmD,GAC5D;oBAAEC,QAAQ;gBAAI;YAElB;YACAc,sBAAsB,MAAMM,IAAAA,sDAA8B;QAC5D;QAEA,mCAAmC;QACnC,IAAIC,eAAe;QACnB,IAAIb,QAAQnB,mBAAmB,EAAE;YAC/BgC,eAAe,MAAMC,IAAAA,qDAA6B,EAACd,QAAQ1B,SAAS;QACtE;QAEA,OAAOe,oBAAY,CAACC,IAAI,CAAC;YACvBgB;YACAO;YACAb,SAAS;gBACP1B,WAAW0B,QAAQ1B,SAAS;gBAC5BG,kBAAkBuB,QAAQvB,gBAAgB;gBAC1CI,qBAAqBmB,QAAQnB,mBAAmB;YAClD;YACAkC,WAAW,IAAIC,OAAOC,WAAW;QACnC;IAEF,EAAE,OAAO1B,OAAO;QACd2B,QAAQ3B,KAAK,CAAC,8CAA8CA;QAE5D,IAAIA,iBAAiBnB,MAAC,CAAC+C,QAAQ,EAAE;YAC/B,OAAO9B,oBAAY,CAACC,IAAI,CACtB;gBACEC,OAAO;gBACP6B,SAAS7B,MAAM8B,MAAM;YACvB,GACA;gBAAE7B,QAAQ;YAAI;QAElB;QAEA,OAAOH,oBAAY,CAACC,IAAI,CACtB;YAAEC,OAAO;QAA2B,GACpC;YAAEC,QAAQ;QAAI;IAElB;AACF;AAMO,eAAetB,KAAKc,OAAoB;IAC7C,IAAI;QACF,yBAAyB;QACzB,MAAMC,UAAU,MAAMC,IAAAA,0BAAgB,EAACC,iBAAW;QAClD,IAAI,CAACF,SAASG,MAAM;YAClB,OAAOC,oBAAY,CAACC,IAAI,CACtB;gBAAEC,OAAO;YAAiB,GAC1B;gBAAEC,QAAQ;YAAI;QAElB;QAEA,uCAAuC;QACvC,MAAM8B,OAAO,MAAMtC,QAAQM,IAAI;QAE/B,iCAAiC;QACjC,MAAMiC,yBAAyBnD,MAAC,CAACC,MAAM,CAAC;YACtCC,WAAWF,MAAC,CAACG,MAAM,GAAGC,QAAQ;YAC9BgD,aAAapD,MAAC,CAACqD,KAAK,CAACrD,MAAC,CAACG,MAAM,IAAIC,QAAQ;YACzCC,kBAAkBL,MAAC,CAACM,MAAM,GAAGC,GAAG,CAAC,GAAGC,GAAG,CAAC,IAAIJ,QAAQ;YACpDkD,WAAWtD,MAAC,CAACqD,KAAK,CAACrD,MAAC,CAACuD,IAAI,CAAC;gBAAC;gBAAS;gBAAS;gBAAQ;aAAU,GAAGnD,QAAQ;YAC1EK,qBAAqBT,MAAC,CAACU,OAAO,GAAGN,QAAQ,GAAGO,OAAO,CAAC;YACpD6C,iBAAiBxD,MAAC,CAACU,OAAO,GAAGN,QAAQ,GAAGO,OAAO,CAAC;YAChD8C,QAAQzD,MAAC,CAACM,MAAM,GAAGC,GAAG,CAAC,GAAGC,GAAG,CAAC,KAAKJ,QAAQ;YAC3CsD,WAAW1D,MAAC,CAACuD,IAAI,CAAC;gBAAC;gBAAc;gBAAY;aAAW,EAAEnD,QAAQ,GAAGO,OAAO,CAAC;QAC/E;QAEA,MAAMiB,UAAUuB,uBAAuBtB,KAAK,CAACqB;QAE7C,uBAAuB;QACvB,MAAMpB,UAAUjB,QAAQG,IAAI,CAACe,IAAI,KAAK;QACtC,MAAMC,WAAWnB,QAAQG,IAAI,CAACe,IAAI,KAAK;QACvC,MAAME,mBAAmBL,QAAQ1B,SAAS,KAAKW,QAAQG,IAAI,CAACS,EAAE;QAC9D,MAAMkC,0BAA0B/B,QAAQwB,WAAW,EAAEQ,MAAMnC,CAAAA,KAAMA,OAAOZ,QAAQG,IAAI,CAACS,EAAE;QAEvF,IAAI,CAACK,WAAW,CAACE,YAAY,CAACC,oBAAoB,CAAC0B,yBAAyB;YAC1E,OAAO1C,oBAAY,CAACC,IAAI,CACtB;gBAAEC,OAAO;YAAgD,GACzD;gBAAEC,QAAQ;YAAI;QAElB;QAEA,8BAA8B;QAC9B,IAAIc;QAEJ,IAAIN,QAAQwB,WAAW,IAAIxB,QAAQwB,WAAW,CAACS,MAAM,GAAG,GAAG;YACzD,iCAAiC;YACjC,MAAMC,YAAYlC,QAAQwB,WAAW,CAACW,GAAG,CAACtC,CAAAA,KACxCc,IAAAA,wDAAgC,EAACd;YAEnC,MAAMuC,aAAa,MAAMC,QAAQC,GAAG,CAACJ;YACrC5B,sBAAsB8B,WAAWG,IAAI;QACvC,OAAO,IAAIvC,QAAQ1B,SAAS,EAAE;YAC5BgC,sBAAsB,MAAMK,IAAAA,wDAAgC,EAACX,QAAQ1B,SAAS;QAChF,OAAO;YACL,yDAAyD;YACzD,IAAI,CAAC4B,WAAW,CAACE,UAAU;gBACzB,OAAOf,oBAAY,CAACC,IAAI,CACtB;oBAAEC,OAAO;gBAAmD,GAC5D;oBAAEC,QAAQ;gBAAI;YAElB;YACAc,sBAAsB,MAAMM,IAAAA,sDAA8B;QAC5D;QAEA,6BAA6B;QAC7B,IAAIZ,QAAQvB,gBAAgB,KAAKsB,WAAW;YAC1CO,sBAAsBA,oBAAoBE,MAAM,CAC9CC,CAAAA,YAAaA,UAAU+B,aAAa,IAAIxC,QAAQvB,gBAAgB;QAEpE;QAEA,IAAIuB,QAAQ0B,SAAS,IAAI1B,QAAQ0B,SAAS,CAACO,MAAM,GAAG,GAAG;YACrD3B,sBAAsBA,oBAAoBE,MAAM,CAC9CC,CAAAA,YAAaT,QAAQ0B,SAAS,CAAEe,QAAQ,CAAChC,UAAUiC,QAAQ;QAE/D;QAEA,IAAI,CAAC1C,QAAQ4B,eAAe,EAAE;YAC5BtB,sBAAsBA,oBAAoBE,MAAM,CAC9CC,CAAAA,YAAaA,UAAU+B,aAAa,IAAI;QAE5C;QAEA,qBAAqB;QACrB,OAAQxC,QAAQ8B,SAAS;YACvB,KAAK;gBACHxB,oBAAoBqC,IAAI,CAAC,CAACC,GAAGC,IAC3BD,EAAEE,UAAU,CAACC,OAAO,KAAKF,EAAEC,UAAU,CAACC,OAAO;gBAE/C;YACF,KAAK;gBACH,MAAMC,gBAAgB;oBAAE,WAAW;oBAAG,QAAQ;oBAAG,SAAS;oBAAG,SAAS;gBAAE;gBACxE1C,oBAAoBqC,IAAI,CAAC,CAACC,GAAGC,IAC3BG,aAAa,CAACJ,EAAEF,QAAQ,CAAC,GAAGM,aAAa,CAACH,EAAEH,QAAQ,CAAC;gBAEvD;YACF,KAAK;gBACHpC,oBAAoBqC,IAAI,CAAC,CAACC,GAAGC,IAC3BA,EAAEI,QAAQ,CAACF,OAAO,KAAKH,EAAEK,QAAQ,CAACF,OAAO;gBAE3C;QACJ;QAEA,iBAAiB;QACjB,IAAI/C,QAAQ6B,MAAM,EAAE;YAClBvB,sBAAsBA,oBAAoB4C,KAAK,CAAC,GAAGlD,QAAQ6B,MAAM;QACnE;QAEA,mCAAmC;QACnC,IAAIhB,eAAe;QACnB,IAAIb,QAAQnB,mBAAmB,EAAE;YAC/B,IAAImB,QAAQ1B,SAAS,EAAE;gBACrBuC,eAAe,MAAMC,IAAAA,qDAA6B,EAACd,QAAQ1B,SAAS;YACtE,OAAO,IAAI0B,QAAQwB,WAAW,IAAIxB,QAAQwB,WAAW,CAACS,MAAM,KAAK,GAAG;gBAClEpB,eAAe,MAAMC,IAAAA,qDAA6B,EAACd,QAAQwB,WAAW,CAAC,EAAE;YAC3E,OAAO;gBACLX,eAAe,MAAMC,IAAAA,qDAA6B;YACpD;QACF;QAEA,OAAOzB,oBAAY,CAACC,IAAI,CAAC;YACvBgB;YACAO;YACAb;YACAmD,OAAO7C,oBAAoB2B,MAAM;YACjClB,WAAW,IAAIC,OAAOC,WAAW;QACnC;IAEF,EAAE,OAAO1B,OAAO;QACd2B,QAAQ3B,KAAK,CAAC,qDAAqDA;QAEnE,IAAIA,iBAAiBnB,MAAC,CAAC+C,QAAQ,EAAE;YAC/B,OAAO9B,oBAAY,CAACC,IAAI,CACtB;gBACEC,OAAO;gBACP6B,SAAS7B,MAAM8B,MAAM;YACvB,GACA;gBAAE7B,QAAQ;YAAI;QAElB;QAEA,OAAOH,oBAAY,CAACC,IAAI,CACtB;YAAEC,OAAO;QAA2B,GACpC;YAAEC,QAAQ;QAAI;IAElB;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e513f1c1f2f667af234d5fcfdcc6b24f3914c3fd"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_24ergzhwiw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_24ergzhwiw();
cov_24ergzhwiw().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_24ergzhwiw().f[0]++;
  cov_24ergzhwiw().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_24ergzhwiw().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_24ergzhwiw().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_24ergzhwiw().f[1]++;
    cov_24ergzhwiw().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_24ergzhwiw().f[2]++;
    cov_24ergzhwiw().s[5]++;
    return POST;
  }
});
const _server =
/* istanbul ignore next */
(cov_24ergzhwiw().s[6]++, require("next/server"));
const _nextauth =
/* istanbul ignore next */
(cov_24ergzhwiw().s[7]++, require("next-auth"));
const _auth =
/* istanbul ignore next */
(cov_24ergzhwiw().s[8]++, require("../../../../lib/auth"));
const _zod =
/* istanbul ignore next */
(cov_24ergzhwiw().s[9]++, require("zod"));
const _notificacoesavaliacoes =
/* istanbul ignore next */
(cov_24ergzhwiw().s[10]++, require("../../../../lib/utils/notificacoes-avaliacoes"));
// Schema para validação dos filtros
const filtrosSchema =
/* istanbul ignore next */
(cov_24ergzhwiw().s[11]++, _zod.z.object({
  usuarioId: _zod.z.string().optional(),
  diasAntecedencia: _zod.z.number().min(0).max(30).optional(),
  incluirEstatisticas: _zod.z.boolean().optional().default(true)
}));
async function GET(request) {
  /* istanbul ignore next */
  cov_24ergzhwiw().f[3]++;
  cov_24ergzhwiw().s[12]++;
  try {
    // Verificar autenticação
    const session =
    /* istanbul ignore next */
    (cov_24ergzhwiw().s[13]++, await (0, _nextauth.getServerSession)(_auth.authOptions));
    /* istanbul ignore next */
    cov_24ergzhwiw().s[14]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_24ergzhwiw().b[0][0]++;
      cov_24ergzhwiw().s[15]++;
      return _server.NextResponse.json({
        error: 'Não autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_24ergzhwiw().b[0][1]++;
    }
    // Extrair parâmetros da URL
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_24ergzhwiw().s[16]++, new URL(request.url));
    const usuarioId =
    /* istanbul ignore next */
    (cov_24ergzhwiw().s[17]++,
    /* istanbul ignore next */
    (cov_24ergzhwiw().b[1][0]++, searchParams.get('usuarioId')) ||
    /* istanbul ignore next */
    (cov_24ergzhwiw().b[1][1]++, session.user.id));
    const diasAntecedencia =
    /* istanbul ignore next */
    (cov_24ergzhwiw().s[18]++, searchParams.get('diasAntecedencia') ?
    /* istanbul ignore next */
    (cov_24ergzhwiw().b[2][0]++, parseInt(searchParams.get('diasAntecedencia'))) :
    /* istanbul ignore next */
    (cov_24ergzhwiw().b[2][1]++, undefined));
    const incluirEstatisticas =
    /* istanbul ignore next */
    (cov_24ergzhwiw().s[19]++, searchParams.get('incluirEstatisticas') !== 'false');
    // Validar parâmetros
    const filtros =
    /* istanbul ignore next */
    (cov_24ergzhwiw().s[20]++, filtrosSchema.parse({
      usuarioId,
      diasAntecedencia,
      incluirEstatisticas
    }));
    // Verificar permissões
    const isAdmin =
    /* istanbul ignore next */
    (cov_24ergzhwiw().s[21]++, session.user.tipo === 'ADMIN');
    const isGestor =
    /* istanbul ignore next */
    (cov_24ergzhwiw().s[22]++, session.user.tipo === 'GESTOR');
    const isProprioUsuario =
    /* istanbul ignore next */
    (cov_24ergzhwiw().s[23]++, filtros.usuarioId === session.user.id);
    /* istanbul ignore next */
    cov_24ergzhwiw().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_24ergzhwiw().b[4][0]++, !isAdmin) &&
    /* istanbul ignore next */
    (cov_24ergzhwiw().b[4][1]++, !isGestor) &&
    /* istanbul ignore next */
    (cov_24ergzhwiw().b[4][2]++, !isProprioUsuario)) {
      /* istanbul ignore next */
      cov_24ergzhwiw().b[3][0]++;
      cov_24ergzhwiw().s[25]++;
      return _server.NextResponse.json({
        error: 'Sem permissão para acessar essas notificações'
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_24ergzhwiw().b[3][1]++;
    }
    // Buscar avaliações pendentes
    let avaliacoesPendentes;
    /* istanbul ignore next */
    cov_24ergzhwiw().s[26]++;
    if (filtros.diasAntecedencia !== undefined) {
      /* istanbul ignore next */
      cov_24ergzhwiw().b[5][0]++;
      cov_24ergzhwiw().s[27]++;
      // Buscar apenas avaliações próximas do vencimento
      avaliacoesPendentes = await (0, _notificacoesavaliacoes.buscarAvaliacoesParaNotificacao)(filtros.diasAntecedencia);
      // Filtrar por usuário se especificado
      /* istanbul ignore next */
      cov_24ergzhwiw().s[28]++;
      if (filtros.usuarioId) {
        /* istanbul ignore next */
        cov_24ergzhwiw().b[6][0]++;
        cov_24ergzhwiw().s[29]++;
        avaliacoesPendentes = avaliacoesPendentes.filter(avaliacao => {
          /* istanbul ignore next */
          cov_24ergzhwiw().f[4]++;
          cov_24ergzhwiw().s[30]++;
          return avaliacao.avaliadorId === filtros.usuarioId;
        });
      } else
      /* istanbul ignore next */
      {
        cov_24ergzhwiw().b[6][1]++;
      }
    } else {
      /* istanbul ignore next */
      cov_24ergzhwiw().b[5][1]++;
      cov_24ergzhwiw().s[31]++;
      if (filtros.usuarioId) {
        /* istanbul ignore next */
        cov_24ergzhwiw().b[7][0]++;
        cov_24ergzhwiw().s[32]++;
        avaliacoesPendentes = await (0, _notificacoesavaliacoes.buscarAvaliacoesPendentesUsuario)(filtros.usuarioId);
      } else {
        /* istanbul ignore next */
        cov_24ergzhwiw().b[7][1]++;
        cov_24ergzhwiw().s[33]++;
        // Apenas admins e gestores podem ver todas as avaliações
        if (
        /* istanbul ignore next */
        (cov_24ergzhwiw().b[9][0]++, !isAdmin) &&
        /* istanbul ignore next */
        (cov_24ergzhwiw().b[9][1]++, !isGestor)) {
          /* istanbul ignore next */
          cov_24ergzhwiw().b[8][0]++;
          cov_24ergzhwiw().s[34]++;
          return _server.NextResponse.json({
            error: 'Sem permissão para acessar todas as notificações'
          }, {
            status: 403
          });
        } else
        /* istanbul ignore next */
        {
          cov_24ergzhwiw().b[8][1]++;
        }
        cov_24ergzhwiw().s[35]++;
        avaliacoesPendentes = await (0, _notificacoesavaliacoes.buscarTodasAvaliacoesPendentes)();
      }
    }
    // Gerar estatísticas se solicitado
    let estatisticas =
    /* istanbul ignore next */
    (cov_24ergzhwiw().s[36]++, null);
    /* istanbul ignore next */
    cov_24ergzhwiw().s[37]++;
    if (filtros.incluirEstatisticas) {
      /* istanbul ignore next */
      cov_24ergzhwiw().b[10][0]++;
      cov_24ergzhwiw().s[38]++;
      estatisticas = await (0, _notificacoesavaliacoes.gerarEstatisticasNotificacoes)(filtros.usuarioId);
    } else
    /* istanbul ignore next */
    {
      cov_24ergzhwiw().b[10][1]++;
    }
    cov_24ergzhwiw().s[39]++;
    return _server.NextResponse.json({
      avaliacoesPendentes,
      estatisticas,
      filtros: {
        usuarioId: filtros.usuarioId,
        diasAntecedencia: filtros.diasAntecedencia,
        incluirEstatisticas: filtros.incluirEstatisticas
      },
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_24ergzhwiw().s[40]++;
    console.error('Erro ao buscar notificações de avaliações:', error);
    /* istanbul ignore next */
    cov_24ergzhwiw().s[41]++;
    if (error instanceof _zod.z.ZodError) {
      /* istanbul ignore next */
      cov_24ergzhwiw().b[11][0]++;
      cov_24ergzhwiw().s[42]++;
      return _server.NextResponse.json({
        error: 'Parâmetros inválidos',
        details: error.errors
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_24ergzhwiw().b[11][1]++;
    }
    cov_24ergzhwiw().s[43]++;
    return _server.NextResponse.json({
      error: 'Erro interno do servidor'
    }, {
      status: 500
    });
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_24ergzhwiw().f[5]++;
  cov_24ergzhwiw().s[44]++;
  try {
    // Verificar autenticação
    const session =
    /* istanbul ignore next */
    (cov_24ergzhwiw().s[45]++, await (0, _nextauth.getServerSession)(_auth.authOptions));
    /* istanbul ignore next */
    cov_24ergzhwiw().s[46]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_24ergzhwiw().b[12][0]++;
      cov_24ergzhwiw().s[47]++;
      return _server.NextResponse.json({
        error: 'Não autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_24ergzhwiw().b[12][1]++;
    }
    // Extrair dados do corpo da requisição
    const body =
    /* istanbul ignore next */
    (cov_24ergzhwiw().s[48]++, await request.json());
    // Schema mais complexo para POST
    const filtrosComplexosSchema =
    /* istanbul ignore next */
    (cov_24ergzhwiw().s[49]++, _zod.z.object({
      usuarioId: _zod.z.string().optional(),
      usuariosIds: _zod.z.array(_zod.z.string()).optional(),
      diasAntecedencia: _zod.z.number().min(0).max(30).optional(),
      urgencias: _zod.z.array(_zod.z.enum(['baixa', 'media', 'alta', 'critica'])).optional(),
      incluirEstatisticas: _zod.z.boolean().optional().default(true),
      incluirVencidas: _zod.z.boolean().optional().default(true),
      limite: _zod.z.number().min(1).max(100).optional(),
      ordenacao: _zod.z.enum(['dataLimite', 'urgencia', 'criadaEm']).optional().default('dataLimite')
    }));
    const filtros =
    /* istanbul ignore next */
    (cov_24ergzhwiw().s[50]++, filtrosComplexosSchema.parse(body));
    // Verificar permissões
    const isAdmin =
    /* istanbul ignore next */
    (cov_24ergzhwiw().s[51]++, session.user.tipo === 'ADMIN');
    const isGestor =
    /* istanbul ignore next */
    (cov_24ergzhwiw().s[52]++, session.user.tipo === 'GESTOR');
    const isProprioUsuario =
    /* istanbul ignore next */
    (cov_24ergzhwiw().s[53]++, filtros.usuarioId === session.user.id);
    const somentePropriosUsuarios =
    /* istanbul ignore next */
    (cov_24ergzhwiw().s[54]++, filtros.usuariosIds?.every(id => {
      /* istanbul ignore next */
      cov_24ergzhwiw().f[6]++;
      cov_24ergzhwiw().s[55]++;
      return id === session.user.id;
    }));
    /* istanbul ignore next */
    cov_24ergzhwiw().s[56]++;
    if (
    /* istanbul ignore next */
    (cov_24ergzhwiw().b[14][0]++, !isAdmin) &&
    /* istanbul ignore next */
    (cov_24ergzhwiw().b[14][1]++, !isGestor) &&
    /* istanbul ignore next */
    (cov_24ergzhwiw().b[14][2]++, !isProprioUsuario) &&
    /* istanbul ignore next */
    (cov_24ergzhwiw().b[14][3]++, !somentePropriosUsuarios)) {
      /* istanbul ignore next */
      cov_24ergzhwiw().b[13][0]++;
      cov_24ergzhwiw().s[57]++;
      return _server.NextResponse.json({
        error: 'Sem permissão para acessar essas notificações'
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_24ergzhwiw().b[13][1]++;
    }
    // Buscar avaliações pendentes
    let avaliacoesPendentes;
    /* istanbul ignore next */
    cov_24ergzhwiw().s[58]++;
    if (
    /* istanbul ignore next */
    (cov_24ergzhwiw().b[16][0]++, filtros.usuariosIds) &&
    /* istanbul ignore next */
    (cov_24ergzhwiw().b[16][1]++, filtros.usuariosIds.length > 0)) {
      /* istanbul ignore next */
      cov_24ergzhwiw().b[15][0]++;
      // Buscar para múltiplos usuários
      const promessas =
      /* istanbul ignore next */
      (cov_24ergzhwiw().s[59]++, filtros.usuariosIds.map(id => {
        /* istanbul ignore next */
        cov_24ergzhwiw().f[7]++;
        cov_24ergzhwiw().s[60]++;
        return (0, _notificacoesavaliacoes.buscarAvaliacoesPendentesUsuario)(id);
      }));
      const resultados =
      /* istanbul ignore next */
      (cov_24ergzhwiw().s[61]++, await Promise.all(promessas));
      /* istanbul ignore next */
      cov_24ergzhwiw().s[62]++;
      avaliacoesPendentes = resultados.flat();
    } else {
      /* istanbul ignore next */
      cov_24ergzhwiw().b[15][1]++;
      cov_24ergzhwiw().s[63]++;
      if (filtros.usuarioId) {
        /* istanbul ignore next */
        cov_24ergzhwiw().b[17][0]++;
        cov_24ergzhwiw().s[64]++;
        avaliacoesPendentes = await (0, _notificacoesavaliacoes.buscarAvaliacoesPendentesUsuario)(filtros.usuarioId);
      } else {
        /* istanbul ignore next */
        cov_24ergzhwiw().b[17][1]++;
        cov_24ergzhwiw().s[65]++;
        // Apenas admins e gestores podem ver todas as avaliações
        if (
        /* istanbul ignore next */
        (cov_24ergzhwiw().b[19][0]++, !isAdmin) &&
        /* istanbul ignore next */
        (cov_24ergzhwiw().b[19][1]++, !isGestor)) {
          /* istanbul ignore next */
          cov_24ergzhwiw().b[18][0]++;
          cov_24ergzhwiw().s[66]++;
          return _server.NextResponse.json({
            error: 'Sem permissão para acessar todas as notificações'
          }, {
            status: 403
          });
        } else
        /* istanbul ignore next */
        {
          cov_24ergzhwiw().b[18][1]++;
        }
        cov_24ergzhwiw().s[67]++;
        avaliacoesPendentes = await (0, _notificacoesavaliacoes.buscarTodasAvaliacoesPendentes)();
      }
    }
    // Aplicar filtros adicionais
    /* istanbul ignore next */
    cov_24ergzhwiw().s[68]++;
    if (filtros.diasAntecedencia !== undefined) {
      /* istanbul ignore next */
      cov_24ergzhwiw().b[20][0]++;
      cov_24ergzhwiw().s[69]++;
      avaliacoesPendentes = avaliacoesPendentes.filter(avaliacao => {
        /* istanbul ignore next */
        cov_24ergzhwiw().f[8]++;
        cov_24ergzhwiw().s[70]++;
        return avaliacao.diasRestantes <= filtros.diasAntecedencia;
      });
    } else
    /* istanbul ignore next */
    {
      cov_24ergzhwiw().b[20][1]++;
    }
    cov_24ergzhwiw().s[71]++;
    if (
    /* istanbul ignore next */
    (cov_24ergzhwiw().b[22][0]++, filtros.urgencias) &&
    /* istanbul ignore next */
    (cov_24ergzhwiw().b[22][1]++, filtros.urgencias.length > 0)) {
      /* istanbul ignore next */
      cov_24ergzhwiw().b[21][0]++;
      cov_24ergzhwiw().s[72]++;
      avaliacoesPendentes = avaliacoesPendentes.filter(avaliacao => {
        /* istanbul ignore next */
        cov_24ergzhwiw().f[9]++;
        cov_24ergzhwiw().s[73]++;
        return filtros.urgencias.includes(avaliacao.urgencia);
      });
    } else
    /* istanbul ignore next */
    {
      cov_24ergzhwiw().b[21][1]++;
    }
    cov_24ergzhwiw().s[74]++;
    if (!filtros.incluirVencidas) {
      /* istanbul ignore next */
      cov_24ergzhwiw().b[23][0]++;
      cov_24ergzhwiw().s[75]++;
      avaliacoesPendentes = avaliacoesPendentes.filter(avaliacao => {
        /* istanbul ignore next */
        cov_24ergzhwiw().f[10]++;
        cov_24ergzhwiw().s[76]++;
        return avaliacao.diasRestantes >= 0;
      });
    } else
    /* istanbul ignore next */
    {
      cov_24ergzhwiw().b[23][1]++;
    }
    // Ordenar resultados
    cov_24ergzhwiw().s[77]++;
    switch (filtros.ordenacao) {
      case 'dataLimite':
        /* istanbul ignore next */
        cov_24ergzhwiw().b[24][0]++;
        cov_24ergzhwiw().s[78]++;
        avaliacoesPendentes.sort((a, b) => {
          /* istanbul ignore next */
          cov_24ergzhwiw().f[11]++;
          cov_24ergzhwiw().s[79]++;
          return a.dataLimite.getTime() - b.dataLimite.getTime();
        });
        /* istanbul ignore next */
        cov_24ergzhwiw().s[80]++;
        break;
      case 'urgencia':
        /* istanbul ignore next */
        cov_24ergzhwiw().b[24][1]++;
        const ordemUrgencia =
        /* istanbul ignore next */
        (cov_24ergzhwiw().s[81]++, {
          'critica': 0,
          'alta': 1,
          'media': 2,
          'baixa': 3
        });
        /* istanbul ignore next */
        cov_24ergzhwiw().s[82]++;
        avaliacoesPendentes.sort((a, b) => {
          /* istanbul ignore next */
          cov_24ergzhwiw().f[12]++;
          cov_24ergzhwiw().s[83]++;
          return ordemUrgencia[a.urgencia] - ordemUrgencia[b.urgencia];
        });
        /* istanbul ignore next */
        cov_24ergzhwiw().s[84]++;
        break;
      case 'criadaEm':
        /* istanbul ignore next */
        cov_24ergzhwiw().b[24][2]++;
        cov_24ergzhwiw().s[85]++;
        avaliacoesPendentes.sort((a, b) => {
          /* istanbul ignore next */
          cov_24ergzhwiw().f[13]++;
          cov_24ergzhwiw().s[86]++;
          return b.criadaEm.getTime() - a.criadaEm.getTime();
        });
        /* istanbul ignore next */
        cov_24ergzhwiw().s[87]++;
        break;
    }
    // Aplicar limite
    /* istanbul ignore next */
    cov_24ergzhwiw().s[88]++;
    if (filtros.limite) {
      /* istanbul ignore next */
      cov_24ergzhwiw().b[25][0]++;
      cov_24ergzhwiw().s[89]++;
      avaliacoesPendentes = avaliacoesPendentes.slice(0, filtros.limite);
    } else
    /* istanbul ignore next */
    {
      cov_24ergzhwiw().b[25][1]++;
    }
    // Gerar estatísticas se solicitado
    let estatisticas =
    /* istanbul ignore next */
    (cov_24ergzhwiw().s[90]++, null);
    /* istanbul ignore next */
    cov_24ergzhwiw().s[91]++;
    if (filtros.incluirEstatisticas) {
      /* istanbul ignore next */
      cov_24ergzhwiw().b[26][0]++;
      cov_24ergzhwiw().s[92]++;
      if (filtros.usuarioId) {
        /* istanbul ignore next */
        cov_24ergzhwiw().b[27][0]++;
        cov_24ergzhwiw().s[93]++;
        estatisticas = await (0, _notificacoesavaliacoes.gerarEstatisticasNotificacoes)(filtros.usuarioId);
      } else {
        /* istanbul ignore next */
        cov_24ergzhwiw().b[27][1]++;
        cov_24ergzhwiw().s[94]++;
        if (
        /* istanbul ignore next */
        (cov_24ergzhwiw().b[29][0]++, filtros.usuariosIds) &&
        /* istanbul ignore next */
        (cov_24ergzhwiw().b[29][1]++, filtros.usuariosIds.length === 1)) {
          /* istanbul ignore next */
          cov_24ergzhwiw().b[28][0]++;
          cov_24ergzhwiw().s[95]++;
          estatisticas = await (0, _notificacoesavaliacoes.gerarEstatisticasNotificacoes)(filtros.usuariosIds[0]);
        } else {
          /* istanbul ignore next */
          cov_24ergzhwiw().b[28][1]++;
          cov_24ergzhwiw().s[96]++;
          estatisticas = await (0, _notificacoesavaliacoes.gerarEstatisticasNotificacoes)();
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_24ergzhwiw().b[26][1]++;
    }
    cov_24ergzhwiw().s[97]++;
    return _server.NextResponse.json({
      avaliacoesPendentes,
      estatisticas,
      filtros,
      total: avaliacoesPendentes.length,
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_24ergzhwiw().s[98]++;
    console.error('Erro ao buscar notificações de avaliações (POST):', error);
    /* istanbul ignore next */
    cov_24ergzhwiw().s[99]++;
    if (error instanceof _zod.z.ZodError) {
      /* istanbul ignore next */
      cov_24ergzhwiw().b[30][0]++;
      cov_24ergzhwiw().s[100]++;
      return _server.NextResponse.json({
        error: 'Dados inválidos',
        details: error.errors
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_24ergzhwiw().b[30][1]++;
    }
    cov_24ergzhwiw().s[101]++;
    return _server.NextResponse.json({
      error: 'Erro interno do servidor'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,