f4b19a4a3a8c10910c7fd7e7dd244147
"use strict";

/* istanbul ignore next */
function cov_1mj4wl62vw() {
  var path = "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\atendentes\\historico\\route.ts";
  var hash = "e962b41b9546e34ca6e6b289b70c27a192aaf063";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\atendentes\\historico\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 19
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 18
        },
        end: {
          line: 12,
          column: 38
        }
      },
      "5": {
        start: {
          line: 13,
          column: 14
        },
        end: {
          line: 13,
          column: 45
        }
      },
      "6": {
        start: {
          line: 14,
          column: 16
        },
        end: {
          line: 14,
          column: 49
        }
      },
      "7": {
        start: {
          line: 15,
          column: 13
        },
        end: {
          line: 15,
          column: 27
        }
      },
      "8": {
        start: {
          line: 16,
          column: 29
        },
        end: {
          line: 16,
          column: 88
        }
      },
      "9": {
        start: {
          line: 17,
          column: 19
        },
        end: {
          line: 17,
          column: 65
        }
      },
      "10": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 272,
          column: 5
        }
      },
      "11": {
        start: {
          line: 21,
          column: 24
        },
        end: {
          line: 21,
          column: 80
        }
      },
      "12": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 28,
          column: 9
        }
      },
      "13": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 27,
          column: 15
        }
      },
      "14": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 39,
          column: 9
        }
      },
      "15": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 38,
          column: 15
        }
      },
      "16": {
        start: {
          line: 41,
          column: 33
        },
        end: {
          line: 41,
          column: 53
        }
      },
      "17": {
        start: {
          line: 42,
          column: 35
        },
        end: {
          line: 42,
          column: 77
        }
      },
      "18": {
        start: {
          line: 44,
          column: 104
        },
        end: {
          line: 44,
          column: 179
        }
      },
      "19": {
        start: {
          line: 46,
          column: 24
        },
        end: {
          line: 46,
          column: 26
        }
      },
      "20": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "21": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 46
        }
      },
      "22": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 54,
          column: 9
        }
      },
      "23": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 32
        }
      },
      "24": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 64,
          column: 9
        }
      },
      "25": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 34
        }
      },
      "26": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 60,
          column: 13
        }
      },
      "27": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 59,
          column: 60
        }
      },
      "28": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 63,
          column: 13
        }
      },
      "29": {
        start: {
          line: 62,
          column: 16
        },
        end: {
          line: 62,
          column: 57
        }
      },
      "30": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "31": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 46
        }
      },
      "32": {
        start: {
          line: 70,
          column: 8
        },
        end: {
          line: 89,
          column: 9
        }
      },
      "33": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 88,
          column: 14
        }
      },
      "34": {
        start: {
          line: 91,
          column: 23
        },
        end: {
          line: 91,
          column: 44
        }
      },
      "35": {
        start: {
          line: 93,
          column: 35
        },
        end: {
          line: 128,
          column: 10
        }
      },
      "36": {
        start: {
          line: 130,
          column: 29
        },
        end: {
          line: 130,
          column: 54
        }
      },
      "37": {
        start: {
          line: 131,
          column: 33
        },
        end: {
          line: 131,
          column: 54
        }
      },
      "38": {
        start: {
          line: 132,
          column: 34
        },
        end: {
          line: 132,
          column: 44
        }
      },
      "39": {
        start: {
          line: 134,
          column: 75
        },
        end: {
          line: 176,
          column: 10
        }
      },
      "40": {
        start: {
          line: 178,
          column: 31
        },
        end: {
          line: 178,
          column: 88
        }
      },
      "41": {
        start: {
          line: 178,
          column: 55
        },
        end: {
          line: 178,
          column: 71
        }
      },
      "42": {
        start: {
          line: 179,
          column: 39
        },
        end: {
          line: 191,
          column: 10
        }
      },
      "43": {
        start: {
          line: 193,
          column: 37
        },
        end: {
          line: 204,
          column: 10
        }
      },
      "44": {
        start: {
          line: 194,
          column: 28
        },
        end: {
          line: 194,
          column: 87
        }
      },
      "45": {
        start: {
          line: 194,
          column: 61
        },
        end: {
          line: 194,
          column: 86
        }
      },
      "46": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 203,
          column: 14
        }
      },
      "47": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 256,
          column: 11
        }
      },
      "48": {
        start: {
          line: 206,
          column: 46
        },
        end: {
          line: 227,
          column: 17
        }
      },
      "49": {
        start: {
          line: 239,
          column: 20
        },
        end: {
          line: 239,
          column: 52
        }
      },
      "50": {
        start: {
          line: 240,
          column: 20
        },
        end: {
          line: 240,
          column: 31
        }
      },
      "51": {
        start: {
          line: 243,
          column: 20
        },
        end: {
          line: 243,
          column: 52
        }
      },
      "52": {
        start: {
          line: 244,
          column: 20
        },
        end: {
          line: 244,
          column: 31
        }
      },
      "53": {
        start: {
          line: 258,
          column: 8
        },
        end: {
          line: 258,
          column: 78
        }
      },
      "54": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 266,
          column: 9
        }
      },
      "55": {
        start: {
          line: 260,
          column: 12
        },
        end: {
          line: 265,
          column: 15
        }
      },
      "56": {
        start: {
          line: 267,
          column: 8
        },
        end: {
          line: 271,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "GET",
        decl: {
          start: {
            line: 18,
            column: 15
          },
          end: {
            line: 18,
            column: 18
          }
        },
        loc: {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 273,
            column: 1
          }
        },
        line: 18
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 178,
            column: 47
          },
          end: {
            line: 178,
            column: 48
          }
        },
        loc: {
          start: {
            line: 178,
            column: 55
          },
          end: {
            line: 178,
            column: 71
          }
        },
        line: 178
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 193,
            column: 53
          },
          end: {
            line: 193,
            column: 54
          }
        },
        loc: {
          start: {
            line: 193,
            column: 61
          },
          end: {
            line: 204,
            column: 9
          }
        },
        line: 193
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 194,
            column: 56
          },
          end: {
            line: 194,
            column: 57
          }
        },
        loc: {
          start: {
            line: 194,
            column: 61
          },
          end: {
            line: 194,
            column: 86
          }
        },
        line: 194
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 206,
            column: 37
          },
          end: {
            line: 206,
            column: 38
          }
        },
        loc: {
          start: {
            line: 206,
            column: 46
          },
          end: {
            line: 227,
            column: 17
          }
        },
        line: 206
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 238,
            column: 52
          },
          end: {
            line: 238,
            column: 53
          }
        },
        loc: {
          start: {
            line: 238,
            column: 65
          },
          end: {
            line: 241,
            column: 17
          }
        },
        line: 238
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 242,
            column: 60
          },
          end: {
            line: 242,
            column: 61
          }
        },
        loc: {
          start: {
            line: 242,
            column: 73
          },
          end: {
            line: 245,
            column: 17
          }
        },
        line: 242
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 28,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "1": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 39,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 39,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "2": {
        loc: {
          start: {
            line: 44,
            column: 16
          },
          end: {
            line: 44,
            column: 26
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 44,
            column: 25
          },
          end: {
            line: 44,
            column: 26
          }
        }],
        line: 44
      },
      "3": {
        loc: {
          start: {
            line: 44,
            column: 28
          },
          end: {
            line: 44,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 44,
            column: 37
          },
          end: {
            line: 44,
            column: 39
          }
        }],
        line: 44
      },
      "4": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "5": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "6": {
        loc: {
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "7": {
        loc: {
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 56,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 56,
            column: 22
          }
        }, {
          start: {
            line: 56,
            column: 26
          },
          end: {
            line: 56,
            column: 33
          }
        }],
        line: 56
      },
      "8": {
        loc: {
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 60,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 60,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "9": {
        loc: {
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 63,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 12
          },
          end: {
            line: 63,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "10": {
        loc: {
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 66,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 66
      },
      "11": {
        loc: {
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 89,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 89,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "12": {
        loc: {
          start: {
            line: 196,
            column: 25
          },
          end: {
            line: 201,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 196,
            column: 25
          },
          end: {
            line: 196,
            column: 32
          }
        }, {
          start: {
            line: 196,
            column: 36
          },
          end: {
            line: 201,
            column: 17
          }
        }],
        line: 196
      },
      "13": {
        loc: {
          start: {
            line: 197,
            column: 24
          },
          end: {
            line: 197,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 197,
            column: 24
          },
          end: {
            line: 197,
            column: 40
          }
        }, {
          start: {
            line: 197,
            column: 44
          },
          end: {
            line: 197,
            column: 49
          }
        }],
        line: 197
      },
      "14": {
        loc: {
          start: {
            line: 210,
            column: 37
          },
          end: {
            line: 210,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 210,
            column: 60
          },
          end: {
            line: 210,
            column: 92
          }
        }, {
          start: {
            line: 210,
            column: 95
          },
          end: {
            line: 210,
            column: 99
          }
        }],
        line: 210
      },
      "15": {
        loc: {
          start: {
            line: 211,
            column: 32
          },
          end: {
            line: 211,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 211,
            column: 50
          },
          end: {
            line: 211,
            column: 77
          }
        }, {
          start: {
            line: 211,
            column: 80
          },
          end: {
            line: 211,
            column: 84
          }
        }],
        line: 211
      },
      "16": {
        loc: {
          start: {
            line: 259,
            column: 8
          },
          end: {
            line: 266,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 259,
            column: 8
          },
          end: {
            line: 266,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 259
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0],
      "3": [0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\atendentes\\historico\\route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { getServerSession } from 'next-auth';\nimport { authOptions } from '@/lib/auth';\nimport { prisma } from '@/lib/prisma';\nimport { ZodError } from 'zod';\nimport { consultaHistoricoGeralSchema } from '@/lib/validations/historico-atendentes';\nimport { MENSAGENS_ERRO_ATENDENTES } from '@/lib/constants/mensagens';\n\n/**\n * GET /api/atendentes/historico\n * Lista o hist\xF3rico de altera\xE7\xF5es de todos os atendentes\n */\nexport async function GET(request: NextRequest) {\n  try {\n    // Verificar autentica\xE7\xE3o\n    const session = await getServerSession(authOptions);\n    if (!session?.user) {\n      return NextResponse.json({ erro: 'N\xE3o autorizado' }, { status: 401 });\n    }\n\n    // Verificar permiss\xF5es (apenas ADMIN e GERENTE podem ver hist\xF3rico geral)\n    if (!['ADMIN', 'GERENTE'].includes(session.user.userType)) {\n      return NextResponse.json(\n        { erro: MENSAGENS_ERRO_ATENDENTES.SEM_PERMISSAO },\n        { status: 403 }\n      );\n    }\n\n    // Extrair par\xE2metros de consulta\n    const { searchParams } = new URL(request.url);\n    const parametrosConsulta = Object.fromEntries(searchParams.entries());\n\n    // Validar par\xE2metros\n    const {\n      pagina = 1,\n      limite = 20,\n      busca,\n      atendenteId,\n      tipo,\n      dataInicio,\n      dataFim,\n      criadoPorId,\n    } = consultaHistoricoGeralSchema.parse(parametrosConsulta);\n\n    // Construir filtros\n    const filtros: any = {};\n\n    // Filtro por atendente espec\xEDfico\n    if (atendenteId) {\n      filtros.atendenteId = atendenteId;\n    }\n\n    // Filtro por tipo de altera\xE7\xE3o\n    if (tipo) {\n      filtros.tipo = tipo;\n    }\n\n    // Filtro por per\xEDodo\n    if (dataInicio || dataFim) {\n      filtros.criadoEm = {};\n      if (dataInicio) {\n        filtros.criadoEm.gte = new Date(dataInicio);\n      }\n      if (dataFim) {\n        filtros.criadoEm.lte = new Date(dataFim);\n      }\n    }\n\n    // Filtro por usu\xE1rio que fez a altera\xE7\xE3o\n    if (criadoPorId) {\n      filtros.criadoPorId = criadoPorId;\n    }\n\n    // Filtro de busca (nome do atendente ou descri\xE7\xE3o)\n    if (busca) {\n      filtros.OR = [\n        {\n          atendente: {\n            usuario: {\n              nome: {\n                contains: busca,\n                mode: 'insensitive',\n              },\n            },\n          },\n        },\n        {\n          descricao: {\n            contains: busca,\n            mode: 'insensitive',\n          },\n        },\n      ];\n    }\n\n    // Calcular offset\n    const offset = (pagina - 1) * limite;\n\n    // Buscar hist\xF3rico com pagina\xE7\xE3o\n    const [historico, total] = await Promise.all([\n      prisma.historicoAlteracaoAtendente.findMany({\n        where: filtros,\n        include: {\n          atendente: {\n            select: {\n              id: true,\n              usuario: {\n                select: {\n                  nome: true,\n                  email: true,\n                },\n              },\n              cargo: true,\n              setor: true,\n              status: true,\n            },\n          },\n          usuario: {\n            select: {\n              nome: true,\n              email: true,\n              userType: true,\n            },\n          },\n        },\n        orderBy: {\n          criadoEm: 'desc',\n        },\n        skip: offset,\n        take: limite,\n      }),\n      prisma.historicoAlteracaoAtendente.count({\n        where: filtros,\n      }),\n    ]);\n\n    // Calcular informa\xE7\xF5es de pagina\xE7\xE3o\n    const totalPaginas = Math.ceil(total / limite);\n    const temProximaPagina = pagina < totalPaginas;\n    const temPaginaAnterior = pagina > 1;\n\n    // Buscar estat\xEDsticas gerais\n    const [estatisticasPorTipo, estatisticasPorPeriodo, topUsuarios] =\n      await Promise.all([\n        // Estat\xEDsticas por tipo de altera\xE7\xE3o\n        prisma.historicoAlteracaoAtendente.groupBy({\n          by: ['tipo'],\n          where: filtros,\n          _count: {\n            id: true,\n          },\n        }),\n\n        // Estat\xEDsticas por per\xEDodo (\xFAltimos 7 dias)\n        prisma.historicoAlteracaoAtendente.groupBy({\n          by: ['tipo'],\n          where: {\n            ...filtros,\n            criadoEm: {\n              gte: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000),\n            },\n          },\n          _count: {\n            id: true,\n          },\n        }),\n\n        // Top 5 usu\xE1rios que mais fizeram altera\xE7\xF5es\n        prisma.historicoAlteracaoAtendente.groupBy({\n          by: ['criadoPorId'],\n          where: filtros,\n          _count: {\n            id: true,\n          },\n          orderBy: {\n            _count: {\n              id: 'desc',\n            },\n          },\n          take: 5,\n        }),\n      ]);\n\n    // Buscar informa\xE7\xF5es dos top usu\xE1rios\n    const idsTopUsuarios = topUsuarios\n      .map(item => item.criadoPorId)\n      .filter(Boolean);\n    const informacoesTopUsuarios = await prisma.usuario.findMany({\n      where: {\n        id: {\n          in: idsTopUsuarios,\n        },\n      },\n      select: {\n        id: true,\n        nome: true,\n        email: true,\n        userType: true,\n      },\n    });\n\n    // Mapear top usu\xE1rios com suas informa\xE7\xF5es\n    const topUsuariosCompletos = topUsuarios.map(item => {\n      const usuario = informacoesTopUsuarios.find(\n        u => u.id === item.criadoPorId\n      );\n      return {\n        usuario: usuario || {\n          id: item.criadoPorId || 'N/A',\n          nome: 'Usu\xE1rio n\xE3o encontrado',\n          email: '',\n          userType: '',\n        },\n        totalAlteracoes: item._count.id,\n      };\n    });\n\n    return NextResponse.json({\n      historico: historico.map(item => ({\n        id: item.id,\n        tipoAlteracao: item.tipo,\n        descricao: item.descricao,\n        dadosAnteriores: item.dadosAnteriores\n          ? JSON.parse(item.dadosAnteriores)\n          : null,\n        dadosNovos: item.dadosNovos ? JSON.parse(item.dadosNovos) : null,\n        atendente: {\n          id: item.atendente.id,\n          nome: item.atendente.usuario.nome,\n          email: item.atendente.usuario.email,\n          cargo: item.atendente.cargo,\n          setor: item.atendente.setor,\n          status: item.atendente.status,\n        },\n        alteradoPor: {\n          id: item.criadoPorId,\n          nome: item.usuario.nome,\n          email: item.usuario.email,\n          tipo: item.usuario.userType,\n        },\n        criadoEm: item.criadoEm,\n      })),\n      paginacao: {\n        paginaAtual: pagina,\n        totalPaginas,\n        totalItens: total,\n        itensPorPagina: limite,\n        temProximaPagina,\n        temPaginaAnterior,\n      },\n      estatisticas: {\n        totalAlteracoes: total,\n        porTipo: estatisticasPorTipo.reduce(\n          (acc, item) => {\n            acc[item.tipo] = item._count.id;\n            return acc;\n          },\n          {} as Record<string, number>\n        ),\n        ultimos7Dias: estatisticasPorPeriodo.reduce(\n          (acc, item) => {\n            acc[item.tipo] = item._count.id;\n            return acc;\n          },\n          {} as Record<string, number>\n        ),\n        topUsuarios: topUsuariosCompletos,\n      },\n      filtros: {\n        busca,\n        atendenteId,\n        tipo,\n        dataInicio,\n        dataFim,\n        criadoPorId,\n      },\n    });\n  } catch (error) {\n    console.error('Erro ao buscar hist\xF3rico geral de atendentes:', error);\n\n    if (error instanceof ZodError) {\n      return NextResponse.json(\n        {\n          erro: MENSAGENS_ERRO_ATENDENTES.DADOS_INVALIDOS,\n          detalhes: error.errors,\n        },\n        { status: 400 }\n      );\n    }\n\n    return NextResponse.json(\n      { erro: MENSAGENS_ERRO_ATENDENTES.ERRO_INTERNO },\n      { status: 500 }\n    );\n  }\n}\n"],
      names: ["GET", "request", "session", "getServerSession", "authOptions", "user", "NextResponse", "json", "erro", "status", "includes", "userType", "MENSAGENS_ERRO_ATENDENTES", "SEM_PERMISSAO", "searchParams", "URL", "url", "parametrosConsulta", "Object", "fromEntries", "entries", "pagina", "limite", "busca", "atendenteId", "tipo", "dataInicio", "dataFim", "criadoPorId", "consultaHistoricoGeralSchema", "parse", "filtros", "criadoEm", "gte", "Date", "lte", "OR", "atendente", "usuario", "nome", "contains", "mode", "descricao", "offset", "historico", "total", "Promise", "all", "prisma", "historicoAlteracaoAtendente", "findMany", "where", "include", "select", "id", "email", "cargo", "setor", "orderBy", "skip", "take", "count", "totalPaginas", "Math", "ceil", "temProximaPagina", "temPaginaAnterior", "estatisticasPorTipo", "estatisticasPorPeriodo", "topUsuarios", "groupBy", "by", "_count", "now", "idsTopUsuarios", "map", "item", "filter", "Boolean", "informacoesTopUsuarios", "in", "topUsuariosCompletos", "find", "u", "totalAlteracoes", "tipoAlteracao", "dadosAnteriores", "JSON", "dadosNovos", "alteradoPor", "paginacao", "paginaAtual", "totalItens", "itensPorPagina", "estatisticas", "porTipo", "reduce", "acc", "ultimos7Dias", "error", "console", "ZodError", "DADOS_INVALIDOS", "detalhes", "errors", "ERRO_INTERNO"],
      mappings: ";;;;+BAYsBA;;;eAAAA;;;wBAZoB;0BACT;sBACL;wBACL;qBACE;qCACoB;2BACH;AAMnC,eAAeA,IAAIC,OAAoB;IAC5C,IAAI;QACF,yBAAyB;QACzB,MAAMC,UAAU,MAAMC,IAAAA,0BAAgB,EAACC,iBAAW;QAClD,IAAI,CAACF,SAASG,MAAM;YAClB,OAAOC,oBAAY,CAACC,IAAI,CAAC;gBAAEC,MAAM;YAAiB,GAAG;gBAAEC,QAAQ;YAAI;QACrE;QAEA,0EAA0E;QAC1E,IAAI,CAAC;YAAC;YAAS;SAAU,CAACC,QAAQ,CAACR,QAAQG,IAAI,CAACM,QAAQ,GAAG;YACzD,OAAOL,oBAAY,CAACC,IAAI,CACtB;gBAAEC,MAAMI,oCAAyB,CAACC,aAAa;YAAC,GAChD;gBAAEJ,QAAQ;YAAI;QAElB;QAEA,iCAAiC;QACjC,MAAM,EAAEK,YAAY,EAAE,GAAG,IAAIC,IAAId,QAAQe,GAAG;QAC5C,MAAMC,qBAAqBC,OAAOC,WAAW,CAACL,aAAaM,OAAO;QAElE,qBAAqB;QACrB,MAAM,EACJC,SAAS,CAAC,EACVC,SAAS,EAAE,EACXC,KAAK,EACLC,WAAW,EACXC,IAAI,EACJC,UAAU,EACVC,OAAO,EACPC,WAAW,EACZ,GAAGC,iDAA4B,CAACC,KAAK,CAACb;QAEvC,oBAAoB;QACpB,MAAMc,UAAe,CAAC;QAEtB,kCAAkC;QAClC,IAAIP,aAAa;YACfO,QAAQP,WAAW,GAAGA;QACxB;QAEA,+BAA+B;QAC/B,IAAIC,MAAM;YACRM,QAAQN,IAAI,GAAGA;QACjB;QAEA,qBAAqB;QACrB,IAAIC,cAAcC,SAAS;YACzBI,QAAQC,QAAQ,GAAG,CAAC;YACpB,IAAIN,YAAY;gBACdK,QAAQC,QAAQ,CAACC,GAAG,GAAG,IAAIC,KAAKR;YAClC;YACA,IAAIC,SAAS;gBACXI,QAAQC,QAAQ,CAACG,GAAG,GAAG,IAAID,KAAKP;YAClC;QACF;QAEA,yCAAyC;QACzC,IAAIC,aAAa;YACfG,QAAQH,WAAW,GAAGA;QACxB;QAEA,mDAAmD;QACnD,IAAIL,OAAO;YACTQ,QAAQK,EAAE,GAAG;gBACX;oBACEC,WAAW;wBACTC,SAAS;4BACPC,MAAM;gCACJC,UAAUjB;gCACVkB,MAAM;4BACR;wBACF;oBACF;gBACF;gBACA;oBACEC,WAAW;wBACTF,UAAUjB;wBACVkB,MAAM;oBACR;gBACF;aACD;QACH;QAEA,kBAAkB;QAClB,MAAME,SAAS,AAACtB,CAAAA,SAAS,CAAA,IAAKC;QAE9B,iCAAiC;QACjC,MAAM,CAACsB,WAAWC,MAAM,GAAG,MAAMC,QAAQC,GAAG,CAAC;YAC3CC,cAAM,CAACC,2BAA2B,CAACC,QAAQ,CAAC;gBAC1CC,OAAOpB;gBACPqB,SAAS;oBACPf,WAAW;wBACTgB,QAAQ;4BACNC,IAAI;4BACJhB,SAAS;gCACPe,QAAQ;oCACNd,MAAM;oCACNgB,OAAO;gCACT;4BACF;4BACAC,OAAO;4BACPC,OAAO;4BACPhD,QAAQ;wBACV;oBACF;oBACA6B,SAAS;wBACPe,QAAQ;4BACNd,MAAM;4BACNgB,OAAO;4BACP5C,UAAU;wBACZ;oBACF;gBACF;gBACA+C,SAAS;oBACP1B,UAAU;gBACZ;gBACA2B,MAAMhB;gBACNiB,MAAMtC;YACR;YACA0B,cAAM,CAACC,2BAA2B,CAACY,KAAK,CAAC;gBACvCV,OAAOpB;YACT;SACD;QAED,oCAAoC;QACpC,MAAM+B,eAAeC,KAAKC,IAAI,CAACnB,QAAQvB;QACvC,MAAM2C,mBAAmB5C,SAASyC;QAClC,MAAMI,oBAAoB7C,SAAS;QAEnC,6BAA6B;QAC7B,MAAM,CAAC8C,qBAAqBC,wBAAwBC,YAAY,GAC9D,MAAMvB,QAAQC,GAAG,CAAC;YAChB,qCAAqC;YACrCC,cAAM,CAACC,2BAA2B,CAACqB,OAAO,CAAC;gBACzCC,IAAI;oBAAC;iBAAO;gBACZpB,OAAOpB;gBACPyC,QAAQ;oBACNlB,IAAI;gBACN;YACF;YAEA,4CAA4C;YAC5CN,cAAM,CAACC,2BAA2B,CAACqB,OAAO,CAAC;gBACzCC,IAAI;oBAAC;iBAAO;gBACZpB,OAAO;oBACL,GAAGpB,OAAO;oBACVC,UAAU;wBACRC,KAAK,IAAIC,KAAKA,KAAKuC,GAAG,KAAK,IAAI,KAAK,KAAK,KAAK;oBAChD;gBACF;gBACAD,QAAQ;oBACNlB,IAAI;gBACN;YACF;YAEA,6CAA6C;YAC7CN,cAAM,CAACC,2BAA2B,CAACqB,OAAO,CAAC;gBACzCC,IAAI;oBAAC;iBAAc;gBACnBpB,OAAOpB;gBACPyC,QAAQ;oBACNlB,IAAI;gBACN;gBACAI,SAAS;oBACPc,QAAQ;wBACNlB,IAAI;oBACN;gBACF;gBACAM,MAAM;YACR;SACD;QAEH,sCAAsC;QACtC,MAAMc,iBAAiBL,YACpBM,GAAG,CAACC,CAAAA,OAAQA,KAAKhD,WAAW,EAC5BiD,MAAM,CAACC;QACV,MAAMC,yBAAyB,MAAM/B,cAAM,CAACV,OAAO,CAACY,QAAQ,CAAC;YAC3DC,OAAO;gBACLG,IAAI;oBACF0B,IAAIN;gBACN;YACF;YACArB,QAAQ;gBACNC,IAAI;gBACJf,MAAM;gBACNgB,OAAO;gBACP5C,UAAU;YACZ;QACF;QAEA,2CAA2C;QAC3C,MAAMsE,uBAAuBZ,YAAYM,GAAG,CAACC,CAAAA;YAC3C,MAAMtC,UAAUyC,uBAAuBG,IAAI,CACzCC,CAAAA,IAAKA,EAAE7B,EAAE,KAAKsB,KAAKhD,WAAW;YAEhC,OAAO;gBACLU,SAASA,WAAW;oBAClBgB,IAAIsB,KAAKhD,WAAW,IAAI;oBACxBW,MAAM;oBACNgB,OAAO;oBACP5C,UAAU;gBACZ;gBACAyE,iBAAiBR,KAAKJ,MAAM,CAAClB,EAAE;YACjC;QACF;QAEA,OAAOhD,oBAAY,CAACC,IAAI,CAAC;YACvBqC,WAAWA,UAAU+B,GAAG,CAACC,CAAAA,OAAS,CAAA;oBAChCtB,IAAIsB,KAAKtB,EAAE;oBACX+B,eAAeT,KAAKnD,IAAI;oBACxBiB,WAAWkC,KAAKlC,SAAS;oBACzB4C,iBAAiBV,KAAKU,eAAe,GACjCC,KAAKzD,KAAK,CAAC8C,KAAKU,eAAe,IAC/B;oBACJE,YAAYZ,KAAKY,UAAU,GAAGD,KAAKzD,KAAK,CAAC8C,KAAKY,UAAU,IAAI;oBAC5DnD,WAAW;wBACTiB,IAAIsB,KAAKvC,SAAS,CAACiB,EAAE;wBACrBf,MAAMqC,KAAKvC,SAAS,CAACC,OAAO,CAACC,IAAI;wBACjCgB,OAAOqB,KAAKvC,SAAS,CAACC,OAAO,CAACiB,KAAK;wBACnCC,OAAOoB,KAAKvC,SAAS,CAACmB,KAAK;wBAC3BC,OAAOmB,KAAKvC,SAAS,CAACoB,KAAK;wBAC3BhD,QAAQmE,KAAKvC,SAAS,CAAC5B,MAAM;oBAC/B;oBACAgF,aAAa;wBACXnC,IAAIsB,KAAKhD,WAAW;wBACpBW,MAAMqC,KAAKtC,OAAO,CAACC,IAAI;wBACvBgB,OAAOqB,KAAKtC,OAAO,CAACiB,KAAK;wBACzB9B,MAAMmD,KAAKtC,OAAO,CAAC3B,QAAQ;oBAC7B;oBACAqB,UAAU4C,KAAK5C,QAAQ;gBACzB,CAAA;YACA0D,WAAW;gBACTC,aAAatE;gBACbyC;gBACA8B,YAAY/C;gBACZgD,gBAAgBvE;gBAChB2C;gBACAC;YACF;YACA4B,cAAc;gBACZV,iBAAiBvC;gBACjBkD,SAAS5B,oBAAoB6B,MAAM,CACjC,CAACC,KAAKrB;oBACJqB,GAAG,CAACrB,KAAKnD,IAAI,CAAC,GAAGmD,KAAKJ,MAAM,CAAClB,EAAE;oBAC/B,OAAO2C;gBACT,GACA,CAAC;gBAEHC,cAAc9B,uBAAuB4B,MAAM,CACzC,CAACC,KAAKrB;oBACJqB,GAAG,CAACrB,KAAKnD,IAAI,CAAC,GAAGmD,KAAKJ,MAAM,CAAClB,EAAE;oBAC/B,OAAO2C;gBACT,GACA,CAAC;gBAEH5B,aAAaY;YACf;YACAlD,SAAS;gBACPR;gBACAC;gBACAC;gBACAC;gBACAC;gBACAC;YACF;QACF;IACF,EAAE,OAAOuE,OAAO;QACdC,QAAQD,KAAK,CAAC,iDAAiDA;QAE/D,IAAIA,iBAAiBE,aAAQ,EAAE;YAC7B,OAAO/F,oBAAY,CAACC,IAAI,CACtB;gBACEC,MAAMI,oCAAyB,CAAC0F,eAAe;gBAC/CC,UAAUJ,MAAMK,MAAM;YACxB,GACA;gBAAE/F,QAAQ;YAAI;QAElB;QAEA,OAAOH,oBAAY,CAACC,IAAI,CACtB;YAAEC,MAAMI,oCAAyB,CAAC6F,YAAY;QAAC,GAC/C;YAAEhG,QAAQ;QAAI;IAElB;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e962b41b9546e34ca6e6b289b70c27a192aaf063"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1mj4wl62vw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1mj4wl62vw();
cov_1mj4wl62vw().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1mj4wl62vw().s[1]++;
Object.defineProperty(exports, "GET", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1mj4wl62vw().f[0]++;
    cov_1mj4wl62vw().s[2]++;
    return GET;
  }
});
const _server =
/* istanbul ignore next */
(cov_1mj4wl62vw().s[3]++, require("next/server"));
const _nextauth =
/* istanbul ignore next */
(cov_1mj4wl62vw().s[4]++, require("next-auth"));
const _auth =
/* istanbul ignore next */
(cov_1mj4wl62vw().s[5]++, require("../../../../lib/auth"));
const _prisma =
/* istanbul ignore next */
(cov_1mj4wl62vw().s[6]++, require("../../../../lib/prisma"));
const _zod =
/* istanbul ignore next */
(cov_1mj4wl62vw().s[7]++, require("zod"));
const _historicoatendentes =
/* istanbul ignore next */
(cov_1mj4wl62vw().s[8]++, require("../../../../lib/validations/historico-atendentes"));
const _mensagens =
/* istanbul ignore next */
(cov_1mj4wl62vw().s[9]++, require("../../../../lib/constants/mensagens"));
async function GET(request) {
  /* istanbul ignore next */
  cov_1mj4wl62vw().f[1]++;
  cov_1mj4wl62vw().s[10]++;
  try {
    // Verificar autenticação
    const session =
    /* istanbul ignore next */
    (cov_1mj4wl62vw().s[11]++, await (0, _nextauth.getServerSession)(_auth.authOptions));
    /* istanbul ignore next */
    cov_1mj4wl62vw().s[12]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_1mj4wl62vw().b[0][0]++;
      cov_1mj4wl62vw().s[13]++;
      return _server.NextResponse.json({
        erro: 'Não autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_1mj4wl62vw().b[0][1]++;
    }
    // Verificar permissões (apenas ADMIN e GERENTE podem ver histórico geral)
    cov_1mj4wl62vw().s[14]++;
    if (!['ADMIN', 'GERENTE'].includes(session.user.userType)) {
      /* istanbul ignore next */
      cov_1mj4wl62vw().b[1][0]++;
      cov_1mj4wl62vw().s[15]++;
      return _server.NextResponse.json({
        erro: _mensagens.MENSAGENS_ERRO_ATENDENTES.SEM_PERMISSAO
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_1mj4wl62vw().b[1][1]++;
    }
    // Extrair parâmetros de consulta
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_1mj4wl62vw().s[16]++, new URL(request.url));
    const parametrosConsulta =
    /* istanbul ignore next */
    (cov_1mj4wl62vw().s[17]++, Object.fromEntries(searchParams.entries()));
    // Validar parâmetros
    const {
      pagina =
      /* istanbul ignore next */
      (cov_1mj4wl62vw().b[2][0]++, 1),
      limite =
      /* istanbul ignore next */
      (cov_1mj4wl62vw().b[3][0]++, 20),
      busca,
      atendenteId,
      tipo,
      dataInicio,
      dataFim,
      criadoPorId
    } =
    /* istanbul ignore next */
    (cov_1mj4wl62vw().s[18]++, _historicoatendentes.consultaHistoricoGeralSchema.parse(parametrosConsulta));
    // Construir filtros
    const filtros =
    /* istanbul ignore next */
    (cov_1mj4wl62vw().s[19]++, {});
    // Filtro por atendente específico
    /* istanbul ignore next */
    cov_1mj4wl62vw().s[20]++;
    if (atendenteId) {
      /* istanbul ignore next */
      cov_1mj4wl62vw().b[4][0]++;
      cov_1mj4wl62vw().s[21]++;
      filtros.atendenteId = atendenteId;
    } else
    /* istanbul ignore next */
    {
      cov_1mj4wl62vw().b[4][1]++;
    }
    // Filtro por tipo de alteração
    cov_1mj4wl62vw().s[22]++;
    if (tipo) {
      /* istanbul ignore next */
      cov_1mj4wl62vw().b[5][0]++;
      cov_1mj4wl62vw().s[23]++;
      filtros.tipo = tipo;
    } else
    /* istanbul ignore next */
    {
      cov_1mj4wl62vw().b[5][1]++;
    }
    // Filtro por período
    cov_1mj4wl62vw().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_1mj4wl62vw().b[7][0]++, dataInicio) ||
    /* istanbul ignore next */
    (cov_1mj4wl62vw().b[7][1]++, dataFim)) {
      /* istanbul ignore next */
      cov_1mj4wl62vw().b[6][0]++;
      cov_1mj4wl62vw().s[25]++;
      filtros.criadoEm = {};
      /* istanbul ignore next */
      cov_1mj4wl62vw().s[26]++;
      if (dataInicio) {
        /* istanbul ignore next */
        cov_1mj4wl62vw().b[8][0]++;
        cov_1mj4wl62vw().s[27]++;
        filtros.criadoEm.gte = new Date(dataInicio);
      } else
      /* istanbul ignore next */
      {
        cov_1mj4wl62vw().b[8][1]++;
      }
      cov_1mj4wl62vw().s[28]++;
      if (dataFim) {
        /* istanbul ignore next */
        cov_1mj4wl62vw().b[9][0]++;
        cov_1mj4wl62vw().s[29]++;
        filtros.criadoEm.lte = new Date(dataFim);
      } else
      /* istanbul ignore next */
      {
        cov_1mj4wl62vw().b[9][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1mj4wl62vw().b[6][1]++;
    }
    // Filtro por usuário que fez a alteração
    cov_1mj4wl62vw().s[30]++;
    if (criadoPorId) {
      /* istanbul ignore next */
      cov_1mj4wl62vw().b[10][0]++;
      cov_1mj4wl62vw().s[31]++;
      filtros.criadoPorId = criadoPorId;
    } else
    /* istanbul ignore next */
    {
      cov_1mj4wl62vw().b[10][1]++;
    }
    // Filtro de busca (nome do atendente ou descrição)
    cov_1mj4wl62vw().s[32]++;
    if (busca) {
      /* istanbul ignore next */
      cov_1mj4wl62vw().b[11][0]++;
      cov_1mj4wl62vw().s[33]++;
      filtros.OR = [{
        atendente: {
          usuario: {
            nome: {
              contains: busca,
              mode: 'insensitive'
            }
          }
        }
      }, {
        descricao: {
          contains: busca,
          mode: 'insensitive'
        }
      }];
    } else
    /* istanbul ignore next */
    {
      cov_1mj4wl62vw().b[11][1]++;
    }
    // Calcular offset
    const offset =
    /* istanbul ignore next */
    (cov_1mj4wl62vw().s[34]++, (pagina - 1) * limite);
    // Buscar histórico com paginação
    const [historico, total] =
    /* istanbul ignore next */
    (cov_1mj4wl62vw().s[35]++, await Promise.all([_prisma.prisma.historicoAlteracaoAtendente.findMany({
      where: filtros,
      include: {
        atendente: {
          select: {
            id: true,
            usuario: {
              select: {
                nome: true,
                email: true
              }
            },
            cargo: true,
            setor: true,
            status: true
          }
        },
        usuario: {
          select: {
            nome: true,
            email: true,
            userType: true
          }
        }
      },
      orderBy: {
        criadoEm: 'desc'
      },
      skip: offset,
      take: limite
    }), _prisma.prisma.historicoAlteracaoAtendente.count({
      where: filtros
    })]));
    // Calcular informações de paginação
    const totalPaginas =
    /* istanbul ignore next */
    (cov_1mj4wl62vw().s[36]++, Math.ceil(total / limite));
    const temProximaPagina =
    /* istanbul ignore next */
    (cov_1mj4wl62vw().s[37]++, pagina < totalPaginas);
    const temPaginaAnterior =
    /* istanbul ignore next */
    (cov_1mj4wl62vw().s[38]++, pagina > 1);
    // Buscar estatísticas gerais
    const [estatisticasPorTipo, estatisticasPorPeriodo, topUsuarios] =
    /* istanbul ignore next */
    (cov_1mj4wl62vw().s[39]++, await Promise.all([
    // Estatísticas por tipo de alteração
    _prisma.prisma.historicoAlteracaoAtendente.groupBy({
      by: ['tipo'],
      where: filtros,
      _count: {
        id: true
      }
    }),
    // Estatísticas por período (últimos 7 dias)
    _prisma.prisma.historicoAlteracaoAtendente.groupBy({
      by: ['tipo'],
      where: {
        ...filtros,
        criadoEm: {
          gte: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000)
        }
      },
      _count: {
        id: true
      }
    }),
    // Top 5 usuários que mais fizeram alterações
    _prisma.prisma.historicoAlteracaoAtendente.groupBy({
      by: ['criadoPorId'],
      where: filtros,
      _count: {
        id: true
      },
      orderBy: {
        _count: {
          id: 'desc'
        }
      },
      take: 5
    })]));
    // Buscar informações dos top usuários
    const idsTopUsuarios =
    /* istanbul ignore next */
    (cov_1mj4wl62vw().s[40]++, topUsuarios.map(item => {
      /* istanbul ignore next */
      cov_1mj4wl62vw().f[2]++;
      cov_1mj4wl62vw().s[41]++;
      return item.criadoPorId;
    }).filter(Boolean));
    const informacoesTopUsuarios =
    /* istanbul ignore next */
    (cov_1mj4wl62vw().s[42]++, await _prisma.prisma.usuario.findMany({
      where: {
        id: {
          in: idsTopUsuarios
        }
      },
      select: {
        id: true,
        nome: true,
        email: true,
        userType: true
      }
    }));
    // Mapear top usuários com suas informações
    const topUsuariosCompletos =
    /* istanbul ignore next */
    (cov_1mj4wl62vw().s[43]++, topUsuarios.map(item => {
      /* istanbul ignore next */
      cov_1mj4wl62vw().f[3]++;
      const usuario =
      /* istanbul ignore next */
      (cov_1mj4wl62vw().s[44]++, informacoesTopUsuarios.find(u => {
        /* istanbul ignore next */
        cov_1mj4wl62vw().f[4]++;
        cov_1mj4wl62vw().s[45]++;
        return u.id === item.criadoPorId;
      }));
      /* istanbul ignore next */
      cov_1mj4wl62vw().s[46]++;
      return {
        usuario:
        /* istanbul ignore next */
        (cov_1mj4wl62vw().b[12][0]++, usuario) ||
        /* istanbul ignore next */
        (cov_1mj4wl62vw().b[12][1]++, {
          id:
          /* istanbul ignore next */
          (cov_1mj4wl62vw().b[13][0]++, item.criadoPorId) ||
          /* istanbul ignore next */
          (cov_1mj4wl62vw().b[13][1]++, 'N/A'),
          nome: 'Usuário não encontrado',
          email: '',
          userType: ''
        }),
        totalAlteracoes: item._count.id
      };
    }));
    /* istanbul ignore next */
    cov_1mj4wl62vw().s[47]++;
    return _server.NextResponse.json({
      historico: historico.map(item => {
        /* istanbul ignore next */
        cov_1mj4wl62vw().f[5]++;
        cov_1mj4wl62vw().s[48]++;
        return {
          id: item.id,
          tipoAlteracao: item.tipo,
          descricao: item.descricao,
          dadosAnteriores: item.dadosAnteriores ?
          /* istanbul ignore next */
          (cov_1mj4wl62vw().b[14][0]++, JSON.parse(item.dadosAnteriores)) :
          /* istanbul ignore next */
          (cov_1mj4wl62vw().b[14][1]++, null),
          dadosNovos: item.dadosNovos ?
          /* istanbul ignore next */
          (cov_1mj4wl62vw().b[15][0]++, JSON.parse(item.dadosNovos)) :
          /* istanbul ignore next */
          (cov_1mj4wl62vw().b[15][1]++, null),
          atendente: {
            id: item.atendente.id,
            nome: item.atendente.usuario.nome,
            email: item.atendente.usuario.email,
            cargo: item.atendente.cargo,
            setor: item.atendente.setor,
            status: item.atendente.status
          },
          alteradoPor: {
            id: item.criadoPorId,
            nome: item.usuario.nome,
            email: item.usuario.email,
            tipo: item.usuario.userType
          },
          criadoEm: item.criadoEm
        };
      }),
      paginacao: {
        paginaAtual: pagina,
        totalPaginas,
        totalItens: total,
        itensPorPagina: limite,
        temProximaPagina,
        temPaginaAnterior
      },
      estatisticas: {
        totalAlteracoes: total,
        porTipo: estatisticasPorTipo.reduce((acc, item) => {
          /* istanbul ignore next */
          cov_1mj4wl62vw().f[6]++;
          cov_1mj4wl62vw().s[49]++;
          acc[item.tipo] = item._count.id;
          /* istanbul ignore next */
          cov_1mj4wl62vw().s[50]++;
          return acc;
        }, {}),
        ultimos7Dias: estatisticasPorPeriodo.reduce((acc, item) => {
          /* istanbul ignore next */
          cov_1mj4wl62vw().f[7]++;
          cov_1mj4wl62vw().s[51]++;
          acc[item.tipo] = item._count.id;
          /* istanbul ignore next */
          cov_1mj4wl62vw().s[52]++;
          return acc;
        }, {}),
        topUsuarios: topUsuariosCompletos
      },
      filtros: {
        busca,
        atendenteId,
        tipo,
        dataInicio,
        dataFim,
        criadoPorId
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1mj4wl62vw().s[53]++;
    console.error('Erro ao buscar histórico geral de atendentes:', error);
    /* istanbul ignore next */
    cov_1mj4wl62vw().s[54]++;
    if (error instanceof _zod.ZodError) {
      /* istanbul ignore next */
      cov_1mj4wl62vw().b[16][0]++;
      cov_1mj4wl62vw().s[55]++;
      return _server.NextResponse.json({
        erro: _mensagens.MENSAGENS_ERRO_ATENDENTES.DADOS_INVALIDOS,
        detalhes: error.errors
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_1mj4wl62vw().b[16][1]++;
    }
    cov_1mj4wl62vw().s[56]++;
    return _server.NextResponse.json({
      erro: _mensagens.MENSAGENS_ERRO_ATENDENTES.ERRO_INTERNO
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,