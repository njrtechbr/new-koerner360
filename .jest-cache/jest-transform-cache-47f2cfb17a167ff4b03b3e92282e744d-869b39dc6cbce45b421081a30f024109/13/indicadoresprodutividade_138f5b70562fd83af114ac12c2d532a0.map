{"version":3,"names":["cov_84pa4htbb","actualCoverage","s","IndicadoresProdutividade","f","default","_default","determinarStatus","valor","meta","b","porcentagem","obterCorStatus","status","obterCorFundoStatus","RenderizarTendencia","tendencia","periodo","_jsxruntime","jsxs","className","jsx","_lucidereact","TrendingUp","toFixed","TrendingDown","Minus","CartaoIndicador","indicador","compacto","mostrarTendencia","porcentagemMeta","corStatus","corFundoStatus","_utils","cn","icone","titulo","_badge","Badge","variant","unidade","_progress","Progress","value","Math","min","_card","Card","CardHeader","CardTitle","descricao","CardDescription","CardContent","dados","mostrarTendencias","indicadores","id","avaliacoes","media","total","Star","documentos","ativosNoPeriodo","FileText","atividade","totalAlteracoes","Activity","eficiencia","push","pontuacao","ranking","totalAtendentes","Target","qualidade","Award","pontualidade","Clock","indicadoresExcelentes","filter","i","length","indicadoresBons","indicadoresRegulares","indicadoresRuins","statusGeral","Users","charAt","toUpperCase","slice","CheckCircle","AlertCircle","map"],"sources":["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\components\\metricas\\indicadores-produtividade.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport { Progress } from '@/components/ui/progress';\nimport { Badge } from '@/components/ui/badge';\nimport {\n  TrendingUp,\n  TrendingDown,\n  Minus,\n  Target,\n  Award,\n  Clock,\n  FileText,\n  Users,\n  Star,\n  Activity,\n  CheckCircle,\n  AlertCircle,\n} from 'lucide-react';\nimport { cn } from '@/lib/utils';\n\n/**\n * Interface para indicador individual\n */\ninterface Indicador {\n  id: string;\n  titulo: string;\n  valor: number;\n  meta?: number;\n  unidade: string;\n  tendencia?: {\n    valor: number;\n    periodo: string;\n  };\n  status: 'excelente' | 'bom' | 'regular' | 'ruim';\n  descricao?: string;\n  icone: React.ReactNode;\n}\n\n/**\n * Interface para dados de produtividade\n */\ninterface DadosProdutividade {\n  avaliacoes: {\n    media: number;\n    total: number;\n    meta?: number;\n    tendencia?: {\n      valor: number;\n      periodo: string;\n    };\n  };\n  documentos: {\n    total: number;\n    ativosNoPeriodo: number;\n    meta?: number;\n    tendencia?: {\n      valor: number;\n      periodo: string;\n    };\n  };\n  atividade: {\n    totalAlteracoes: number;\n    meta?: number;\n    tendencia?: {\n      valor: number;\n      periodo: string;\n    };\n  };\n  eficiencia?: {\n    pontuacao: number;\n    ranking?: number;\n    totalAtendentes?: number;\n  };\n  qualidade?: {\n    pontuacao: number;\n    meta?: number;\n  };\n  pontualidade?: {\n    pontuacao: number;\n    meta?: number;\n  };\n}\n\n/**\n * Props do componente\n */\ninterface IndicadoresProdutividadeProps {\n  dados: DadosProdutividade;\n  periodo?: string;\n  compacto?: boolean;\n  mostrarTendencias?: boolean;\n  className?: string;\n}\n\n/**\n * Função para determinar status baseado no valor e meta\n */\nfunction determinarStatus(\n  valor: number,\n  meta?: number\n): 'excelente' | 'bom' | 'regular' | 'ruim' {\n  if (!meta) {\n    if (valor >= 9) return 'excelente';\n    if (valor >= 7) return 'bom';\n    if (valor >= 5) return 'regular';\n    return 'ruim';\n  }\n\n  const porcentagem = (valor / meta) * 100;\n  if (porcentagem >= 100) return 'excelente';\n  if (porcentagem >= 80) return 'bom';\n  if (porcentagem >= 60) return 'regular';\n  return 'ruim';\n}\n\n/**\n * Função para obter cor do status\n */\nfunction obterCorStatus(status: string): string {\n  switch (status) {\n    case 'excelente':\n      return 'text-green-600';\n    case 'bom':\n      return 'text-blue-600';\n    case 'regular':\n      return 'text-yellow-600';\n    case 'ruim':\n      return 'text-red-600';\n    default:\n      return 'text-gray-600';\n  }\n}\n\n/**\n * Função para obter cor de fundo do status\n */\nfunction obterCorFundoStatus(status: string): string {\n  switch (status) {\n    case 'excelente':\n      return 'bg-green-50 border-green-200';\n    case 'bom':\n      return 'bg-blue-50 border-blue-200';\n    case 'regular':\n      return 'bg-yellow-50 border-yellow-200';\n    case 'ruim':\n      return 'bg-red-50 border-red-200';\n    default:\n      return 'bg-gray-50 border-gray-200';\n  }\n}\n\n/**\n * Componente para renderizar tendência\n */\nfunction RenderizarTendencia({\n  tendencia,\n}: {\n  tendencia?: { valor: number; periodo: string };\n}) {\n  if (!tendencia) return null;\n\n  const { valor, periodo } = tendencia;\n\n  if (valor > 0) {\n    return (\n      <div className=\"flex items-center text-green-600 text-sm\">\n        <TrendingUp className=\"h-3 w-3 mr-1\" />\n        <span>\n          +{valor.toFixed(1)}% ({periodo})\n        </span>\n      </div>\n    );\n  } else if (valor < 0) {\n    return (\n      <div className=\"flex items-center text-red-600 text-sm\">\n        <TrendingDown className=\"h-3 w-3 mr-1\" />\n        <span>\n          {valor.toFixed(1)}% ({periodo})\n        </span>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"flex items-center text-gray-500 text-sm\">\n        <Minus className=\"h-3 w-3 mr-1\" />\n        <span>0% ({periodo})</span>\n      </div>\n    );\n  }\n}\n\n/**\n * Componente para cartão de indicador individual\n */\nfunction CartaoIndicador({\n  indicador,\n  compacto = false,\n  mostrarTendencia = true,\n}: {\n  indicador: Indicador;\n  compacto?: boolean;\n  mostrarTendencia?: boolean;\n}) {\n  const porcentagemMeta = indicador.meta\n    ? (indicador.valor / indicador.meta) * 100\n    : 0;\n  const corStatus = obterCorStatus(indicador.status);\n  const corFundoStatus = obterCorFundoStatus(indicador.status);\n\n  if (compacto) {\n    return (\n      <div className={cn('p-4 rounded-lg border', corFundoStatus)}>\n        <div className=\"flex items-center justify-between mb-2\">\n          <div className=\"flex items-center space-x-2\">\n            <div className={corStatus}>{indicador.icone}</div>\n            <span className=\"font-medium text-sm\">{indicador.titulo}</span>\n          </div>\n          <Badge\n            variant={\n              indicador.status === 'excelente'\n                ? 'default'\n                : indicador.status === 'bom'\n                  ? 'secondary'\n                  : indicador.status === 'regular'\n                    ? 'outline'\n                    : 'destructive'\n            }\n          >\n            {indicador.status}\n          </Badge>\n        </div>\n        <div className=\"flex items-baseline space-x-1\">\n          <span className=\"text-2xl font-bold\">{indicador.valor}</span>\n          <span className=\"text-sm text-gray-500\">{indicador.unidade}</span>\n          {indicador.meta && (\n            <span className=\"text-xs text-gray-400\">/ {indicador.meta}</span>\n          )}\n        </div>\n        {indicador.meta && (\n          <Progress\n            value={Math.min(porcentagemMeta, 100)}\n            className=\"mt-2 h-1\"\n          />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <Card className={corFundoStatus}>\n      <CardHeader className=\"pb-2\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-2\">\n            <div className={corStatus}>{indicador.icone}</div>\n            <CardTitle className=\"text-lg\">{indicador.titulo}</CardTitle>\n          </div>\n          <Badge\n            variant={\n              indicador.status === 'excelente'\n                ? 'default'\n                : indicador.status === 'bom'\n                  ? 'secondary'\n                  : indicador.status === 'regular'\n                    ? 'outline'\n                    : 'destructive'\n            }\n          >\n            {indicador.status}\n          </Badge>\n        </div>\n        {indicador.descricao && (\n          <CardDescription>{indicador.descricao}</CardDescription>\n        )}\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-3\">\n          <div className=\"flex items-baseline space-x-2\">\n            <span className=\"text-3xl font-bold\">{indicador.valor}</span>\n            <span className=\"text-lg text-gray-500\">{indicador.unidade}</span>\n            {indicador.meta && (\n              <span className=\"text-sm text-gray-400\">\n                / {indicador.meta} (meta)\n              </span>\n            )}\n          </div>\n\n          {indicador.meta && (\n            <div className=\"space-y-1\">\n              <div className=\"flex justify-between text-sm\">\n                <span>Progresso</span>\n                <span>{porcentagemMeta.toFixed(1)}%</span>\n              </div>\n              <Progress\n                value={Math.min(porcentagemMeta, 100)}\n                className=\"h-2\"\n              />\n            </div>\n          )}\n\n          {mostrarTendencia && indicador.tendencia && (\n            <RenderizarTendencia tendencia={indicador.tendencia} />\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\n/**\n * Componente principal de indicadores de produtividade\n */\nexport function IndicadoresProdutividade({\n  dados,\n  periodo = '30 dias',\n  compacto = false,\n  mostrarTendencias = true,\n  className,\n}: IndicadoresProdutividadeProps) {\n  // Preparar indicadores baseados nos dados\n  const indicadores: Indicador[] = [\n    {\n      id: 'avaliacoes',\n      titulo: 'Avaliações',\n      valor: dados.avaliacoes.media,\n      meta: dados.avaliacoes.meta || 8,\n      unidade: '/10',\n      tendencia: dados.avaliacoes.tendencia,\n      status: determinarStatus(\n        dados.avaliacoes.media,\n        dados.avaliacoes.meta || 8\n      ),\n      descricao: `${dados.avaliacoes.total} avaliações no período`,\n      icone: <Star className=\"h-5 w-5\" />,\n    },\n    {\n      id: 'documentos',\n      titulo: 'Documentos',\n      valor: dados.documentos.total,\n      meta: dados.documentos.meta || 10,\n      unidade: 'docs',\n      tendencia: dados.documentos.tendencia,\n      status: determinarStatus(\n        dados.documentos.total,\n        dados.documentos.meta || 10\n      ),\n      descricao: `${dados.documentos.ativosNoPeriodo} ativos no período`,\n      icone: <FileText className=\"h-5 w-5\" />,\n    },\n    {\n      id: 'atividade',\n      titulo: 'Atividade',\n      valor: dados.atividade.totalAlteracoes,\n      meta: dados.atividade.meta || 20,\n      unidade: 'ações',\n      tendencia: dados.atividade.tendencia,\n      status: determinarStatus(\n        dados.atividade.totalAlteracoes,\n        dados.atividade.meta || 20\n      ),\n      descricao: 'Alterações e atualizações',\n      icone: <Activity className=\"h-5 w-5\" />,\n    },\n  ];\n\n  // Adicionar indicadores opcionais se disponíveis\n  if (dados.eficiencia) {\n    indicadores.push({\n      id: 'eficiencia',\n      titulo: 'Eficiência',\n      valor: dados.eficiencia.pontuacao,\n      meta: 100,\n      unidade: '%',\n      status: determinarStatus(dados.eficiencia.pontuacao, 100),\n      descricao: dados.eficiencia.ranking\n        ? `Posição ${dados.eficiencia.ranking} de ${dados.eficiencia.totalAtendentes}`\n        : 'Pontuação geral de eficiência',\n      icone: <Target className=\"h-5 w-5\" />,\n    });\n  }\n\n  if (dados.qualidade) {\n    indicadores.push({\n      id: 'qualidade',\n      titulo: 'Qualidade',\n      valor: dados.qualidade.pontuacao,\n      meta: dados.qualidade.meta || 90,\n      unidade: '%',\n      status: determinarStatus(\n        dados.qualidade.pontuacao,\n        dados.qualidade.meta || 90\n      ),\n      descricao: 'Índice de qualidade do trabalho',\n      icone: <Award className=\"h-5 w-5\" />,\n    });\n  }\n\n  if (dados.pontualidade) {\n    indicadores.push({\n      id: 'pontualidade',\n      titulo: 'Pontualidade',\n      valor: dados.pontualidade.pontuacao,\n      meta: dados.pontualidade.meta || 95,\n      unidade: '%',\n      status: determinarStatus(\n        dados.pontualidade.pontuacao,\n        dados.pontualidade.meta || 95\n      ),\n      descricao: 'Cumprimento de prazos',\n      icone: <Clock className=\"h-5 w-5\" />,\n    });\n  }\n\n  // Calcular resumo geral\n  const indicadoresExcelentes = indicadores.filter(\n    i => i.status === 'excelente'\n  ).length;\n  const indicadoresBons = indicadores.filter(i => i.status === 'bom').length;\n  const indicadoresRegulares = indicadores.filter(\n    i => i.status === 'regular'\n  ).length;\n  const indicadoresRuins = indicadores.filter(i => i.status === 'ruim').length;\n\n  const statusGeral =\n    indicadoresExcelentes >= indicadores.length * 0.7\n      ? 'excelente'\n      : indicadoresExcelentes + indicadoresBons >= indicadores.length * 0.6\n        ? 'bom'\n        : indicadoresRuins <= indicadores.length * 0.3\n          ? 'regular'\n          : 'ruim';\n\n  return (\n    <div className={cn('space-y-6', className)}>\n      {/* Resumo Geral */}\n      <Card className={obterCorFundoStatus(statusGeral)}>\n        <CardHeader>\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <CardTitle className=\"flex items-center space-x-2\">\n                <Users className=\"h-5 w-5\" />\n                <span>Resumo de Produtividade</span>\n              </CardTitle>\n              <CardDescription>Período: {periodo}</CardDescription>\n            </div>\n            <Badge\n              variant={\n                statusGeral === 'excelente'\n                  ? 'default'\n                  : statusGeral === 'bom'\n                    ? 'secondary'\n                    : statusGeral === 'regular'\n                      ? 'outline'\n                      : 'destructive'\n              }\n              className=\"text-lg px-3 py-1\"\n            >\n              {statusGeral.charAt(0).toUpperCase() + statusGeral.slice(1)}\n            </Badge>\n          </div>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n            <div className=\"text-center\">\n              <div className=\"flex items-center justify-center mb-1\">\n                <CheckCircle className=\"h-4 w-4 text-green-600 mr-1\" />\n                <span className=\"text-2xl font-bold text-green-600\">\n                  {indicadoresExcelentes}\n                </span>\n              </div>\n              <span className=\"text-sm text-gray-500\">Excelentes</span>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"flex items-center justify-center mb-1\">\n                <CheckCircle className=\"h-4 w-4 text-blue-600 mr-1\" />\n                <span className=\"text-2xl font-bold text-blue-600\">\n                  {indicadoresBons}\n                </span>\n              </div>\n              <span className=\"text-sm text-gray-500\">Bons</span>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"flex items-center justify-center mb-1\">\n                <AlertCircle className=\"h-4 w-4 text-yellow-600 mr-1\" />\n                <span className=\"text-2xl font-bold text-yellow-600\">\n                  {indicadoresRegulares}\n                </span>\n              </div>\n              <span className=\"text-sm text-gray-500\">Regulares</span>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"flex items-center justify-center mb-1\">\n                <AlertCircle className=\"h-4 w-4 text-red-600 mr-1\" />\n                <span className=\"text-2xl font-bold text-red-600\">\n                  {indicadoresRuins}\n                </span>\n              </div>\n              <span className=\"text-sm text-gray-500\">Ruins</span>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Indicadores Individuais */}\n      <div\n        className={cn(\n          compacto\n            ? 'grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4'\n            : 'grid grid-cols-1 md:grid-cols-2 gap-6'\n        )}\n      >\n        {indicadores.map(indicador => (\n          <CartaoIndicador\n            key={indicador.id}\n            indicador={indicador}\n            compacto={compacto}\n            mostrarTendencia={mostrarTendencias}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default IndicadoresProdutividade;\n"],"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","ignoreList":[]}