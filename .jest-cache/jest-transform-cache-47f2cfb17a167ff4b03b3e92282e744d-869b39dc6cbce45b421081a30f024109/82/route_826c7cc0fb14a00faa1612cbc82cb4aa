f8c58ea510eecf549a596eced1578d8f
"use strict";

/* istanbul ignore next */
function cov_25va4lkym() {
  var path = "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\atendentes\\[id]\\documentos\\route.ts";
  var hash = "f8daa29f085e1415e91df8d09dc5d3761c11065f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\atendentes\\[id]\\documentos\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 19
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 20
        }
      },
      "6": {
        start: {
          line: 19,
          column: 16
        },
        end: {
          line: 19,
          column: 38
        }
      },
      "7": {
        start: {
          line: 20,
          column: 18
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "8": {
        start: {
          line: 21,
          column: 14
        },
        end: {
          line: 21,
          column: 48
        }
      },
      "9": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 52
        }
      },
      "10": {
        start: {
          line: 23,
          column: 13
        },
        end: {
          line: 23,
          column: 27
        }
      },
      "11": {
        start: {
          line: 24,
          column: 20
        },
        end: {
          line: 24,
          column: 72
        }
      },
      "12": {
        start: {
          line: 27,
          column: 33
        },
        end: {
          line: 46,
          column: 2
        }
      },
      "13": {
        start: {
          line: 49,
          column: 37
        },
        end: {
          line: 68,
          column: 2
        }
      },
      "14": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 156,
          column: 5
        }
      },
      "15": {
        start: {
          line: 72,
          column: 24
        },
        end: {
          line: 72,
          column: 80
        }
      },
      "16": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 79,
          column: 9
        }
      },
      "17": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 78,
          column: 15
        }
      },
      "18": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 91,
          column: 9
        }
      },
      "19": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 90,
          column: 15
        }
      },
      "20": {
        start: {
          line: 93,
          column: 28
        },
        end: {
          line: 93,
          column: 74
        }
      },
      "21": {
        start: {
          line: 95,
          column: 26
        },
        end: {
          line: 103,
          column: 10
        }
      },
      "22": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 110,
          column: 9
        }
      },
      "23": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 109,
          column: 15
        }
      },
      "24": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 118,
          column: 9
        }
      },
      "25": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 117,
          column: 15
        }
      },
      "26": {
        start: {
          line: 120,
          column: 27
        },
        end: {
          line: 127,
          column: 10
        }
      },
      "27": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 140,
          column: 11
        }
      },
      "28": {
        start: {
          line: 129,
          column: 47
        },
        end: {
          line: 139,
          column: 17
        }
      },
      "29": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 142,
          column: 72
        }
      },
      "30": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 150,
          column: 9
        }
      },
      "31": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 149,
          column: 15
        }
      },
      "32": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 155,
          column: 11
        }
      },
      "33": {
        start: {
          line: 159,
          column: 4
        },
        end: {
          line: 277,
          column: 5
        }
      },
      "34": {
        start: {
          line: 161,
          column: 24
        },
        end: {
          line: 161,
          column: 80
        }
      },
      "35": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 168,
          column: 9
        }
      },
      "36": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 167,
          column: 15
        }
      },
      "37": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 179,
          column: 9
        }
      },
      "38": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 178,
          column: 15
        }
      },
      "39": {
        start: {
          line: 181,
          column: 28
        },
        end: {
          line: 181,
          column: 74
        }
      },
      "40": {
        start: {
          line: 183,
          column: 26
        },
        end: {
          line: 190,
          column: 10
        }
      },
      "41": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 197,
          column: 9
        }
      },
      "42": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 196,
          column: 15
        }
      },
      "43": {
        start: {
          line: 199,
          column: 32
        },
        end: {
          line: 199,
          column: 52
        }
      },
      "44": {
        start: {
          line: 201,
          column: 31
        },
        end: {
          line: 201,
          column: 74
        }
      },
      "45": {
        start: {
          line: 203,
          column: 35
        },
        end: {
          line: 209,
          column: 10
        }
      },
      "46": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 216,
          column: 9
        }
      },
      "47": {
        start: {
          line: 211,
          column: 12
        },
        end: {
          line: 215,
          column: 15
        }
      },
      "48": {
        start: {
          line: 218,
          column: 30
        },
        end: {
          line: 231,
          column: 10
        }
      },
      "49": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 245,
          column: 11
        }
      },
      "50": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 261,
          column: 11
        }
      },
      "51": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 263,
          column: 74
        }
      },
      "52": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 271,
          column: 9
        }
      },
      "53": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 270,
          column: 15
        }
      },
      "54": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 276,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 15
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 16
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "GET",
        decl: {
          start: {
            line: 69,
            column: 15
          },
          end: {
            line: 69,
            column: 18
          }
        },
        loc: {
          start: {
            line: 69,
            column: 40
          },
          end: {
            line: 157,
            column: 1
          }
        },
        line: 69
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 129,
            column: 39
          },
          end: {
            line: 129,
            column: 40
          }
        },
        loc: {
          start: {
            line: 129,
            column: 47
          },
          end: {
            line: 139,
            column: 17
          }
        },
        line: 129
      },
      "5": {
        name: "POST",
        decl: {
          start: {
            line: 158,
            column: 15
          },
          end: {
            line: 158,
            column: 19
          }
        },
        loc: {
          start: {
            line: 158,
            column: 41
          },
          end: {
            line: 278,
            column: 1
          }
        },
        line: 158
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "1": {
        loc: {
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 81,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 81
      },
      "2": {
        loc: {
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 110,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 104
      },
      "3": {
        loc: {
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 112
      },
      "4": {
        loc: {
          start: {
            line: 112,
            column: 12
          },
          end: {
            line: 112,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 112,
            column: 12
          },
          end: {
            line: 112,
            column: 49
          }
        }, {
          start: {
            line: 112,
            column: 53
          },
          end: {
            line: 112,
            column: 92
          }
        }],
        line: 112
      },
      "5": {
        loc: {
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 150,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 150,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 143
      },
      "6": {
        loc: {
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 168,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 168,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 162
      },
      "7": {
        loc: {
          start: {
            line: 170,
            column: 8
          },
          end: {
            line: 179,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 8
          },
          end: {
            line: 179,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 170
      },
      "8": {
        loc: {
          start: {
            line: 191,
            column: 8
          },
          end: {
            line: 197,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 8
          },
          end: {
            line: 197,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 191
      },
      "9": {
        loc: {
          start: {
            line: 210,
            column: 8
          },
          end: {
            line: 216,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 210,
            column: 8
          },
          end: {
            line: 216,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 210
      },
      "10": {
        loc: {
          start: {
            line: 223,
            column: 29
          },
          end: {
            line: 223,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 223,
            column: 58
          },
          end: {
            line: 223,
            column: 94
          }
        }, {
          start: {
            line: 223,
            column: 97
          },
          end: {
            line: 223,
            column: 101
          }
        }],
        line: 223
      },
      "11": {
        loc: {
          start: {
            line: 264,
            column: 8
          },
          end: {
            line: 271,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 264,
            column: 8
          },
          end: {
            line: 271,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 264
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\atendentes\\[id]\\documentos\\route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { getServerSession } from 'next-auth';\nimport { authOptions } from '@/lib/auth';\nimport { prisma } from '@/lib/prisma';\nimport { z } from 'zod';\nimport {\n  idAtendenteSchema,\n  MENSAGENS_ERRO_ATENDENTES,\n} from '@/lib/validations/atendentes';\nimport { ZodError } from 'zod';\nimport { saveFile, deleteFile, validateFile } from '@/lib/upload';\n\ninterface RouteParams {\n  params: {\n    id: string;\n  };\n}\n\n/**\n * Schema para valida\xE7\xE3o de documento\n */\nconst criarDocumentoSchema = z.object({\n  tipo: z.enum([\n    'RG',\n    'CPF',\n    'CNH',\n    'CTPS',\n    'TITULO_ELEITOR',\n    'CERTIFICADO',\n    'DIPLOMA',\n    'OUTRO',\n  ]),\n  numero: z\n    .string()\n    .min(1, 'N\xFAmero do documento \xE9 obrigat\xF3rio')\n    .max(50, 'N\xFAmero deve ter no m\xE1ximo 50 caracteres'),\n  dataEmissao: z\n    .string()\n    .datetime('Data de emiss\xE3o deve ser uma data v\xE1lida')\n    .optional(),\n  orgaoEmissor: z\n    .string()\n    .max(100, '\xD3rg\xE3o emissor deve ter no m\xE1ximo 100 caracteres')\n    .optional(),\n  arquivo: z.string().url('URL do arquivo deve ser v\xE1lida').optional(),\n  nomeArquivo: z.string().optional(),\n  tamanhoArquivo: z.number().optional(),\n  tipoMime: z.string().optional(),\n  observacoes: z\n    .string()\n    .max(500, 'Observa\xE7\xF5es devem ter no m\xE1ximo 500 caracteres')\n    .optional(),\n});\n\n/**\n * Schema para atualiza\xE7\xE3o de documento\n */\nconst atualizarDocumentoSchema = z.object({\n  tipo: z\n    .enum([\n      'RG',\n      'CPF',\n      'CNH',\n      'CTPS',\n      'TITULO_ELEITOR',\n      'CERTIFICADO',\n      'DIPLOMA',\n      'OUTRO',\n    ])\n    .optional(),\n  numero: z\n    .string()\n    .min(1, 'N\xFAmero do documento \xE9 obrigat\xF3rio')\n    .max(50, 'N\xFAmero deve ter no m\xE1ximo 50 caracteres')\n    .optional(),\n  dataEmissao: z\n    .string()\n    .datetime('Data de emiss\xE3o deve ser uma data v\xE1lida')\n    .optional(),\n  orgaoEmissor: z\n    .string()\n    .max(100, '\xD3rg\xE3o emissor deve ter no m\xE1ximo 100 caracteres')\n    .optional(),\n  arquivo: z.string().url('URL do arquivo deve ser v\xE1lida').optional(),\n  nomeArquivo: z.string().optional(),\n  tamanhoArquivo: z.number().optional(),\n  tipoMime: z.string().optional(),\n  observacoes: z\n    .string()\n    .max(500, 'Observa\xE7\xF5es devem ter no m\xE1ximo 500 caracteres')\n    .optional(),\n});\n\n/**\n * GET /api/atendentes/[id]/documentos\n * Lista documentos de um atendente\n */\nexport async function GET(request: NextRequest, { params }: RouteParams) {\n  try {\n    // Verificar autentica\xE7\xE3o\n    const session = await getServerSession(authOptions);\n    if (!session?.user) {\n      return NextResponse.json({ erro: 'N\xE3o autorizado' }, { status: 401 });\n    }\n\n    // Verificar permiss\xF5es\n    if (!['ADMIN', 'GERENTE', 'ATENDENTE'].includes(session.user.userType)) {\n      return NextResponse.json(\n        { erro: MENSAGENS_ERRO_ATENDENTES.SEM_PERMISSAO },\n        { status: 403 }\n      );\n    }\n\n    // Validar ID\n    const atendenteId = idAtendenteSchema.parse(params.id);\n\n    // Verificar se o atendente existe\n    const atendente = await prisma.atendente.findUnique({\n      where: { id: atendenteId },\n      select: { id: true, usuarioId: true },\n    });\n\n    if (!atendente) {\n      return NextResponse.json(\n        { erro: MENSAGENS_ERRO_ATENDENTES.ATENDENTE_NAO_ENCONTRADO },\n        { status: 404 }\n      );\n    }\n\n    // Verificar se o atendente pode ver apenas seus pr\xF3prios documentos\n    if (\n      session.user.userType === 'ATENDENTE' &&\n      atendente.usuarioId !== session.user.id\n    ) {\n      return NextResponse.json(\n        { erro: MENSAGENS_ERRO_ATENDENTES.SEM_PERMISSAO },\n        { status: 403 }\n      );\n    }\n\n    // Buscar documentos\n    const documentos = await prisma.documentoAtendente.findMany({\n      where: { atendenteId },\n      orderBy: {\n        criadoEm: 'desc',\n      },\n    });\n\n    return NextResponse.json({\n      documentos: documentos.map(doc => ({\n        id: doc.id,\n        tipo: doc.tipo,\n        numero: doc.numero,\n        dataEmissao: doc.dataEmissao,\n        orgaoEmissor: doc.orgaoEmissor,\n        arquivo: doc.arquivo,\n        observacoes: doc.observacoes,\n        criadoEm: doc.criadoEm,\n        atualizadoEm: doc.atualizadoEm,\n      })),\n    });\n  } catch (error) {\n    console.error('Erro ao listar documentos do atendente:', error);\n\n    if (error instanceof ZodError) {\n      return NextResponse.json(\n        {\n          erro: MENSAGENS_ERRO_ATENDENTES.DADOS_INVALIDOS,\n          detalhes: error.errors,\n        },\n        { status: 400 }\n      );\n    }\n\n    return NextResponse.json(\n      { erro: MENSAGENS_ERRO_ATENDENTES.ERRO_INTERNO },\n      { status: 500 }\n    );\n  }\n}\n\n/**\n * POST /api/atendentes/[id]/documentos\n * Adiciona um novo documento ao atendente\n */\nexport async function POST(request: NextRequest, { params }: RouteParams) {\n  try {\n    // Verificar autentica\xE7\xE3o\n    const session = await getServerSession(authOptions);\n    if (!session?.user) {\n      return NextResponse.json({ erro: 'N\xE3o autorizado' }, { status: 401 });\n    }\n\n    // Verificar permiss\xF5es (apenas ADMIN e GERENTE podem adicionar documentos)\n    if (!['ADMIN', 'GERENTE'].includes(session.user.userType)) {\n      return NextResponse.json(\n        { erro: MENSAGENS_ERRO_ATENDENTES.SEM_PERMISSAO },\n        { status: 403 }\n      );\n    }\n\n    // Validar ID\n    const atendenteId = idAtendenteSchema.parse(params.id);\n\n    // Verificar se o atendente existe\n    const atendente = await prisma.atendente.findUnique({\n      where: { id: atendenteId },\n      select: { id: true },\n    });\n\n    if (!atendente) {\n      return NextResponse.json(\n        { erro: MENSAGENS_ERRO_ATENDENTES.ATENDENTE_NAO_ENCONTRADO },\n        { status: 404 }\n      );\n    }\n\n    // Extrair dados do corpo da requisi\xE7\xE3o\n    const dadosRequisicao = await request.json();\n\n    // Validar dados\n    const dadosValidados = criarDocumentoSchema.parse(dadosRequisicao);\n\n    // Verificar se j\xE1 existe um documento do mesmo tipo e n\xFAmero\n    const documentoExistente = await prisma.documentoAtendente.findFirst({\n      where: {\n        atendenteId,\n        tipo: dadosValidados.tipo,\n        numero: dadosValidados.numero,\n      },\n    });\n\n    if (documentoExistente) {\n      return NextResponse.json(\n        {\n          erro: `Documento ${dadosValidados.tipo} com n\xFAmero ${dadosValidados.numero} j\xE1 existe para este atendente`,\n        },\n        { status: 409 }\n      );\n    }\n\n    // Criar documento\n    const novoDocumento = await prisma.documentoAtendente.create({\n      data: {\n        atendenteId,\n        tipo: dadosValidados.tipo,\n        numero: dadosValidados.numero,\n        dataEmissao: dadosValidados.dataEmissao\n          ? new Date(dadosValidados.dataEmissao)\n          : null,\n        orgaoEmissor: dadosValidados.orgaoEmissor,\n        arquivo: dadosValidados.arquivo,\n        nomeArquivo: dadosValidados.nomeArquivo,\n        tamanhoArquivo: dadosValidados.tamanhoArquivo,\n        tipoMime: dadosValidados.tipoMime,\n        observacoes: dadosValidados.observacoes,\n      },\n    });\n\n    // Registrar no hist\xF3rico de altera\xE7\xF5es\n    await prisma.historicoAlteracaoAtendente.create({\n      data: {\n        atendenteId,\n        tipo: 'UPLOAD_DOCUMENTO',\n        descricao: `Documento ${novoDocumento.tipo} foi adicionado`,\n        valorNovo: JSON.stringify({\n          documentoId: novoDocumento.id,\n          tipo: novoDocumento.tipo,\n          numero: novoDocumento.numero,\n        }),\n        criadoPorId: session.user.id,\n      },\n    });\n\n    return NextResponse.json(\n      {\n        mensagem: 'Documento adicionado com sucesso',\n        documento: {\n          id: novoDocumento.id,\n          tipo: novoDocumento.tipo,\n          numero: novoDocumento.numero,\n          dataEmissao: novoDocumento.dataEmissao,\n          orgaoEmissor: novoDocumento.orgaoEmissor,\n          arquivo: novoDocumento.arquivo,\n          observacoes: novoDocumento.observacoes,\n          criadoEm: novoDocumento.criadoEm,\n          atualizadoEm: novoDocumento.atualizadoEm,\n        },\n      },\n      { status: 201 }\n    );\n  } catch (error) {\n    console.error('Erro ao adicionar documento do atendente:', error);\n\n    if (error instanceof ZodError) {\n      return NextResponse.json(\n        {\n          erro: MENSAGENS_ERRO_ATENDENTES.DADOS_INVALIDOS,\n          detalhes: error.errors,\n        },\n        { status: 400 }\n      );\n    }\n\n    return NextResponse.json(\n      { erro: MENSAGENS_ERRO_ATENDENTES.ERRO_INTERNO },\n      { status: 500 }\n    );\n  }\n}\n"],
      names: ["GET", "POST", "criarDocumentoSchema", "z", "object", "tipo", "enum", "numero", "string", "min", "max", "dataEmissao", "datetime", "optional", "orgaoEmissor", "arquivo", "url", "nomeArquivo", "tamanhoArquivo", "number", "tipoMime", "observacoes", "atualizarDocumentoSchema", "request", "params", "session", "getServerSession", "authOptions", "user", "NextResponse", "json", "erro", "status", "includes", "userType", "MENSAGENS_ERRO_ATENDENTES", "SEM_PERMISSAO", "atendenteId", "idAtendenteSchema", "parse", "id", "atendente", "prisma", "findUnique", "where", "select", "usuarioId", "ATENDENTE_NAO_ENCONTRADO", "documentos", "documentoAtendente", "findMany", "orderBy", "criadoEm", "map", "doc", "atualizadoEm", "error", "console", "ZodError", "DADOS_INVALIDOS", "detalhes", "errors", "ERRO_INTERNO", "dadosRequisicao", "dadosValidados", "documentoExistente", "findFirst", "novoDocumento", "create", "data", "Date", "historicoAlteracaoAtendente", "descricao", "valorNovo", "JSON", "stringify", "documentoId", "criadoPorId", "mensagem", "documento"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f8daa29f085e1415e91df8d09dc5d3761c11065f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_25va4lkym = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_25va4lkym();
cov_25va4lkym().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_25va4lkym().f[0]++;
  cov_25va4lkym().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_25va4lkym().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_25va4lkym().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_25va4lkym().f[1]++;
    cov_25va4lkym().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_25va4lkym().f[2]++;
    cov_25va4lkym().s[5]++;
    return POST;
  }
});
const _server =
/* istanbul ignore next */
(cov_25va4lkym().s[6]++, require("next/server"));
const _nextauth =
/* istanbul ignore next */
(cov_25va4lkym().s[7]++, require("next-auth"));
const _auth =
/* istanbul ignore next */
(cov_25va4lkym().s[8]++, require("../../../../../lib/auth"));
const _prisma =
/* istanbul ignore next */
(cov_25va4lkym().s[9]++, require("../../../../../lib/prisma"));
const _zod =
/* istanbul ignore next */
(cov_25va4lkym().s[10]++, require("zod"));
const _atendentes =
/* istanbul ignore next */
(cov_25va4lkym().s[11]++, require("../../../../../lib/validations/atendentes"));
/**
 * Schema para validação de documento
 */
const criarDocumentoSchema =
/* istanbul ignore next */
(cov_25va4lkym().s[12]++, _zod.z.object({
  tipo: _zod.z.enum(['RG', 'CPF', 'CNH', 'CTPS', 'TITULO_ELEITOR', 'CERTIFICADO', 'DIPLOMA', 'OUTRO']),
  numero: _zod.z.string().min(1, 'Número do documento é obrigatório').max(50, 'Número deve ter no máximo 50 caracteres'),
  dataEmissao: _zod.z.string().datetime('Data de emissão deve ser uma data válida').optional(),
  orgaoEmissor: _zod.z.string().max(100, 'Órgão emissor deve ter no máximo 100 caracteres').optional(),
  arquivo: _zod.z.string().url('URL do arquivo deve ser válida').optional(),
  nomeArquivo: _zod.z.string().optional(),
  tamanhoArquivo: _zod.z.number().optional(),
  tipoMime: _zod.z.string().optional(),
  observacoes: _zod.z.string().max(500, 'Observações devem ter no máximo 500 caracteres').optional()
}));
/**
 * Schema para atualização de documento
 */
const atualizarDocumentoSchema =
/* istanbul ignore next */
(cov_25va4lkym().s[13]++, _zod.z.object({
  tipo: _zod.z.enum(['RG', 'CPF', 'CNH', 'CTPS', 'TITULO_ELEITOR', 'CERTIFICADO', 'DIPLOMA', 'OUTRO']).optional(),
  numero: _zod.z.string().min(1, 'Número do documento é obrigatório').max(50, 'Número deve ter no máximo 50 caracteres').optional(),
  dataEmissao: _zod.z.string().datetime('Data de emissão deve ser uma data válida').optional(),
  orgaoEmissor: _zod.z.string().max(100, 'Órgão emissor deve ter no máximo 100 caracteres').optional(),
  arquivo: _zod.z.string().url('URL do arquivo deve ser válida').optional(),
  nomeArquivo: _zod.z.string().optional(),
  tamanhoArquivo: _zod.z.number().optional(),
  tipoMime: _zod.z.string().optional(),
  observacoes: _zod.z.string().max(500, 'Observações devem ter no máximo 500 caracteres').optional()
}));
async function GET(request, {
  params
}) {
  /* istanbul ignore next */
  cov_25va4lkym().f[3]++;
  cov_25va4lkym().s[14]++;
  try {
    // Verificar autenticação
    const session =
    /* istanbul ignore next */
    (cov_25va4lkym().s[15]++, await (0, _nextauth.getServerSession)(_auth.authOptions));
    /* istanbul ignore next */
    cov_25va4lkym().s[16]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_25va4lkym().b[0][0]++;
      cov_25va4lkym().s[17]++;
      return _server.NextResponse.json({
        erro: 'Não autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_25va4lkym().b[0][1]++;
    }
    // Verificar permissões
    cov_25va4lkym().s[18]++;
    if (!['ADMIN', 'GERENTE', 'ATENDENTE'].includes(session.user.userType)) {
      /* istanbul ignore next */
      cov_25va4lkym().b[1][0]++;
      cov_25va4lkym().s[19]++;
      return _server.NextResponse.json({
        erro: _atendentes.MENSAGENS_ERRO_ATENDENTES.SEM_PERMISSAO
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_25va4lkym().b[1][1]++;
    }
    // Validar ID
    const atendenteId =
    /* istanbul ignore next */
    (cov_25va4lkym().s[20]++, _atendentes.idAtendenteSchema.parse(params.id));
    // Verificar se o atendente existe
    const atendente =
    /* istanbul ignore next */
    (cov_25va4lkym().s[21]++, await _prisma.prisma.atendente.findUnique({
      where: {
        id: atendenteId
      },
      select: {
        id: true,
        usuarioId: true
      }
    }));
    /* istanbul ignore next */
    cov_25va4lkym().s[22]++;
    if (!atendente) {
      /* istanbul ignore next */
      cov_25va4lkym().b[2][0]++;
      cov_25va4lkym().s[23]++;
      return _server.NextResponse.json({
        erro: _atendentes.MENSAGENS_ERRO_ATENDENTES.ATENDENTE_NAO_ENCONTRADO
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_25va4lkym().b[2][1]++;
    }
    // Verificar se o atendente pode ver apenas seus próprios documentos
    cov_25va4lkym().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_25va4lkym().b[4][0]++, session.user.userType === 'ATENDENTE') &&
    /* istanbul ignore next */
    (cov_25va4lkym().b[4][1]++, atendente.usuarioId !== session.user.id)) {
      /* istanbul ignore next */
      cov_25va4lkym().b[3][0]++;
      cov_25va4lkym().s[25]++;
      return _server.NextResponse.json({
        erro: _atendentes.MENSAGENS_ERRO_ATENDENTES.SEM_PERMISSAO
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_25va4lkym().b[3][1]++;
    }
    // Buscar documentos
    const documentos =
    /* istanbul ignore next */
    (cov_25va4lkym().s[26]++, await _prisma.prisma.documentoAtendente.findMany({
      where: {
        atendenteId
      },
      orderBy: {
        criadoEm: 'desc'
      }
    }));
    /* istanbul ignore next */
    cov_25va4lkym().s[27]++;
    return _server.NextResponse.json({
      documentos: documentos.map(doc => {
        /* istanbul ignore next */
        cov_25va4lkym().f[4]++;
        cov_25va4lkym().s[28]++;
        return {
          id: doc.id,
          tipo: doc.tipo,
          numero: doc.numero,
          dataEmissao: doc.dataEmissao,
          orgaoEmissor: doc.orgaoEmissor,
          arquivo: doc.arquivo,
          observacoes: doc.observacoes,
          criadoEm: doc.criadoEm,
          atualizadoEm: doc.atualizadoEm
        };
      })
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_25va4lkym().s[29]++;
    console.error('Erro ao listar documentos do atendente:', error);
    /* istanbul ignore next */
    cov_25va4lkym().s[30]++;
    if (error instanceof _zod.ZodError) {
      /* istanbul ignore next */
      cov_25va4lkym().b[5][0]++;
      cov_25va4lkym().s[31]++;
      return _server.NextResponse.json({
        erro: _atendentes.MENSAGENS_ERRO_ATENDENTES.DADOS_INVALIDOS,
        detalhes: error.errors
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_25va4lkym().b[5][1]++;
    }
    cov_25va4lkym().s[32]++;
    return _server.NextResponse.json({
      erro: _atendentes.MENSAGENS_ERRO_ATENDENTES.ERRO_INTERNO
    }, {
      status: 500
    });
  }
}
async function POST(request, {
  params
}) {
  /* istanbul ignore next */
  cov_25va4lkym().f[5]++;
  cov_25va4lkym().s[33]++;
  try {
    // Verificar autenticação
    const session =
    /* istanbul ignore next */
    (cov_25va4lkym().s[34]++, await (0, _nextauth.getServerSession)(_auth.authOptions));
    /* istanbul ignore next */
    cov_25va4lkym().s[35]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_25va4lkym().b[6][0]++;
      cov_25va4lkym().s[36]++;
      return _server.NextResponse.json({
        erro: 'Não autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_25va4lkym().b[6][1]++;
    }
    // Verificar permissões (apenas ADMIN e GERENTE podem adicionar documentos)
    cov_25va4lkym().s[37]++;
    if (!['ADMIN', 'GERENTE'].includes(session.user.userType)) {
      /* istanbul ignore next */
      cov_25va4lkym().b[7][0]++;
      cov_25va4lkym().s[38]++;
      return _server.NextResponse.json({
        erro: _atendentes.MENSAGENS_ERRO_ATENDENTES.SEM_PERMISSAO
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_25va4lkym().b[7][1]++;
    }
    // Validar ID
    const atendenteId =
    /* istanbul ignore next */
    (cov_25va4lkym().s[39]++, _atendentes.idAtendenteSchema.parse(params.id));
    // Verificar se o atendente existe
    const atendente =
    /* istanbul ignore next */
    (cov_25va4lkym().s[40]++, await _prisma.prisma.atendente.findUnique({
      where: {
        id: atendenteId
      },
      select: {
        id: true
      }
    }));
    /* istanbul ignore next */
    cov_25va4lkym().s[41]++;
    if (!atendente) {
      /* istanbul ignore next */
      cov_25va4lkym().b[8][0]++;
      cov_25va4lkym().s[42]++;
      return _server.NextResponse.json({
        erro: _atendentes.MENSAGENS_ERRO_ATENDENTES.ATENDENTE_NAO_ENCONTRADO
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_25va4lkym().b[8][1]++;
    }
    // Extrair dados do corpo da requisição
    const dadosRequisicao =
    /* istanbul ignore next */
    (cov_25va4lkym().s[43]++, await request.json());
    // Validar dados
    const dadosValidados =
    /* istanbul ignore next */
    (cov_25va4lkym().s[44]++, criarDocumentoSchema.parse(dadosRequisicao));
    // Verificar se já existe um documento do mesmo tipo e número
    const documentoExistente =
    /* istanbul ignore next */
    (cov_25va4lkym().s[45]++, await _prisma.prisma.documentoAtendente.findFirst({
      where: {
        atendenteId,
        tipo: dadosValidados.tipo,
        numero: dadosValidados.numero
      }
    }));
    /* istanbul ignore next */
    cov_25va4lkym().s[46]++;
    if (documentoExistente) {
      /* istanbul ignore next */
      cov_25va4lkym().b[9][0]++;
      cov_25va4lkym().s[47]++;
      return _server.NextResponse.json({
        erro: `Documento ${dadosValidados.tipo} com número ${dadosValidados.numero} já existe para este atendente`
      }, {
        status: 409
      });
    } else
    /* istanbul ignore next */
    {
      cov_25va4lkym().b[9][1]++;
    }
    // Criar documento
    const novoDocumento =
    /* istanbul ignore next */
    (cov_25va4lkym().s[48]++, await _prisma.prisma.documentoAtendente.create({
      data: {
        atendenteId,
        tipo: dadosValidados.tipo,
        numero: dadosValidados.numero,
        dataEmissao: dadosValidados.dataEmissao ?
        /* istanbul ignore next */
        (cov_25va4lkym().b[10][0]++, new Date(dadosValidados.dataEmissao)) :
        /* istanbul ignore next */
        (cov_25va4lkym().b[10][1]++, null),
        orgaoEmissor: dadosValidados.orgaoEmissor,
        arquivo: dadosValidados.arquivo,
        nomeArquivo: dadosValidados.nomeArquivo,
        tamanhoArquivo: dadosValidados.tamanhoArquivo,
        tipoMime: dadosValidados.tipoMime,
        observacoes: dadosValidados.observacoes
      }
    }));
    // Registrar no histórico de alterações
    /* istanbul ignore next */
    cov_25va4lkym().s[49]++;
    await _prisma.prisma.historicoAlteracaoAtendente.create({
      data: {
        atendenteId,
        tipo: 'UPLOAD_DOCUMENTO',
        descricao: `Documento ${novoDocumento.tipo} foi adicionado`,
        valorNovo: JSON.stringify({
          documentoId: novoDocumento.id,
          tipo: novoDocumento.tipo,
          numero: novoDocumento.numero
        }),
        criadoPorId: session.user.id
      }
    });
    /* istanbul ignore next */
    cov_25va4lkym().s[50]++;
    return _server.NextResponse.json({
      mensagem: 'Documento adicionado com sucesso',
      documento: {
        id: novoDocumento.id,
        tipo: novoDocumento.tipo,
        numero: novoDocumento.numero,
        dataEmissao: novoDocumento.dataEmissao,
        orgaoEmissor: novoDocumento.orgaoEmissor,
        arquivo: novoDocumento.arquivo,
        observacoes: novoDocumento.observacoes,
        criadoEm: novoDocumento.criadoEm,
        atualizadoEm: novoDocumento.atualizadoEm
      }
    }, {
      status: 201
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_25va4lkym().s[51]++;
    console.error('Erro ao adicionar documento do atendente:', error);
    /* istanbul ignore next */
    cov_25va4lkym().s[52]++;
    if (error instanceof _zod.ZodError) {
      /* istanbul ignore next */
      cov_25va4lkym().b[11][0]++;
      cov_25va4lkym().s[53]++;
      return _server.NextResponse.json({
        erro: _atendentes.MENSAGENS_ERRO_ATENDENTES.DADOS_INVALIDOS,
        detalhes: error.errors
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_25va4lkym().b[11][1]++;
    }
    cov_25va4lkym().s[54]++;
    return _server.NextResponse.json({
      erro: _atendentes.MENSAGENS_ERRO_ATENDENTES.ERRO_INTERNO
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,