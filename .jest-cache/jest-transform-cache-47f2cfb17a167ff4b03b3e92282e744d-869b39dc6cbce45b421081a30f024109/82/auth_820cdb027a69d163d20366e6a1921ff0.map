{"version":3,"names":["authOptions","cov_qf2cmvlai","s","adapter","_prismaadapter","PrismaAdapter","_prisma","prisma","providers","_credentials","default","name","credentials","email","label","type","senha","authorize","f","b","usuario","findUnique","where","senhaValida","_bcryptjs","compare","id","nome","userType","session","strategy","callbacks","jwt","token","user","sub","pages","signIn","error","secret","process","env","NEXTAUTH_SECRET"],"sources":["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\lib\\auth.ts"],"sourcesContent":["import { NextAuthConfig } from 'next-auth';\nimport { PrismaAdapter } from '@auth/prisma-adapter';\nimport CredentialsProvider from 'next-auth/providers/credentials';\nimport { prisma } from './prisma';\nimport bcrypt from 'bcryptjs';\n\nexport const authOptions: NextAuthConfig = {\n  adapter: PrismaAdapter(prisma),\n  providers: [\n    CredentialsProvider({\n      name: 'credentials',\n      credentials: {\n        email: { label: 'Email', type: 'email' },\n        senha: { label: 'Senha', type: 'password' },\n      },\n      async authorize(credentials) {\n        if (!credentials?.email || !credentials?.senha) {\n          return null;\n        }\n\n        const usuario = await prisma.usuario.findUnique({\n          where: {\n            email: credentials.email,\n          },\n        });\n\n        if (!usuario) {\n          return null;\n        }\n\n        const senhaValida = await bcrypt.compare(\n          credentials.senha,\n          usuario.senha\n        );\n\n        if (!senhaValida) {\n          return null;\n        }\n\n        return {\n          id: usuario.id,\n          email: usuario.email,\n          name: usuario.nome,\n          userType: usuario.userType,\n        };\n      },\n    }),\n  ],\n  session: {\n    strategy: 'jwt',\n  },\n  callbacks: {\n    async jwt({ token, user }) {\n      if (user) {\n        token.userType = user.userType;\n      }\n      return token;\n    },\n    async session({ session, token }) {\n      if (token) {\n        session.user.id = token.sub;\n        session.user.userType = token.userType;\n      }\n      return session;\n    },\n  },\n  pages: {\n    signIn: '/auth/login',\n    error: '/auth/error',\n  },\n  secret: process.env.NEXTAUTH_SECRET,\n};\n"],"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","ignoreList":[]}