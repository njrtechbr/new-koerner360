9f0267a7e2db9dbd38a3fcc241292ea2
"use strict";

/* istanbul ignore next */
function cov_qf2cmvlai() {
  var path = "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\lib\\auth.ts";
  var hash = "eff5b5612230a0d3d1e844febd11e8e86cb31303";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\lib\\auth.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 27
        }
      },
      "3": {
        start: {
          line: 11,
          column: 23
        },
        end: {
          line: 11,
          column: 54
        }
      },
      "4": {
        start: {
          line: 12,
          column: 35
        },
        end: {
          line: 12,
          column: 103
        }
      },
      "5": {
        start: {
          line: 13,
          column: 16
        },
        end: {
          line: 13,
          column: 35
        }
      },
      "6": {
        start: {
          line: 14,
          column: 32
        },
        end: {
          line: 14,
          column: 77
        }
      },
      "7": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 18,
          column: 6
        }
      },
      "8": {
        start: {
          line: 20,
          column: 20
        },
        end: {
          line: 83,
          column: 1
        }
      },
      "9": {
        start: {
          line: 36,
          column: 16
        },
        end: {
          line: 38,
          column: 17
        }
      },
      "10": {
        start: {
          line: 37,
          column: 20
        },
        end: {
          line: 37,
          column: 32
        }
      },
      "11": {
        start: {
          line: 39,
          column: 32
        },
        end: {
          line: 43,
          column: 18
        }
      },
      "12": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 46,
          column: 17
        }
      },
      "13": {
        start: {
          line: 45,
          column: 20
        },
        end: {
          line: 45,
          column: 32
        }
      },
      "14": {
        start: {
          line: 47,
          column: 36
        },
        end: {
          line: 47,
          column: 101
        }
      },
      "15": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 50,
          column: 17
        }
      },
      "16": {
        start: {
          line: 49,
          column: 20
        },
        end: {
          line: 49,
          column: 32
        }
      },
      "17": {
        start: {
          line: 51,
          column: 16
        },
        end: {
          line: 56,
          column: 18
        }
      },
      "18": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 67,
          column: 13
        }
      },
      "19": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 66,
          column: 47
        }
      },
      "20": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 25
        }
      },
      "21": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 74,
          column: 13
        }
      },
      "22": {
        start: {
          line: 72,
          column: 16
        },
        end: {
          line: 72,
          column: 44
        }
      },
      "23": {
        start: {
          line: 73,
          column: 16
        },
        end: {
          line: 73,
          column: 55
        }
      },
      "24": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 27
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 33
          }
        },
        loc: {
          start: {
            line: 15,
            column: 39
          },
          end: {
            line: 19,
            column: 1
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 35,
            column: 12
          },
          end: {
            line: 35,
            column: 13
          }
        },
        loc: {
          start: {
            line: 35,
            column: 42
          },
          end: {
            line: 57,
            column: 13
          }
        },
        line: 35
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 64,
            column: 9
          }
        },
        loc: {
          start: {
            line: 64,
            column: 36
          },
          end: {
            line: 69,
            column: 9
          }
        },
        line: 64
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 70,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        },
        loc: {
          start: {
            line: 70,
            column: 43
          },
          end: {
            line: 76,
            column: 9
          }
        },
        line: 70
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 11
          },
          end: {
            line: 18,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 16,
            column: 35
          },
          end: {
            line: 16,
            column: 38
          }
        }, {
          start: {
            line: 16,
            column: 41
          },
          end: {
            line: 18,
            column: 5
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 16,
            column: 11
          },
          end: {
            line: 16,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 11
          },
          end: {
            line: 16,
            column: 14
          }
        }, {
          start: {
            line: 16,
            column: 18
          },
          end: {
            line: 16,
            column: 32
          }
        }],
        line: 16
      },
      "2": {
        loc: {
          start: {
            line: 36,
            column: 16
          },
          end: {
            line: 38,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 16
          },
          end: {
            line: 38,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "3": {
        loc: {
          start: {
            line: 36,
            column: 20
          },
          end: {
            line: 36,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 20
          },
          end: {
            line: 36,
            column: 39
          }
        }, {
          start: {
            line: 36,
            column: 43
          },
          end: {
            line: 36,
            column: 62
          }
        }],
        line: 36
      },
      "4": {
        loc: {
          start: {
            line: 44,
            column: 16
          },
          end: {
            line: 46,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 16
          },
          end: {
            line: 46,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "5": {
        loc: {
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 50,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 16
          },
          end: {
            line: 50,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "6": {
        loc: {
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 67,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 67,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "7": {
        loc: {
          start: {
            line: 71,
            column: 12
          },
          end: {
            line: 74,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 12
          },
          end: {
            line: 74,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\lib\\auth.ts"],
      sourcesContent: ["import { NextAuthConfig } from 'next-auth';\nimport { PrismaAdapter } from '@auth/prisma-adapter';\nimport CredentialsProvider from 'next-auth/providers/credentials';\nimport { prisma } from './prisma';\nimport bcrypt from 'bcryptjs';\n\nexport const authOptions: NextAuthConfig = {\n  adapter: PrismaAdapter(prisma),\n  providers: [\n    CredentialsProvider({\n      name: 'credentials',\n      credentials: {\n        email: { label: 'Email', type: 'email' },\n        senha: { label: 'Senha', type: 'password' },\n      },\n      async authorize(credentials) {\n        if (!credentials?.email || !credentials?.senha) {\n          return null;\n        }\n\n        const usuario = await prisma.usuario.findUnique({\n          where: {\n            email: credentials.email,\n          },\n        });\n\n        if (!usuario) {\n          return null;\n        }\n\n        const senhaValida = await bcrypt.compare(\n          credentials.senha,\n          usuario.senha\n        );\n\n        if (!senhaValida) {\n          return null;\n        }\n\n        return {\n          id: usuario.id,\n          email: usuario.email,\n          name: usuario.nome,\n          userType: usuario.userType,\n        };\n      },\n    }),\n  ],\n  session: {\n    strategy: 'jwt',\n  },\n  callbacks: {\n    async jwt({ token, user }) {\n      if (user) {\n        token.userType = user.userType;\n      }\n      return token;\n    },\n    async session({ session, token }) {\n      if (token) {\n        session.user.id = token.sub;\n        session.user.userType = token.userType;\n      }\n      return session;\n    },\n  },\n  pages: {\n    signIn: '/auth/login',\n    error: '/auth/error',\n  },\n  secret: process.env.NEXTAUTH_SECRET,\n};\n"],
      names: ["authOptions", "adapter", "PrismaAdapter", "prisma", "providers", "CredentialsProvider", "name", "credentials", "email", "label", "type", "senha", "authorize", "usuario", "findUnique", "where", "senhaValida", "bcrypt", "compare", "id", "nome", "userType", "session", "strategy", "callbacks", "jwt", "token", "user", "sub", "pages", "signIn", "error", "secret", "process", "env", "NEXTAUTH_SECRET"],
      mappings: ";;;;+BAMaA;;;eAAAA;;;+BALiB;oEACE;wBACT;iEACJ;;;;;;AAEZ,MAAMA,cAA8B;IACzCC,SAASC,IAAAA,4BAAa,EAACC,cAAM;IAC7BC,WAAW;QACTC,IAAAA,oBAAmB,EAAC;YAClBC,MAAM;YACNC,aAAa;gBACXC,OAAO;oBAAEC,OAAO;oBAASC,MAAM;gBAAQ;gBACvCC,OAAO;oBAAEF,OAAO;oBAASC,MAAM;gBAAW;YAC5C;YACA,MAAME,WAAUL,WAAW;gBACzB,IAAI,CAACA,aAAaC,SAAS,CAACD,aAAaI,OAAO;oBAC9C,OAAO;gBACT;gBAEA,MAAME,UAAU,MAAMV,cAAM,CAACU,OAAO,CAACC,UAAU,CAAC;oBAC9CC,OAAO;wBACLP,OAAOD,YAAYC,KAAK;oBAC1B;gBACF;gBAEA,IAAI,CAACK,SAAS;oBACZ,OAAO;gBACT;gBAEA,MAAMG,cAAc,MAAMC,iBAAM,CAACC,OAAO,CACtCX,YAAYI,KAAK,EACjBE,QAAQF,KAAK;gBAGf,IAAI,CAACK,aAAa;oBAChB,OAAO;gBACT;gBAEA,OAAO;oBACLG,IAAIN,QAAQM,EAAE;oBACdX,OAAOK,QAAQL,KAAK;oBACpBF,MAAMO,QAAQO,IAAI;oBAClBC,UAAUR,QAAQQ,QAAQ;gBAC5B;YACF;QACF;KACD;IACDC,SAAS;QACPC,UAAU;IACZ;IACAC,WAAW;QACT,MAAMC,KAAI,EAAEC,KAAK,EAAEC,IAAI,EAAE;YACvB,IAAIA,MAAM;gBACRD,MAAML,QAAQ,GAAGM,KAAKN,QAAQ;YAChC;YACA,OAAOK;QACT;QACA,MAAMJ,SAAQ,EAAEA,OAAO,EAAEI,KAAK,EAAE;YAC9B,IAAIA,OAAO;gBACTJ,QAAQK,IAAI,CAACR,EAAE,GAAGO,MAAME,GAAG;gBAC3BN,QAAQK,IAAI,CAACN,QAAQ,GAAGK,MAAML,QAAQ;YACxC;YACA,OAAOC;QACT;IACF;IACAO,OAAO;QACLC,QAAQ;QACRC,OAAO;IACT;IACAC,QAAQC,QAAQC,GAAG,CAACC,eAAe;AACrC"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "eff5b5612230a0d3d1e844febd11e8e86cb31303"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_qf2cmvlai = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_qf2cmvlai();
cov_qf2cmvlai().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_qf2cmvlai().s[1]++;
Object.defineProperty(exports, "authOptions", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_qf2cmvlai().f[0]++;
    cov_qf2cmvlai().s[2]++;
    return authOptions;
  }
});
const _prismaadapter =
/* istanbul ignore next */
(cov_qf2cmvlai().s[3]++, require("@auth/prisma-adapter"));
const _credentials =
/* istanbul ignore next */
(/*#__PURE__*/cov_qf2cmvlai().s[4]++, _interop_require_default(require("next-auth/providers/credentials")));
const _prisma =
/* istanbul ignore next */
(cov_qf2cmvlai().s[5]++, require("./prisma"));
const _bcryptjs =
/* istanbul ignore next */
(/*#__PURE__*/cov_qf2cmvlai().s[6]++, _interop_require_default(require("bcryptjs")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_qf2cmvlai().f[1]++;
  cov_qf2cmvlai().s[7]++;
  return /* istanbul ignore next */(cov_qf2cmvlai().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_qf2cmvlai().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_qf2cmvlai().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_qf2cmvlai().b[0][1]++, {
    default: obj
  });
}
const authOptions =
/* istanbul ignore next */
(cov_qf2cmvlai().s[8]++, {
  adapter: (0, _prismaadapter.PrismaAdapter)(_prisma.prisma),
  providers: [(0, _credentials.default)({
    name: 'credentials',
    credentials: {
      email: {
        label: 'Email',
        type: 'email'
      },
      senha: {
        label: 'Senha',
        type: 'password'
      }
    },
    async authorize(credentials) {
      /* istanbul ignore next */
      cov_qf2cmvlai().f[2]++;
      cov_qf2cmvlai().s[9]++;
      if (
      /* istanbul ignore next */
      (cov_qf2cmvlai().b[3][0]++, !credentials?.email) ||
      /* istanbul ignore next */
      (cov_qf2cmvlai().b[3][1]++, !credentials?.senha)) {
        /* istanbul ignore next */
        cov_qf2cmvlai().b[2][0]++;
        cov_qf2cmvlai().s[10]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_qf2cmvlai().b[2][1]++;
      }
      const usuario =
      /* istanbul ignore next */
      (cov_qf2cmvlai().s[11]++, await _prisma.prisma.usuario.findUnique({
        where: {
          email: credentials.email
        }
      }));
      /* istanbul ignore next */
      cov_qf2cmvlai().s[12]++;
      if (!usuario) {
        /* istanbul ignore next */
        cov_qf2cmvlai().b[4][0]++;
        cov_qf2cmvlai().s[13]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_qf2cmvlai().b[4][1]++;
      }
      const senhaValida =
      /* istanbul ignore next */
      (cov_qf2cmvlai().s[14]++, await _bcryptjs.default.compare(credentials.senha, usuario.senha));
      /* istanbul ignore next */
      cov_qf2cmvlai().s[15]++;
      if (!senhaValida) {
        /* istanbul ignore next */
        cov_qf2cmvlai().b[5][0]++;
        cov_qf2cmvlai().s[16]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_qf2cmvlai().b[5][1]++;
      }
      cov_qf2cmvlai().s[17]++;
      return {
        id: usuario.id,
        email: usuario.email,
        name: usuario.nome,
        userType: usuario.userType
      };
    }
  })],
  session: {
    strategy: 'jwt'
  },
  callbacks: {
    async jwt({
      token,
      user
    }) {
      /* istanbul ignore next */
      cov_qf2cmvlai().f[3]++;
      cov_qf2cmvlai().s[18]++;
      if (user) {
        /* istanbul ignore next */
        cov_qf2cmvlai().b[6][0]++;
        cov_qf2cmvlai().s[19]++;
        token.userType = user.userType;
      } else
      /* istanbul ignore next */
      {
        cov_qf2cmvlai().b[6][1]++;
      }
      cov_qf2cmvlai().s[20]++;
      return token;
    },
    async session({
      session,
      token
    }) {
      /* istanbul ignore next */
      cov_qf2cmvlai().f[4]++;
      cov_qf2cmvlai().s[21]++;
      if (token) {
        /* istanbul ignore next */
        cov_qf2cmvlai().b[7][0]++;
        cov_qf2cmvlai().s[22]++;
        session.user.id = token.sub;
        /* istanbul ignore next */
        cov_qf2cmvlai().s[23]++;
        session.user.userType = token.userType;
      } else
      /* istanbul ignore next */
      {
        cov_qf2cmvlai().b[7][1]++;
      }
      cov_qf2cmvlai().s[24]++;
      return session;
    }
  },
  pages: {
    signIn: '/auth/login',
    error: '/auth/error'
  },
  secret: process.env.NEXTAUTH_SECRET
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhdXRoT3B0aW9ucyIsImNvdl9xZjJjbXZsYWkiLCJzIiwiYWRhcHRlciIsIl9wcmlzbWFhZGFwdGVyIiwiUHJpc21hQWRhcHRlciIsIl9wcmlzbWEiLCJwcmlzbWEiLCJwcm92aWRlcnMiLCJfY3JlZGVudGlhbHMiLCJkZWZhdWx0IiwibmFtZSIsImNyZWRlbnRpYWxzIiwiZW1haWwiLCJsYWJlbCIsInR5cGUiLCJzZW5oYSIsImF1dGhvcml6ZSIsImYiLCJiIiwidXN1YXJpbyIsImZpbmRVbmlxdWUiLCJ3aGVyZSIsInNlbmhhVmFsaWRhIiwiX2JjcnlwdGpzIiwiY29tcGFyZSIsImlkIiwibm9tZSIsInVzZXJUeXBlIiwic2Vzc2lvbiIsInN0cmF0ZWd5IiwiY2FsbGJhY2tzIiwiand0IiwidG9rZW4iLCJ1c2VyIiwic3ViIiwicGFnZXMiLCJzaWduSW4iLCJlcnJvciIsInNlY3JldCIsInByb2Nlc3MiLCJlbnYiLCJORVhUQVVUSF9TRUNSRVQiXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXE5lcmV1IEpyXFxEb2N1bWVudHNcXERldlxcbmV3XFxzcmNcXGxpYlxcYXV0aC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0QXV0aENvbmZpZyB9IGZyb20gJ25leHQtYXV0aCc7XG5pbXBvcnQgeyBQcmlzbWFBZGFwdGVyIH0gZnJvbSAnQGF1dGgvcHJpc21hLWFkYXB0ZXInO1xuaW1wb3J0IENyZWRlbnRpYWxzUHJvdmlkZXIgZnJvbSAnbmV4dC1hdXRoL3Byb3ZpZGVycy9jcmVkZW50aWFscyc7XG5pbXBvcnQgeyBwcmlzbWEgfSBmcm9tICcuL3ByaXNtYSc7XG5pbXBvcnQgYmNyeXB0IGZyb20gJ2JjcnlwdGpzJztcblxuZXhwb3J0IGNvbnN0IGF1dGhPcHRpb25zOiBOZXh0QXV0aENvbmZpZyA9IHtcbiAgYWRhcHRlcjogUHJpc21hQWRhcHRlcihwcmlzbWEpLFxuICBwcm92aWRlcnM6IFtcbiAgICBDcmVkZW50aWFsc1Byb3ZpZGVyKHtcbiAgICAgIG5hbWU6ICdjcmVkZW50aWFscycsXG4gICAgICBjcmVkZW50aWFsczoge1xuICAgICAgICBlbWFpbDogeyBsYWJlbDogJ0VtYWlsJywgdHlwZTogJ2VtYWlsJyB9LFxuICAgICAgICBzZW5oYTogeyBsYWJlbDogJ1NlbmhhJywgdHlwZTogJ3Bhc3N3b3JkJyB9LFxuICAgICAgfSxcbiAgICAgIGFzeW5jIGF1dGhvcml6ZShjcmVkZW50aWFscykge1xuICAgICAgICBpZiAoIWNyZWRlbnRpYWxzPy5lbWFpbCB8fCAhY3JlZGVudGlhbHM/LnNlbmhhKSB7XG4gICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCB1c3VhcmlvID0gYXdhaXQgcHJpc21hLnVzdWFyaW8uZmluZFVuaXF1ZSh7XG4gICAgICAgICAgd2hlcmU6IHtcbiAgICAgICAgICAgIGVtYWlsOiBjcmVkZW50aWFscy5lbWFpbCxcbiAgICAgICAgICB9LFxuICAgICAgICB9KTtcblxuICAgICAgICBpZiAoIXVzdWFyaW8pIHtcbiAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHNlbmhhVmFsaWRhID0gYXdhaXQgYmNyeXB0LmNvbXBhcmUoXG4gICAgICAgICAgY3JlZGVudGlhbHMuc2VuaGEsXG4gICAgICAgICAgdXN1YXJpby5zZW5oYVxuICAgICAgICApO1xuXG4gICAgICAgIGlmICghc2VuaGFWYWxpZGEpIHtcbiAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgaWQ6IHVzdWFyaW8uaWQsXG4gICAgICAgICAgZW1haWw6IHVzdWFyaW8uZW1haWwsXG4gICAgICAgICAgbmFtZTogdXN1YXJpby5ub21lLFxuICAgICAgICAgIHVzZXJUeXBlOiB1c3VhcmlvLnVzZXJUeXBlLFxuICAgICAgICB9O1xuICAgICAgfSxcbiAgICB9KSxcbiAgXSxcbiAgc2Vzc2lvbjoge1xuICAgIHN0cmF0ZWd5OiAnand0JyxcbiAgfSxcbiAgY2FsbGJhY2tzOiB7XG4gICAgYXN5bmMgand0KHsgdG9rZW4sIHVzZXIgfSkge1xuICAgICAgaWYgKHVzZXIpIHtcbiAgICAgICAgdG9rZW4udXNlclR5cGUgPSB1c2VyLnVzZXJUeXBlO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRva2VuO1xuICAgIH0sXG4gICAgYXN5bmMgc2Vzc2lvbih7IHNlc3Npb24sIHRva2VuIH0pIHtcbiAgICAgIGlmICh0b2tlbikge1xuICAgICAgICBzZXNzaW9uLnVzZXIuaWQgPSB0b2tlbi5zdWI7XG4gICAgICAgIHNlc3Npb24udXNlci51c2VyVHlwZSA9IHRva2VuLnVzZXJUeXBlO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHNlc3Npb247XG4gICAgfSxcbiAgfSxcbiAgcGFnZXM6IHtcbiAgICBzaWduSW46ICcvYXV0aC9sb2dpbicsXG4gICAgZXJyb3I6ICcvYXV0aC9lcnJvcicsXG4gIH0sXG4gIHNlY3JldDogcHJvY2Vzcy5lbnYuTkVYVEFVVEhfU0VDUkVULFxufTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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