c2af40c636f87f8d4bcbff51e270e5d6
'use client';
"use strict";

/* istanbul ignore next */
function cov_q5w5miydu() {
  var path = "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\hooks\\use-usuarios.ts";
  var hash = "9362124b4ffeeef8972df82f3435a3f2da490247";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\hooks\\use-usuarios.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 24
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 27
        }
      },
      "6": {
        start: {
          line: 20,
          column: 15
        },
        end: {
          line: 20,
          column: 31
        }
      },
      "7": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 21,
          column: 42
        }
      },
      "8": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 33
        }
      },
      "9": {
        start: {
          line: 24,
          column: 30
        },
        end: {
          line: 24,
          column: 55
        }
      },
      "10": {
        start: {
          line: 25,
          column: 36
        },
        end: {
          line: 25,
          column: 60
        }
      },
      "11": {
        start: {
          line: 26,
          column: 34
        },
        end: {
          line: 26,
          column: 60
        }
      },
      "12": {
        start: {
          line: 27,
          column: 38
        },
        end: {
          line: 27,
          column: 64
        }
      },
      "13": {
        start: {
          line: 28,
          column: 40
        },
        end: {
          line: 28,
          column: 67
        }
      },
      "14": {
        start: {
          line: 29,
          column: 28
        },
        end: {
          line: 29,
          column: 54
        }
      },
      "15": {
        start: {
          line: 32,
          column: 30
        },
        end: {
          line: 45,
          column: 10
        }
      },
      "16": {
        start: {
          line: 33,
          column: 25
        },
        end: {
          line: 39,
          column: 10
        }
      },
      "17": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "18": {
        start: {
          line: 41,
          column: 25
        },
        end: {
          line: 41,
          column: 46
        }
      },
      "19": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 42,
          column: 63
        }
      },
      "20": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 31
        }
      },
      "21": {
        start: {
          line: 48,
          column: 29
        },
        end: {
          line: 75,
          column: 6
        }
      },
      "22": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 72,
          column: 9
        }
      },
      "23": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 32
        }
      },
      "24": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 51,
          column: 26
        }
      },
      "25": {
        start: {
          line: 52,
          column: 33
        },
        end: {
          line: 52,
          column: 54
        }
      },
      "26": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 92
        }
      },
      "27": {
        start: {
          line: 53,
          column: 35
        },
        end: {
          line: 53,
          column: 92
        }
      },
      "28": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 92
        }
      },
      "29": {
        start: {
          line: 54,
          column: 35
        },
        end: {
          line: 54,
          column: 92
        }
      },
      "30": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 78
        }
      },
      "31": {
        start: {
          line: 55,
          column: 34
        },
        end: {
          line: 55,
          column: 78
        }
      },
      "32": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 81
        }
      },
      "33": {
        start: {
          line: 56,
          column: 35
        },
        end: {
          line: 56,
          column: 81
        }
      },
      "34": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 103
        }
      },
      "35": {
        start: {
          line: 57,
          column: 48
        },
        end: {
          line: 57,
          column: 103
        }
      },
      "36": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 93
        }
      },
      "37": {
        start: {
          line: 58,
          column: 39
        },
        end: {
          line: 58,
          column: 93
        }
      },
      "38": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 78
        }
      },
      "39": {
        start: {
          line: 59,
          column: 34
        },
        end: {
          line: 59,
          column: 78
        }
      },
      "40": {
        start: {
          line: 60,
          column: 24
        },
        end: {
          line: 60,
          column: 66
        }
      },
      "41": {
        start: {
          line: 61,
          column: 26
        },
        end: {
          line: 61,
          column: 52
        }
      },
      "42": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 40
        }
      },
      "43": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 42
        }
      },
      "44": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 25
        }
      },
      "45": {
        start: {
          line: 66,
          column: 33
        },
        end: {
          line: 66,
          column: 99
        }
      },
      "46": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 34
        }
      },
      "47": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 68,
          column: 46
        }
      },
      "48": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 24
        }
      },
      "49": {
        start: {
          line: 71,
          column: 12
        },
        end: {
          line: 71,
          column: 33
        }
      },
      "50": {
        start: {
          line: 78,
          column: 28
        },
        end: {
          line: 95,
          column: 6
        }
      },
      "51": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 92,
          column: 9
        }
      },
      "52": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 32
        }
      },
      "53": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 26
        }
      },
      "54": {
        start: {
          line: 82,
          column: 26
        },
        end: {
          line: 82,
          column: 70
        }
      },
      "55": {
        start: {
          line: 83,
          column: 12
        },
        end: {
          line: 83,
          column: 38
        }
      },
      "56": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 33
        }
      },
      "57": {
        start: {
          line: 86,
          column: 33
        },
        end: {
          line: 86,
          column: 98
        }
      },
      "58": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 34
        }
      },
      "59": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 46
        }
      },
      "60": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 24
        }
      },
      "61": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 33
        }
      },
      "62": {
        start: {
          line: 98,
          column: 27
        },
        end: {
          line: 126,
          column: 6
        }
      },
      "63": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 122,
          column: 9
        }
      },
      "64": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 32
        }
      },
      "65": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 26
        }
      },
      "66": {
        start: {
          line: 102,
          column: 26
        },
        end: {
          line: 105,
          column: 14
        }
      },
      "67": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 82
        }
      },
      "68": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 113,
          column: 13
        }
      },
      "69": {
        start: {
          line: 109,
          column: 16
        },
        end: {
          line: 112,
          column: 23
        }
      },
      "70": {
        start: {
          line: 109,
          column: 36
        },
        end: {
          line: 112,
          column: 21
        }
      },
      "71": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 33
        }
      },
      "72": {
        start: {
          line: 116,
          column: 33
        },
        end: {
          line: 116,
          column: 97
        }
      },
      "73": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 34
        }
      },
      "74": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 46
        }
      },
      "75": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 24
        }
      },
      "76": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 33
        }
      },
      "77": {
        start: {
          line: 129,
          column: 31
        },
        end: {
          line: 157,
          column: 6
        }
      },
      "78": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 152,
          column: 9
        }
      },
      "79": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 131,
          column: 32
        }
      },
      "80": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 132,
          column: 26
        }
      },
      "81": {
        start: {
          line: 133,
          column: 26
        },
        end: {
          line: 136,
          column: 14
        }
      },
      "82": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 86
        }
      },
      "83": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 80
        }
      },
      "84": {
        start: {
          line: 139,
          column: 32
        },
        end: {
          line: 139,
          column: 78
        }
      },
      "85": {
        start: {
          line: 139,
          column: 46
        },
        end: {
          line: 139,
          column: 77
        }
      },
      "86": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 143,
          column: 13
        }
      },
      "87": {
        start: {
          line: 142,
          column: 16
        },
        end: {
          line: 142,
          column: 42
        }
      },
      "88": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 144,
          column: 33
        }
      },
      "89": {
        start: {
          line: 146,
          column: 33
        },
        end: {
          line: 146,
          column: 101
        }
      },
      "90": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 147,
          column: 34
        }
      },
      "91": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 46
        }
      },
      "92": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 24
        }
      },
      "93": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 33
        }
      },
      "94": {
        start: {
          line: 160,
          column: 31
        },
        end: {
          line: 193,
          column: 6
        }
      },
      "95": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 188,
          column: 9
        }
      },
      "96": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 162,
          column: 32
        }
      },
      "97": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 163,
          column: 26
        }
      },
      "98": {
        start: {
          line: 164,
          column: 26
        },
        end: {
          line: 166,
          column: 14
        }
      },
      "99": {
        start: {
          line: 167,
          column: 12
        },
        end: {
          line: 167,
          column: 86
        }
      },
      "100": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 172,
          column: 28
        }
      },
      "101": {
        start: {
          line: 169,
          column: 32
        },
        end: {
          line: 172,
          column: 26
        }
      },
      "102": {
        start: {
          line: 169,
          column: 46
        },
        end: {
          line: 172,
          column: 25
        }
      },
      "103": {
        start: {
          line: 174,
          column: 12
        },
        end: {
          line: 179,
          column: 13
        }
      },
      "104": {
        start: {
          line: 175,
          column: 16
        },
        end: {
          line: 178,
          column: 30
        }
      },
      "105": {
        start: {
          line: 175,
          column: 35
        },
        end: {
          line: 178,
          column: 28
        }
      },
      "106": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 180,
          column: 33
        }
      },
      "107": {
        start: {
          line: 182,
          column: 33
        },
        end: {
          line: 182,
          column: 101
        }
      },
      "108": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 183,
          column: 34
        }
      },
      "109": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 46
        }
      },
      "110": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 185,
          column: 24
        }
      },
      "111": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 187,
          column: 33
        }
      },
      "112": {
        start: {
          line: 196,
          column: 28
        },
        end: {
          line: 229,
          column: 6
        }
      },
      "113": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 224,
          column: 9
        }
      },
      "114": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 198,
          column: 32
        }
      },
      "115": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 199,
          column: 26
        }
      },
      "116": {
        start: {
          line: 200,
          column: 26
        },
        end: {
          line: 202,
          column: 14
        }
      },
      "117": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 203,
          column: 83
        }
      },
      "118": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 208,
          column: 28
        }
      },
      "119": {
        start: {
          line: 205,
          column: 32
        },
        end: {
          line: 208,
          column: 26
        }
      },
      "120": {
        start: {
          line: 205,
          column: 46
        },
        end: {
          line: 208,
          column: 25
        }
      },
      "121": {
        start: {
          line: 210,
          column: 12
        },
        end: {
          line: 215,
          column: 13
        }
      },
      "122": {
        start: {
          line: 211,
          column: 16
        },
        end: {
          line: 214,
          column: 30
        }
      },
      "123": {
        start: {
          line: 211,
          column: 35
        },
        end: {
          line: 214,
          column: 28
        }
      },
      "124": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 33
        }
      },
      "125": {
        start: {
          line: 218,
          column: 33
        },
        end: {
          line: 218,
          column: 98
        }
      },
      "126": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 219,
          column: 34
        }
      },
      "127": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 220,
          column: 46
        }
      },
      "128": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 221,
          column: 24
        }
      },
      "129": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 223,
          column: 33
        }
      },
      "130": {
        start: {
          line: 232,
          column: 27
        },
        end: {
          line: 237,
          column: 10
        }
      },
      "131": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 233,
          column: 24
        }
      },
      "132": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 234,
          column: 25
        }
      },
      "133": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 235,
          column: 27
        }
      },
      "134": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 236,
          column: 22
        }
      },
      "135": {
        start: {
          line: 240,
          column: 36
        },
        end: {
          line: 247,
          column: 6
        }
      },
      "136": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 244,
          column: 40
        }
      },
      "137": {
        start: {
          line: 250,
          column: 32
        },
        end: {
          line: 259,
          column: 6
        }
      },
      "138": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 251,
          column: 41
        }
      },
      "139": {
        start: {
          line: 251,
          column: 28
        },
        end: {
          line: 251,
          column: 41
        }
      },
      "140": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 256,
          column: 40
        }
      },
      "141": {
        start: {
          line: 260,
          column: 4
        },
        end: {
          line: 278,
          column: 6
        }
      },
      "142": {
        start: {
          line: 280,
          column: 17
        },
        end: {
          line: 280,
          column: 28
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 19
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 23
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "useUsuarios",
        decl: {
          start: {
            line: 23,
            column: 9
          },
          end: {
            line: 23,
            column: 20
          }
        },
        loc: {
          start: {
            line: 23,
            column: 23
          },
          end: {
            line: 279,
            column: 1
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 32,
            column: 54
          },
          end: {
            line: 32,
            column: 55
          }
        },
        loc: {
          start: {
            line: 32,
            column: 80
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 32
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 48,
            column: 53
          },
          end: {
            line: 48,
            column: 54
          }
        },
        loc: {
          start: {
            line: 48,
            column: 78
          },
          end: {
            line: 73,
            column: 5
          }
        },
        line: 48
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 78,
            column: 52
          },
          end: {
            line: 78,
            column: 53
          }
        },
        loc: {
          start: {
            line: 78,
            column: 64
          },
          end: {
            line: 93,
            column: 5
          }
        },
        line: 78
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 98,
            column: 51
          },
          end: {
            line: 98,
            column: 52
          }
        },
        loc: {
          start: {
            line: 98,
            column: 73
          },
          end: {
            line: 123,
            column: 5
          }
        },
        line: 98
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 109,
            column: 28
          },
          end: {
            line: 109,
            column: 29
          }
        },
        loc: {
          start: {
            line: 109,
            column: 36
          },
          end: {
            line: 112,
            column: 21
          }
        },
        line: 109
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 129,
            column: 55
          },
          end: {
            line: 129,
            column: 56
          }
        },
        loc: {
          start: {
            line: 129,
            column: 81
          },
          end: {
            line: 153,
            column: 5
          }
        },
        line: 129
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 139,
            column: 24
          },
          end: {
            line: 139,
            column: 25
          }
        },
        loc: {
          start: {
            line: 139,
            column: 32
          },
          end: {
            line: 139,
            column: 78
          }
        },
        line: 139
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 139,
            column: 41
          },
          end: {
            line: 139,
            column: 42
          }
        },
        loc: {
          start: {
            line: 139,
            column: 46
          },
          end: {
            line: 139,
            column: 77
          }
        },
        line: 139
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 160,
            column: 55
          },
          end: {
            line: 160,
            column: 56
          }
        },
        loc: {
          start: {
            line: 160,
            column: 67
          },
          end: {
            line: 189,
            column: 5
          }
        },
        line: 160
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 169,
            column: 24
          },
          end: {
            line: 169,
            column: 25
          }
        },
        loc: {
          start: {
            line: 169,
            column: 32
          },
          end: {
            line: 172,
            column: 26
          }
        },
        line: 169
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 169,
            column: 41
          },
          end: {
            line: 169,
            column: 42
          }
        },
        loc: {
          start: {
            line: 169,
            column: 46
          },
          end: {
            line: 172,
            column: 25
          }
        },
        line: 169
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 175,
            column: 27
          },
          end: {
            line: 175,
            column: 28
          }
        },
        loc: {
          start: {
            line: 175,
            column: 35
          },
          end: {
            line: 178,
            column: 28
          }
        },
        line: 175
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 196,
            column: 52
          },
          end: {
            line: 196,
            column: 53
          }
        },
        loc: {
          start: {
            line: 196,
            column: 64
          },
          end: {
            line: 225,
            column: 5
          }
        },
        line: 196
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 205,
            column: 24
          },
          end: {
            line: 205,
            column: 25
          }
        },
        loc: {
          start: {
            line: 205,
            column: 32
          },
          end: {
            line: 208,
            column: 26
          }
        },
        line: 205
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 205,
            column: 41
          },
          end: {
            line: 205,
            column: 42
          }
        },
        loc: {
          start: {
            line: 205,
            column: 46
          },
          end: {
            line: 208,
            column: 25
          }
        },
        line: 205
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 211,
            column: 27
          },
          end: {
            line: 211,
            column: 28
          }
        },
        loc: {
          start: {
            line: 211,
            column: 35
          },
          end: {
            line: 214,
            column: 28
          }
        },
        line: 211
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 232,
            column: 51
          },
          end: {
            line: 232,
            column: 52
          }
        },
        loc: {
          start: {
            line: 232,
            column: 55
          },
          end: {
            line: 237,
            column: 5
          }
        },
        line: 232
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 240,
            column: 60
          },
          end: {
            line: 240,
            column: 61
          }
        },
        loc: {
          start: {
            line: 240,
            column: 64
          },
          end: {
            line: 245,
            column: 5
          }
        },
        line: 240
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 250,
            column: 56
          },
          end: {
            line: 250,
            column: 57
          }
        },
        loc: {
          start: {
            line: 250,
            column: 69
          },
          end: {
            line: 257,
            column: 5
          }
        },
        line: 250
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 32,
            column: 66
          },
          end: {
            line: 32,
            column: 77
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 32,
            column: 75
          },
          end: {
            line: 32,
            column: 77
          }
        }],
        line: 32
      },
      "1": {
        loc: {
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 8
          },
          end: {
            line: 43,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "2": {
        loc: {
          start: {
            line: 42,
            column: 28
          },
          end: {
            line: 42,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 28
          },
          end: {
            line: 42,
            column: 37
          }
        }, {
          start: {
            line: 42,
            column: 41
          },
          end: {
            line: 42,
            column: 61
          }
        }],
        line: 42
      },
      "3": {
        loc: {
          start: {
            line: 48,
            column: 60
          },
          end: {
            line: 48,
            column: 75
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 48,
            column: 73
          },
          end: {
            line: 48,
            column: 75
          }
        }],
        line: 48
      },
      "4": {
        loc: {
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 53,
            column: 92
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 53,
            column: 92
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "5": {
        loc: {
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 54,
            column: 92
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 54,
            column: 92
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "6": {
        loc: {
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 55,
            column: 78
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 55,
            column: 78
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "7": {
        loc: {
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 56,
            column: 81
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 56,
            column: 81
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "8": {
        loc: {
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 57,
            column: 103
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 57,
            column: 103
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "9": {
        loc: {
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 58,
            column: 93
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 58,
            column: 93
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "10": {
        loc: {
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 59,
            column: 78
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 12
          },
          end: {
            line: 59,
            column: 78
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "11": {
        loc: {
          start: {
            line: 66,
            column: 33
          },
          end: {
            line: 66,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 66,
            column: 58
          },
          end: {
            line: 66,
            column: 71
          }
        }, {
          start: {
            line: 66,
            column: 74
          },
          end: {
            line: 66,
            column: 99
          }
        }],
        line: 66
      },
      "12": {
        loc: {
          start: {
            line: 86,
            column: 33
          },
          end: {
            line: 86,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 86,
            column: 58
          },
          end: {
            line: 86,
            column: 71
          }
        }, {
          start: {
            line: 86,
            column: 74
          },
          end: {
            line: 86,
            column: 98
          }
        }],
        line: 86
      },
      "13": {
        loc: {
          start: {
            line: 106,
            column: 34
          },
          end: {
            line: 106,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 106,
            column: 34
          },
          end: {
            line: 106,
            column: 48
          }
        }, {
          start: {
            line: 106,
            column: 52
          },
          end: {
            line: 106,
            column: 80
          }
        }],
        line: 106
      },
      "14": {
        loc: {
          start: {
            line: 108,
            column: 12
          },
          end: {
            line: 113,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 12
          },
          end: {
            line: 113,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "15": {
        loc: {
          start: {
            line: 116,
            column: 33
          },
          end: {
            line: 116,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 116,
            column: 58
          },
          end: {
            line: 116,
            column: 71
          }
        }, {
          start: {
            line: 116,
            column: 74
          },
          end: {
            line: 116,
            column: 97
          }
        }],
        line: 116
      },
      "16": {
        loc: {
          start: {
            line: 137,
            column: 34
          },
          end: {
            line: 137,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 137,
            column: 34
          },
          end: {
            line: 137,
            column: 48
          }
        }, {
          start: {
            line: 137,
            column: 52
          },
          end: {
            line: 137,
            column: 84
          }
        }],
        line: 137
      },
      "17": {
        loc: {
          start: {
            line: 139,
            column: 46
          },
          end: {
            line: 139,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 139,
            column: 60
          },
          end: {
            line: 139,
            column: 73
          }
        }, {
          start: {
            line: 139,
            column: 76
          },
          end: {
            line: 139,
            column: 77
          }
        }],
        line: 139
      },
      "18": {
        loc: {
          start: {
            line: 141,
            column: 12
          },
          end: {
            line: 143,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 141,
            column: 12
          },
          end: {
            line: 143,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 141
      },
      "19": {
        loc: {
          start: {
            line: 146,
            column: 33
          },
          end: {
            line: 146,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 146,
            column: 58
          },
          end: {
            line: 146,
            column: 71
          }
        }, {
          start: {
            line: 146,
            column: 74
          },
          end: {
            line: 146,
            column: 101
          }
        }],
        line: 146
      },
      "20": {
        loc: {
          start: {
            line: 167,
            column: 34
          },
          end: {
            line: 167,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 167,
            column: 34
          },
          end: {
            line: 167,
            column: 48
          }
        }, {
          start: {
            line: 167,
            column: 52
          },
          end: {
            line: 167,
            column: 84
          }
        }],
        line: 167
      },
      "21": {
        loc: {
          start: {
            line: 169,
            column: 46
          },
          end: {
            line: 172,
            column: 25
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 169,
            column: 60
          },
          end: {
            line: 172,
            column: 21
          }
        }, {
          start: {
            line: 172,
            column: 24
          },
          end: {
            line: 172,
            column: 25
          }
        }],
        line: 169
      },
      "22": {
        loc: {
          start: {
            line: 174,
            column: 12
          },
          end: {
            line: 179,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 12
          },
          end: {
            line: 179,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 174
      },
      "23": {
        loc: {
          start: {
            line: 175,
            column: 35
          },
          end: {
            line: 178,
            column: 28
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 175,
            column: 42
          },
          end: {
            line: 178,
            column: 21
          }
        }, {
          start: {
            line: 178,
            column: 24
          },
          end: {
            line: 178,
            column: 28
          }
        }],
        line: 175
      },
      "24": {
        loc: {
          start: {
            line: 182,
            column: 33
          },
          end: {
            line: 182,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 182,
            column: 58
          },
          end: {
            line: 182,
            column: 71
          }
        }, {
          start: {
            line: 182,
            column: 74
          },
          end: {
            line: 182,
            column: 101
          }
        }],
        line: 182
      },
      "25": {
        loc: {
          start: {
            line: 203,
            column: 34
          },
          end: {
            line: 203,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 203,
            column: 34
          },
          end: {
            line: 203,
            column: 48
          }
        }, {
          start: {
            line: 203,
            column: 52
          },
          end: {
            line: 203,
            column: 81
          }
        }],
        line: 203
      },
      "26": {
        loc: {
          start: {
            line: 205,
            column: 46
          },
          end: {
            line: 208,
            column: 25
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 205,
            column: 60
          },
          end: {
            line: 208,
            column: 21
          }
        }, {
          start: {
            line: 208,
            column: 24
          },
          end: {
            line: 208,
            column: 25
          }
        }],
        line: 205
      },
      "27": {
        loc: {
          start: {
            line: 210,
            column: 12
          },
          end: {
            line: 215,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 210,
            column: 12
          },
          end: {
            line: 215,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 210
      },
      "28": {
        loc: {
          start: {
            line: 211,
            column: 35
          },
          end: {
            line: 214,
            column: 28
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 211,
            column: 42
          },
          end: {
            line: 214,
            column: 21
          }
        }, {
          start: {
            line: 214,
            column: 24
          },
          end: {
            line: 214,
            column: 28
          }
        }],
        line: 211
      },
      "29": {
        loc: {
          start: {
            line: 218,
            column: 33
          },
          end: {
            line: 218,
            column: 98
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 218,
            column: 58
          },
          end: {
            line: 218,
            column: 71
          }
        }, {
          start: {
            line: 218,
            column: 74
          },
          end: {
            line: 218,
            column: 98
          }
        }],
        line: 218
      },
      "30": {
        loc: {
          start: {
            line: 241,
            column: 15
          },
          end: {
            line: 244,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 241,
            column: 15
          },
          end: {
            line: 241,
            column: 36
          }
        }, {
          start: {
            line: 241,
            column: 40
          },
          end: {
            line: 244,
            column: 39
          }
        }],
        line: 241
      },
      "31": {
        loc: {
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 251,
            column: 41
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 251,
            column: 8
          },
          end: {
            line: 251,
            column: 41
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 251
      },
      "32": {
        loc: {
          start: {
            line: 253,
            column: 15
          },
          end: {
            line: 256,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 253,
            column: 15
          },
          end: {
            line: 253,
            column: 44
          }
        }, {
          start: {
            line: 253,
            column: 48
          },
          end: {
            line: 256,
            column: 39
          }
        }],
        line: 253
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\hooks\\use-usuarios.ts"],
      sourcesContent: ["'use client';\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { useSession } from 'next-auth/react';\nimport { toast } from 'sonner';\n\n// Tipos para usu\xE1rios\nexport interface Usuario {\n  id: string;\n  nome: string;\n  email: string;\n  perfil: 'ADMIN' | 'GESTOR' | 'ATENDENTE';\n  ativo: boolean;\n  criadoEm: string;\n  atualizadoEm: string;\n  ultimoLogin?: string;\n}\n\nexport interface CriarUsuarioData {\n  nome: string;\n  email: string;\n  senha: string;\n  perfil: 'ADMIN' | 'GESTOR' | 'ATENDENTE';\n  ativo?: boolean;\n}\n\nexport interface AtualizarUsuarioData {\n  nome?: string;\n  email?: string;\n  perfil?: 'ADMIN' | 'GESTOR' | 'ATENDENTE';\n  ativo?: boolean;\n}\n\nexport interface ParametrosListagem {\n  pagina?: number;\n  limite?: number;\n  busca?: string;\n  perfil?: 'ADMIN' | 'GESTOR' | 'ATENDENTE';\n  ativo?: boolean;\n  ordenarPor?: 'nome' | 'email' | 'criadoEm' | 'atualizadoEm';\n  ordem?: 'asc' | 'desc';\n}\n\nexport interface PaginacaoInfo {\n  paginaAtual: number;\n  totalPaginas: number;\n  totalItens: number;\n  itensPorPagina: number;\n  temProxima: boolean;\n  temAnterior: boolean;\n}\n\nexport interface RespostaListagem {\n  usuarios: Usuario[];\n  paginacao: PaginacaoInfo;\n}\n\n/**\n * Hook para gerenciamento de usu\xE1rios\n * Fornece funcionalidades CRUD completas para usu\xE1rios\n */\nexport function useUsuarios() {\n  const { data: session } = useSession();\n  const [usuarios, setUsuarios] = useState<Usuario[]>([]);\n  const [usuario, setUsuario] = useState<Usuario | null>(null);\n  const [paginacao, setPaginacao] = useState<PaginacaoInfo | null>(null);\n  const [carregando, setCarregando] = useState(false);\n  const [erro, setErro] = useState<string | null>(null);\n\n  /**\n   * Fun\xE7\xE3o auxiliar para fazer requisi\xE7\xF5es \xE0 API\n   */\n  const fazerRequisicao = useCallback(\n    async (url: string, opcoes: RequestInit = {}) => {\n      const resposta = await fetch(url, {\n        headers: {\n          'Content-Type': 'application/json',\n          ...opcoes.headers,\n        },\n        ...opcoes,\n      });\n\n      if (!resposta.ok) {\n        const erro = await resposta.json();\n        throw new Error(erro.erro || 'Erro na requisi\xE7\xE3o');\n      }\n\n      return resposta.json();\n    },\n    []\n  );\n\n  /**\n   * Listar usu\xE1rios com pagina\xE7\xE3o e filtros\n   */\n  const listarUsuarios = useCallback(\n    async (parametros: ParametrosListagem = {}) => {\n      try {\n        setCarregando(true);\n        setErro(null);\n\n        const searchParams = new URLSearchParams();\n\n        if (parametros.pagina)\n          searchParams.set('pagina', parametros.pagina.toString());\n        if (parametros.limite)\n          searchParams.set('limite', parametros.limite.toString());\n        if (parametros.busca) searchParams.set('busca', parametros.busca);\n        if (parametros.perfil) searchParams.set('perfil', parametros.perfil);\n        if (parametros.ativo !== undefined)\n          searchParams.set('ativo', parametros.ativo.toString());\n        if (parametros.ordenarPor)\n          searchParams.set('ordenarPor', parametros.ordenarPor);\n        if (parametros.ordem) searchParams.set('ordem', parametros.ordem);\n\n        const url = `/api/usuarios?${searchParams.toString()}`;\n        const dados: RespostaListagem = await fazerRequisicao(url);\n\n        setUsuarios(dados.usuarios);\n        setPaginacao(dados.paginacao);\n\n        return dados;\n      } catch (error) {\n        const mensagemErro =\n          error instanceof Error ? error.message : 'Erro ao listar usu\xE1rios';\n        setErro(mensagemErro);\n        toast.error(mensagemErro);\n        throw error;\n      } finally {\n        setCarregando(false);\n      }\n    },\n    [fazerRequisicao]\n  );\n\n  /**\n   * Buscar usu\xE1rio por ID\n   */\n  const buscarUsuario = useCallback(\n    async (id: string) => {\n      try {\n        setCarregando(true);\n        setErro(null);\n\n        const dados = await fazerRequisicao(`/api/usuarios/${id}`);\n        setUsuario(dados.usuario);\n\n        return dados.usuario;\n      } catch (error) {\n        const mensagemErro =\n          error instanceof Error ? error.message : 'Erro ao buscar usu\xE1rio';\n        setErro(mensagemErro);\n        toast.error(mensagemErro);\n        throw error;\n      } finally {\n        setCarregando(false);\n      }\n    },\n    [fazerRequisicao]\n  );\n\n  /**\n   * Criar novo usu\xE1rio\n   */\n  const criarUsuario = useCallback(\n    async (dadosUsuario: CriarUsuarioData) => {\n      try {\n        setCarregando(true);\n        setErro(null);\n\n        const dados = await fazerRequisicao('/api/usuarios', {\n          method: 'POST',\n          body: JSON.stringify(dadosUsuario),\n        });\n\n        toast.success(dados.mensagem || 'Usu\xE1rio criado com sucesso');\n\n        // Atualizar lista local se existir\n        if (usuarios.length > 0) {\n          setUsuarios(prev => [dados.usuario, ...prev]);\n        }\n\n        return dados.usuario;\n      } catch (error) {\n        const mensagemErro =\n          error instanceof Error ? error.message : 'Erro ao criar usu\xE1rio';\n        setErro(mensagemErro);\n        toast.error(mensagemErro);\n        throw error;\n      } finally {\n        setCarregando(false);\n      }\n    },\n    [fazerRequisicao, usuarios]\n  );\n\n  /**\n   * Atualizar usu\xE1rio existente\n   */\n  const atualizarUsuario = useCallback(\n    async (id: string, dadosUsuario: AtualizarUsuarioData) => {\n      try {\n        setCarregando(true);\n        setErro(null);\n\n        const dados = await fazerRequisicao(`/api/usuarios/${id}`, {\n          method: 'PUT',\n          body: JSON.stringify(dadosUsuario),\n        });\n\n        toast.success(dados.mensagem || 'Usu\xE1rio atualizado com sucesso');\n\n        // Atualizar lista local\n        setUsuarios(prev => prev.map(u => (u.id === id ? dados.usuario : u)));\n\n        // Atualizar usu\xE1rio individual se for o mesmo\n        if (usuario?.id === id) {\n          setUsuario(dados.usuario);\n        }\n\n        return dados.usuario;\n      } catch (error) {\n        const mensagemErro =\n          error instanceof Error ? error.message : 'Erro ao atualizar usu\xE1rio';\n        setErro(mensagemErro);\n        toast.error(mensagemErro);\n        throw error;\n      } finally {\n        setCarregando(false);\n      }\n    },\n    [fazerRequisicao, usuario, usuarios]\n  );\n\n  /**\n   * Desativar usu\xE1rio (soft delete)\n   */\n  const desativarUsuario = useCallback(\n    async (id: string) => {\n      try {\n        setCarregando(true);\n        setErro(null);\n\n        const dados = await fazerRequisicao(`/api/usuarios/${id}`, {\n          method: 'DELETE',\n        });\n\n        toast.success(dados.mensagem || 'Usu\xE1rio desativado com sucesso');\n\n        // Atualizar lista local\n        setUsuarios(prev =>\n          prev.map(u => (u.id === id ? { ...u, ativo: false } : u))\n        );\n\n        // Atualizar usu\xE1rio individual se for o mesmo\n        if (usuario?.id === id) {\n          setUsuario(prev => (prev ? { ...prev, ativo: false } : null));\n        }\n\n        return dados.usuario;\n      } catch (error) {\n        const mensagemErro =\n          error instanceof Error ? error.message : 'Erro ao desativar usu\xE1rio';\n        setErro(mensagemErro);\n        toast.error(mensagemErro);\n        throw error;\n      } finally {\n        setCarregando(false);\n      }\n    },\n    [fazerRequisicao, usuario, usuarios]\n  );\n\n  /**\n   * Ativar usu\xE1rio\n   */\n  const ativarUsuario = useCallback(\n    async (id: string) => {\n      try {\n        setCarregando(true);\n        setErro(null);\n\n        const dados = await fazerRequisicao(`/api/usuarios/${id}/ativar`, {\n          method: 'PATCH',\n        });\n\n        toast.success(dados.mensagem || 'Usu\xE1rio ativado com sucesso');\n\n        // Atualizar lista local\n        setUsuarios(prev =>\n          prev.map(u => (u.id === id ? { ...u, ativo: true } : u))\n        );\n\n        // Atualizar usu\xE1rio individual se for o mesmo\n        if (usuario?.id === id) {\n          setUsuario(prev => (prev ? { ...prev, ativo: true } : null));\n        }\n\n        return dados.usuario;\n      } catch (error) {\n        const mensagemErro =\n          error instanceof Error ? error.message : 'Erro ao ativar usu\xE1rio';\n        setErro(mensagemErro);\n        toast.error(mensagemErro);\n        throw error;\n      } finally {\n        setCarregando(false);\n      }\n    },\n    [fazerRequisicao, usuario, usuarios]\n  );\n\n  /**\n   * Limpar estado\n   */\n  const limparEstado = useCallback(() => {\n    setUsuarios([]);\n    setUsuario(null);\n    setPaginacao(null);\n    setErro(null);\n  }, []);\n\n  /**\n   * Verificar se o usu\xE1rio atual pode gerenciar usu\xE1rios\n   */\n  const podeGerenciarUsuarios = useCallback(() => {\n    return (\n      session?.user?.perfil && ['ADMIN', 'GESTOR'].includes(session.user.perfil)\n    );\n  }, [session]);\n\n  /**\n   * Verificar se pode editar usu\xE1rio espec\xEDfico\n   */\n  const podeEditarUsuario = useCallback(\n    (idUsuario: string) => {\n      if (!session?.user) return false;\n\n      // Pode editar pr\xF3prios dados ou se for admin/gestor\n      return (\n        session.user.id === idUsuario ||\n        ['ADMIN', 'GESTOR'].includes(session.user.perfil)\n      );\n    },\n    [session]\n  );\n\n  return {\n    // Estado\n    usuarios,\n    usuario,\n    paginacao,\n    carregando,\n    erro,\n\n    // A\xE7\xF5es\n    listarUsuarios,\n    buscarUsuario,\n    criarUsuario,\n    atualizarUsuario,\n    desativarUsuario,\n    ativarUsuario,\n    limparEstado,\n\n    // Utilit\xE1rios\n    podeGerenciarUsuarios,\n    podeEditarUsuario,\n  };\n}\n\nexport default useUsuarios;\n"],
      names: ["useUsuarios", "data", "session", "useSession", "usuarios", "setUsuarios", "useState", "usuario", "setUsuario", "paginacao", "setPaginacao", "carregando", "setCarregando", "erro", "setErro", "fazerRequisicao", "useCallback", "url", "opcoes", "resposta", "fetch", "headers", "ok", "json", "Error", "listarUsuarios", "parametros", "searchParams", "URLSearchParams", "pagina", "set", "toString", "limite", "busca", "perfil", "ativo", "undefined", "ordenarPor", "ordem", "dados", "error", "mensagemErro", "message", "toast", "buscarUsuario", "id", "criarUsuario", "dadosUsuario", "method", "body", "JSON", "stringify", "success", "mensagem", "length", "prev", "atualizarUsuario", "map", "u", "desativarUsuario", "ativarUsuario", "limparEstado", "podeGerenciarUsuarios", "user", "includes", "podeEditarUsuario", "idUsuario"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9362124b4ffeeef8972df82f3435a3f2da490247"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_q5w5miydu = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_q5w5miydu();
cov_q5w5miydu().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_q5w5miydu().f[0]++;
  cov_q5w5miydu().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_q5w5miydu().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_q5w5miydu().s[3]++;
_export(exports, {
  get default() {
    /* istanbul ignore next */
    cov_q5w5miydu().f[1]++;
    cov_q5w5miydu().s[4]++;
    return _default;
  },
  get useUsuarios() {
    /* istanbul ignore next */
    cov_q5w5miydu().f[2]++;
    cov_q5w5miydu().s[5]++;
    return useUsuarios;
  }
});
const _react =
/* istanbul ignore next */
(cov_q5w5miydu().s[6]++, require("react"));
const _react1 =
/* istanbul ignore next */
(cov_q5w5miydu().s[7]++, require("next-auth/react"));
const _sonner =
/* istanbul ignore next */
(cov_q5w5miydu().s[8]++, require("sonner"));
function useUsuarios() {
  /* istanbul ignore next */
  cov_q5w5miydu().f[3]++;
  const {
    data: session
  } =
  /* istanbul ignore next */
  (cov_q5w5miydu().s[9]++, (0, _react1.useSession)());
  const [usuarios, setUsuarios] =
  /* istanbul ignore next */
  (cov_q5w5miydu().s[10]++, (0, _react.useState)([]));
  const [usuario, setUsuario] =
  /* istanbul ignore next */
  (cov_q5w5miydu().s[11]++, (0, _react.useState)(null));
  const [paginacao, setPaginacao] =
  /* istanbul ignore next */
  (cov_q5w5miydu().s[12]++, (0, _react.useState)(null));
  const [carregando, setCarregando] =
  /* istanbul ignore next */
  (cov_q5w5miydu().s[13]++, (0, _react.useState)(false));
  const [erro, setErro] =
  /* istanbul ignore next */
  (cov_q5w5miydu().s[14]++, (0, _react.useState)(null));
  /**
  * Função auxiliar para fazer requisições à API
  */
  const fazerRequisicao =
  /* istanbul ignore next */
  (cov_q5w5miydu().s[15]++, (0, _react.useCallback)(async (url, opcoes =
  /* istanbul ignore next */
  (cov_q5w5miydu().b[0][0]++, {})) => {
    /* istanbul ignore next */
    cov_q5w5miydu().f[4]++;
    const resposta =
    /* istanbul ignore next */
    (cov_q5w5miydu().s[16]++, await fetch(url, {
      headers: {
        'Content-Type': 'application/json',
        ...opcoes.headers
      },
      ...opcoes
    }));
    /* istanbul ignore next */
    cov_q5w5miydu().s[17]++;
    if (!resposta.ok) {
      /* istanbul ignore next */
      cov_q5w5miydu().b[1][0]++;
      const erro =
      /* istanbul ignore next */
      (cov_q5w5miydu().s[18]++, await resposta.json());
      /* istanbul ignore next */
      cov_q5w5miydu().s[19]++;
      throw new Error(
      /* istanbul ignore next */
      (cov_q5w5miydu().b[2][0]++, erro.erro) ||
      /* istanbul ignore next */
      (cov_q5w5miydu().b[2][1]++, 'Erro na requisição'));
    } else
    /* istanbul ignore next */
    {
      cov_q5w5miydu().b[1][1]++;
    }
    cov_q5w5miydu().s[20]++;
    return resposta.json();
  }, []));
  /**
  * Listar usuários com paginação e filtros
  */
  const listarUsuarios =
  /* istanbul ignore next */
  (cov_q5w5miydu().s[21]++, (0, _react.useCallback)(async (parametros =
  /* istanbul ignore next */
  (cov_q5w5miydu().b[3][0]++, {})) => {
    /* istanbul ignore next */
    cov_q5w5miydu().f[5]++;
    cov_q5w5miydu().s[22]++;
    try {
      /* istanbul ignore next */
      cov_q5w5miydu().s[23]++;
      setCarregando(true);
      /* istanbul ignore next */
      cov_q5w5miydu().s[24]++;
      setErro(null);
      const searchParams =
      /* istanbul ignore next */
      (cov_q5w5miydu().s[25]++, new URLSearchParams());
      /* istanbul ignore next */
      cov_q5w5miydu().s[26]++;
      if (parametros.pagina) {
        /* istanbul ignore next */
        cov_q5w5miydu().b[4][0]++;
        cov_q5w5miydu().s[27]++;
        searchParams.set('pagina', parametros.pagina.toString());
      } else
      /* istanbul ignore next */
      {
        cov_q5w5miydu().b[4][1]++;
      }
      cov_q5w5miydu().s[28]++;
      if (parametros.limite) {
        /* istanbul ignore next */
        cov_q5w5miydu().b[5][0]++;
        cov_q5w5miydu().s[29]++;
        searchParams.set('limite', parametros.limite.toString());
      } else
      /* istanbul ignore next */
      {
        cov_q5w5miydu().b[5][1]++;
      }
      cov_q5w5miydu().s[30]++;
      if (parametros.busca) {
        /* istanbul ignore next */
        cov_q5w5miydu().b[6][0]++;
        cov_q5w5miydu().s[31]++;
        searchParams.set('busca', parametros.busca);
      } else
      /* istanbul ignore next */
      {
        cov_q5w5miydu().b[6][1]++;
      }
      cov_q5w5miydu().s[32]++;
      if (parametros.perfil) {
        /* istanbul ignore next */
        cov_q5w5miydu().b[7][0]++;
        cov_q5w5miydu().s[33]++;
        searchParams.set('perfil', parametros.perfil);
      } else
      /* istanbul ignore next */
      {
        cov_q5w5miydu().b[7][1]++;
      }
      cov_q5w5miydu().s[34]++;
      if (parametros.ativo !== undefined) {
        /* istanbul ignore next */
        cov_q5w5miydu().b[8][0]++;
        cov_q5w5miydu().s[35]++;
        searchParams.set('ativo', parametros.ativo.toString());
      } else
      /* istanbul ignore next */
      {
        cov_q5w5miydu().b[8][1]++;
      }
      cov_q5w5miydu().s[36]++;
      if (parametros.ordenarPor) {
        /* istanbul ignore next */
        cov_q5w5miydu().b[9][0]++;
        cov_q5w5miydu().s[37]++;
        searchParams.set('ordenarPor', parametros.ordenarPor);
      } else
      /* istanbul ignore next */
      {
        cov_q5w5miydu().b[9][1]++;
      }
      cov_q5w5miydu().s[38]++;
      if (parametros.ordem) {
        /* istanbul ignore next */
        cov_q5w5miydu().b[10][0]++;
        cov_q5w5miydu().s[39]++;
        searchParams.set('ordem', parametros.ordem);
      } else
      /* istanbul ignore next */
      {
        cov_q5w5miydu().b[10][1]++;
      }
      const url =
      /* istanbul ignore next */
      (cov_q5w5miydu().s[40]++, `/api/usuarios?${searchParams.toString()}`);
      const dados =
      /* istanbul ignore next */
      (cov_q5w5miydu().s[41]++, await fazerRequisicao(url));
      /* istanbul ignore next */
      cov_q5w5miydu().s[42]++;
      setUsuarios(dados.usuarios);
      /* istanbul ignore next */
      cov_q5w5miydu().s[43]++;
      setPaginacao(dados.paginacao);
      /* istanbul ignore next */
      cov_q5w5miydu().s[44]++;
      return dados;
    } catch (error) {
      const mensagemErro =
      /* istanbul ignore next */
      (cov_q5w5miydu().s[45]++, error instanceof Error ?
      /* istanbul ignore next */
      (cov_q5w5miydu().b[11][0]++, error.message) :
      /* istanbul ignore next */
      (cov_q5w5miydu().b[11][1]++, 'Erro ao listar usuários'));
      /* istanbul ignore next */
      cov_q5w5miydu().s[46]++;
      setErro(mensagemErro);
      /* istanbul ignore next */
      cov_q5w5miydu().s[47]++;
      _sonner.toast.error(mensagemErro);
      /* istanbul ignore next */
      cov_q5w5miydu().s[48]++;
      throw error;
    } finally {
      /* istanbul ignore next */
      cov_q5w5miydu().s[49]++;
      setCarregando(false);
    }
  }, [fazerRequisicao]));
  /**
  * Buscar usuário por ID
  */
  const buscarUsuario =
  /* istanbul ignore next */
  (cov_q5w5miydu().s[50]++, (0, _react.useCallback)(async id => {
    /* istanbul ignore next */
    cov_q5w5miydu().f[6]++;
    cov_q5w5miydu().s[51]++;
    try {
      /* istanbul ignore next */
      cov_q5w5miydu().s[52]++;
      setCarregando(true);
      /* istanbul ignore next */
      cov_q5w5miydu().s[53]++;
      setErro(null);
      const dados =
      /* istanbul ignore next */
      (cov_q5w5miydu().s[54]++, await fazerRequisicao(`/api/usuarios/${id}`));
      /* istanbul ignore next */
      cov_q5w5miydu().s[55]++;
      setUsuario(dados.usuario);
      /* istanbul ignore next */
      cov_q5w5miydu().s[56]++;
      return dados.usuario;
    } catch (error) {
      const mensagemErro =
      /* istanbul ignore next */
      (cov_q5w5miydu().s[57]++, error instanceof Error ?
      /* istanbul ignore next */
      (cov_q5w5miydu().b[12][0]++, error.message) :
      /* istanbul ignore next */
      (cov_q5w5miydu().b[12][1]++, 'Erro ao buscar usuário'));
      /* istanbul ignore next */
      cov_q5w5miydu().s[58]++;
      setErro(mensagemErro);
      /* istanbul ignore next */
      cov_q5w5miydu().s[59]++;
      _sonner.toast.error(mensagemErro);
      /* istanbul ignore next */
      cov_q5w5miydu().s[60]++;
      throw error;
    } finally {
      /* istanbul ignore next */
      cov_q5w5miydu().s[61]++;
      setCarregando(false);
    }
  }, [fazerRequisicao]));
  /**
  * Criar novo usuário
  */
  const criarUsuario =
  /* istanbul ignore next */
  (cov_q5w5miydu().s[62]++, (0, _react.useCallback)(async dadosUsuario => {
    /* istanbul ignore next */
    cov_q5w5miydu().f[7]++;
    cov_q5w5miydu().s[63]++;
    try {
      /* istanbul ignore next */
      cov_q5w5miydu().s[64]++;
      setCarregando(true);
      /* istanbul ignore next */
      cov_q5w5miydu().s[65]++;
      setErro(null);
      const dados =
      /* istanbul ignore next */
      (cov_q5w5miydu().s[66]++, await fazerRequisicao('/api/usuarios', {
        method: 'POST',
        body: JSON.stringify(dadosUsuario)
      }));
      /* istanbul ignore next */
      cov_q5w5miydu().s[67]++;
      _sonner.toast.success(
      /* istanbul ignore next */
      (cov_q5w5miydu().b[13][0]++, dados.mensagem) ||
      /* istanbul ignore next */
      (cov_q5w5miydu().b[13][1]++, 'Usuário criado com sucesso'));
      // Atualizar lista local se existir
      /* istanbul ignore next */
      cov_q5w5miydu().s[68]++;
      if (usuarios.length > 0) {
        /* istanbul ignore next */
        cov_q5w5miydu().b[14][0]++;
        cov_q5w5miydu().s[69]++;
        setUsuarios(prev => {
          /* istanbul ignore next */
          cov_q5w5miydu().f[8]++;
          cov_q5w5miydu().s[70]++;
          return [dados.usuario, ...prev];
        });
      } else
      /* istanbul ignore next */
      {
        cov_q5w5miydu().b[14][1]++;
      }
      cov_q5w5miydu().s[71]++;
      return dados.usuario;
    } catch (error) {
      const mensagemErro =
      /* istanbul ignore next */
      (cov_q5w5miydu().s[72]++, error instanceof Error ?
      /* istanbul ignore next */
      (cov_q5w5miydu().b[15][0]++, error.message) :
      /* istanbul ignore next */
      (cov_q5w5miydu().b[15][1]++, 'Erro ao criar usuário'));
      /* istanbul ignore next */
      cov_q5w5miydu().s[73]++;
      setErro(mensagemErro);
      /* istanbul ignore next */
      cov_q5w5miydu().s[74]++;
      _sonner.toast.error(mensagemErro);
      /* istanbul ignore next */
      cov_q5w5miydu().s[75]++;
      throw error;
    } finally {
      /* istanbul ignore next */
      cov_q5w5miydu().s[76]++;
      setCarregando(false);
    }
  }, [fazerRequisicao, usuarios]));
  /**
  * Atualizar usuário existente
  */
  const atualizarUsuario =
  /* istanbul ignore next */
  (cov_q5w5miydu().s[77]++, (0, _react.useCallback)(async (id, dadosUsuario) => {
    /* istanbul ignore next */
    cov_q5w5miydu().f[9]++;
    cov_q5w5miydu().s[78]++;
    try {
      /* istanbul ignore next */
      cov_q5w5miydu().s[79]++;
      setCarregando(true);
      /* istanbul ignore next */
      cov_q5w5miydu().s[80]++;
      setErro(null);
      const dados =
      /* istanbul ignore next */
      (cov_q5w5miydu().s[81]++, await fazerRequisicao(`/api/usuarios/${id}`, {
        method: 'PUT',
        body: JSON.stringify(dadosUsuario)
      }));
      /* istanbul ignore next */
      cov_q5w5miydu().s[82]++;
      _sonner.toast.success(
      /* istanbul ignore next */
      (cov_q5w5miydu().b[16][0]++, dados.mensagem) ||
      /* istanbul ignore next */
      (cov_q5w5miydu().b[16][1]++, 'Usuário atualizado com sucesso'));
      // Atualizar lista local
      /* istanbul ignore next */
      cov_q5w5miydu().s[83]++;
      setUsuarios(prev => {
        /* istanbul ignore next */
        cov_q5w5miydu().f[10]++;
        cov_q5w5miydu().s[84]++;
        return prev.map(u => {
          /* istanbul ignore next */
          cov_q5w5miydu().f[11]++;
          cov_q5w5miydu().s[85]++;
          return u.id === id ?
          /* istanbul ignore next */
          (cov_q5w5miydu().b[17][0]++, dados.usuario) :
          /* istanbul ignore next */
          (cov_q5w5miydu().b[17][1]++, u);
        });
      });
      // Atualizar usuário individual se for o mesmo
      /* istanbul ignore next */
      cov_q5w5miydu().s[86]++;
      if (usuario?.id === id) {
        /* istanbul ignore next */
        cov_q5w5miydu().b[18][0]++;
        cov_q5w5miydu().s[87]++;
        setUsuario(dados.usuario);
      } else
      /* istanbul ignore next */
      {
        cov_q5w5miydu().b[18][1]++;
      }
      cov_q5w5miydu().s[88]++;
      return dados.usuario;
    } catch (error) {
      const mensagemErro =
      /* istanbul ignore next */
      (cov_q5w5miydu().s[89]++, error instanceof Error ?
      /* istanbul ignore next */
      (cov_q5w5miydu().b[19][0]++, error.message) :
      /* istanbul ignore next */
      (cov_q5w5miydu().b[19][1]++, 'Erro ao atualizar usuário'));
      /* istanbul ignore next */
      cov_q5w5miydu().s[90]++;
      setErro(mensagemErro);
      /* istanbul ignore next */
      cov_q5w5miydu().s[91]++;
      _sonner.toast.error(mensagemErro);
      /* istanbul ignore next */
      cov_q5w5miydu().s[92]++;
      throw error;
    } finally {
      /* istanbul ignore next */
      cov_q5w5miydu().s[93]++;
      setCarregando(false);
    }
  }, [fazerRequisicao, usuario, usuarios]));
  /**
  * Desativar usuário (soft delete)
  */
  const desativarUsuario =
  /* istanbul ignore next */
  (cov_q5w5miydu().s[94]++, (0, _react.useCallback)(async id => {
    /* istanbul ignore next */
    cov_q5w5miydu().f[12]++;
    cov_q5w5miydu().s[95]++;
    try {
      /* istanbul ignore next */
      cov_q5w5miydu().s[96]++;
      setCarregando(true);
      /* istanbul ignore next */
      cov_q5w5miydu().s[97]++;
      setErro(null);
      const dados =
      /* istanbul ignore next */
      (cov_q5w5miydu().s[98]++, await fazerRequisicao(`/api/usuarios/${id}`, {
        method: 'DELETE'
      }));
      /* istanbul ignore next */
      cov_q5w5miydu().s[99]++;
      _sonner.toast.success(
      /* istanbul ignore next */
      (cov_q5w5miydu().b[20][0]++, dados.mensagem) ||
      /* istanbul ignore next */
      (cov_q5w5miydu().b[20][1]++, 'Usuário desativado com sucesso'));
      // Atualizar lista local
      /* istanbul ignore next */
      cov_q5w5miydu().s[100]++;
      setUsuarios(prev => {
        /* istanbul ignore next */
        cov_q5w5miydu().f[13]++;
        cov_q5w5miydu().s[101]++;
        return prev.map(u => {
          /* istanbul ignore next */
          cov_q5w5miydu().f[14]++;
          cov_q5w5miydu().s[102]++;
          return u.id === id ?
          /* istanbul ignore next */
          (cov_q5w5miydu().b[21][0]++, {
            ...u,
            ativo: false
          }) :
          /* istanbul ignore next */
          (cov_q5w5miydu().b[21][1]++, u);
        });
      });
      // Atualizar usuário individual se for o mesmo
      /* istanbul ignore next */
      cov_q5w5miydu().s[103]++;
      if (usuario?.id === id) {
        /* istanbul ignore next */
        cov_q5w5miydu().b[22][0]++;
        cov_q5w5miydu().s[104]++;
        setUsuario(prev => {
          /* istanbul ignore next */
          cov_q5w5miydu().f[15]++;
          cov_q5w5miydu().s[105]++;
          return prev ?
          /* istanbul ignore next */
          (cov_q5w5miydu().b[23][0]++, {
            ...prev,
            ativo: false
          }) :
          /* istanbul ignore next */
          (cov_q5w5miydu().b[23][1]++, null);
        });
      } else
      /* istanbul ignore next */
      {
        cov_q5w5miydu().b[22][1]++;
      }
      cov_q5w5miydu().s[106]++;
      return dados.usuario;
    } catch (error) {
      const mensagemErro =
      /* istanbul ignore next */
      (cov_q5w5miydu().s[107]++, error instanceof Error ?
      /* istanbul ignore next */
      (cov_q5w5miydu().b[24][0]++, error.message) :
      /* istanbul ignore next */
      (cov_q5w5miydu().b[24][1]++, 'Erro ao desativar usuário'));
      /* istanbul ignore next */
      cov_q5w5miydu().s[108]++;
      setErro(mensagemErro);
      /* istanbul ignore next */
      cov_q5w5miydu().s[109]++;
      _sonner.toast.error(mensagemErro);
      /* istanbul ignore next */
      cov_q5w5miydu().s[110]++;
      throw error;
    } finally {
      /* istanbul ignore next */
      cov_q5w5miydu().s[111]++;
      setCarregando(false);
    }
  }, [fazerRequisicao, usuario, usuarios]));
  /**
  * Ativar usuário
  */
  const ativarUsuario =
  /* istanbul ignore next */
  (cov_q5w5miydu().s[112]++, (0, _react.useCallback)(async id => {
    /* istanbul ignore next */
    cov_q5w5miydu().f[16]++;
    cov_q5w5miydu().s[113]++;
    try {
      /* istanbul ignore next */
      cov_q5w5miydu().s[114]++;
      setCarregando(true);
      /* istanbul ignore next */
      cov_q5w5miydu().s[115]++;
      setErro(null);
      const dados =
      /* istanbul ignore next */
      (cov_q5w5miydu().s[116]++, await fazerRequisicao(`/api/usuarios/${id}/ativar`, {
        method: 'PATCH'
      }));
      /* istanbul ignore next */
      cov_q5w5miydu().s[117]++;
      _sonner.toast.success(
      /* istanbul ignore next */
      (cov_q5w5miydu().b[25][0]++, dados.mensagem) ||
      /* istanbul ignore next */
      (cov_q5w5miydu().b[25][1]++, 'Usuário ativado com sucesso'));
      // Atualizar lista local
      /* istanbul ignore next */
      cov_q5w5miydu().s[118]++;
      setUsuarios(prev => {
        /* istanbul ignore next */
        cov_q5w5miydu().f[17]++;
        cov_q5w5miydu().s[119]++;
        return prev.map(u => {
          /* istanbul ignore next */
          cov_q5w5miydu().f[18]++;
          cov_q5w5miydu().s[120]++;
          return u.id === id ?
          /* istanbul ignore next */
          (cov_q5w5miydu().b[26][0]++, {
            ...u,
            ativo: true
          }) :
          /* istanbul ignore next */
          (cov_q5w5miydu().b[26][1]++, u);
        });
      });
      // Atualizar usuário individual se for o mesmo
      /* istanbul ignore next */
      cov_q5w5miydu().s[121]++;
      if (usuario?.id === id) {
        /* istanbul ignore next */
        cov_q5w5miydu().b[27][0]++;
        cov_q5w5miydu().s[122]++;
        setUsuario(prev => {
          /* istanbul ignore next */
          cov_q5w5miydu().f[19]++;
          cov_q5w5miydu().s[123]++;
          return prev ?
          /* istanbul ignore next */
          (cov_q5w5miydu().b[28][0]++, {
            ...prev,
            ativo: true
          }) :
          /* istanbul ignore next */
          (cov_q5w5miydu().b[28][1]++, null);
        });
      } else
      /* istanbul ignore next */
      {
        cov_q5w5miydu().b[27][1]++;
      }
      cov_q5w5miydu().s[124]++;
      return dados.usuario;
    } catch (error) {
      const mensagemErro =
      /* istanbul ignore next */
      (cov_q5w5miydu().s[125]++, error instanceof Error ?
      /* istanbul ignore next */
      (cov_q5w5miydu().b[29][0]++, error.message) :
      /* istanbul ignore next */
      (cov_q5w5miydu().b[29][1]++, 'Erro ao ativar usuário'));
      /* istanbul ignore next */
      cov_q5w5miydu().s[126]++;
      setErro(mensagemErro);
      /* istanbul ignore next */
      cov_q5w5miydu().s[127]++;
      _sonner.toast.error(mensagemErro);
      /* istanbul ignore next */
      cov_q5w5miydu().s[128]++;
      throw error;
    } finally {
      /* istanbul ignore next */
      cov_q5w5miydu().s[129]++;
      setCarregando(false);
    }
  }, [fazerRequisicao, usuario, usuarios]));
  /**
  * Limpar estado
  */
  const limparEstado =
  /* istanbul ignore next */
  (cov_q5w5miydu().s[130]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_q5w5miydu().f[20]++;
    cov_q5w5miydu().s[131]++;
    setUsuarios([]);
    /* istanbul ignore next */
    cov_q5w5miydu().s[132]++;
    setUsuario(null);
    /* istanbul ignore next */
    cov_q5w5miydu().s[133]++;
    setPaginacao(null);
    /* istanbul ignore next */
    cov_q5w5miydu().s[134]++;
    setErro(null);
  }, []));
  /**
  * Verificar se o usuário atual pode gerenciar usuários
  */
  const podeGerenciarUsuarios =
  /* istanbul ignore next */
  (cov_q5w5miydu().s[135]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_q5w5miydu().f[21]++;
    cov_q5w5miydu().s[136]++;
    return /* istanbul ignore next */(cov_q5w5miydu().b[30][0]++, session?.user?.perfil) &&
    /* istanbul ignore next */
    (cov_q5w5miydu().b[30][1]++, ['ADMIN', 'GESTOR'].includes(session.user.perfil));
  }, [session]));
  /**
  * Verificar se pode editar usuário específico
  */
  const podeEditarUsuario =
  /* istanbul ignore next */
  (cov_q5w5miydu().s[137]++, (0, _react.useCallback)(idUsuario => {
    /* istanbul ignore next */
    cov_q5w5miydu().f[22]++;
    cov_q5w5miydu().s[138]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_q5w5miydu().b[31][0]++;
      cov_q5w5miydu().s[139]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_q5w5miydu().b[31][1]++;
    }
    // Pode editar próprios dados ou se for admin/gestor
    cov_q5w5miydu().s[140]++;
    return /* istanbul ignore next */(cov_q5w5miydu().b[32][0]++, session.user.id === idUsuario) ||
    /* istanbul ignore next */
    (cov_q5w5miydu().b[32][1]++, ['ADMIN', 'GESTOR'].includes(session.user.perfil));
  }, [session]));
  /* istanbul ignore next */
  cov_q5w5miydu().s[141]++;
  return {
    // Estado
    usuarios,
    usuario,
    paginacao,
    carregando,
    erro,
    // Ações
    listarUsuarios,
    buscarUsuario,
    criarUsuario,
    atualizarUsuario,
    desativarUsuario,
    ativarUsuario,
    limparEstado,
    // Utilitários
    podeGerenciarUsuarios,
    podeEditarUsuario
  };
}
const _default =
/* istanbul ignore next */
(cov_q5w5miydu().s[142]++, useUsuarios);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,