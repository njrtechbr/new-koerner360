{"version":3,"sources":["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\components\\__tests__\\lembretes\\lista-lembretes.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react';\nimport { describe, it, expect, beforeEach, afterEach } from '@jest/globals';\nimport { ListaLembretes } from '../../lembretes/lista-lembretes';\nimport { useLembretes } from '../../../hooks/use-lembretes';\nimport { useToast } from '../../../hooks/use-toast';\n// Tipos são importados do hook use-lembretes\n\n// Mock dos hooks\njest.mock('../../../hooks/use-lembretes');\njest.mock('../../../hooks/use-toast');\n\n// Mock dos lembretes de teste\nconst mockLembretes = [\n  {\n    id: '1',\n    usuarioId: 'user1',\n    avaliacaoId: 'aval1',\n    tipo: 'lembrete',\n    dataEnvio: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString(),\n    enviado: false,\n    tentativas: 0,\n    ultimaTentativa: undefined,\n    dataEnvioReal: undefined,\n    erro: undefined,\n    observacoes: undefined,\n    criadoEm: new Date().toISOString(),\n    atualizadoEm: new Date().toISOString(),\n    usuario: {\n      id: 'user1',\n      nome: 'João Silva',\n      email: 'joao@empresa.com',\n      cargo: 'Analista',\n    },\n    avaliacao: {\n      id: 'aval1',\n      prazo: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString(),\n      status: 'pendente',\n      avaliado: {\n        id: 'avaliado1',\n        nome: 'Pedro Avaliado',\n        cargo: 'Desenvolvedor',\n        email: 'pedro@empresa.com',\n      },\n      avaliador: {\n        id: 'avaliador1',\n        nome: 'Maria Avaliadora',\n        email: 'maria@empresa.com',\n      },\n      periodo: {\n        id: 'periodo1',\n        nome: 'Período Anual 2024',\n        dataInicio: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString(),\n        dataFim: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString(),\n      },\n    },\n  },\n  {\n    id: '2',\n    usuarioId: 'user2',\n    avaliacaoId: 'aval2',\n    tipo: 'vencimento',\n    dataEnvio: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(),\n    enviado: true,\n    tentativas: 1,\n    ultimaTentativa: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(),\n    dataEnvioReal: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(),\n    erro: undefined,\n    observacoes: undefined,\n    criadoEm: new Date().toISOString(),\n    atualizadoEm: new Date().toISOString(),\n    usuario: {\n      id: 'user2',\n      nome: 'Maria Santos',\n      email: 'maria@empresa.com',\n      cargo: 'Gerente',\n    },\n    avaliacao: {\n      id: 'aval2',\n      prazo: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString(),\n      status: 'em_andamento',\n      avaliado: {\n        id: 'avaliado2',\n        nome: 'Ana Avaliada',\n        cargo: 'Designer',\n        email: 'ana@empresa.com',\n      },\n      avaliador: {\n        id: 'avaliador2',\n        nome: 'Carlos Avaliador',\n        email: 'carlos@empresa.com',\n      },\n      periodo: {\n        id: 'periodo2',\n        nome: 'Período Trimestral Q4',\n        dataInicio: new Date(Date.now() - 60 * 24 * 60 * 60 * 1000).toISOString(),\n        dataFim: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString(),\n      },\n    },\n  },\n  {\n    id: '3',\n    usuarioId: 'user3',\n    avaliacaoId: 'aval3',\n    tipo: 'lembrete',\n    dataEnvio: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),\n    enviado: false,\n    tentativas: 3,\n    ultimaTentativa: new Date(Date.now() - 60 * 60 * 1000).toISOString(),\n    dataEnvioReal: undefined,\n    erro: 'Falha no envio de e-mail',\n    observacoes: 'Múltiplas tentativas falharam',\n    criadoEm: new Date().toISOString(),\n    atualizadoEm: new Date().toISOString(),\n    usuario: {\n      id: 'user3',\n      nome: 'Pedro Costa',\n      email: 'pedro@empresa.com',\n      cargo: 'Coordenador',\n    },\n    avaliacao: {\n      id: 'aval3',\n      prazo: new Date().toISOString(),\n      status: 'atrasada',\n      avaliado: {\n        id: 'avaliado3',\n        nome: 'Lucas Avaliado',\n        cargo: 'Analista Jr',\n        email: 'lucas@empresa.com',\n      },\n      avaliador: {\n        id: 'avaliador3',\n        nome: 'Fernanda Avaliadora',\n        email: 'fernanda@empresa.com',\n      },\n      periodo: {\n        id: 'periodo3',\n        nome: 'Período de Desempenho 2024',\n        dataInicio: new Date(Date.now() - 90 * 24 * 60 * 60 * 1000).toISOString(),\n        dataFim: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString(),\n      },\n    },\n  },\n];\n\nconst mockPaginacao = {\n  paginaAtual: 1,\n  totalPaginas: 1,\n  totalItens: 3,\n  itensPorPagina: 10,\n  temProximaPagina: false,\n  temPaginaAnterior: false,\n};\n\nconst mockHookReturn = {\n  lembretes: mockLembretes,\n  paginacao: mockPaginacao,\n  carregando: false,\n  erro: null,\n  buscarLembretes: jest.fn(),\n  executarAcaoLembrete: jest.fn(),\n  removerLembrete: jest.fn(),\n};\n\nconst mockToast = jest.fn();\n\ndescribe('ListaLembretes', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n    (useLembretes as any).mockReturnValue(mockHookReturn);\n    (useToast as any).mockReturnValue({ toast: mockToast });\n  });\n\n  afterEach(() => {\n    jest.resetAllMocks();\n  });\n\n  describe('Renderização', () => {\n    it('deve renderizar lista de lembretes', () => {\n      render(<ListaLembretes />);\n\n      expect(screen.getByText('Lembretes de Avaliação')).toBeInTheDocument();\n      expect(screen.getByText('João Silva')).toBeInTheDocument();\n      expect(screen.getByText('Maria Santos')).toBeInTheDocument();\n      expect(screen.getByText('Pedro Costa')).toBeInTheDocument();\n    });\n\n    it('deve exibir estado de carregamento', () => {\n      (useLembretes as any).mockReturnValue({\n        ...mockHookReturn,\n        carregando: true,\n        lembretes: [],\n      });\n\n      render(<ListaLembretes />);\n\n      expect(screen.getByText('Carregando lembretes...')).toBeInTheDocument();\n    });\n\n    it('deve exibir mensagem quando não há lembretes', () => {\n      (useLembretes as any).mockReturnValue({\n        ...mockHookReturn,\n        lembretes: [],\n        paginacao: {\n          ...mockPaginacao,\n          total: 0,\n        },\n      });\n\n      render(<ListaLembretes />);\n\n      expect(screen.getByText('Nenhum lembrete encontrado')).toBeInTheDocument();\n    });\n\n    it('deve exibir erro quando houver falha', () => {\n      const errorMessage = 'Erro ao carregar lembretes';\n      (useLembretes as any).mockReturnValue({\n        ...mockHookReturn,\n        erro: errorMessage,\n        lembretes: [],\n      });\n\n      render(<ListaLembretes />);\n\n      expect(screen.getByText(errorMessage)).toBeInTheDocument();\n    });\n  });\n\n  describe('Filtros', () => {\n    it('deve filtrar por tipo de lembrete', async () => {\n      render(<ListaLembretes />);\n\n      const filtroTipo = screen.getByLabelText('Tipo de lembrete');\n      fireEvent.change(filtroTipo, { target: { value: 'urgente' } });\n\n      await waitFor(() => {\n        expect(mockHookReturn.buscarLembretes).toHaveBeenCalledWith(\n          expect.objectContaining({\n            tipo: 'urgente',\n          })\n        );\n      });\n    });\n\n    it('deve filtrar por status', async () => {\n      render(<ListaLembretes />);\n\n      const filtroStatus = screen.getByLabelText('Status');\n      fireEvent.change(filtroStatus, { target: { value: 'pendente' } });\n\n      await waitFor(() => {\n        expect(mockHookReturn.buscarLembretes).toHaveBeenCalledWith(\n          expect.objectContaining({\n            status: 'pendente',\n          })\n        );\n      });\n    });\n\n    it('deve filtrar por usuário', async () => {\n      render(<ListaLembretes />);\n\n      const filtroUsuario = screen.getByLabelText('Usuário');\n      fireEvent.change(filtroUsuario, { target: { value: 'user1' } });\n\n      await waitFor(() => {\n        expect(mockHookReturn.buscarLembretes).toHaveBeenCalledWith(\n          expect.objectContaining({\n            usuarioId: 'user1',\n          })\n        );\n      });\n    });\n\n    it('deve filtrar por avaliação', async () => {\n      render(<ListaLembretes />);\n\n      const filtroAvaliacao = screen.getByLabelText('Avaliação');\n      fireEvent.change(filtroAvaliacao, { target: { value: 'aval1' } });\n\n      await waitFor(() => {\n        expect(mockHookReturn.buscarLembretes).toHaveBeenCalledWith(\n          expect.objectContaining({\n            avaliacaoId: 'aval1',\n          })\n        );\n      });\n    });\n\n    it('deve filtrar por período de data', async () => {\n      render(<ListaLembretes />);\n\n      const dataInicio = screen.getByLabelText('Data início');\n      const dataFim = screen.getByLabelText('Data fim');\n\n      fireEvent.change(dataInicio, { target: { value: '2024-01-01' } });\n      fireEvent.change(dataFim, { target: { value: '2024-12-31' } });\n\n      await waitFor(() => {\n        expect(mockHookReturn.buscarLembretes).toHaveBeenCalledWith(\n          expect.objectContaining({\n            dataInicio: '2024-01-01',\n            dataFim: '2024-12-31',\n          })\n        );\n      });\n    });\n\n    it('deve limpar filtros', async () => {\n      render(<ListaLembretes />);\n\n      // Aplicar filtros primeiro\n      const filtroTipo = screen.getByLabelText('Tipo de lembrete');\n      fireEvent.change(filtroTipo, { target: { value: 'urgente' } });\n\n      // Limpar filtros\n      const botaoLimpar = screen.getByText('Limpar Filtros');\n      fireEvent.click(botaoLimpar);\n\n      await waitFor(() => {\n        expect(mockHookReturn.buscarLembretes).toHaveBeenCalledWith({});\n      });\n    });\n  });\n\n  describe('Busca', () => {\n    it('deve buscar lembretes por texto', async () => {\n      render(<ListaLembretes />);\n\n      const campoBusca = screen.getByPlaceholderText('Buscar lembretes...');\n      fireEvent.change(campoBusca, { target: { value: 'João' } });\n\n      // Simular debounce\n      await waitFor(() => {\n        expect(mockHookReturn.buscarLembretes).toHaveBeenCalledWith(\n          expect.objectContaining({\n            busca: 'João',\n          })\n        );\n      }, { timeout: 1000 });\n    });\n\n    it('deve limpar busca', async () => {\n      render(<ListaLembretes />);\n\n      const campoBusca = screen.getByPlaceholderText('Buscar lembretes...');\n      fireEvent.change(campoBusca, { target: { value: 'João' } });\n      fireEvent.change(campoBusca, { target: { value: '' } });\n\n      await waitFor(() => {\n        expect(mockHookReturn.buscarLembretes).toHaveBeenCalledWith(\n          expect.objectContaining({\n            busca: '',\n          })\n        );\n      });\n    });\n  });\n\n  describe('Ações de Lembrete', () => {\n    it('deve reenviar lembrete', async () => {\n      mockHookReturn.reenviarLembrete.mockResolvedValueOnce(true);\n\n      render(<ListaLembretes />);\n\n      const botaoReenviar = screen.getAllByText('Reenviar')[0];\n      fireEvent.click(botaoReenviar);\n\n      await waitFor(() => {\n        expect(mockHookReturn.reenviarLembrete).toHaveBeenCalledWith('1');\n      });\n    });\n\n    it('deve marcar como enviado', async () => {\n      mockHookReturn.marcarComoEnviado.mockResolvedValueOnce(true);\n\n      render(<ListaLembretes />);\n\n      const botaoMarcar = screen.getAllByText('Marcar como Enviado')[0];\n      fireEvent.click(botaoMarcar);\n\n      await waitFor(() => {\n        expect(mockHookReturn.marcarComoEnviado).toHaveBeenCalledWith('1');\n      });\n    });\n\n    it('deve reagendar lembrete', async () => {\n      mockHookReturn.reagendarLembrete.mockResolvedValueOnce(true);\n\n      render(<ListaLembretes />);\n\n      const botaoReagendar = screen.getAllByText('Reagendar')[0];\n      fireEvent.click(botaoReagendar);\n\n      // Preencher nova data\n      const inputData = screen.getByLabelText('Nova data de envio');\n      fireEvent.change(inputData, { target: { value: '2024-12-31T10:00' } });\n\n      const botaoConfirmar = screen.getByText('Confirmar');\n      fireEvent.click(botaoConfirmar);\n\n      await waitFor(() => {\n        expect(mockHookReturn.reagendarLembrete).toHaveBeenCalledWith(\n          '1',\n          '2024-12-31T10:00'\n        );\n      });\n    });\n\n    it('deve remover lembrete', async () => {\n      mockHookReturn.removerLembrete.mockResolvedValueOnce(true);\n      window.confirm = jest.fn(() => true);\n\n      render(<ListaLembretes />);\n\n      const botaoRemover = screen.getAllByText('Remover')[0];\n      fireEvent.click(botaoRemover);\n\n      await waitFor(() => {\n        expect(mockHookReturn.removerLembrete).toHaveBeenCalledWith('1');\n      });\n    });\n\n    it('deve cancelar remoção se usuário não confirmar', async () => {\n      window.confirm = jest.fn(() => false);\n\n      render(<ListaLembretes />);\n\n      const botaoRemover = screen.getAllByText('Remover')[0];\n      fireEvent.click(botaoRemover);\n\n      expect(mockHookReturn.removerLembrete).not.toHaveBeenCalled();\n    });\n  });\n\n  describe('Ações em Lote', () => {\n    it('deve selecionar lembretes', () => {\n      render(<ListaLembretes />);\n\n      const checkbox1 = screen.getByLabelText('Selecionar lembrete 1');\n      const checkbox2 = screen.getByLabelText('Selecionar lembrete 2');\n\n      fireEvent.click(checkbox1);\n      fireEvent.click(checkbox2);\n\n      expect(checkbox1).toBeChecked();\n      expect(checkbox2).toBeChecked();\n    });\n\n    it('deve selecionar todos os lembretes', () => {\n      render(<ListaLembretes />);\n\n      const checkboxTodos = screen.getByLabelText('Selecionar todos');\n      fireEvent.click(checkboxTodos);\n\n      const checkboxes = screen.getAllByRole('checkbox');\n      checkboxes.forEach(checkbox => {\n        expect(checkbox).toBeChecked();\n      });\n    });\n\n    it('deve remover lembretes selecionados', async () => {\n      mockHookReturn.removerLembretes.mockResolvedValueOnce({ removidos: 2 });\n      window.confirm = jest.fn(() => true);\n\n      render(<ListaLembretes />);\n\n      // Selecionar lembretes\n      const checkbox1 = screen.getByLabelText('Selecionar lembrete 1');\n      const checkbox2 = screen.getByLabelText('Selecionar lembrete 2');\n      fireEvent.click(checkbox1);\n      fireEvent.click(checkbox2);\n\n      // Remover selecionados\n      const botaoRemoverSelecionados = screen.getByText('Remover Selecionados');\n      fireEvent.click(botaoRemoverSelecionados);\n\n      await waitFor(() => {\n        expect(mockHookReturn.removerLembretes).toHaveBeenCalledWith(['1', '2']);\n      });\n    });\n\n    it('deve reenviar lembretes selecionados', async () => {\n      render(<ListaLembretes />);\n\n      // Selecionar lembretes\n      const checkbox1 = screen.getByLabelText('Selecionar lembrete 1');\n      fireEvent.click(checkbox1);\n\n      // Reenviar selecionados\n      const botaoReenviarSelecionados = screen.getByText('Reenviar Selecionados');\n      fireEvent.click(botaoReenviarSelecionados);\n\n      await waitFor(() => {\n        expect(mockHookReturn.reenviarLembrete).toHaveBeenCalledWith('1');\n      });\n    });\n  });\n\n  describe('Paginação', () => {\n    it('deve navegar para próxima página', async () => {\n      (useLembretes as any).mockReturnValue({\n        ...mockHookReturn,\n        paginacao: {\n          ...mockPaginacao,\n          pagina: 1,\n          totalPaginas: 3,\n        },\n      });\n\n      render(<ListaLembretes />);\n\n      const botaoProxima = screen.getByText('Próxima');\n      fireEvent.click(botaoProxima);\n\n      await waitFor(() => {\n        expect(mockHookReturn.buscarLembretes).toHaveBeenCalledWith(\n          expect.objectContaining({\n            pagina: 2,\n          })\n        );\n      });\n    });\n\n    it('deve navegar para página anterior', async () => {\n      (useLembretes as any).mockReturnValue({\n        ...mockHookReturn,\n        paginacao: {\n          ...mockPaginacao,\n          pagina: 2,\n          totalPaginas: 3,\n        },\n      });\n\n      render(<ListaLembretes />);\n\n      const botaoAnterior = screen.getByText('Anterior');\n      fireEvent.click(botaoAnterior);\n\n      await waitFor(() => {\n        expect(mockHookReturn.buscarLembretes).toHaveBeenCalledWith(\n          expect.objectContaining({\n            pagina: 1,\n          })\n        );\n      });\n    });\n\n    it('deve alterar limite por página', async () => {\n      render(<ListaLembretes />);\n\n      const seletorLimite = screen.getByLabelText('Itens por página');\n      fireEvent.change(seletorLimite, { target: { value: '25' } });\n\n      await waitFor(() => {\n        expect(mockHookReturn.buscarLembretes).toHaveBeenCalledWith(\n          expect.objectContaining({\n            limite: 25,\n            pagina: 1, // Reset para primeira página\n          })\n        );\n      });\n    });\n  });\n\n  describe('Ordenação', () => {\n    it('deve ordenar por data de envio', async () => {\n      render(<ListaLembretes />);\n\n      const cabecalhoData = screen.getByText('Data de Envio');\n      fireEvent.click(cabecalhoData);\n\n      await waitFor(() => {\n        expect(mockHookReturn.buscarLembretes).toHaveBeenCalledWith(\n          expect.objectContaining({\n            ordenarPor: 'dataEnvio',\n            ordem: 'asc',\n          })\n        );\n      });\n    });\n\n    it('deve alternar ordem de classificação', async () => {\n      render(<ListaLembretes />);\n\n      const cabecalhoData = screen.getByText('Data de Envio');\n      \n      // Primeira clique - ASC\n      fireEvent.click(cabecalhoData);\n      \n      await waitFor(() => {\n        expect(mockHookReturn.buscarLembretes).toHaveBeenCalledWith(\n          expect.objectContaining({\n            ordem: 'asc',\n          })\n        );\n      });\n\n      // Segunda clique - DESC\n      fireEvent.click(cabecalhoData);\n      \n      await waitFor(() => {\n        expect(mockHookReturn.buscarLembretes).toHaveBeenCalledWith(\n          expect.objectContaining({\n            ordem: 'desc',\n          })\n        );\n      });\n    });\n\n    it('deve ordenar por diferentes campos', async () => {\n      render(<ListaLembretes />);\n\n      const cabecalhoUsuario = screen.getByText('Usuário');\n      fireEvent.click(cabecalhoUsuario);\n\n      await waitFor(() => {\n        expect(mockHookReturn.buscarLembretes).toHaveBeenCalledWith(\n          expect.objectContaining({\n            ordenarPor: 'nomeUsuario',\n          })\n        );\n      });\n    });\n  });\n\n  describe('Exibição de Dados', () => {\n    it('deve exibir informações do lembrete corretamente', () => {\n      render(<ListaLembretes />);\n\n      // Verificar dados do primeiro lembrete\n      expect(screen.getByText('João Silva')).toBeInTheDocument();\n      expect(screen.getByText('joao@empresa.com')).toBeInTheDocument();\n      expect(screen.getByText('Avaliação Anual 2024')).toBeInTheDocument();\n      expect(screen.getByText('Aviso')).toBeInTheDocument();\n      expect(screen.getByText('Pendente')).toBeInTheDocument();\n    });\n\n    it('deve exibir badges de status corretamente', () => {\n      render(<ListaLembretes />);\n\n      expect(screen.getByText('Pendente')).toHaveClass('badge-warning');\n      expect(screen.getByText('Enviado')).toHaveClass('badge-success');\n      expect(screen.getByText('Falhou')).toHaveClass('badge-destructive');\n    });\n\n    it('deve exibir badges de tipo corretamente', () => {\n      render(<ListaLembretes />);\n\n      expect(screen.getByText('Aviso')).toHaveClass('badge-secondary');\n      expect(screen.getByText('Urgente')).toHaveClass('badge-warning');\n      expect(screen.getByText('Crítico')).toHaveClass('badge-destructive');\n    });\n\n    it('deve exibir informações de tentativas', () => {\n      render(<ListaLembretes />);\n\n      expect(screen.getByText('0 tentativas')).toBeInTheDocument();\n      expect(screen.getByText('1 tentativa')).toBeInTheDocument();\n      expect(screen.getByText('3 tentativas')).toBeInTheDocument();\n    });\n\n    it('deve exibir mensagem de erro quando presente', () => {\n      render(<ListaLembretes />);\n\n      expect(screen.getByText('Falha no envio de e-mail')).toBeInTheDocument();\n    });\n  });\n\n  describe('Atualização Automática', () => {\n    it('deve atualizar lista após ações', async () => {\n      mockHookReturn.reenviarLembrete.mockResolvedValueOnce(true);\n\n      render(<ListaLembretes />);\n\n      const botaoReenviar = screen.getAllByText('Reenviar')[0];\n      fireEvent.click(botaoReenviar);\n\n      await waitFor(() => {\n        expect(mockHookReturn.buscarLembretes).toHaveBeenCalledTimes(2); // Initial + after action\n      });\n    });\n\n    it('deve atualizar automaticamente a cada 30 segundos', async () => {\n      jest.useFakeTimers();\n\n      render(<ListaLembretes />);\n\n      // Avançar 30 segundos\n      jest.advanceTimersByTime(30000);\n\n      await waitFor(() => {\n        expect(mockHookReturn.buscarLembretes).toHaveBeenCalledTimes(2);\n      });\n\n      jest.useRealTimers();\n    });\n  });\n\n  describe('Estados de Erro', () => {\n    it('deve exibir erro ao falhar ao reenviar', async () => {\n      mockHookReturn.reenviarLembrete.mockRejectedValueOnce(new Error('Erro de rede'));\n\n      render(<ListaLembretes />);\n\n      const botaoReenviar = screen.getAllByText('Reenviar')[0];\n      fireEvent.click(botaoReenviar);\n\n      await waitFor(() => {\n        expect(mockToast).toHaveBeenCalledWith(\n          expect.objectContaining({\n            title: 'Erro',\n            variant: 'destructive',\n          })\n        );\n      });\n    });\n\n    it('deve exibir erro ao falhar ao remover', async () => {\n      mockHookReturn.removerLembrete.mockRejectedValueOnce(new Error('Erro de rede'));\n      window.confirm = jest.fn(() => true);\n\n      render(<ListaLembretes />);\n\n      const botaoRemover = screen.getAllByText('Remover')[0];\n      fireEvent.click(botaoRemover);\n\n      await waitFor(() => {\n        expect(mockToast).toHaveBeenCalledWith(\n          expect.objectContaining({\n            title: 'Erro',\n            variant: 'destructive',\n          })\n        );\n      });\n    });\n  });\n\n  describe('Acessibilidade', () => {\n    it('deve ter labels apropriados para screen readers', () => {\n      render(<ListaLembretes />);\n\n      expect(screen.getByLabelText('Tipo de lembrete')).toBeInTheDocument();\n      expect(screen.getByLabelText('Status')).toBeInTheDocument();\n      expect(screen.getByLabelText('Selecionar todos')).toBeInTheDocument();\n    });\n\n    it('deve ter navegação por teclado funcional', () => {\n      render(<ListaLembretes />);\n\n      const filtroTipo = screen.getByLabelText('Tipo de lembrete');\n      filtroTipo.focus();\n      expect(document.activeElement).toBe(filtroTipo);\n    });\n\n    it('deve ter descrições adequadas para ações', () => {\n      render(<ListaLembretes />);\n\n      expect(screen.getByLabelText('Reenviar lembrete para João Silva')).toBeInTheDocument();\n    });\n  });\n\n  describe('Responsividade', () => {\n    it('deve adaptar layout para telas pequenas', () => {\n      // Mock window.innerWidth\n      Object.defineProperty(window, 'innerWidth', {\n        writable: true,\n        configurable: true,\n        value: 768,\n      });\n\n      render(<ListaLembretes />);\n\n      // Verificar se colunas menos importantes estão ocultas\n      expect(screen.queryByText('Tentativas')).not.toBeInTheDocument();\n    });\n\n    it('deve mostrar todas as colunas em telas grandes', () => {\n      Object.defineProperty(window, 'innerWidth', {\n        writable: true,\n        configurable: true,\n        value: 1200,\n      });\n\n      render(<ListaLembretes />);\n\n      expect(screen.getByText('Tentativas')).toBeInTheDocument();\n      expect(screen.getByText('Última Tentativa')).toBeInTheDocument();\n    });\n  });\n});"],"names":["jest","mock","mockLembretes","id","usuarioId","avaliacaoId","tipo","dataEnvio","Date","now","toISOString","enviado","tentativas","ultimaTentativa","undefined","dataEnvioReal","erro","observacoes","criadoEm","atualizadoEm","usuario","nome","email","cargo","avaliacao","prazo","status","avaliado","avaliador","periodo","dataInicio","dataFim","mockPaginacao","paginaAtual","totalPaginas","totalItens","itensPorPagina","temProximaPagina","temPaginaAnterior","mockHookReturn","lembretes","paginacao","carregando","buscarLembretes","fn","executarAcaoLembrete","removerLembrete","mockToast","describe","beforeEach","clearAllMocks","useLembretes","mockReturnValue","useToast","toast","afterEach","resetAllMocks","it","render","ListaLembretes","expect","screen","getByText","toBeInTheDocument","total","errorMessage","filtroTipo","getByLabelText","fireEvent","change","target","value","waitFor","toHaveBeenCalledWith","objectContaining","filtroStatus","filtroUsuario","filtroAvaliacao","botaoLimpar","click","campoBusca","getByPlaceholderText","busca","timeout","reenviarLembrete","mockResolvedValueOnce","botaoReenviar","getAllByText","marcarComoEnviado","botaoMarcar","reagendarLembrete","botaoReagendar","inputData","botaoConfirmar","window","confirm","botaoRemover","not","toHaveBeenCalled","checkbox1","checkbox2","toBeChecked","checkboxTodos","checkboxes","getAllByRole","forEach","checkbox","removerLembretes","removidos","botaoRemoverSelecionados","botaoReenviarSelecionados","pagina","botaoProxima","botaoAnterior","seletorLimite","limite","cabecalhoData","ordenarPor","ordem","cabecalhoUsuario","toHaveClass","toHaveBeenCalledTimes","useFakeTimers","advanceTimersByTime","useRealTimers","mockRejectedValueOnce","Error","title","variant","focus","document","activeElement","toBe","Object","defineProperty","writable","configurable","queryByText"],"mappings":"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"}