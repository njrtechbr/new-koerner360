a32af0aa16718bfd581fe3200e118935
"use strict";

/* istanbul ignore next */
function cov_29axsrvgw() {
  var path = "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\notificacoes\\email\\configuracao\\route.ts";
  var hash = "2a262f47661529011f14dfc24ed299000c7ef764";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\notificacoes\\email\\configuracao\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 24,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 22
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 19
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 20
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 19
        }
      },
      "8": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 38
        }
      },
      "9": {
        start: {
          line: 26,
          column: 13
        },
        end: {
          line: 26,
          column: 27
        }
      },
      "10": {
        start: {
          line: 27,
          column: 14
        },
        end: {
          line: 27,
          column: 48
        }
      },
      "11": {
        start: {
          line: 28,
          column: 16
        },
        end: {
          line: 28,
          column: 52
        }
      },
      "12": {
        start: {
          line: 29,
          column: 20
        },
        end: {
          line: 29,
          column: 66
        }
      },
      "13": {
        start: {
          line: 31,
          column: 32
        },
        end: {
          line: 51,
          column: 2
        }
      },
      "14": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 148,
          column: 5
        }
      },
      "15": {
        start: {
          line: 54,
          column: 24
        },
        end: {
          line: 54,
          column: 47
        }
      },
      "16": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 61,
          column: 9
        }
      },
      "17": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 60,
          column: 15
        }
      },
      "18": {
        start: {
          line: 62,
          column: 33
        },
        end: {
          line: 62,
          column: 53
        }
      },
      "19": {
        start: {
          line: 63,
          column: 26
        },
        end: {
          line: 63,
          column: 74
        }
      },
      "20": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 77,
          column: 9
        }
      },
      "21": {
        start: {
          line: 66,
          column: 33
        },
        end: {
          line: 69,
          column: 14
        }
      },
      "22": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 76,
          column: 13
        }
      },
      "23": {
        start: {
          line: 71,
          column: 16
        },
        end: {
          line: 75,
          column: 19
        }
      },
      "24": {
        start: {
          line: 79,
          column: 29
        },
        end: {
          line: 92,
          column: 10
        }
      },
      "25": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 136,
          column: 9
        }
      },
      "26": {
        start: {
          line: 95,
          column: 28
        },
        end: {
          line: 104,
          column: 14
        }
      },
      "27": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 111,
          column: 13
        }
      },
      "28": {
        start: {
          line: 106,
          column: 16
        },
        end: {
          line: 110,
          column: 19
        }
      },
      "29": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 135,
          column: 15
        }
      },
      "30": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 140,
          column: 11
        }
      },
      "31": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 142,
          column: 71
        }
      },
      "32": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 147,
          column: 11
        }
      },
      "33": {
        start: {
          line: 151,
          column: 4
        },
        end: {
          line: 238,
          column: 5
        }
      },
      "34": {
        start: {
          line: 152,
          column: 24
        },
        end: {
          line: 152,
          column: 47
        }
      },
      "35": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 159,
          column: 9
        }
      },
      "36": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 158,
          column: 15
        }
      },
      "37": {
        start: {
          line: 160,
          column: 21
        },
        end: {
          line: 160,
          column: 41
        }
      },
      "38": {
        start: {
          line: 161,
          column: 52
        },
        end: {
          line: 161,
          column: 56
        }
      },
      "39": {
        start: {
          line: 162,
          column: 28
        },
        end: {
          line: 162,
          column: 56
        }
      },
      "40": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 176,
          column: 9
        }
      },
      "41": {
        start: {
          line: 165,
          column: 33
        },
        end: {
          line: 168,
          column: 14
        }
      },
      "42": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 175,
          column: 13
        }
      },
      "43": {
        start: {
          line: 170,
          column: 16
        },
        end: {
          line: 174,
          column: 19
        }
      },
      "44": {
        start: {
          line: 178,
          column: 31
        },
        end: {
          line: 178,
          column: 79
        }
      },
      "45": {
        start: {
          line: 180,
          column: 24
        },
        end: {
          line: 184,
          column: 10
        }
      },
      "46": {
        start: {
          line: 185,
          column: 8
        },
        end: {
          line: 191,
          column: 9
        }
      },
      "47": {
        start: {
          line: 186,
          column: 12
        },
        end: {
          line: 190,
          column: 15
        }
      },
      "48": {
        start: {
          line: 193,
          column: 29
        },
        end: {
          line: 215,
          column: 10
        }
      },
      "49": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 219,
          column: 11
        }
      },
      "50": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 231,
          column: 9
        }
      },
      "51": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 230,
          column: 15
        }
      },
      "52": {
        start: {
          line: 224,
          column: 51
        },
        end: {
          line: 227,
          column: 21
        }
      },
      "53": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 232,
          column: 74
        }
      },
      "54": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 237,
          column: 11
        }
      },
      "55": {
        start: {
          line: 241,
          column: 4
        },
        end: {
          line: 335,
          column: 5
        }
      },
      "56": {
        start: {
          line: 242,
          column: 24
        },
        end: {
          line: 242,
          column: 47
        }
      },
      "57": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 249,
          column: 9
        }
      },
      "58": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 248,
          column: 15
        }
      },
      "59": {
        start: {
          line: 250,
          column: 21
        },
        end: {
          line: 250,
          column: 41
        }
      },
      "60": {
        start: {
          line: 251,
          column: 52
        },
        end: {
          line: 251,
          column: 56
        }
      },
      "61": {
        start: {
          line: 252,
          column: 28
        },
        end: {
          line: 252,
          column: 56
        }
      },
      "62": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 265,
          column: 9
        }
      },
      "63": {
        start: {
          line: 255,
          column: 33
        },
        end: {
          line: 257,
          column: 14
        }
      },
      "64": {
        start: {
          line: 258,
          column: 12
        },
        end: {
          line: 264,
          column: 13
        }
      },
      "65": {
        start: {
          line: 259,
          column: 16
        },
        end: {
          line: 263,
          column: 19
        }
      },
      "66": {
        start: {
          line: 267,
          column: 31
        },
        end: {
          line: 267,
          column: 79
        }
      },
      "67": {
        start: {
          line: 269,
          column: 38
        },
        end: {
          line: 273,
          column: 10
        }
      },
      "68": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 280,
          column: 9
        }
      },
      "69": {
        start: {
          line: 275,
          column: 12
        },
        end: {
          line: 279,
          column: 15
        }
      },
      "70": {
        start: {
          line: 282,
          column: 24
        },
        end: {
          line: 286,
          column: 10
        }
      },
      "71": {
        start: {
          line: 287,
          column: 8
        },
        end: {
          line: 293,
          column: 9
        }
      },
      "72": {
        start: {
          line: 288,
          column: 12
        },
        end: {
          line: 292,
          column: 15
        }
      },
      "73": {
        start: {
          line: 295,
          column: 29
        },
        end: {
          line: 310,
          column: 10
        }
      },
      "74": {
        start: {
          line: 311,
          column: 8
        },
        end: {
          line: 316,
          column: 11
        }
      },
      "75": {
        start: {
          line: 318,
          column: 8
        },
        end: {
          line: 328,
          column: 9
        }
      },
      "76": {
        start: {
          line: 319,
          column: 12
        },
        end: {
          line: 327,
          column: 15
        }
      },
      "77": {
        start: {
          line: 321,
          column: 51
        },
        end: {
          line: 324,
          column: 21
        }
      },
      "78": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 329,
          column: 70
        }
      },
      "79": {
        start: {
          line: 330,
          column: 8
        },
        end: {
          line: 334,
          column: 11
        }
      },
      "80": {
        start: {
          line: 338,
          column: 4
        },
        end: {
          line: 397,
          column: 5
        }
      },
      "81": {
        start: {
          line: 339,
          column: 24
        },
        end: {
          line: 339,
          column: 47
        }
      },
      "82": {
        start: {
          line: 340,
          column: 8
        },
        end: {
          line: 346,
          column: 9
        }
      },
      "83": {
        start: {
          line: 341,
          column: 12
        },
        end: {
          line: 345,
          column: 15
        }
      },
      "84": {
        start: {
          line: 347,
          column: 33
        },
        end: {
          line: 347,
          column: 53
        }
      },
      "85": {
        start: {
          line: 348,
          column: 26
        },
        end: {
          line: 348,
          column: 74
        }
      },
      "86": {
        start: {
          line: 350,
          column: 8
        },
        end: {
          line: 361,
          column: 9
        }
      },
      "87": {
        start: {
          line: 351,
          column: 33
        },
        end: {
          line: 353,
          column: 14
        }
      },
      "88": {
        start: {
          line: 354,
          column: 12
        },
        end: {
          line: 360,
          column: 13
        }
      },
      "89": {
        start: {
          line: 355,
          column: 16
        },
        end: {
          line: 359,
          column: 19
        }
      },
      "90": {
        start: {
          line: 363,
          column: 29
        },
        end: {
          line: 367,
          column: 10
        }
      },
      "91": {
        start: {
          line: 368,
          column: 8
        },
        end: {
          line: 374,
          column: 9
        }
      },
      "92": {
        start: {
          line: 369,
          column: 12
        },
        end: {
          line: 373,
          column: 15
        }
      },
      "93": {
        start: {
          line: 376,
          column: 39
        },
        end: {
          line: 385,
          column: 10
        }
      },
      "94": {
        start: {
          line: 386,
          column: 8
        },
        end: {
          line: 389,
          column: 11
        }
      },
      "95": {
        start: {
          line: 391,
          column: 8
        },
        end: {
          line: 391,
          column: 74
        }
      },
      "96": {
        start: {
          line: 392,
          column: 8
        },
        end: {
          line: 396,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 18
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 15
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 16
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 15
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "GET",
        decl: {
          start: {
            line: 52,
            column: 15
          },
          end: {
            line: 52,
            column: 18
          }
        },
        loc: {
          start: {
            line: 52,
            column: 28
          },
          end: {
            line: 149,
            column: 1
          }
        },
        line: 52
      },
      "6": {
        name: "PUT",
        decl: {
          start: {
            line: 150,
            column: 15
          },
          end: {
            line: 150,
            column: 18
          }
        },
        loc: {
          start: {
            line: 150,
            column: 28
          },
          end: {
            line: 239,
            column: 1
          }
        },
        line: 150
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 224,
            column: 43
          },
          end: {
            line: 224,
            column: 44
          }
        },
        loc: {
          start: {
            line: 224,
            column: 51
          },
          end: {
            line: 227,
            column: 21
          }
        },
        line: 224
      },
      "8": {
        name: "POST",
        decl: {
          start: {
            line: 240,
            column: 15
          },
          end: {
            line: 240,
            column: 19
          }
        },
        loc: {
          start: {
            line: 240,
            column: 29
          },
          end: {
            line: 336,
            column: 1
          }
        },
        line: 240
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 321,
            column: 43
          },
          end: {
            line: 321,
            column: 44
          }
        },
        loc: {
          start: {
            line: 321,
            column: 51
          },
          end: {
            line: 324,
            column: 21
          }
        },
        line: 321
      },
      "10": {
        name: "DELETE",
        decl: {
          start: {
            line: 337,
            column: 15
          },
          end: {
            line: 337,
            column: 21
          }
        },
        loc: {
          start: {
            line: 337,
            column: 31
          },
          end: {
            line: 398,
            column: 1
          }
        },
        line: 337
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 61,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 61,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "1": {
        loc: {
          start: {
            line: 63,
            column: 26
          },
          end: {
            line: 63,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 26
          },
          end: {
            line: 63,
            column: 55
          }
        }, {
          start: {
            line: 63,
            column: 59
          },
          end: {
            line: 63,
            column: 74
          }
        }],
        line: 63
      },
      "2": {
        loc: {
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "3": {
        loc: {
          start: {
            line: 70,
            column: 12
          },
          end: {
            line: 76,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 12
          },
          end: {
            line: 76,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "4": {
        loc: {
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "5": {
        loc: {
          start: {
            line: 105,
            column: 12
          },
          end: {
            line: 111,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 12
          },
          end: {
            line: 111,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "6": {
        loc: {
          start: {
            line: 153,
            column: 8
          },
          end: {
            line: 159,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 8
          },
          end: {
            line: 159,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 153
      },
      "7": {
        loc: {
          start: {
            line: 162,
            column: 28
          },
          end: {
            line: 162,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 162,
            column: 28
          },
          end: {
            line: 162,
            column: 37
          }
        }, {
          start: {
            line: 162,
            column: 41
          },
          end: {
            line: 162,
            column: 56
          }
        }],
        line: 162
      },
      "8": {
        loc: {
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 176,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 176,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 164
      },
      "9": {
        loc: {
          start: {
            line: 169,
            column: 12
          },
          end: {
            line: 175,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 169,
            column: 12
          },
          end: {
            line: 175,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 169
      },
      "10": {
        loc: {
          start: {
            line: 185,
            column: 8
          },
          end: {
            line: 191,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 185,
            column: 8
          },
          end: {
            line: 191,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 185
      },
      "11": {
        loc: {
          start: {
            line: 221,
            column: 8
          },
          end: {
            line: 231,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 221,
            column: 8
          },
          end: {
            line: 231,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 221
      },
      "12": {
        loc: {
          start: {
            line: 243,
            column: 8
          },
          end: {
            line: 249,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 243,
            column: 8
          },
          end: {
            line: 249,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 243
      },
      "13": {
        loc: {
          start: {
            line: 252,
            column: 28
          },
          end: {
            line: 252,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 252,
            column: 28
          },
          end: {
            line: 252,
            column: 37
          }
        }, {
          start: {
            line: 252,
            column: 41
          },
          end: {
            line: 252,
            column: 56
          }
        }],
        line: 252
      },
      "14": {
        loc: {
          start: {
            line: 254,
            column: 8
          },
          end: {
            line: 265,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 254,
            column: 8
          },
          end: {
            line: 265,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 254
      },
      "15": {
        loc: {
          start: {
            line: 258,
            column: 12
          },
          end: {
            line: 264,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 258,
            column: 12
          },
          end: {
            line: 264,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 258
      },
      "16": {
        loc: {
          start: {
            line: 274,
            column: 8
          },
          end: {
            line: 280,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 274,
            column: 8
          },
          end: {
            line: 280,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 274
      },
      "17": {
        loc: {
          start: {
            line: 287,
            column: 8
          },
          end: {
            line: 293,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 287,
            column: 8
          },
          end: {
            line: 293,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 287
      },
      "18": {
        loc: {
          start: {
            line: 318,
            column: 8
          },
          end: {
            line: 328,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 318,
            column: 8
          },
          end: {
            line: 328,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 318
      },
      "19": {
        loc: {
          start: {
            line: 340,
            column: 8
          },
          end: {
            line: 346,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 340,
            column: 8
          },
          end: {
            line: 346,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 340
      },
      "20": {
        loc: {
          start: {
            line: 348,
            column: 26
          },
          end: {
            line: 348,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 348,
            column: 26
          },
          end: {
            line: 348,
            column: 55
          }
        }, {
          start: {
            line: 348,
            column: 59
          },
          end: {
            line: 348,
            column: 74
          }
        }],
        line: 348
      },
      "21": {
        loc: {
          start: {
            line: 350,
            column: 8
          },
          end: {
            line: 361,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 350,
            column: 8
          },
          end: {
            line: 361,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 350
      },
      "22": {
        loc: {
          start: {
            line: 354,
            column: 12
          },
          end: {
            line: 360,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 354,
            column: 12
          },
          end: {
            line: 360,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 354
      },
      "23": {
        loc: {
          start: {
            line: 368,
            column: 8
          },
          end: {
            line: 374,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 368,
            column: 8
          },
          end: {
            line: 374,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 368
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\notificacoes\\email\\configuracao\\route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { z } from 'zod';\nimport { auth } from '@/lib/auth';\nimport { prisma } from '@/lib/prisma';\nimport { verificarPermissao } from '@/lib/utils/permissoes';\n\n// Schema de valida\xE7\xE3o para configura\xE7\xE3o de e-mail\nconst configuracaoEmailSchema = z.object({\n  emailsAtivos: z.boolean(),\n  emailPrincipal: z.string().email().optional(),\n  emailsAdicionais: z.array(z.string().email()).optional(),\n  frequenciaNotificacao: z.enum(['imediata', 'diaria', 'semanal']),\n  tiposNotificacao: z.object({\n    avaliacaoPendente: z.boolean(),\n    lembreteVencimento: z.boolean(),\n    avaliacaoVencida: z.boolean(),\n    resumoSemanal: z.boolean(),\n  }),\n  horarioPreferido: z.string().regex(/^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/),\n  diasAntecedencia: z.number().min(1).max(30),\n  formatoHtml: z.boolean(),\n  incluirResumo: z.boolean(),\n  assinaturaPersonalizada: z.string().max(500).optional(),\n});\n\n// GET - Buscar configura\xE7\xE3o de e-mail do usu\xE1rio\nexport async function GET(request: NextRequest) {\n  try {\n    const session = await auth();\n    if (!session?.user?.id) {\n      return NextResponse.json(\n        { erro: 'Usu\xE1rio n\xE3o autenticado' },\n        { status: 401 }\n      );\n    }\n\n    const { searchParams } = new URL(request.url);\n    const usuarioId = searchParams.get('usuarioId') || session.user.id;\n\n    // Verificar permiss\xF5es\n    if (usuarioId !== session.user.id) {\n      const temPermissao = await verificarPermissao(\n        session.user.id,\n        ['ADMIN', 'GESTOR']\n      );\n      \n      if (!temPermissao) {\n        return NextResponse.json(\n          { erro: 'Sem permiss\xE3o para acessar configura\xE7\xF5es de outro usu\xE1rio' },\n          { status: 403 }\n        );\n      }\n    }\n\n    // Buscar configura\xE7\xE3o existente\n    const configuracao = await prisma.configuracaoEmailNotificacao.findUnique({\n      where: { usuarioId },\n      include: {\n        usuario: {\n          select: {\n            id: true,\n            nome: true,\n            email: true,\n          },\n        },\n      },\n    });\n\n    if (!configuracao) {\n      // Retornar configura\xE7\xE3o padr\xE3o se n\xE3o existir\n      const usuario = await prisma.usuario.findUnique({\n        where: { id: usuarioId },\n        select: { id: true, nome: true, email: true },\n      });\n\n      if (!usuario) {\n        return NextResponse.json(\n          { erro: 'Usu\xE1rio n\xE3o encontrado' },\n          { status: 404 }\n        );\n      }\n\n      return NextResponse.json({\n        configuracao: {\n          usuarioId,\n          emailsAtivos: false,\n          emailPrincipal: usuario.email,\n          emailsAdicionais: [],\n          frequenciaNotificacao: 'diaria',\n          tiposNotificacao: {\n            avaliacaoPendente: true,\n            lembreteVencimento: true,\n            avaliacaoVencida: true,\n            resumoSemanal: false,\n          },\n          horarioPreferido: '09:00',\n          diasAntecedencia: 3,\n          formatoHtml: true,\n          incluirResumo: true,\n          assinaturaPersonalizada: null,\n          ativo: true,\n          criadoEm: new Date(),\n          atualizadoEm: new Date(),\n        },\n        usuario,\n      });\n    }\n\n    return NextResponse.json({\n      configuracao,\n      usuario: configuracao.usuario,\n    });\n  } catch (error) {\n    console.error('Erro ao buscar configura\xE7\xE3o de e-mail:', error);\n    return NextResponse.json(\n      { erro: 'Erro interno do servidor' },\n      { status: 500 }\n    );\n  }\n}\n\n// PUT - Atualizar configura\xE7\xE3o de e-mail\nexport async function PUT(request: NextRequest) {\n  try {\n    const session = await auth();\n    if (!session?.user?.id) {\n      return NextResponse.json(\n        { erro: 'Usu\xE1rio n\xE3o autenticado' },\n        { status: 401 }\n      );\n    }\n\n    const body = await request.json();\n    const { usuarioId, ...dadosConfiguracao } = body;\n    const usuarioAlvo = usuarioId || session.user.id;\n\n    // Verificar permiss\xF5es\n    if (usuarioAlvo !== session.user.id) {\n      const temPermissao = await verificarPermissao(\n        session.user.id,\n        ['ADMIN', 'GESTOR']\n      );\n      \n      if (!temPermissao) {\n        return NextResponse.json(\n          { erro: 'Sem permiss\xE3o para alterar configura\xE7\xF5es de outro usu\xE1rio' },\n          { status: 403 }\n        );\n      }\n    }\n\n    // Validar dados\n    const dadosValidados = configuracaoEmailSchema.parse(dadosConfiguracao);\n\n    // Verificar se o usu\xE1rio existe\n    const usuario = await prisma.usuario.findUnique({\n      where: { id: usuarioAlvo },\n    });\n\n    if (!usuario) {\n      return NextResponse.json(\n        { erro: 'Usu\xE1rio n\xE3o encontrado' },\n        { status: 404 }\n      );\n    }\n\n    // Atualizar ou criar configura\xE7\xE3o\n    const configuracao = await prisma.configuracaoEmailNotificacao.upsert({\n      where: { usuarioId: usuarioAlvo },\n      update: {\n        ...dadosValidados,\n        atualizadoEm: new Date(),\n      },\n      create: {\n        usuarioId: usuarioAlvo,\n        ...dadosValidados,\n        ativo: true,\n      },\n      include: {\n        usuario: {\n          select: {\n            id: true,\n            nome: true,\n            email: true,\n          },\n        },\n      },\n    });\n\n    return NextResponse.json({\n      configuracao,\n      mensagem: 'Configura\xE7\xE3o de e-mail atualizada com sucesso',\n    });\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        {\n          erro: 'Dados inv\xE1lidos',\n          detalhes: error.errors.map(err => ({\n            campo: err.path.join('.'),\n            mensagem: err.message,\n          })),\n        },\n        { status: 400 }\n      );\n    }\n\n    console.error('Erro ao atualizar configura\xE7\xE3o de e-mail:', error);\n    return NextResponse.json(\n      { erro: 'Erro interno do servidor' },\n      { status: 500 }\n    );\n  }\n}\n\n// POST - Criar nova configura\xE7\xE3o de e-mail\nexport async function POST(request: NextRequest) {\n  try {\n    const session = await auth();\n    if (!session?.user?.id) {\n      return NextResponse.json(\n        { erro: 'Usu\xE1rio n\xE3o autenticado' },\n        { status: 401 }\n      );\n    }\n\n    const body = await request.json();\n    const { usuarioId, ...dadosConfiguracao } = body;\n    const usuarioAlvo = usuarioId || session.user.id;\n\n    // Verificar permiss\xF5es\n    if (usuarioAlvo !== session.user.id) {\n      const temPermissao = await verificarPermissao(\n        session.user.id,\n        ['ADMIN']\n      );\n      \n      if (!temPermissao) {\n        return NextResponse.json(\n          { erro: 'Sem permiss\xE3o para criar configura\xE7\xF5es para outro usu\xE1rio' },\n          { status: 403 }\n        );\n      }\n    }\n\n    // Validar dados\n    const dadosValidados = configuracaoEmailSchema.parse(dadosConfiguracao);\n\n    // Verificar se j\xE1 existe configura\xE7\xE3o\n    const configuracaoExistente = await prisma.configuracaoEmailNotificacao.findUnique({\n      where: { usuarioId: usuarioAlvo },\n    });\n\n    if (configuracaoExistente) {\n      return NextResponse.json(\n        { erro: 'Configura\xE7\xE3o de e-mail j\xE1 existe para este usu\xE1rio' },\n        { status: 409 }\n      );\n    }\n\n    // Verificar se o usu\xE1rio existe\n    const usuario = await prisma.usuario.findUnique({\n      where: { id: usuarioAlvo },\n    });\n\n    if (!usuario) {\n      return NextResponse.json(\n        { erro: 'Usu\xE1rio n\xE3o encontrado' },\n        { status: 404 }\n      );\n    }\n\n    // Criar configura\xE7\xE3o\n    const configuracao = await prisma.configuracaoEmailNotificacao.create({\n      data: {\n        usuarioId: usuarioAlvo,\n        ...dadosValidados,\n        ativo: true,\n      },\n      include: {\n        usuario: {\n          select: {\n            id: true,\n            nome: true,\n            email: true,\n          },\n        },\n      },\n    });\n\n    return NextResponse.json(\n      {\n        configuracao,\n        mensagem: 'Configura\xE7\xE3o de e-mail criada com sucesso',\n      },\n      { status: 201 }\n    );\n  } catch (error) {\n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        {\n          erro: 'Dados inv\xE1lidos',\n          detalhes: error.errors.map(err => ({\n            campo: err.path.join('.'),\n            mensagem: err.message,\n          })),\n        },\n        { status: 400 }\n      );\n    }\n\n    console.error('Erro ao criar configura\xE7\xE3o de e-mail:', error);\n    return NextResponse.json(\n      { erro: 'Erro interno do servidor' },\n      { status: 500 }\n    );\n  }\n}\n\n// DELETE - Desativar configura\xE7\xE3o de e-mail\nexport async function DELETE(request: NextRequest) {\n  try {\n    const session = await auth();\n    if (!session?.user?.id) {\n      return NextResponse.json(\n        { erro: 'Usu\xE1rio n\xE3o autenticado' },\n        { status: 401 }\n      );\n    }\n\n    const { searchParams } = new URL(request.url);\n    const usuarioId = searchParams.get('usuarioId') || session.user.id;\n\n    // Verificar permiss\xF5es\n    if (usuarioId !== session.user.id) {\n      const temPermissao = await verificarPermissao(\n        session.user.id,\n        ['ADMIN']\n      );\n      \n      if (!temPermissao) {\n        return NextResponse.json(\n          { erro: 'Sem permiss\xE3o para desativar configura\xE7\xF5es de outro usu\xE1rio' },\n          { status: 403 }\n        );\n      }\n    }\n\n    // Verificar se a configura\xE7\xE3o existe\n    const configuracao = await prisma.configuracaoEmailNotificacao.findUnique({\n      where: { usuarioId },\n    });\n\n    if (!configuracao) {\n      return NextResponse.json(\n        { erro: 'Configura\xE7\xE3o de e-mail n\xE3o encontrada' },\n        { status: 404 }\n      );\n    }\n\n    // Desativar configura\xE7\xE3o (n\xE3o deletar)\n    const configuracaoAtualizada = await prisma.configuracaoEmailNotificacao.update({\n      where: { usuarioId },\n      data: {\n        ativo: false,\n        emailsAtivos: false,\n        atualizadoEm: new Date(),\n      },\n    });\n\n    return NextResponse.json({\n      configuracao: configuracaoAtualizada,\n      mensagem: 'Configura\xE7\xE3o de e-mail desativada com sucesso',\n    });\n  } catch (error) {\n    console.error('Erro ao desativar configura\xE7\xE3o de e-mail:', error);\n    return NextResponse.json(\n      { erro: 'Erro interno do servidor' },\n      { status: 500 }\n    );\n  }\n}"],
      names: ["DELETE", "GET", "POST", "PUT", "configuracaoEmailSchema", "z", "object", "emailsAtivos", "boolean", "emailPrincipal", "string", "email", "optional", "emailsAdicionais", "array", "frequenciaNotificacao", "enum", "tiposNotificacao", "avaliacaoPendente", "lembreteVencimento", "avaliacaoVencida", "resumoSemanal", "horarioPreferido", "regex", "diasAntecedencia", "number", "min", "max", "formatoHtml", "incluirResumo", "assinaturaPersonalizada", "request", "session", "auth", "user", "id", "NextResponse", "json", "erro", "status", "searchParams", "URL", "url", "usuarioId", "get", "temPermissao", "verificarPermissao", "configuracao", "prisma", "configuracaoEmailNotificacao", "findUnique", "where", "include", "usuario", "select", "nome", "ativo", "criadoEm", "Date", "atualizadoEm", "error", "console", "body", "dadosConfiguracao", "usuarioAlvo", "dadosValidados", "parse", "upsert", "update", "create", "mensagem", "ZodError", "detalhes", "errors", "map", "err", "campo", "path", "join", "message", "configuracaoExistente", "data", "configuracaoAtualizada"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2a262f47661529011f14dfc24ed299000c7ef764"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_29axsrvgw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_29axsrvgw();
cov_29axsrvgw().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_29axsrvgw().f[0]++;
  cov_29axsrvgw().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_29axsrvgw().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_29axsrvgw().s[3]++;
_export(exports, {
  get DELETE() {
    /* istanbul ignore next */
    cov_29axsrvgw().f[1]++;
    cov_29axsrvgw().s[4]++;
    return DELETE;
  },
  get GET() {
    /* istanbul ignore next */
    cov_29axsrvgw().f[2]++;
    cov_29axsrvgw().s[5]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_29axsrvgw().f[3]++;
    cov_29axsrvgw().s[6]++;
    return POST;
  },
  get PUT() {
    /* istanbul ignore next */
    cov_29axsrvgw().f[4]++;
    cov_29axsrvgw().s[7]++;
    return PUT;
  }
});
const _server =
/* istanbul ignore next */
(cov_29axsrvgw().s[8]++, require("next/server"));
const _zod =
/* istanbul ignore next */
(cov_29axsrvgw().s[9]++, require("zod"));
const _auth =
/* istanbul ignore next */
(cov_29axsrvgw().s[10]++, require("../../../../../lib/auth"));
const _prisma =
/* istanbul ignore next */
(cov_29axsrvgw().s[11]++, require("../../../../../lib/prisma"));
const _permissoes =
/* istanbul ignore next */
(cov_29axsrvgw().s[12]++, require("../../../../../lib/utils/permissoes"));
// Schema de validação para configuração de e-mail
const configuracaoEmailSchema =
/* istanbul ignore next */
(cov_29axsrvgw().s[13]++, _zod.z.object({
  emailsAtivos: _zod.z.boolean(),
  emailPrincipal: _zod.z.string().email().optional(),
  emailsAdicionais: _zod.z.array(_zod.z.string().email()).optional(),
  frequenciaNotificacao: _zod.z.enum(['imediata', 'diaria', 'semanal']),
  tiposNotificacao: _zod.z.object({
    avaliacaoPendente: _zod.z.boolean(),
    lembreteVencimento: _zod.z.boolean(),
    avaliacaoVencida: _zod.z.boolean(),
    resumoSemanal: _zod.z.boolean()
  }),
  horarioPreferido: _zod.z.string().regex(/^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/),
  diasAntecedencia: _zod.z.number().min(1).max(30),
  formatoHtml: _zod.z.boolean(),
  incluirResumo: _zod.z.boolean(),
  assinaturaPersonalizada: _zod.z.string().max(500).optional()
}));
async function GET(request) {
  /* istanbul ignore next */
  cov_29axsrvgw().f[5]++;
  cov_29axsrvgw().s[14]++;
  try {
    const session =
    /* istanbul ignore next */
    (cov_29axsrvgw().s[15]++, await (0, _auth.auth)());
    /* istanbul ignore next */
    cov_29axsrvgw().s[16]++;
    if (!session?.user?.id) {
      /* istanbul ignore next */
      cov_29axsrvgw().b[0][0]++;
      cov_29axsrvgw().s[17]++;
      return _server.NextResponse.json({
        erro: 'Usuário não autenticado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_29axsrvgw().b[0][1]++;
    }
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_29axsrvgw().s[18]++, new URL(request.url));
    const usuarioId =
    /* istanbul ignore next */
    (cov_29axsrvgw().s[19]++,
    /* istanbul ignore next */
    (cov_29axsrvgw().b[1][0]++, searchParams.get('usuarioId')) ||
    /* istanbul ignore next */
    (cov_29axsrvgw().b[1][1]++, session.user.id));
    // Verificar permissões
    /* istanbul ignore next */
    cov_29axsrvgw().s[20]++;
    if (usuarioId !== session.user.id) {
      /* istanbul ignore next */
      cov_29axsrvgw().b[2][0]++;
      const temPermissao =
      /* istanbul ignore next */
      (cov_29axsrvgw().s[21]++, await (0, _permissoes.verificarPermissao)(session.user.id, ['ADMIN', 'GESTOR']));
      /* istanbul ignore next */
      cov_29axsrvgw().s[22]++;
      if (!temPermissao) {
        /* istanbul ignore next */
        cov_29axsrvgw().b[3][0]++;
        cov_29axsrvgw().s[23]++;
        return _server.NextResponse.json({
          erro: 'Sem permissão para acessar configurações de outro usuário'
        }, {
          status: 403
        });
      } else
      /* istanbul ignore next */
      {
        cov_29axsrvgw().b[3][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_29axsrvgw().b[2][1]++;
    }
    // Buscar configuração existente
    const configuracao =
    /* istanbul ignore next */
    (cov_29axsrvgw().s[24]++, await _prisma.prisma.configuracaoEmailNotificacao.findUnique({
      where: {
        usuarioId
      },
      include: {
        usuario: {
          select: {
            id: true,
            nome: true,
            email: true
          }
        }
      }
    }));
    /* istanbul ignore next */
    cov_29axsrvgw().s[25]++;
    if (!configuracao) {
      /* istanbul ignore next */
      cov_29axsrvgw().b[4][0]++;
      // Retornar configuração padrão se não existir
      const usuario =
      /* istanbul ignore next */
      (cov_29axsrvgw().s[26]++, await _prisma.prisma.usuario.findUnique({
        where: {
          id: usuarioId
        },
        select: {
          id: true,
          nome: true,
          email: true
        }
      }));
      /* istanbul ignore next */
      cov_29axsrvgw().s[27]++;
      if (!usuario) {
        /* istanbul ignore next */
        cov_29axsrvgw().b[5][0]++;
        cov_29axsrvgw().s[28]++;
        return _server.NextResponse.json({
          erro: 'Usuário não encontrado'
        }, {
          status: 404
        });
      } else
      /* istanbul ignore next */
      {
        cov_29axsrvgw().b[5][1]++;
      }
      cov_29axsrvgw().s[29]++;
      return _server.NextResponse.json({
        configuracao: {
          usuarioId,
          emailsAtivos: false,
          emailPrincipal: usuario.email,
          emailsAdicionais: [],
          frequenciaNotificacao: 'diaria',
          tiposNotificacao: {
            avaliacaoPendente: true,
            lembreteVencimento: true,
            avaliacaoVencida: true,
            resumoSemanal: false
          },
          horarioPreferido: '09:00',
          diasAntecedencia: 3,
          formatoHtml: true,
          incluirResumo: true,
          assinaturaPersonalizada: null,
          ativo: true,
          criadoEm: new Date(),
          atualizadoEm: new Date()
        },
        usuario
      });
    } else
    /* istanbul ignore next */
    {
      cov_29axsrvgw().b[4][1]++;
    }
    cov_29axsrvgw().s[30]++;
    return _server.NextResponse.json({
      configuracao,
      usuario: configuracao.usuario
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_29axsrvgw().s[31]++;
    console.error('Erro ao buscar configuração de e-mail:', error);
    /* istanbul ignore next */
    cov_29axsrvgw().s[32]++;
    return _server.NextResponse.json({
      erro: 'Erro interno do servidor'
    }, {
      status: 500
    });
  }
}
async function PUT(request) {
  /* istanbul ignore next */
  cov_29axsrvgw().f[6]++;
  cov_29axsrvgw().s[33]++;
  try {
    const session =
    /* istanbul ignore next */
    (cov_29axsrvgw().s[34]++, await (0, _auth.auth)());
    /* istanbul ignore next */
    cov_29axsrvgw().s[35]++;
    if (!session?.user?.id) {
      /* istanbul ignore next */
      cov_29axsrvgw().b[6][0]++;
      cov_29axsrvgw().s[36]++;
      return _server.NextResponse.json({
        erro: 'Usuário não autenticado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_29axsrvgw().b[6][1]++;
    }
    const body =
    /* istanbul ignore next */
    (cov_29axsrvgw().s[37]++, await request.json());
    const {
      usuarioId,
      ...dadosConfiguracao
    } =
    /* istanbul ignore next */
    (cov_29axsrvgw().s[38]++, body);
    const usuarioAlvo =
    /* istanbul ignore next */
    (cov_29axsrvgw().s[39]++,
    /* istanbul ignore next */
    (cov_29axsrvgw().b[7][0]++, usuarioId) ||
    /* istanbul ignore next */
    (cov_29axsrvgw().b[7][1]++, session.user.id));
    // Verificar permissões
    /* istanbul ignore next */
    cov_29axsrvgw().s[40]++;
    if (usuarioAlvo !== session.user.id) {
      /* istanbul ignore next */
      cov_29axsrvgw().b[8][0]++;
      const temPermissao =
      /* istanbul ignore next */
      (cov_29axsrvgw().s[41]++, await (0, _permissoes.verificarPermissao)(session.user.id, ['ADMIN', 'GESTOR']));
      /* istanbul ignore next */
      cov_29axsrvgw().s[42]++;
      if (!temPermissao) {
        /* istanbul ignore next */
        cov_29axsrvgw().b[9][0]++;
        cov_29axsrvgw().s[43]++;
        return _server.NextResponse.json({
          erro: 'Sem permissão para alterar configurações de outro usuário'
        }, {
          status: 403
        });
      } else
      /* istanbul ignore next */
      {
        cov_29axsrvgw().b[9][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_29axsrvgw().b[8][1]++;
    }
    // Validar dados
    const dadosValidados =
    /* istanbul ignore next */
    (cov_29axsrvgw().s[44]++, configuracaoEmailSchema.parse(dadosConfiguracao));
    // Verificar se o usuário existe
    const usuario =
    /* istanbul ignore next */
    (cov_29axsrvgw().s[45]++, await _prisma.prisma.usuario.findUnique({
      where: {
        id: usuarioAlvo
      }
    }));
    /* istanbul ignore next */
    cov_29axsrvgw().s[46]++;
    if (!usuario) {
      /* istanbul ignore next */
      cov_29axsrvgw().b[10][0]++;
      cov_29axsrvgw().s[47]++;
      return _server.NextResponse.json({
        erro: 'Usuário não encontrado'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_29axsrvgw().b[10][1]++;
    }
    // Atualizar ou criar configuração
    const configuracao =
    /* istanbul ignore next */
    (cov_29axsrvgw().s[48]++, await _prisma.prisma.configuracaoEmailNotificacao.upsert({
      where: {
        usuarioId: usuarioAlvo
      },
      update: {
        ...dadosValidados,
        atualizadoEm: new Date()
      },
      create: {
        usuarioId: usuarioAlvo,
        ...dadosValidados,
        ativo: true
      },
      include: {
        usuario: {
          select: {
            id: true,
            nome: true,
            email: true
          }
        }
      }
    }));
    /* istanbul ignore next */
    cov_29axsrvgw().s[49]++;
    return _server.NextResponse.json({
      configuracao,
      mensagem: 'Configuração de e-mail atualizada com sucesso'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_29axsrvgw().s[50]++;
    if (error instanceof _zod.z.ZodError) {
      /* istanbul ignore next */
      cov_29axsrvgw().b[11][0]++;
      cov_29axsrvgw().s[51]++;
      return _server.NextResponse.json({
        erro: 'Dados inválidos',
        detalhes: error.errors.map(err => {
          /* istanbul ignore next */
          cov_29axsrvgw().f[7]++;
          cov_29axsrvgw().s[52]++;
          return {
            campo: err.path.join('.'),
            mensagem: err.message
          };
        })
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_29axsrvgw().b[11][1]++;
    }
    cov_29axsrvgw().s[53]++;
    console.error('Erro ao atualizar configuração de e-mail:', error);
    /* istanbul ignore next */
    cov_29axsrvgw().s[54]++;
    return _server.NextResponse.json({
      erro: 'Erro interno do servidor'
    }, {
      status: 500
    });
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_29axsrvgw().f[8]++;
  cov_29axsrvgw().s[55]++;
  try {
    const session =
    /* istanbul ignore next */
    (cov_29axsrvgw().s[56]++, await (0, _auth.auth)());
    /* istanbul ignore next */
    cov_29axsrvgw().s[57]++;
    if (!session?.user?.id) {
      /* istanbul ignore next */
      cov_29axsrvgw().b[12][0]++;
      cov_29axsrvgw().s[58]++;
      return _server.NextResponse.json({
        erro: 'Usuário não autenticado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_29axsrvgw().b[12][1]++;
    }
    const body =
    /* istanbul ignore next */
    (cov_29axsrvgw().s[59]++, await request.json());
    const {
      usuarioId,
      ...dadosConfiguracao
    } =
    /* istanbul ignore next */
    (cov_29axsrvgw().s[60]++, body);
    const usuarioAlvo =
    /* istanbul ignore next */
    (cov_29axsrvgw().s[61]++,
    /* istanbul ignore next */
    (cov_29axsrvgw().b[13][0]++, usuarioId) ||
    /* istanbul ignore next */
    (cov_29axsrvgw().b[13][1]++, session.user.id));
    // Verificar permissões
    /* istanbul ignore next */
    cov_29axsrvgw().s[62]++;
    if (usuarioAlvo !== session.user.id) {
      /* istanbul ignore next */
      cov_29axsrvgw().b[14][0]++;
      const temPermissao =
      /* istanbul ignore next */
      (cov_29axsrvgw().s[63]++, await (0, _permissoes.verificarPermissao)(session.user.id, ['ADMIN']));
      /* istanbul ignore next */
      cov_29axsrvgw().s[64]++;
      if (!temPermissao) {
        /* istanbul ignore next */
        cov_29axsrvgw().b[15][0]++;
        cov_29axsrvgw().s[65]++;
        return _server.NextResponse.json({
          erro: 'Sem permissão para criar configurações para outro usuário'
        }, {
          status: 403
        });
      } else
      /* istanbul ignore next */
      {
        cov_29axsrvgw().b[15][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_29axsrvgw().b[14][1]++;
    }
    // Validar dados
    const dadosValidados =
    /* istanbul ignore next */
    (cov_29axsrvgw().s[66]++, configuracaoEmailSchema.parse(dadosConfiguracao));
    // Verificar se já existe configuração
    const configuracaoExistente =
    /* istanbul ignore next */
    (cov_29axsrvgw().s[67]++, await _prisma.prisma.configuracaoEmailNotificacao.findUnique({
      where: {
        usuarioId: usuarioAlvo
      }
    }));
    /* istanbul ignore next */
    cov_29axsrvgw().s[68]++;
    if (configuracaoExistente) {
      /* istanbul ignore next */
      cov_29axsrvgw().b[16][0]++;
      cov_29axsrvgw().s[69]++;
      return _server.NextResponse.json({
        erro: 'Configuração de e-mail já existe para este usuário'
      }, {
        status: 409
      });
    } else
    /* istanbul ignore next */
    {
      cov_29axsrvgw().b[16][1]++;
    }
    // Verificar se o usuário existe
    const usuario =
    /* istanbul ignore next */
    (cov_29axsrvgw().s[70]++, await _prisma.prisma.usuario.findUnique({
      where: {
        id: usuarioAlvo
      }
    }));
    /* istanbul ignore next */
    cov_29axsrvgw().s[71]++;
    if (!usuario) {
      /* istanbul ignore next */
      cov_29axsrvgw().b[17][0]++;
      cov_29axsrvgw().s[72]++;
      return _server.NextResponse.json({
        erro: 'Usuário não encontrado'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_29axsrvgw().b[17][1]++;
    }
    // Criar configuração
    const configuracao =
    /* istanbul ignore next */
    (cov_29axsrvgw().s[73]++, await _prisma.prisma.configuracaoEmailNotificacao.create({
      data: {
        usuarioId: usuarioAlvo,
        ...dadosValidados,
        ativo: true
      },
      include: {
        usuario: {
          select: {
            id: true,
            nome: true,
            email: true
          }
        }
      }
    }));
    /* istanbul ignore next */
    cov_29axsrvgw().s[74]++;
    return _server.NextResponse.json({
      configuracao,
      mensagem: 'Configuração de e-mail criada com sucesso'
    }, {
      status: 201
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_29axsrvgw().s[75]++;
    if (error instanceof _zod.z.ZodError) {
      /* istanbul ignore next */
      cov_29axsrvgw().b[18][0]++;
      cov_29axsrvgw().s[76]++;
      return _server.NextResponse.json({
        erro: 'Dados inválidos',
        detalhes: error.errors.map(err => {
          /* istanbul ignore next */
          cov_29axsrvgw().f[9]++;
          cov_29axsrvgw().s[77]++;
          return {
            campo: err.path.join('.'),
            mensagem: err.message
          };
        })
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_29axsrvgw().b[18][1]++;
    }
    cov_29axsrvgw().s[78]++;
    console.error('Erro ao criar configuração de e-mail:', error);
    /* istanbul ignore next */
    cov_29axsrvgw().s[79]++;
    return _server.NextResponse.json({
      erro: 'Erro interno do servidor'
    }, {
      status: 500
    });
  }
}
async function DELETE(request) {
  /* istanbul ignore next */
  cov_29axsrvgw().f[10]++;
  cov_29axsrvgw().s[80]++;
  try {
    const session =
    /* istanbul ignore next */
    (cov_29axsrvgw().s[81]++, await (0, _auth.auth)());
    /* istanbul ignore next */
    cov_29axsrvgw().s[82]++;
    if (!session?.user?.id) {
      /* istanbul ignore next */
      cov_29axsrvgw().b[19][0]++;
      cov_29axsrvgw().s[83]++;
      return _server.NextResponse.json({
        erro: 'Usuário não autenticado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_29axsrvgw().b[19][1]++;
    }
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_29axsrvgw().s[84]++, new URL(request.url));
    const usuarioId =
    /* istanbul ignore next */
    (cov_29axsrvgw().s[85]++,
    /* istanbul ignore next */
    (cov_29axsrvgw().b[20][0]++, searchParams.get('usuarioId')) ||
    /* istanbul ignore next */
    (cov_29axsrvgw().b[20][1]++, session.user.id));
    // Verificar permissões
    /* istanbul ignore next */
    cov_29axsrvgw().s[86]++;
    if (usuarioId !== session.user.id) {
      /* istanbul ignore next */
      cov_29axsrvgw().b[21][0]++;
      const temPermissao =
      /* istanbul ignore next */
      (cov_29axsrvgw().s[87]++, await (0, _permissoes.verificarPermissao)(session.user.id, ['ADMIN']));
      /* istanbul ignore next */
      cov_29axsrvgw().s[88]++;
      if (!temPermissao) {
        /* istanbul ignore next */
        cov_29axsrvgw().b[22][0]++;
        cov_29axsrvgw().s[89]++;
        return _server.NextResponse.json({
          erro: 'Sem permissão para desativar configurações de outro usuário'
        }, {
          status: 403
        });
      } else
      /* istanbul ignore next */
      {
        cov_29axsrvgw().b[22][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_29axsrvgw().b[21][1]++;
    }
    // Verificar se a configuração existe
    const configuracao =
    /* istanbul ignore next */
    (cov_29axsrvgw().s[90]++, await _prisma.prisma.configuracaoEmailNotificacao.findUnique({
      where: {
        usuarioId
      }
    }));
    /* istanbul ignore next */
    cov_29axsrvgw().s[91]++;
    if (!configuracao) {
      /* istanbul ignore next */
      cov_29axsrvgw().b[23][0]++;
      cov_29axsrvgw().s[92]++;
      return _server.NextResponse.json({
        erro: 'Configuração de e-mail não encontrada'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_29axsrvgw().b[23][1]++;
    }
    // Desativar configuração (não deletar)
    const configuracaoAtualizada =
    /* istanbul ignore next */
    (cov_29axsrvgw().s[93]++, await _prisma.prisma.configuracaoEmailNotificacao.update({
      where: {
        usuarioId
      },
      data: {
        ativo: false,
        emailsAtivos: false,
        atualizadoEm: new Date()
      }
    }));
    /* istanbul ignore next */
    cov_29axsrvgw().s[94]++;
    return _server.NextResponse.json({
      configuracao: configuracaoAtualizada,
      mensagem: 'Configuração de e-mail desativada com sucesso'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_29axsrvgw().s[95]++;
    console.error('Erro ao desativar configuração de e-mail:', error);
    /* istanbul ignore next */
    cov_29axsrvgw().s[96]++;
    return _server.NextResponse.json({
      erro: 'Erro interno do servidor'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,