{"version":3,"names":["GamificacaoPage","mockAtendentes","cov_1jp4i596jl","s","id","nome","avatar","pontuacao","nivel","experiencia","experienciaProximoNivel","posicaoRanking","conquistas","metasAtingidas","totalMetas","mockConquistas","descricao","icone","categoria","pontos","requisito","desbloqueada","dataDesbloqueio","mockMetas","titulo","tipo","progresso","objetivo","recompensa","status","dataLimite","nivelColors","categoriaColors","atendimento","avaliacao","feedback","especial","f","atendenteAtual","_react","useState","tabAtiva","setTabAtiva","handleResgatar","metaId","_sonner","toast","success","calcularProgressoExperiencia","proximoNivel","formatarData","dataString","Date","toLocaleDateString","_jsxruntime","jsxs","className","jsx","_card","Card","CardHeader","_avatar","Avatar","AvatarImage","src","alt","AvatarFallback","split","map","n","join","_badge","Badge","b","_lucidereact","Crown","Trophy","Medal","Award","length","CardContent","_progress","Progress","value","Math","round","_tabs","Tabs","onValueChange","TabsList","TabsTrigger","TabsContent","CardTitle","CardDescription","atendente","index","conquista","charAt","toUpperCase","slice","Star","variant","meta","Target","_button","Button","size","onClick","Gift","Zap"],"sources":["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\(dashboard)\\gamificacao\\page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport {\n  Trophy,\n  Star,\n  Target,\n  Award,\n  TrendingUp,\n  Users,\n  Crown,\n  Medal,\n  Zap,\n  Gift,\n} from 'lucide-react';\nimport { toast } from 'sonner';\n\ninterface Atendente {\n  id: string;\n  nome: string;\n  avatar?: string;\n  pontuacao: number;\n  nivel: number;\n  experiencia: number;\n  experienciaProximoNivel: number;\n  posicaoRanking: number;\n  conquistas: string[];\n  metasAtingidas: number;\n  totalMetas: number;\n}\n\ninterface Conquista {\n  id: string;\n  nome: string;\n  descricao: string;\n  icone: string;\n  categoria: 'atendimento' | 'avaliacao' | 'feedback' | 'especial';\n  pontos: number;\n  requisito: string;\n  desbloqueada: boolean;\n  dataDesbloqueio?: string;\n}\n\ninterface Meta {\n  id: string;\n  titulo: string;\n  descricao: string;\n  tipo: 'diaria' | 'semanal' | 'mensal';\n  progresso: number;\n  objetivo: number;\n  recompensa: number;\n  status: 'ativa' | 'concluida' | 'expirada';\n  dataLimite: string;\n}\n\nconst mockAtendentes: Atendente[] = [\n  {\n    id: '1',\n    nome: 'Jo√£o Silva',\n    avatar: '/avatars/joao.jpg',\n    pontuacao: 2450,\n    nivel: 8,\n    experiencia: 750,\n    experienciaProximoNivel: 1000,\n    posicaoRanking: 1,\n    conquistas: [\n      'primeira-avaliacao-5',\n      'atendimento-rapido',\n      'feedback-positivo',\n    ],\n    metasAtingidas: 8,\n    totalMetas: 10,\n  },\n  {\n    id: '2',\n    nome: 'Ana Costa',\n    avatar: '/avatars/ana.jpg',\n    pontuacao: 2180,\n    nivel: 7,\n    experiencia: 480,\n    experienciaProximoNivel: 800,\n    posicaoRanking: 2,\n    conquistas: ['feedback-positivo', 'meta-semanal'],\n    metasAtingidas: 7,\n    totalMetas: 10,\n  },\n  {\n    id: '3',\n    nome: 'Pedro Santos',\n    avatar: '/avatars/pedro.jpg',\n    pontuacao: 1950,\n    nivel: 6,\n    experiencia: 320,\n    experienciaProximoNivel: 600,\n    posicaoRanking: 3,\n    conquistas: ['primeira-avaliacao-5'],\n    metasAtingidas: 5,\n    totalMetas: 10,\n  },\n];\n\nconst mockConquistas: Conquista[] = [\n  {\n    id: 'primeira-avaliacao-5',\n    nome: 'Primeira Estrela',\n    descricao: 'Receba sua primeira avalia√ß√£o 5 estrelas',\n    icone: '‚≠ê',\n    categoria: 'avaliacao',\n    pontos: 100,\n    requisito: '1 avalia√ß√£o 5 estrelas',\n    desbloqueada: true,\n    dataDesbloqueio: '2024-01-15',\n  },\n  {\n    id: 'atendimento-rapido',\n    nome: 'Velocidade da Luz',\n    descricao: 'Complete 10 atendimentos em menos de 5 minutos',\n    icone: '‚ö°',\n    categoria: 'atendimento',\n    pontos: 200,\n    requisito: '10 atendimentos < 5min',\n    desbloqueada: true,\n    dataDesbloqueio: '2024-01-20',\n  },\n  {\n    id: 'feedback-positivo',\n    nome: 'Querido pelos Clientes',\n    descricao: 'Receba 50 feedbacks positivos',\n    icone: 'üíù',\n    categoria: 'feedback',\n    pontos: 300,\n    requisito: '50 feedbacks positivos',\n    desbloqueada: true,\n    dataDesbloqueio: '2024-01-25',\n  },\n  {\n    id: 'meta-semanal',\n    nome: 'Consist√™ncia',\n    descricao: 'Complete todas as metas semanais por 4 semanas consecutivas',\n    icone: 'üéØ',\n    categoria: 'especial',\n    pontos: 500,\n    requisito: '4 semanas consecutivas',\n    desbloqueada: false,\n  },\n  {\n    id: 'avaliacao-perfeita',\n    nome: 'Perfei√ß√£o',\n    descricao: 'Mantenha m√©dia 5.0 por um m√™s inteiro',\n    icone: 'üëë',\n    categoria: 'avaliacao',\n    pontos: 1000,\n    requisito: 'M√©dia 5.0 por 1 m√™s',\n    desbloqueada: false,\n  },\n];\n\nconst mockMetas: Meta[] = [\n  {\n    id: '1',\n    titulo: 'Atendimentos Di√°rios',\n    descricao: 'Complete 15 atendimentos hoje',\n    tipo: 'diaria',\n    progresso: 12,\n    objetivo: 15,\n    recompensa: 50,\n    status: 'ativa',\n    dataLimite: '2024-01-30T23:59:59Z',\n  },\n  {\n    id: '2',\n    titulo: 'Avalia√ß√£o Semanal',\n    descricao: 'Mantenha m√©dia acima de 4.5 esta semana',\n    tipo: 'semanal',\n    progresso: 4.7,\n    objetivo: 4.5,\n    recompensa: 200,\n    status: 'concluida',\n    dataLimite: '2024-02-04T23:59:59Z',\n  },\n  {\n    id: '3',\n    titulo: 'Feedbacks Mensais',\n    descricao: 'Receba 20 feedbacks positivos este m√™s',\n    tipo: 'mensal',\n    progresso: 15,\n    objetivo: 20,\n    recompensa: 500,\n    status: 'ativa',\n    dataLimite: '2024-01-31T23:59:59Z',\n  },\n];\n\nconst nivelColors = {\n  1: 'bg-gray-100 text-gray-800',\n  2: 'bg-gray-100 text-gray-800',\n  3: 'bg-green-100 text-green-800',\n  4: 'bg-green-100 text-green-800',\n  5: 'bg-blue-100 text-blue-800',\n  6: 'bg-blue-100 text-blue-800',\n  7: 'bg-purple-100 text-purple-800',\n  8: 'bg-purple-100 text-purple-800',\n  9: 'bg-yellow-100 text-yellow-800',\n  10: 'bg-red-100 text-red-800',\n};\n\nconst categoriaColors = {\n  atendimento: 'bg-blue-100 text-blue-800',\n  avaliacao: 'bg-yellow-100 text-yellow-800',\n  feedback: 'bg-green-100 text-green-800',\n  especial: 'bg-purple-100 text-purple-800',\n};\n\nexport default function GamificacaoPage() {\n  const [atendenteAtual] = useState<Atendente>(mockAtendentes[0]);\n  const [tabAtiva, setTabAtiva] = useState('ranking');\n\n  const handleResgatar = (metaId: string) => {\n    toast.success('Recompensa resgatada com sucesso!');\n  };\n\n  const calcularProgressoExperiencia = (\n    experiencia: number,\n    proximoNivel: number\n  ) => {\n    return (experiencia / proximoNivel) * 100;\n  };\n\n  const formatarData = (dataString: string) => {\n    return new Date(dataString).toLocaleDateString('pt-BR');\n  };\n\n  return (\n    <div className=\"container mx-auto p-6 space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">Gamifica√ß√£o</h1>\n          <p className=\"text-muted-foreground\">\n            Sistema de pontua√ß√£o, conquistas e rankings\n          </p>\n        </div>\n      </div>\n\n      {/* Perfil do Atendente Atual */}\n      <Card className=\"bg-gradient-to-r from-blue-500 to-purple-600 text-white\">\n        <CardHeader>\n          <div className=\"flex items-center gap-4\">\n            <Avatar className=\"h-16 w-16 border-2 border-white\">\n              <AvatarImage\n                src={atendenteAtual.avatar}\n                alt={atendenteAtual.nome}\n              />\n              <AvatarFallback className=\"text-blue-600\">\n                {atendenteAtual.nome\n                  .split(' ')\n                  .map(n => n[0])\n                  .join('')}\n              </AvatarFallback>\n            </Avatar>\n            <div className=\"flex-1\">\n              <div className=\"flex items-center gap-2 mb-2\">\n                <h2 className=\"text-2xl font-bold\">{atendenteAtual.nome}</h2>\n                <Badge\n                  className={`${nivelColors[atendenteAtual.nivel as keyof typeof nivelColors]} border-white`}\n                >\n                  N√≠vel {atendenteAtual.nivel}\n                </Badge>\n                {atendenteAtual.posicaoRanking === 1 && (\n                  <Crown className=\"h-6 w-6 text-yellow-300\" />\n                )}\n              </div>\n              <div className=\"flex items-center gap-4 text-sm\">\n                <span className=\"flex items-center gap-1\">\n                  <Trophy className=\"h-4 w-4\" />\n                  {atendenteAtual.pontuacao} pontos\n                </span>\n                <span className=\"flex items-center gap-1\">\n                  <Medal className=\"h-4 w-4\" />#{atendenteAtual.posicaoRanking}{' '}\n                  no ranking\n                </span>\n                <span className=\"flex items-center gap-1\">\n                  <Award className=\"h-4 w-4\" />\n                  {atendenteAtual.conquistas.length} conquistas\n                </span>\n              </div>\n            </div>\n          </div>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            <div>\n              <div className=\"flex justify-between text-sm mb-2\">\n                <span>Experi√™ncia para o pr√≥ximo n√≠vel</span>\n                <span>\n                  {atendenteAtual.experiencia}/\n                  {atendenteAtual.experienciaProximoNivel} XP\n                </span>\n              </div>\n              <Progress\n                value={calcularProgressoExperiencia(\n                  atendenteAtual.experiencia,\n                  atendenteAtual.experienciaProximoNivel\n                )}\n                className=\"h-2 bg-white/20\"\n              />\n            </div>\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold\">\n                  {atendenteAtual.metasAtingidas}\n                </div>\n                <div className=\"text-sm opacity-90\">Metas Atingidas</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold\">\n                  {Math.round(\n                    (atendenteAtual.metasAtingidas /\n                      atendenteAtual.totalMetas) *\n                      100\n                  )}\n                  %\n                </div>\n                <div className=\"text-sm opacity-90\">Taxa de Sucesso</div>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      <Tabs value={tabAtiva} onValueChange={setTabAtiva} className=\"space-y-4\">\n        <TabsList className=\"grid w-full grid-cols-4\">\n          <TabsTrigger value=\"ranking\">Ranking</TabsTrigger>\n          <TabsTrigger value=\"conquistas\">Conquistas</TabsTrigger>\n          <TabsTrigger value=\"metas\">Metas</TabsTrigger>\n          <TabsTrigger value=\"recompensas\">Recompensas</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"ranking\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Trophy className=\"h-5 w-5\" />\n                Ranking Geral\n              </CardTitle>\n              <CardDescription>\n                Classifica√ß√£o baseada na pontua√ß√£o total dos atendentes\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                {mockAtendentes.map((atendente, index) => (\n                  <div\n                    key={atendente.id}\n                    className=\"flex items-center justify-between p-4 border rounded-lg hover:bg-muted/50 transition-colors\"\n                  >\n                    <div className=\"flex items-center gap-4\">\n                      <div className=\"flex items-center justify-center w-8 h-8 rounded-full bg-primary text-primary-foreground text-sm font-bold\">\n                        {index + 1}\n                      </div>\n                      <Avatar className=\"h-10 w-10\">\n                        <AvatarImage\n                          src={atendente.avatar}\n                          alt={atendente.nome}\n                        />\n                        <AvatarFallback>\n                          {atendente.nome\n                            .split(' ')\n                            .map(n => n[0])\n                            .join('')}\n                        </AvatarFallback>\n                      </Avatar>\n                      <div>\n                        <h3 className=\"font-semibold flex items-center gap-2\">\n                          {atendente.nome}\n                          {index === 0 && (\n                            <Crown className=\"h-4 w-4 text-yellow-500\" />\n                          )}\n                        </h3>\n                        <p className=\"text-sm text-muted-foreground\">\n                          N√≠vel {atendente.nivel} ‚Ä¢{' '}\n                          {atendente.conquistas.length} conquistas\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"text-right\">\n                      <div className=\"text-lg font-bold\">\n                        {atendente.pontuacao} pts\n                      </div>\n                      <Badge\n                        className={\n                          nivelColors[\n                            atendente.nivel as keyof typeof nivelColors\n                          ]\n                        }\n                      >\n                        N√≠vel {atendente.nivel}\n                      </Badge>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"conquistas\" className=\"space-y-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {mockConquistas.map(conquista => (\n              <Card\n                key={conquista.id}\n                className={`${conquista.desbloqueada ? 'border-green-200 bg-green-50' : 'border-gray-200 bg-gray-50'}`}\n              >\n                <CardHeader>\n                  <div className=\"flex items-center gap-3\">\n                    <div className=\"text-3xl\">{conquista.icone}</div>\n                    <div className=\"flex-1\">\n                      <CardTitle className=\"text-lg\">\n                        {conquista.nome}\n                      </CardTitle>\n                      <Badge className={categoriaColors[conquista.categoria]}>\n                        {conquista.categoria.charAt(0).toUpperCase() +\n                          conquista.categoria.slice(1)}\n                      </Badge>\n                    </div>\n                  </div>\n                </CardHeader>\n                <CardContent>\n                  <p className=\"text-sm text-muted-foreground mb-3\">\n                    {conquista.descricao}\n                  </p>\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center gap-1 text-sm\">\n                      <Star className=\"h-4 w-4 text-yellow-500\" />\n                      <span>{conquista.pontos} pontos</span>\n                    </div>\n                    {conquista.desbloqueada ? (\n                      <Badge variant=\"default\" className=\"bg-green-600\">\n                        Desbloqueada\n                      </Badge>\n                    ) : (\n                      <Badge variant=\"outline\">Bloqueada</Badge>\n                    )}\n                  </div>\n                  {conquista.desbloqueada && conquista.dataDesbloqueio && (\n                    <p className=\"text-xs text-muted-foreground mt-2\">\n                      Desbloqueada em: {formatarData(conquista.dataDesbloqueio)}\n                    </p>\n                  )}\n                  {!conquista.desbloqueada && (\n                    <p className=\"text-xs text-muted-foreground mt-2\">\n                      Requisito: {conquista.requisito}\n                    </p>\n                  )}\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"metas\" className=\"space-y-4\">\n          <div className=\"grid gap-4\">\n            {mockMetas.map(meta => (\n              <Card\n                key={meta.id}\n                className={\n                  meta.status === 'concluida'\n                    ? 'border-green-200 bg-green-50'\n                    : ''\n                }\n              >\n                <CardHeader>\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <CardTitle className=\"flex items-center gap-2\">\n                        <Target className=\"h-5 w-5\" />\n                        {meta.titulo}\n                      </CardTitle>\n                      <CardDescription>{meta.descricao}</CardDescription>\n                    </div>\n                    <div className=\"text-right\">\n                      <Badge\n                        variant={\n                          meta.tipo === 'diaria'\n                            ? 'default'\n                            : meta.tipo === 'semanal'\n                              ? 'secondary'\n                              : 'outline'\n                        }\n                      >\n                        {meta.tipo.charAt(0).toUpperCase() + meta.tipo.slice(1)}\n                      </Badge>\n                      <div className=\"text-sm text-muted-foreground mt-1\">\n                        {meta.recompensa} pontos\n                      </div>\n                    </div>\n                  </div>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-3\">\n                    <div>\n                      <div className=\"flex justify-between text-sm mb-2\">\n                        <span>Progresso</span>\n                        <span>\n                          {meta.progresso}/{meta.objetivo}\n                        </span>\n                      </div>\n                      <Progress\n                        value={(meta.progresso / meta.objetivo) * 100}\n                        className=\"h-2\"\n                      />\n                    </div>\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm text-muted-foreground\">\n                        Prazo: {formatarData(meta.dataLimite)}\n                      </span>\n                      {meta.status === 'concluida' ? (\n                        <Button\n                          size=\"sm\"\n                          onClick={() => handleResgatar(meta.id)}\n                        >\n                          <Gift className=\"h-4 w-4 mr-2\" />\n                          Resgatar\n                        </Button>\n                      ) : (\n                        <Badge\n                          variant={\n                            meta.status === 'ativa' ? 'default' : 'destructive'\n                          }\n                        >\n                          {meta.status === 'ativa'\n                            ? 'Em Andamento'\n                            : 'Expirada'}\n                        </Badge>\n                      )}\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"recompensas\" className=\"space-y-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Gift className=\"h-5 w-5\" />\n                  Vale Desconto 10%\n                </CardTitle>\n                <CardDescription>Desconto em produtos da loja</CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-3\">\n                  <div className=\"text-2xl font-bold text-center\">\n                    500 pontos\n                  </div>\n                  <Button className=\"w-full\">\n                    <Zap className=\"h-4 w-4 mr-2\" />\n                    Resgatar\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Gift className=\"h-5 w-5\" />\n                  Dia de Folga Extra\n                </CardTitle>\n                <CardDescription>Um dia adicional de descanso</CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-3\">\n                  <div className=\"text-2xl font-bold text-center\">\n                    1000 pontos\n                  </div>\n                  <Button className=\"w-full\">\n                    <Zap className=\"h-4 w-4 mr-2\" />\n                    Resgatar\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Gift className=\"h-5 w-5\" />\n                  Certificado de Excel√™ncia\n                </CardTitle>\n                <CardDescription>Reconhecimento oficial</CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-3\">\n                  <div className=\"text-2xl font-bold text-center\">\n                    2000 pontos\n                  </div>\n                  <Button className=\"w-full\">\n                    <Zap className=\"h-4 w-4 mr-2\" />\n                    Resgatar\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}\n"],"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","ignoreList":[]}