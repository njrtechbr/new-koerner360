883d419ffd947ba9f3b1dbdc1bd9b0cd
"use strict";

/* istanbul ignore next */
function cov_2en0qbbi9j() {
  var path = "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\lib\\services\\agendador-lembretes.ts";
  var hash = "bb2d3c978ce1bc1857785355749e9384097e9b26";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\lib\\services\\agendador-lembretes.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 34
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 30
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 39
        }
      },
      "7": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 36
        }
      },
      "8": {
        start: {
          line: 23,
          column: 24
        },
        end: {
          line: 23,
          column: 52
        }
      },
      "9": {
        start: {
          line: 24,
          column: 27
        },
        end: {
          line: 24,
          column: 65
        }
      },
      "10": {
        start: {
          line: 25,
          column: 17
        },
        end: {
          line: 25,
          column: 36
        }
      },
      "11": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 80
        }
      },
      "12": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 36
        }
      },
      "13": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 27
        }
      },
      "14": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 41,
          column: 10
        }
      },
      "15": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 67
        }
      },
      "16": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "17": {
        start: {
          line: 48,
          column: 12
        },
        end: {
          line: 48,
          column: 64
        }
      },
      "18": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 19
        }
      },
      "19": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 26
        }
      },
      "20": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 59
        }
      },
      "21": {
        start: {
          line: 54,
          column: 26
        },
        end: {
          line: 56,
          column: 26
        }
      },
      "22": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 68
        }
      },
      "23": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 64
        }
      },
      "24": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 49
        }
      },
      "25": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 67
        }
      },
      "26": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "27": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 65
        }
      },
      "28": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 19
        }
      },
      "29": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 27
        }
      },
      "30": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 73,
          column: 11
        }
      },
      "31": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 37
        }
      },
      "32": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 32
        }
      },
      "33": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 53
        }
      },
      "34": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 83,
          column: 10
        }
      },
      "35": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 87,
          column: 9
        }
      },
      "36": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 49
        }
      },
      "37": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 88,
          column: 80
        }
      },
      "38": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 95,
          column: 9
        }
      },
      "39": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 19
        }
      },
      "40": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 107,
          column: 9
        }
      },
      "41": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 97,
          column: 62
        }
      },
      "42": {
        start: {
          line: 99,
          column: 40
        },
        end: {
          line: 99,
          column: 78
        }
      },
      "43": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 102,
          column: 13
        }
      },
      "44": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 101,
          column: 66
        }
      },
      "45": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 50
        }
      },
      "46": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 75
        }
      },
      "47": {
        start: {
          line: 112,
          column: 22
        },
        end: {
          line: 112,
          column: 32
        }
      },
      "48": {
        start: {
          line: 113,
          column: 25
        },
        end: {
          line: 113,
          column: 57
        }
      },
      "49": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 127,
          column: 11
        }
      },
      "50": {
        start: {
          line: 132,
          column: 22
        },
        end: {
          line: 132,
          column: 32
        }
      },
      "51": {
        start: {
          line: 133,
          column: 31
        },
        end: {
          line: 133,
          column: 56
        }
      },
      "52": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 138,
          column: 9
        }
      },
      "53": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 136,
          column: 60
        }
      },
      "54": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 19
        }
      },
      "55": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 145,
          column: 9
        }
      },
      "56": {
        start: {
          line: 141,
          column: 33
        },
        end: {
          line: 141,
          column: 77
        }
      },
      "57": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 144,
          column: 13
        }
      },
      "58": {
        start: {
          line: 143,
          column: 16
        },
        end: {
          line: 143,
          column: 80
        }
      },
      "59": {
        start: {
          line: 151,
          column: 34
        },
        end: {
          line: 151,
          column: 122
        }
      },
      "60": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 154,
          column: 9
        }
      },
      "61": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 19
        }
      },
      "62": {
        start: {
          line: 156,
          column: 36
        },
        end: {
          line: 156,
          column: 71
        }
      },
      "63": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 160,
          column: 9
        }
      },
      "64": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 159,
          column: 19
        }
      },
      "65": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 169,
          column: 11
        }
      },
      "66": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 170,
          column: 91
        }
      },
      "67": {
        start: {
          line: 175,
          column: 22
        },
        end: {
          line: 175,
          column: 32
        }
      },
      "68": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 176,
          column: 67
        }
      },
      "69": {
        start: {
          line: 181,
          column: 22
        },
        end: {
          line: 181,
          column: 32
        }
      },
      "70": {
        start: {
          line: 182,
          column: 27
        },
        end: {
          line: 182,
          column: 58
        }
      },
      "71": {
        start: {
          line: 183,
          column: 24
        },
        end: {
          line: 183,
          column: 53
        }
      },
      "72": {
        start: {
          line: 185,
          column: 36
        },
        end: {
          line: 185,
          column: 92
        }
      },
      "73": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 188,
          column: 9
        }
      },
      "74": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 187,
          column: 48
        }
      },
      "75": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 236,
          column: 9
        }
      },
      "76": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 194,
          column: 97
        }
      },
      "77": {
        start: {
          line: 196,
          column: 30
        },
        end: {
          line: 205,
          column: 14
        }
      },
      "78": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 208,
          column: 13
        }
      },
      "79": {
        start: {
          line: 207,
          column: 16
        },
        end: {
          line: 207,
          column: 60
        }
      },
      "80": {
        start: {
          line: 210,
          column: 30
        },
        end: {
          line: 217,
          column: 14
        }
      },
      "81": {
        start: {
          line: 219,
          column: 12
        },
        end: {
          line: 224,
          column: 15
        }
      },
      "82": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 226,
          column: 74
        }
      },
      "83": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 227,
          column: 73
        }
      },
      "84": {
        start: {
          line: 229,
          column: 12
        },
        end: {
          line: 229,
          column: 76
        }
      },
      "85": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 235,
          column: 15
        }
      },
      "86": {
        start: {
          line: 241,
          column: 23
        },
        end: {
          line: 241,
          column: 97
        }
      },
      "87": {
        start: {
          line: 242,
          column: 26
        },
        end: {
          line: 242,
          column: 170
        }
      },
      "88": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 254,
          column: 11
        }
      },
      "89": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 259,
          column: 57
        }
      },
      "90": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 261,
          column: 48
        }
      },
      "91": {
        start: {
          line: 263,
          column: 8
        },
        end: {
          line: 263,
          column: 49
        }
      },
      "92": {
        start: {
          line: 268,
          column: 33
        },
        end: {
          line: 268,
          column: 86
        }
      },
      "93": {
        start: {
          line: 269,
          column: 25
        },
        end: {
          line: 269,
          column: 39
        }
      },
      "94": {
        start: {
          line: 270,
          column: 8
        },
        end: {
          line: 270,
          column: 48
        }
      },
      "95": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 271,
          column: 24
        }
      },
      "96": {
        start: {
          line: 274,
          column: 26
        },
        end: {
          line: 274,
          column: 39
        }
      },
      "97": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 275,
          column: 50
        }
      },
      "98": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 282,
          column: 20
        }
      },
      "99": {
        start: {
          line: 286,
          column: 8
        },
        end: {
          line: 286,
          column: 60
        }
      },
      "100": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 290,
          column: 68
        }
      },
      "101": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 295,
          column: 18
        }
      },
      "102": {
        start: {
          line: 299,
          column: 8
        },
        end: {
          line: 299,
          column: 55
        }
      },
      "103": {
        start: {
          line: 305,
          column: 8
        },
        end: {
          line: 312,
          column: 10
        }
      },
      "104": {
        start: {
          line: 315,
          column: 8
        },
        end: {
          line: 317,
          column: 10
        }
      },
      "105": {
        start: {
          line: 320,
          column: 8
        },
        end: {
          line: 320,
          column: 26
        }
      },
      "106": {
        start: {
          line: 323,
          column: 8
        },
        end: {
          line: 323,
          column: 49
        }
      },
      "107": {
        start: {
          line: 326,
          column: 26
        },
        end: {
          line: 335,
          column: 10
        }
      },
      "108": {
        start: {
          line: 336,
          column: 8
        },
        end: {
          line: 338,
          column: 9
        }
      },
      "109": {
        start: {
          line: 337,
          column: 12
        },
        end: {
          line: 337,
          column: 62
        }
      },
      "110": {
        start: {
          line: 342,
          column: 25
        },
        end: {
          line: 342,
          column: 29
        }
      },
      "111": {
        start: {
          line: 344,
          column: 4
        },
        end: {
          line: 346,
          column: 5
        }
      },
      "112": {
        start: {
          line: 345,
          column: 8
        },
        end: {
          line: 345,
          column: 54
        }
      },
      "113": {
        start: {
          line: 347,
          column: 4
        },
        end: {
          line: 347,
          column: 30
        }
      },
      "114": {
        start: {
          line: 349,
          column: 23
        },
        end: {
          line: 374,
          column: 1
        }
      },
      "115": {
        start: {
          line: 353,
          column: 26
        },
        end: {
          line: 353,
          column: 51
        }
      },
      "116": {
        start: {
          line: 354,
          column: 8
        },
        end: {
          line: 354,
          column: 34
        }
      },
      "117": {
        start: {
          line: 359,
          column: 26
        },
        end: {
          line: 359,
          column: 51
        }
      },
      "118": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 360,
          column: 26
        }
      },
      "119": {
        start: {
          line: 365,
          column: 26
        },
        end: {
          line: 365,
          column: 51
        }
      },
      "120": {
        start: {
          line: 366,
          column: 8
        },
        end: {
          line: 366,
          column: 44
        }
      },
      "121": {
        start: {
          line: 371,
          column: 26
        },
        end: {
          line: 371,
          column: 51
        }
      },
      "122": {
        start: {
          line: 372,
          column: 8
        },
        end: {
          line: 372,
          column: 56
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 30
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 26
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 35
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 17
          },
          end: {
            line: 43,
            column: 5
          }
        },
        line: 27
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 46,
            column: 6
          },
          end: {
            line: 46,
            column: 7
          }
        },
        loc: {
          start: {
            line: 46,
            column: 22
          },
          end: {
            line: 61,
            column: 5
          }
        },
        line: 46
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 54,
            column: 38
          },
          end: {
            line: 54,
            column: 39
          }
        },
        loc: {
          start: {
            line: 54,
            column: 42
          },
          end: {
            line: 56,
            column: 9
          }
        },
        line: 54
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 64,
            column: 6
          },
          end: {
            line: 64,
            column: 7
          }
        },
        loc: {
          start: {
            line: 64,
            column: 14
          },
          end: {
            line: 76,
            column: 5
          }
        },
        line: 64
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 71,
            column: 32
          },
          end: {
            line: 71,
            column: 33
          }
        },
        loc: {
          start: {
            line: 71,
            column: 45
          },
          end: {
            line: 73,
            column: 9
          }
        },
        line: 71
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 79,
            column: 6
          },
          end: {
            line: 79,
            column: 7
          }
        },
        loc: {
          start: {
            line: 79,
            column: 52
          },
          end: {
            line: 89,
            column: 5
          }
        },
        line: 79
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 92,
            column: 6
          },
          end: {
            line: 92,
            column: 7
          }
        },
        loc: {
          start: {
            line: 92,
            column: 42
          },
          end: {
            line: 108,
            column: 5
          }
        },
        line: 92
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 111,
            column: 6
          },
          end: {
            line: 111,
            column: 7
          }
        },
        loc: {
          start: {
            line: 111,
            column: 40
          },
          end: {
            line: 128,
            column: 5
          }
        },
        line: 111
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 131,
            column: 6
          },
          end: {
            line: 131,
            column: 7
          }
        },
        loc: {
          start: {
            line: 131,
            column: 51
          },
          end: {
            line: 146,
            column: 5
          }
        },
        line: 131
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 149,
            column: 6
          },
          end: {
            line: 149,
            column: 7
          }
        },
        loc: {
          start: {
            line: 149,
            column: 56
          },
          end: {
            line: 171,
            column: 5
          }
        },
        line: 149
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 174,
            column: 6
          },
          end: {
            line: 174,
            column: 7
          }
        },
        loc: {
          start: {
            line: 174,
            column: 49
          },
          end: {
            line: 177,
            column: 5
          }
        },
        line: 174
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 180,
            column: 6
          },
          end: {
            line: 180,
            column: 7
          }
        },
        loc: {
          start: {
            line: 180,
            column: 39
          },
          end: {
            line: 189,
            column: 5
          }
        },
        line: 180
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 192,
            column: 6
          },
          end: {
            line: 192,
            column: 7
          }
        },
        loc: {
          start: {
            line: 192,
            column: 37
          },
          end: {
            line: 237,
            column: 5
          }
        },
        line: 192
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 240,
            column: 6
          },
          end: {
            line: 240,
            column: 7
          }
        },
        loc: {
          start: {
            line: 240,
            column: 54
          },
          end: {
            line: 255,
            column: 5
          }
        },
        line: 240
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 258,
            column: 6
          },
          end: {
            line: 258,
            column: 7
          }
        },
        loc: {
          start: {
            line: 258,
            column: 38
          },
          end: {
            line: 264,
            column: 5
          }
        },
        line: 258
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 267,
            column: 6
          },
          end: {
            line: 267,
            column: 7
          }
        },
        loc: {
          start: {
            line: 267,
            column: 32
          },
          end: {
            line: 272,
            column: 5
          }
        },
        line: 267
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 273,
            column: 4
          },
          end: {
            line: 273,
            column: 5
          }
        },
        loc: {
          start: {
            line: 273,
            column: 24
          },
          end: {
            line: 276,
            column: 5
          }
        },
        line: 273
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 279,
            column: 6
          },
          end: {
            line: 279,
            column: 7
          }
        },
        loc: {
          start: {
            line: 279,
            column: 77
          },
          end: {
            line: 283,
            column: 5
          }
        },
        line: 279
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 284,
            column: 4
          },
          end: {
            line: 284,
            column: 5
          }
        },
        loc: {
          start: {
            line: 284,
            column: 39
          },
          end: {
            line: 287,
            column: 5
          }
        },
        line: 284
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 288,
            column: 4
          },
          end: {
            line: 288,
            column: 5
          }
        },
        loc: {
          start: {
            line: 288,
            column: 47
          },
          end: {
            line: 291,
            column: 5
          }
        },
        line: 288
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 292,
            column: 4
          },
          end: {
            line: 292,
            column: 5
          }
        },
        loc: {
          start: {
            line: 292,
            column: 48
          },
          end: {
            line: 296,
            column: 5
          }
        },
        line: 292
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 297,
            column: 4
          },
          end: {
            line: 297,
            column: 5
          }
        },
        loc: {
          start: {
            line: 297,
            column: 39
          },
          end: {
            line: 300,
            column: 5
          }
        },
        line: 297
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 303,
            column: 6
          },
          end: {
            line: 303,
            column: 7
          }
        },
        loc: {
          start: {
            line: 303,
            column: 32
          },
          end: {
            line: 313,
            column: 5
          }
        },
        line: 303
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 314,
            column: 4
          },
          end: {
            line: 314,
            column: 5
          }
        },
        loc: {
          start: {
            line: 314,
            column: 24
          },
          end: {
            line: 318,
            column: 5
          }
        },
        line: 314
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 319,
            column: 4
          },
          end: {
            line: 319,
            column: 5
          }
        },
        loc: {
          start: {
            line: 319,
            column: 16
          },
          end: {
            line: 321,
            column: 5
          }
        },
        line: 319
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 322,
            column: 4
          },
          end: {
            line: 322,
            column: 5
          }
        },
        loc: {
          start: {
            line: 322,
            column: 30
          },
          end: {
            line: 324,
            column: 5
          }
        },
        line: 322
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 325,
            column: 4
          },
          end: {
            line: 325,
            column: 5
          }
        },
        loc: {
          start: {
            line: 325,
            column: 42
          },
          end: {
            line: 339,
            column: 5
          }
        },
        line: 325
      },
      "31": {
        name: "obterAgendadorLembretes",
        decl: {
          start: {
            line: 343,
            column: 9
          },
          end: {
            line: 343,
            column: 32
          }
        },
        loc: {
          start: {
            line: 343,
            column: 35
          },
          end: {
            line: 348,
            column: 1
          }
        },
        line: 343
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 352,
            column: 6
          },
          end: {
            line: 352,
            column: 7
          }
        },
        loc: {
          start: {
            line: 352,
            column: 33
          },
          end: {
            line: 355,
            column: 5
          }
        },
        line: 352
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 358,
            column: 6
          },
          end: {
            line: 358,
            column: 7
          }
        },
        loc: {
          start: {
            line: 358,
            column: 24
          },
          end: {
            line: 361,
            column: 5
          }
        },
        line: 358
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 364,
            column: 6
          },
          end: {
            line: 364,
            column: 7
          }
        },
        loc: {
          start: {
            line: 364,
            column: 33
          },
          end: {
            line: 367,
            column: 5
          }
        },
        line: 364
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 370,
            column: 6
          },
          end: {
            line: 370,
            column: 7
          }
        },
        loc: {
          start: {
            line: 370,
            column: 45
          },
          end: {
            line: 373,
            column: 5
          }
        },
        line: 370
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "1": {
        loc: {
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "2": {
        loc: {
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 87,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 87,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "3": {
        loc: {
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "4": {
        loc: {
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "5": {
        loc: {
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 144,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 12
          },
          end: {
            line: 144,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "6": {
        loc: {
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 154,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 8
          },
          end: {
            line: 154,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "7": {
        loc: {
          start: {
            line: 158,
            column: 8
          },
          end: {
            line: 160,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 158,
            column: 8
          },
          end: {
            line: 160,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 158
      },
      "8": {
        loc: {
          start: {
            line: 158,
            column: 12
          },
          end: {
            line: 158,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 158,
            column: 12
          },
          end: {
            line: 158,
            column: 49
          }
        }, {
          start: {
            line: 158,
            column: 53
          },
          end: {
            line: 158,
            column: 92
          }
        }],
        line: 158
      },
      "9": {
        loc: {
          start: {
            line: 206,
            column: 12
          },
          end: {
            line: 208,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 206,
            column: 12
          },
          end: {
            line: 208,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 206
      },
      "10": {
        loc: {
          start: {
            line: 213,
            column: 31
          },
          end: {
            line: 213,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 213,
            column: 31
          },
          end: {
            line: 213,
            column: 55
          }
        }, {
          start: {
            line: 213,
            column: 59
          },
          end: {
            line: 213,
            column: 74
          }
        }],
        line: 213
      },
      "11": {
        loc: {
          start: {
            line: 223,
            column: 22
          },
          end: {
            line: 223,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 223,
            column: 42
          },
          end: {
            line: 223,
            column: 51
          }
        }, {
          start: {
            line: 223,
            column: 54
          },
          end: {
            line: 223,
            column: 68
          }
        }],
        line: 223
      },
      "12": {
        loc: {
          start: {
            line: 234,
            column: 22
          },
          end: {
            line: 234,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 234,
            column: 47
          },
          end: {
            line: 234,
            column: 60
          }
        }, {
          start: {
            line: 234,
            column: 63
          },
          end: {
            line: 234,
            column: 82
          }
        }],
        line: 234
      },
      "13": {
        loc: {
          start: {
            line: 241,
            column: 23
          },
          end: {
            line: 241,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 241,
            column: 45
          },
          end: {
            line: 241,
            column: 75
          }
        }, {
          start: {
            line: 241,
            column: 78
          },
          end: {
            line: 241,
            column: 97
          }
        }],
        line: 241
      },
      "14": {
        loc: {
          start: {
            line: 242,
            column: 26
          },
          end: {
            line: 242,
            column: 170
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 242,
            column: 48
          },
          end: {
            line: 242,
            column: 111
          }
        }, {
          start: {
            line: 242,
            column: 114
          },
          end: {
            line: 242,
            column: 170
          }
        }],
        line: 242
      },
      "15": {
        loc: {
          start: {
            line: 247,
            column: 22
          },
          end: {
            line: 247,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 247,
            column: 44
          },
          end: {
            line: 247,
            column: 54
          }
        }, {
          start: {
            line: 247,
            column: 57
          },
          end: {
            line: 247,
            column: 66
          }
        }],
        line: 247
      },
      "16": {
        loc: {
          start: {
            line: 248,
            column: 26
          },
          end: {
            line: 248,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 248,
            column: 48
          },
          end: {
            line: 248,
            column: 55
          }
        }, {
          start: {
            line: 248,
            column: 58
          },
          end: {
            line: 248,
            column: 64
          }
        }],
        line: 248
      },
      "17": {
        loc: {
          start: {
            line: 275,
            column: 15
          },
          end: {
            line: 275,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 275,
            column: 15
          },
          end: {
            line: 275,
            column: 30
          }
        }, {
          start: {
            line: 275,
            column: 34
          },
          end: {
            line: 275,
            column: 49
          }
        }],
        line: 275
      },
      "18": {
        loc: {
          start: {
            line: 336,
            column: 8
          },
          end: {
            line: 338,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 336,
            column: 8
          },
          end: {
            line: 338,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 336
      },
      "19": {
        loc: {
          start: {
            line: 344,
            column: 4
          },
          end: {
            line: 346,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 344,
            column: 4
          },
          end: {
            line: 346,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 344
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\lib\\services\\agendador-lembretes.ts"],
      sourcesContent: ["import { prisma } from '@/lib/prisma';\nimport { AgendadorEmail } from './agendador-email';\nimport { obterGerenciadorEmail } from '@/lib/utils/email-notificacoes';\nimport { addDays, isAfter, isBefore, startOfDay, endOfDay } from 'date-fns';\n\ninterface ConfiguracaoLembrete {\n  diasAntecedencia: number[];\n  horarioEnvio: string; // HH:mm\n  ativo: boolean;\n  incluirFimDeSemana: boolean;\n  incluirFeriados: boolean;\n}\n\ninterface LembreteAgendado {\n  id: string;\n  avaliacaoId: string;\n  usuarioId: string;\n  tipo: 'lembrete' | 'vencimento';\n  dataEnvio: Date;\n  enviado: boolean;\n  tentativas: number;\n  ultimaTentativa?: Date;\n  erro?: string;\n}\n\ninterface EstatisticasLembretes {\n  totalAgendados: number;\n  totalEnviados: number;\n  totalPendentes: number;\n  totalFalhas: number;\n  proximosEnvios: LembreteAgendado[];\n  ultimosEnviados: LembreteAgendado[];\n}\n\nclass AgendadorLembretes {\n  private agendadorEmail: AgendadorEmail;\n  private gerenciadorEmail = obterGerenciadorEmail();\n  private intervalos: Map<string, NodeJS.Timeout> = new Map();\n  private ativo = false;\n  private configuracao: ConfiguracaoLembrete = {\n    diasAntecedencia: [7, 3, 1], // 7, 3 e 1 dia antes do vencimento\n    horarioEnvio: '09:00',\n    ativo: true,\n    incluirFimDeSemana: false,\n    incluirFeriados: false,\n  };\n\n  constructor() {\n    this.agendadorEmail = new AgendadorEmail();\n  }\n\n  /**\n   * Inicia o agendador de lembretes\n   */\n  async iniciar(): Promise<void> {\n    if (this.ativo) {\n      console.log('Agendador de lembretes j\xE1 est\xE1 ativo');\n      return;\n    }\n\n    this.ativo = true;\n    console.log('Iniciando agendador de lembretes...');\n\n    // Agendar verifica\xE7\xE3o a cada hora\n    const intervalo = setInterval(() => {\n      this.verificarLembretesPendentes().catch(console.error);\n    }, 60 * 60 * 1000); // 1 hora\n\n    this.intervalos.set('verificacao-principal', intervalo);\n\n    // Executar verifica\xE7\xE3o inicial\n    await this.verificarLembretesPendentes();\n\n    console.log('Agendador de lembretes iniciado com sucesso');\n  }\n\n  /**\n   * Para o agendador de lembretes\n   */\n  parar(): void {\n    if (!this.ativo) {\n      console.log('Agendador de lembretes j\xE1 est\xE1 parado');\n      return;\n    }\n\n    this.ativo = false;\n    \n    // Limpar todos os intervalos\n    this.intervalos.forEach((intervalo) => {\n      clearInterval(intervalo);\n    });\n    this.intervalos.clear();\n\n    console.log('Agendador de lembretes parado');\n  }\n\n  /**\n   * Atualiza a configura\xE7\xE3o do agendador\n   */\n  async atualizarConfiguracao(novaConfiguracao: Partial<ConfiguracaoLembrete>): Promise<void> {\n    this.configuracao = { ...this.configuracao, ...novaConfiguracao };\n    \n    // Reagendar lembretes se necess\xE1rio\n    if (this.ativo) {\n      await this.reagendarTodosLembretes();\n    }\n\n    console.log('Configura\xE7\xE3o do agendador atualizada:', this.configuracao);\n  }\n\n  /**\n   * Verifica e processa lembretes pendentes\n   */\n  private async verificarLembretesPendentes(): Promise<void> {\n    if (!this.configuracao.ativo) {\n      return;\n    }\n\n    try {\n      console.log('Verificando lembretes pendentes...');\n\n      // Buscar avalia\xE7\xF5es que precisam de lembretes\n      const avaliacoesPendentes = await this.buscarAvaliacoesPendentes();\n      \n      for (const avaliacao of avaliacoesPendentes) {\n        await this.processarLembretesAvaliacao(avaliacao);\n      }\n\n      // Enviar lembretes agendados para agora\n      await this.enviarLembretesAgendados();\n\n    } catch (error) {\n      console.error('Erro ao verificar lembretes pendentes:', error);\n    }\n  }\n\n  /**\n   * Busca avalia\xE7\xF5es que precisam de lembretes\n   */\n  private async buscarAvaliacoesPendentes() {\n    const agora = new Date();\n    const em30Dias = addDays(agora, 30); // Buscar avalia\xE7\xF5es com prazo nos pr\xF3ximos 30 dias\n\n    return await prisma.avaliacao.findMany({\n      where: {\n        status: 'PENDENTE',\n        prazo: {\n          gte: agora,\n          lte: em30Dias,\n        },\n      },\n      include: {\n        avaliado: true,\n        avaliador: true,\n        periodo: true,\n      },\n    });\n  }\n\n  /**\n   * Processa lembretes para uma avalia\xE7\xE3o espec\xEDfica\n   */\n  private async processarLembretesAvaliacao(avaliacao: any): Promise<void> {\n    const agora = new Date();\n    const prazoAvaliacao = new Date(avaliacao.prazo);\n\n    // Verificar se j\xE1 passou do prazo\n    if (isBefore(prazoAvaliacao, agora)) {\n      await this.agendarLembreteVencimento(avaliacao);\n      return;\n    }\n\n    // Agendar lembretes de anteced\xEAncia\n    for (const dias of this.configuracao.diasAntecedencia) {\n      const dataLembrete = addDays(prazoAvaliacao, -dias);\n      \n      if (isAfter(dataLembrete, agora)) {\n        await this.agendarLembrete(avaliacao, dataLembrete, 'lembrete');\n      }\n    }\n  }\n\n  /**\n   * Agenda um lembrete espec\xEDfico\n   */\n  private async agendarLembrete(\n    avaliacao: any,\n    dataEnvio: Date,\n    tipo: 'lembrete' | 'vencimento'\n  ): Promise<void> {\n    // Verificar se j\xE1 existe um lembrete agendado\n    const lembreteExistente = await this.buscarLembreteExistente(\n      avaliacao.id,\n      avaliacao.avaliadorId,\n      tipo,\n      dataEnvio\n    );\n\n    if (lembreteExistente) {\n      return; // J\xE1 existe\n    }\n\n    // Ajustar hor\xE1rio de envio\n    const dataEnvioComHorario = this.ajustarHorarioEnvio(dataEnvio);\n\n    // Verificar se \xE9 dia \xFAtil (se configurado)\n    if (!this.configuracao.incluirFimDeSemana && this.isFimDeSemana(dataEnvioComHorario)) {\n      return; // Pular fim de semana\n    }\n\n    // Criar registro do lembrete\n    await this.criarRegistroLembrete({\n      avaliacaoId: avaliacao.id,\n      usuarioId: avaliacao.avaliadorId,\n      tipo,\n      dataEnvio: dataEnvioComHorario,\n      enviado: false,\n      tentativas: 0,\n    });\n\n    console.log(`Lembrete ${tipo} agendado para ${dataEnvioComHorario.toISOString()}`);\n  }\n\n  /**\n   * Agenda lembrete de vencimento\n   */\n  private async agendarLembreteVencimento(avaliacao: any): Promise<void> {\n    const agora = new Date();\n    await this.agendarLembrete(avaliacao, agora, 'vencimento');\n  }\n\n  /**\n   * Envia lembretes que est\xE3o agendados para agora\n   */\n  private async enviarLembretesAgendados(): Promise<void> {\n    const agora = new Date();\n    const inicioHora = startOfDay(agora);\n    const fimHora = endOfDay(agora);\n\n    // Buscar lembretes agendados para hoje\n    const lembretesParaEnviar = await this.buscarLembretesParaEnvio(inicioHora, fimHora);\n\n    for (const lembrete of lembretesParaEnviar) {\n      await this.enviarLembrete(lembrete);\n    }\n  }\n\n  /**\n   * Envia um lembrete espec\xEDfico\n   */\n  private async enviarLembrete(lembrete: any): Promise<void> {\n    try {\n      console.log(`Enviando lembrete ${lembrete.tipo} para usu\xE1rio ${lembrete.usuarioId}`);\n\n      // Buscar dados da avalia\xE7\xE3o\n      const avaliacao = await prisma.avaliacao.findUnique({\n        where: { id: lembrete.avaliacaoId },\n        include: {\n          avaliado: true,\n          avaliador: true,\n          periodo: true,\n        },\n      });\n\n      if (!avaliacao) {\n        throw new Error('Avalia\xE7\xE3o n\xE3o encontrada');\n      }\n\n      // Enviar e-mail\n      const resultado = await this.gerenciadorEmail.enviarEmailAvaliacaoPendente(\n        avaliacao.avaliador.email,\n        {\n          nomeAvaliador: avaliacao.avaliador.nome,\n          nomeAvaliado: avaliacao.avaliado.nome,\n          cargoAvaliado: avaliacao.avaliado.cargo || 'N\xE3o informado',\n          prazo: avaliacao.prazo,\n          linkAvaliacao: `/avaliacoes/${avaliacao.id}`,\n          periodo: avaliacao.periodo.nome,\n        }\n      );\n\n      // Atualizar registro do lembrete\n      await this.atualizarRegistroLembrete(lembrete.id, {\n        enviado: resultado.sucesso,\n        tentativas: lembrete.tentativas + 1,\n        ultimaTentativa: new Date(),\n        erro: resultado.sucesso ? undefined : resultado.erro,\n      });\n\n      // Criar notifica\xE7\xE3o no sistema\n      await this.criarNotificacaoLembrete(avaliacao, lembrete.tipo);\n\n      console.log(`Lembrete ${lembrete.tipo} enviado com sucesso`);\n\n    } catch (error) {\n      console.error(`Erro ao enviar lembrete ${lembrete.id}:`, error);\n      \n      // Atualizar registro com erro\n      await this.atualizarRegistroLembrete(lembrete.id, {\n        tentativas: lembrete.tentativas + 1,\n        ultimaTentativa: new Date(),\n        erro: error instanceof Error ? error.message : 'Erro desconhecido',\n      });\n    }\n  }\n\n  /**\n   * Cria notifica\xE7\xE3o no sistema para o lembrete\n   */\n  private async criarNotificacaoLembrete(avaliacao: any, tipo: 'lembrete' | 'vencimento'): Promise<void> {\n    const titulo = tipo === 'lembrete' \n      ? 'Lembrete: Avalia\xE7\xE3o Pendente'\n      : 'Avalia\xE7\xE3o Vencida';\n    \n    const descricao = tipo === 'lembrete'\n      ? `Voc\xEA tem uma avalia\xE7\xE3o pendente de ${avaliacao.avaliado.nome}`\n      : `A avalia\xE7\xE3o de ${avaliacao.avaliado.nome} est\xE1 vencida`;\n\n    await prisma.notificacao.create({\n      data: {\n        titulo,\n        descricao,\n        tipo: tipo === 'lembrete' ? 'lembrete' : 'vencida',\n        urgencia: tipo === 'lembrete' ? 'media' : 'alta',\n        usuarioId: avaliacao.avaliadorId,\n        avaliacaoId: avaliacao.id,\n        lida: false,\n        prazo: avaliacao.prazo,\n      },\n    });\n  }\n\n  /**\n   * Reagenda todos os lembretes\n   */\n  private async reagendarTodosLembretes(): Promise<void> {\n    console.log('Reagendando todos os lembretes...');\n    \n    // Limpar lembretes n\xE3o enviados\n    await this.limparLembretesNaoEnviados();\n    \n    // Reprocessar avalia\xE7\xF5es pendentes\n    await this.verificarLembretesPendentes();\n  }\n\n  /**\n   * Utilit\xE1rios\n   */\n  private ajustarHorarioEnvio(data: Date): Date {\n    const [horas, minutos] = this.configuracao.horarioEnvio.split(':').map(Number);\n    const novaData = new Date(data);\n    novaData.setHours(horas, minutos, 0, 0);\n    return novaData;\n  }\n\n  private isFimDeSemana(data: Date): boolean {\n    const diaSemana = data.getDay();\n    return diaSemana === 0 || diaSemana === 6; // Domingo ou S\xE1bado\n  }\n\n  /**\n   * M\xE9todos de banco de dados\n   */\n  private async buscarLembreteExistente(\n    avaliacaoId: string,\n    usuarioId: string,\n    tipo: string,\n    dataEnvio: Date\n  ) {\n    // Implementar busca no banco de dados\n    // Por enquanto, retorna null (assumindo que n\xE3o existe)\n    return null;\n  }\n\n  private async criarRegistroLembrete(dados: Omit<LembreteAgendado, 'id'>): Promise<void> {\n    // Implementar cria\xE7\xE3o no banco de dados\n    console.log('Criando registro de lembrete:', dados);\n  }\n\n  private async atualizarRegistroLembrete(id: string, dados: Partial<LembreteAgendado>): Promise<void> {\n    // Implementar atualiza\xE7\xE3o no banco de dados\n    console.log('Atualizando registro de lembrete:', id, dados);\n  }\n\n  private async buscarLembretesParaEnvio(inicio: Date, fim: Date): Promise<any[]> {\n    // Implementar busca no banco de dados\n    // Por enquanto, retorna array vazio\n    return [];\n  }\n\n  private async limparLembretesNaoEnviados(): Promise<void> {\n    // Implementar limpeza no banco de dados\n    console.log('Limpando lembretes n\xE3o enviados');\n  }\n\n  /**\n   * M\xE9todos p\xFAblicos para estat\xEDsticas e controle\n   */\n  async obterEstatisticas(): Promise<EstatisticasLembretes> {\n    // Implementar busca de estat\xEDsticas\n    return {\n      totalAgendados: 0,\n      totalEnviados: 0,\n      totalPendentes: 0,\n      totalFalhas: 0,\n      proximosEnvios: [],\n      ultimosEnviados: [],\n    };\n  }\n\n  obterConfiguracao(): ConfiguracaoLembrete {\n    return { ...this.configuracao };\n  }\n\n  estaAtivo(): boolean {\n    return this.ativo;\n  }\n\n  async forcarVerificacao(): Promise<void> {\n    await this.verificarLembretesPendentes();\n  }\n\n  async reagendarAvaliacao(avaliacaoId: string): Promise<void> {\n    const avaliacao = await prisma.avaliacao.findUnique({\n      where: { id: avaliacaoId },\n      include: {\n        avaliado: true,\n        avaliador: true,\n        periodo: true,\n      },\n    });\n\n    if (avaliacao) {\n      await this.processarLembretesAvaliacao(avaliacao);\n    }\n  }\n}\n\n// Inst\xE2ncia singleton\nlet instanciaAgendador: AgendadorLembretes | null = null;\n\n/**\n * Obt\xE9m a inst\xE2ncia singleton do agendador de lembretes\n */\nexport function obterAgendadorLembretes(): AgendadorLembretes {\n  if (!instanciaAgendador) {\n    instanciaAgendador = new AgendadorLembretes();\n  }\n  return instanciaAgendador;\n}\n\n/**\n * Utilit\xE1rios para agendamento de lembretes\n */\nexport const lembretesUtils = {\n  /**\n   * Inicia o agendador automaticamente\n   */\n  async iniciarAutomatico(): Promise<void> {\n    const agendador = obterAgendadorLembretes();\n    await agendador.iniciar();\n  },\n\n  /**\n   * Para o agendador\n   */\n  pararAgendador(): void {\n    const agendador = obterAgendadorLembretes();\n    agendador.parar();\n  },\n\n  /**\n   * For\xE7a verifica\xE7\xE3o de lembretes\n   */\n  async forcarVerificacao(): Promise<void> {\n    const agendador = obterAgendadorLembretes();\n    await agendador.forcarVerificacao();\n  },\n\n  /**\n   * Reagenda lembretes para uma avalia\xE7\xE3o espec\xEDfica\n   */\n  async reagendarAvaliacao(avaliacaoId: string): Promise<void> {\n    const agendador = obterAgendadorLembretes();\n    await agendador.reagendarAvaliacao(avaliacaoId);\n  },\n};\n\nexport type {\n  ConfiguracaoLembrete,\n  LembreteAgendado,\n  EstatisticasLembretes,\n};\n\nexport { AgendadorLembretes };"],
      names: ["AgendadorLembretes", "lembretesUtils", "obterAgendadorLembretes", "gerenciadorEmail", "obterGerenciadorEmail", "intervalos", "Map", "ativo", "configuracao", "diasAntecedencia", "horarioEnvio", "incluirFimDeSemana", "incluirFeriados", "agendadorEmail", "AgendadorEmail", "iniciar", "console", "log", "intervalo", "setInterval", "verificarLembretesPendentes", "catch", "error", "set", "parar", "forEach", "clearInterval", "clear", "atualizarConfiguracao", "novaConfiguracao", "reagendarTodosLembretes", "avaliacoesPendentes", "buscarAvaliacoesPendentes", "avaliacao", "processarLembretesAvaliacao", "enviarLembretesAgendados", "agora", "Date", "em30Dias", "addDays", "prisma", "findMany", "where", "status", "prazo", "gte", "lte", "include", "avaliado", "avaliador", "periodo", "prazoAvaliacao", "isBefore", "agendarLembreteVencimento", "dias", "dataLembrete", "isAfter", "agendarLembrete", "dataEnvio", "tipo", "lembreteExistente", "buscarLembreteExistente", "id", "avaliadorId", "dataEnvioComHorario", "ajustarHorarioEnvio", "isFimDeSemana", "criarRegistroLembrete", "avaliacaoId", "usuarioId", "enviado", "tentativas", "toISOString", "inicioHora", "startOfDay", "fimHora", "endOfDay", "lembretesParaEnviar", "buscarLembretesParaEnvio", "lembrete", "enviarLembrete", "findUnique", "Error", "resultado", "enviarEmailAvaliacaoPendente", "email", "nomeAvaliador", "nome", "nomeAvaliado", "cargoAvaliado", "cargo", "linkAvaliacao", "atualizarRegistroLembrete", "sucesso", "ultimaTentativa", "erro", "undefined", "criarNotificacaoLembrete", "message", "titulo", "descricao", "notificacao", "create", "data", "urgencia", "lida", "limparLembretesNaoEnviados", "horas", "minutos", "split", "map", "Number", "novaData", "setHours", "diaSemana", "getDay", "dados", "inicio", "fim", "obterEstatisticas", "totalAgendados", "totalEnviados", "totalPendentes", "totalFalhas", "proximosEnvios", "ultimosEnviados", "obterConfiguracao", "estaAtivo", "forcarVerificacao", "reagendarAvaliacao", "instanciaAgendador", "iniciarAutomatico", "agendador", "pararAgendador"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bb2d3c978ce1bc1857785355749e9384097e9b26"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2en0qbbi9j = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2en0qbbi9j();
cov_2en0qbbi9j().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2en0qbbi9j().f[0]++;
  cov_2en0qbbi9j().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2en0qbbi9j().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2en0qbbi9j().s[3]++;
_export(exports, {
  get AgendadorLembretes() {
    /* istanbul ignore next */
    cov_2en0qbbi9j().f[1]++;
    cov_2en0qbbi9j().s[4]++;
    return AgendadorLembretes;
  },
  get lembretesUtils() {
    /* istanbul ignore next */
    cov_2en0qbbi9j().f[2]++;
    cov_2en0qbbi9j().s[5]++;
    return lembretesUtils;
  },
  get obterAgendadorLembretes() {
    /* istanbul ignore next */
    cov_2en0qbbi9j().f[3]++;
    cov_2en0qbbi9j().s[6]++;
    return obterAgendadorLembretes;
  }
});
const _prisma =
/* istanbul ignore next */
(cov_2en0qbbi9j().s[7]++, require("../prisma"));
const _agendadoremail =
/* istanbul ignore next */
(cov_2en0qbbi9j().s[8]++, require("./agendador-email"));
const _emailnotificacoes =
/* istanbul ignore next */
(cov_2en0qbbi9j().s[9]++, require("../utils/email-notificacoes"));
const _datefns =
/* istanbul ignore next */
(cov_2en0qbbi9j().s[10]++, require("date-fns"));
class AgendadorLembretes {
  constructor() {
    /* istanbul ignore next */
    cov_2en0qbbi9j().f[4]++;
    cov_2en0qbbi9j().s[11]++;
    this.gerenciadorEmail = (0, _emailnotificacoes.obterGerenciadorEmail)();
    /* istanbul ignore next */
    cov_2en0qbbi9j().s[12]++;
    this.intervalos = new Map();
    /* istanbul ignore next */
    cov_2en0qbbi9j().s[13]++;
    this.ativo = false;
    /* istanbul ignore next */
    cov_2en0qbbi9j().s[14]++;
    this.configuracao = {
      diasAntecedencia: [7, 3, 1],
      horarioEnvio: '09:00',
      ativo: true,
      incluirFimDeSemana: false,
      incluirFeriados: false
    };
    /* istanbul ignore next */
    cov_2en0qbbi9j().s[15]++;
    this.agendadorEmail = new _agendadoremail.AgendadorEmail();
  }
  /**
  * Inicia o agendador de lembretes
  */
  async iniciar() {
    /* istanbul ignore next */
    cov_2en0qbbi9j().f[5]++;
    cov_2en0qbbi9j().s[16]++;
    if (this.ativo) {
      /* istanbul ignore next */
      cov_2en0qbbi9j().b[0][0]++;
      cov_2en0qbbi9j().s[17]++;
      console.log('Agendador de lembretes já está ativo');
      /* istanbul ignore next */
      cov_2en0qbbi9j().s[18]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2en0qbbi9j().b[0][1]++;
    }
    cov_2en0qbbi9j().s[19]++;
    this.ativo = true;
    /* istanbul ignore next */
    cov_2en0qbbi9j().s[20]++;
    console.log('Iniciando agendador de lembretes...');
    // Agendar verificação a cada hora
    const intervalo =
    /* istanbul ignore next */
    (cov_2en0qbbi9j().s[21]++, setInterval(() => {
      /* istanbul ignore next */
      cov_2en0qbbi9j().f[6]++;
      cov_2en0qbbi9j().s[22]++;
      this.verificarLembretesPendentes().catch(console.error);
    }, 60 * 60 * 1000)); // 1 hora
    /* istanbul ignore next */
    cov_2en0qbbi9j().s[23]++;
    this.intervalos.set('verificacao-principal', intervalo);
    // Executar verificação inicial
    /* istanbul ignore next */
    cov_2en0qbbi9j().s[24]++;
    await this.verificarLembretesPendentes();
    /* istanbul ignore next */
    cov_2en0qbbi9j().s[25]++;
    console.log('Agendador de lembretes iniciado com sucesso');
  }
  /**
  * Para o agendador de lembretes
  */
  parar() {
    /* istanbul ignore next */
    cov_2en0qbbi9j().f[7]++;
    cov_2en0qbbi9j().s[26]++;
    if (!this.ativo) {
      /* istanbul ignore next */
      cov_2en0qbbi9j().b[1][0]++;
      cov_2en0qbbi9j().s[27]++;
      console.log('Agendador de lembretes já está parado');
      /* istanbul ignore next */
      cov_2en0qbbi9j().s[28]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2en0qbbi9j().b[1][1]++;
    }
    cov_2en0qbbi9j().s[29]++;
    this.ativo = false;
    // Limpar todos os intervalos
    /* istanbul ignore next */
    cov_2en0qbbi9j().s[30]++;
    this.intervalos.forEach(intervalo => {
      /* istanbul ignore next */
      cov_2en0qbbi9j().f[8]++;
      cov_2en0qbbi9j().s[31]++;
      clearInterval(intervalo);
    });
    /* istanbul ignore next */
    cov_2en0qbbi9j().s[32]++;
    this.intervalos.clear();
    /* istanbul ignore next */
    cov_2en0qbbi9j().s[33]++;
    console.log('Agendador de lembretes parado');
  }
  /**
  * Atualiza a configuração do agendador
  */
  async atualizarConfiguracao(novaConfiguracao) {
    /* istanbul ignore next */
    cov_2en0qbbi9j().f[9]++;
    cov_2en0qbbi9j().s[34]++;
    this.configuracao = {
      ...this.configuracao,
      ...novaConfiguracao
    };
    // Reagendar lembretes se necessário
    /* istanbul ignore next */
    cov_2en0qbbi9j().s[35]++;
    if (this.ativo) {
      /* istanbul ignore next */
      cov_2en0qbbi9j().b[2][0]++;
      cov_2en0qbbi9j().s[36]++;
      await this.reagendarTodosLembretes();
    } else
    /* istanbul ignore next */
    {
      cov_2en0qbbi9j().b[2][1]++;
    }
    cov_2en0qbbi9j().s[37]++;
    console.log('Configuração do agendador atualizada:', this.configuracao);
  }
  /**
  * Verifica e processa lembretes pendentes
  */
  async verificarLembretesPendentes() {
    /* istanbul ignore next */
    cov_2en0qbbi9j().f[10]++;
    cov_2en0qbbi9j().s[38]++;
    if (!this.configuracao.ativo) {
      /* istanbul ignore next */
      cov_2en0qbbi9j().b[3][0]++;
      cov_2en0qbbi9j().s[39]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2en0qbbi9j().b[3][1]++;
    }
    cov_2en0qbbi9j().s[40]++;
    try {
      /* istanbul ignore next */
      cov_2en0qbbi9j().s[41]++;
      console.log('Verificando lembretes pendentes...');
      // Buscar avaliações que precisam de lembretes
      const avaliacoesPendentes =
      /* istanbul ignore next */
      (cov_2en0qbbi9j().s[42]++, await this.buscarAvaliacoesPendentes());
      /* istanbul ignore next */
      cov_2en0qbbi9j().s[43]++;
      for (const avaliacao of avaliacoesPendentes) {
        /* istanbul ignore next */
        cov_2en0qbbi9j().s[44]++;
        await this.processarLembretesAvaliacao(avaliacao);
      }
      // Enviar lembretes agendados para agora
      /* istanbul ignore next */
      cov_2en0qbbi9j().s[45]++;
      await this.enviarLembretesAgendados();
    } catch (error) {
      /* istanbul ignore next */
      cov_2en0qbbi9j().s[46]++;
      console.error('Erro ao verificar lembretes pendentes:', error);
    }
  }
  /**
  * Busca avaliações que precisam de lembretes
  */
  async buscarAvaliacoesPendentes() {
    /* istanbul ignore next */
    cov_2en0qbbi9j().f[11]++;
    const agora =
    /* istanbul ignore next */
    (cov_2en0qbbi9j().s[47]++, new Date());
    const em30Dias =
    /* istanbul ignore next */
    (cov_2en0qbbi9j().s[48]++, (0, _datefns.addDays)(agora, 30)); // Buscar avaliações com prazo nos próximos 30 dias
    /* istanbul ignore next */
    cov_2en0qbbi9j().s[49]++;
    return await _prisma.prisma.avaliacao.findMany({
      where: {
        status: 'PENDENTE',
        prazo: {
          gte: agora,
          lte: em30Dias
        }
      },
      include: {
        avaliado: true,
        avaliador: true,
        periodo: true
      }
    });
  }
  /**
  * Processa lembretes para uma avaliação específica
  */
  async processarLembretesAvaliacao(avaliacao) {
    /* istanbul ignore next */
    cov_2en0qbbi9j().f[12]++;
    const agora =
    /* istanbul ignore next */
    (cov_2en0qbbi9j().s[50]++, new Date());
    const prazoAvaliacao =
    /* istanbul ignore next */
    (cov_2en0qbbi9j().s[51]++, new Date(avaliacao.prazo));
    // Verificar se já passou do prazo
    /* istanbul ignore next */
    cov_2en0qbbi9j().s[52]++;
    if ((0, _datefns.isBefore)(prazoAvaliacao, agora)) {
      /* istanbul ignore next */
      cov_2en0qbbi9j().b[4][0]++;
      cov_2en0qbbi9j().s[53]++;
      await this.agendarLembreteVencimento(avaliacao);
      /* istanbul ignore next */
      cov_2en0qbbi9j().s[54]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_2en0qbbi9j().b[4][1]++;
    }
    // Agendar lembretes de antecedência
    cov_2en0qbbi9j().s[55]++;
    for (const dias of this.configuracao.diasAntecedencia) {
      const dataLembrete =
      /* istanbul ignore next */
      (cov_2en0qbbi9j().s[56]++, (0, _datefns.addDays)(prazoAvaliacao, -dias));
      /* istanbul ignore next */
      cov_2en0qbbi9j().s[57]++;
      if ((0, _datefns.isAfter)(dataLembrete, agora)) {
        /* istanbul ignore next */
        cov_2en0qbbi9j().b[5][0]++;
        cov_2en0qbbi9j().s[58]++;
        await this.agendarLembrete(avaliacao, dataLembrete, 'lembrete');
      } else
      /* istanbul ignore next */
      {
        cov_2en0qbbi9j().b[5][1]++;
      }
    }
  }
  /**
  * Agenda um lembrete específico
  */
  async agendarLembrete(avaliacao, dataEnvio, tipo) {
    /* istanbul ignore next */
    cov_2en0qbbi9j().f[13]++;
    // Verificar se já existe um lembrete agendado
    const lembreteExistente =
    /* istanbul ignore next */
    (cov_2en0qbbi9j().s[59]++, await this.buscarLembreteExistente(avaliacao.id, avaliacao.avaliadorId, tipo, dataEnvio));
    /* istanbul ignore next */
    cov_2en0qbbi9j().s[60]++;
    if (lembreteExistente) {
      /* istanbul ignore next */
      cov_2en0qbbi9j().b[6][0]++;
      cov_2en0qbbi9j().s[61]++;
      return; // Já existe
    } else
    /* istanbul ignore next */
    {
      cov_2en0qbbi9j().b[6][1]++;
    }
    // Ajustar horário de envio
    const dataEnvioComHorario =
    /* istanbul ignore next */
    (cov_2en0qbbi9j().s[62]++, this.ajustarHorarioEnvio(dataEnvio));
    // Verificar se é dia útil (se configurado)
    /* istanbul ignore next */
    cov_2en0qbbi9j().s[63]++;
    if (
    /* istanbul ignore next */
    (cov_2en0qbbi9j().b[8][0]++, !this.configuracao.incluirFimDeSemana) &&
    /* istanbul ignore next */
    (cov_2en0qbbi9j().b[8][1]++, this.isFimDeSemana(dataEnvioComHorario))) {
      /* istanbul ignore next */
      cov_2en0qbbi9j().b[7][0]++;
      cov_2en0qbbi9j().s[64]++;
      return; // Pular fim de semana
    } else
    /* istanbul ignore next */
    {
      cov_2en0qbbi9j().b[7][1]++;
    }
    // Criar registro do lembrete
    cov_2en0qbbi9j().s[65]++;
    await this.criarRegistroLembrete({
      avaliacaoId: avaliacao.id,
      usuarioId: avaliacao.avaliadorId,
      tipo,
      dataEnvio: dataEnvioComHorario,
      enviado: false,
      tentativas: 0
    });
    /* istanbul ignore next */
    cov_2en0qbbi9j().s[66]++;
    console.log(`Lembrete ${tipo} agendado para ${dataEnvioComHorario.toISOString()}`);
  }
  /**
  * Agenda lembrete de vencimento
  */
  async agendarLembreteVencimento(avaliacao) {
    /* istanbul ignore next */
    cov_2en0qbbi9j().f[14]++;
    const agora =
    /* istanbul ignore next */
    (cov_2en0qbbi9j().s[67]++, new Date());
    /* istanbul ignore next */
    cov_2en0qbbi9j().s[68]++;
    await this.agendarLembrete(avaliacao, agora, 'vencimento');
  }
  /**
  * Envia lembretes que estão agendados para agora
  */
  async enviarLembretesAgendados() {
    /* istanbul ignore next */
    cov_2en0qbbi9j().f[15]++;
    const agora =
    /* istanbul ignore next */
    (cov_2en0qbbi9j().s[69]++, new Date());
    const inicioHora =
    /* istanbul ignore next */
    (cov_2en0qbbi9j().s[70]++, (0, _datefns.startOfDay)(agora));
    const fimHora =
    /* istanbul ignore next */
    (cov_2en0qbbi9j().s[71]++, (0, _datefns.endOfDay)(agora));
    // Buscar lembretes agendados para hoje
    const lembretesParaEnviar =
    /* istanbul ignore next */
    (cov_2en0qbbi9j().s[72]++, await this.buscarLembretesParaEnvio(inicioHora, fimHora));
    /* istanbul ignore next */
    cov_2en0qbbi9j().s[73]++;
    for (const lembrete of lembretesParaEnviar) {
      /* istanbul ignore next */
      cov_2en0qbbi9j().s[74]++;
      await this.enviarLembrete(lembrete);
    }
  }
  /**
  * Envia um lembrete específico
  */
  async enviarLembrete(lembrete) {
    /* istanbul ignore next */
    cov_2en0qbbi9j().f[16]++;
    cov_2en0qbbi9j().s[75]++;
    try {
      /* istanbul ignore next */
      cov_2en0qbbi9j().s[76]++;
      console.log(`Enviando lembrete ${lembrete.tipo} para usuário ${lembrete.usuarioId}`);
      // Buscar dados da avaliação
      const avaliacao =
      /* istanbul ignore next */
      (cov_2en0qbbi9j().s[77]++, await _prisma.prisma.avaliacao.findUnique({
        where: {
          id: lembrete.avaliacaoId
        },
        include: {
          avaliado: true,
          avaliador: true,
          periodo: true
        }
      }));
      /* istanbul ignore next */
      cov_2en0qbbi9j().s[78]++;
      if (!avaliacao) {
        /* istanbul ignore next */
        cov_2en0qbbi9j().b[9][0]++;
        cov_2en0qbbi9j().s[79]++;
        throw new Error('Avaliação não encontrada');
      } else
      /* istanbul ignore next */
      {
        cov_2en0qbbi9j().b[9][1]++;
      }
      // Enviar e-mail
      const resultado =
      /* istanbul ignore next */
      (cov_2en0qbbi9j().s[80]++, await this.gerenciadorEmail.enviarEmailAvaliacaoPendente(avaliacao.avaliador.email, {
        nomeAvaliador: avaliacao.avaliador.nome,
        nomeAvaliado: avaliacao.avaliado.nome,
        cargoAvaliado:
        /* istanbul ignore next */
        (cov_2en0qbbi9j().b[10][0]++, avaliacao.avaliado.cargo) ||
        /* istanbul ignore next */
        (cov_2en0qbbi9j().b[10][1]++, 'Não informado'),
        prazo: avaliacao.prazo,
        linkAvaliacao: `/avaliacoes/${avaliacao.id}`,
        periodo: avaliacao.periodo.nome
      }));
      // Atualizar registro do lembrete
      /* istanbul ignore next */
      cov_2en0qbbi9j().s[81]++;
      await this.atualizarRegistroLembrete(lembrete.id, {
        enviado: resultado.sucesso,
        tentativas: lembrete.tentativas + 1,
        ultimaTentativa: new Date(),
        erro: resultado.sucesso ?
        /* istanbul ignore next */
        (cov_2en0qbbi9j().b[11][0]++, undefined) :
        /* istanbul ignore next */
        (cov_2en0qbbi9j().b[11][1]++, resultado.erro)
      });
      // Criar notificação no sistema
      /* istanbul ignore next */
      cov_2en0qbbi9j().s[82]++;
      await this.criarNotificacaoLembrete(avaliacao, lembrete.tipo);
      /* istanbul ignore next */
      cov_2en0qbbi9j().s[83]++;
      console.log(`Lembrete ${lembrete.tipo} enviado com sucesso`);
    } catch (error) {
      /* istanbul ignore next */
      cov_2en0qbbi9j().s[84]++;
      console.error(`Erro ao enviar lembrete ${lembrete.id}:`, error);
      // Atualizar registro com erro
      /* istanbul ignore next */
      cov_2en0qbbi9j().s[85]++;
      await this.atualizarRegistroLembrete(lembrete.id, {
        tentativas: lembrete.tentativas + 1,
        ultimaTentativa: new Date(),
        erro: error instanceof Error ?
        /* istanbul ignore next */
        (cov_2en0qbbi9j().b[12][0]++, error.message) :
        /* istanbul ignore next */
        (cov_2en0qbbi9j().b[12][1]++, 'Erro desconhecido')
      });
    }
  }
  /**
  * Cria notificação no sistema para o lembrete
  */
  async criarNotificacaoLembrete(avaliacao, tipo) {
    /* istanbul ignore next */
    cov_2en0qbbi9j().f[17]++;
    const titulo =
    /* istanbul ignore next */
    (cov_2en0qbbi9j().s[86]++, tipo === 'lembrete' ?
    /* istanbul ignore next */
    (cov_2en0qbbi9j().b[13][0]++, 'Lembrete: Avaliação Pendente') :
    /* istanbul ignore next */
    (cov_2en0qbbi9j().b[13][1]++, 'Avaliação Vencida'));
    const descricao =
    /* istanbul ignore next */
    (cov_2en0qbbi9j().s[87]++, tipo === 'lembrete' ?
    /* istanbul ignore next */
    (cov_2en0qbbi9j().b[14][0]++, `Você tem uma avaliação pendente de ${avaliacao.avaliado.nome}`) :
    /* istanbul ignore next */
    (cov_2en0qbbi9j().b[14][1]++, `A avaliação de ${avaliacao.avaliado.nome} está vencida`));
    /* istanbul ignore next */
    cov_2en0qbbi9j().s[88]++;
    await _prisma.prisma.notificacao.create({
      data: {
        titulo,
        descricao,
        tipo: tipo === 'lembrete' ?
        /* istanbul ignore next */
        (cov_2en0qbbi9j().b[15][0]++, 'lembrete') :
        /* istanbul ignore next */
        (cov_2en0qbbi9j().b[15][1]++, 'vencida'),
        urgencia: tipo === 'lembrete' ?
        /* istanbul ignore next */
        (cov_2en0qbbi9j().b[16][0]++, 'media') :
        /* istanbul ignore next */
        (cov_2en0qbbi9j().b[16][1]++, 'alta'),
        usuarioId: avaliacao.avaliadorId,
        avaliacaoId: avaliacao.id,
        lida: false,
        prazo: avaliacao.prazo
      }
    });
  }
  /**
  * Reagenda todos os lembretes
  */
  async reagendarTodosLembretes() {
    /* istanbul ignore next */
    cov_2en0qbbi9j().f[18]++;
    cov_2en0qbbi9j().s[89]++;
    console.log('Reagendando todos os lembretes...');
    // Limpar lembretes não enviados
    /* istanbul ignore next */
    cov_2en0qbbi9j().s[90]++;
    await this.limparLembretesNaoEnviados();
    // Reprocessar avaliações pendentes
    /* istanbul ignore next */
    cov_2en0qbbi9j().s[91]++;
    await this.verificarLembretesPendentes();
  }
  /**
  * Utilitários
  */
  ajustarHorarioEnvio(data) {
    /* istanbul ignore next */
    cov_2en0qbbi9j().f[19]++;
    const [horas, minutos] =
    /* istanbul ignore next */
    (cov_2en0qbbi9j().s[92]++, this.configuracao.horarioEnvio.split(':').map(Number));
    const novaData =
    /* istanbul ignore next */
    (cov_2en0qbbi9j().s[93]++, new Date(data));
    /* istanbul ignore next */
    cov_2en0qbbi9j().s[94]++;
    novaData.setHours(horas, minutos, 0, 0);
    /* istanbul ignore next */
    cov_2en0qbbi9j().s[95]++;
    return novaData;
  }
  isFimDeSemana(data) {
    /* istanbul ignore next */
    cov_2en0qbbi9j().f[20]++;
    const diaSemana =
    /* istanbul ignore next */
    (cov_2en0qbbi9j().s[96]++, data.getDay());
    /* istanbul ignore next */
    cov_2en0qbbi9j().s[97]++;
    return /* istanbul ignore next */(cov_2en0qbbi9j().b[17][0]++, diaSemana === 0) ||
    /* istanbul ignore next */
    (cov_2en0qbbi9j().b[17][1]++, diaSemana === 6); // Domingo ou Sábado
  }
  /**
  * Métodos de banco de dados
  */
  async buscarLembreteExistente(avaliacaoId, usuarioId, tipo, dataEnvio) {
    /* istanbul ignore next */
    cov_2en0qbbi9j().f[21]++;
    cov_2en0qbbi9j().s[98]++;
    // Implementar busca no banco de dados
    // Por enquanto, retorna null (assumindo que não existe)
    return null;
  }
  async criarRegistroLembrete(dados) {
    /* istanbul ignore next */
    cov_2en0qbbi9j().f[22]++;
    cov_2en0qbbi9j().s[99]++;
    // Implementar criação no banco de dados
    console.log('Criando registro de lembrete:', dados);
  }
  async atualizarRegistroLembrete(id, dados) {
    /* istanbul ignore next */
    cov_2en0qbbi9j().f[23]++;
    cov_2en0qbbi9j().s[100]++;
    // Implementar atualização no banco de dados
    console.log('Atualizando registro de lembrete:', id, dados);
  }
  async buscarLembretesParaEnvio(inicio, fim) {
    /* istanbul ignore next */
    cov_2en0qbbi9j().f[24]++;
    cov_2en0qbbi9j().s[101]++;
    // Implementar busca no banco de dados
    // Por enquanto, retorna array vazio
    return [];
  }
  async limparLembretesNaoEnviados() {
    /* istanbul ignore next */
    cov_2en0qbbi9j().f[25]++;
    cov_2en0qbbi9j().s[102]++;
    // Implementar limpeza no banco de dados
    console.log('Limpando lembretes não enviados');
  }
  /**
  * Métodos públicos para estatísticas e controle
  */
  async obterEstatisticas() {
    /* istanbul ignore next */
    cov_2en0qbbi9j().f[26]++;
    cov_2en0qbbi9j().s[103]++;
    // Implementar busca de estatísticas
    return {
      totalAgendados: 0,
      totalEnviados: 0,
      totalPendentes: 0,
      totalFalhas: 0,
      proximosEnvios: [],
      ultimosEnviados: []
    };
  }
  obterConfiguracao() {
    /* istanbul ignore next */
    cov_2en0qbbi9j().f[27]++;
    cov_2en0qbbi9j().s[104]++;
    return {
      ...this.configuracao
    };
  }
  estaAtivo() {
    /* istanbul ignore next */
    cov_2en0qbbi9j().f[28]++;
    cov_2en0qbbi9j().s[105]++;
    return this.ativo;
  }
  async forcarVerificacao() {
    /* istanbul ignore next */
    cov_2en0qbbi9j().f[29]++;
    cov_2en0qbbi9j().s[106]++;
    await this.verificarLembretesPendentes();
  }
  async reagendarAvaliacao(avaliacaoId) {
    /* istanbul ignore next */
    cov_2en0qbbi9j().f[30]++;
    const avaliacao =
    /* istanbul ignore next */
    (cov_2en0qbbi9j().s[107]++, await _prisma.prisma.avaliacao.findUnique({
      where: {
        id: avaliacaoId
      },
      include: {
        avaliado: true,
        avaliador: true,
        periodo: true
      }
    }));
    /* istanbul ignore next */
    cov_2en0qbbi9j().s[108]++;
    if (avaliacao) {
      /* istanbul ignore next */
      cov_2en0qbbi9j().b[18][0]++;
      cov_2en0qbbi9j().s[109]++;
      await this.processarLembretesAvaliacao(avaliacao);
    } else
    /* istanbul ignore next */
    {
      cov_2en0qbbi9j().b[18][1]++;
    }
  }
}
// Instância singleton
let instanciaAgendador =
/* istanbul ignore next */
(cov_2en0qbbi9j().s[110]++, null);
function obterAgendadorLembretes() {
  /* istanbul ignore next */
  cov_2en0qbbi9j().f[31]++;
  cov_2en0qbbi9j().s[111]++;
  if (!instanciaAgendador) {
    /* istanbul ignore next */
    cov_2en0qbbi9j().b[19][0]++;
    cov_2en0qbbi9j().s[112]++;
    instanciaAgendador = new AgendadorLembretes();
  } else
  /* istanbul ignore next */
  {
    cov_2en0qbbi9j().b[19][1]++;
  }
  cov_2en0qbbi9j().s[113]++;
  return instanciaAgendador;
}
const lembretesUtils =
/* istanbul ignore next */
(cov_2en0qbbi9j().s[114]++, {
  /**
  * Inicia o agendador automaticamente
  */
  async iniciarAutomatico() {
    /* istanbul ignore next */
    cov_2en0qbbi9j().f[32]++;
    const agendador =
    /* istanbul ignore next */
    (cov_2en0qbbi9j().s[115]++, obterAgendadorLembretes());
    /* istanbul ignore next */
    cov_2en0qbbi9j().s[116]++;
    await agendador.iniciar();
  },
  /**
  * Para o agendador
  */
  pararAgendador() {
    /* istanbul ignore next */
    cov_2en0qbbi9j().f[33]++;
    const agendador =
    /* istanbul ignore next */
    (cov_2en0qbbi9j().s[117]++, obterAgendadorLembretes());
    /* istanbul ignore next */
    cov_2en0qbbi9j().s[118]++;
    agendador.parar();
  },
  /**
  * Força verificação de lembretes
  */
  async forcarVerificacao() {
    /* istanbul ignore next */
    cov_2en0qbbi9j().f[34]++;
    const agendador =
    /* istanbul ignore next */
    (cov_2en0qbbi9j().s[119]++, obterAgendadorLembretes());
    /* istanbul ignore next */
    cov_2en0qbbi9j().s[120]++;
    await agendador.forcarVerificacao();
  },
  /**
  * Reagenda lembretes para uma avaliação específica
  */
  async reagendarAvaliacao(avaliacaoId) {
    /* istanbul ignore next */
    cov_2en0qbbi9j().f[35]++;
    const agendador =
    /* istanbul ignore next */
    (cov_2en0qbbi9j().s[121]++, obterAgendadorLembretes());
    /* istanbul ignore next */
    cov_2en0qbbi9j().s[122]++;
    await agendador.reagendarAvaliacao(avaliacaoId);
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,