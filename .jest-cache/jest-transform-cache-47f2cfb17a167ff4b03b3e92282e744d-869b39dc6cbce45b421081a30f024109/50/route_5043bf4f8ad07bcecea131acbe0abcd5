9f89277108d45bd33f5fdf0d09cb2c33
"use strict";

/* istanbul ignore next */
function cov_211kgoml3q() {
  var path = "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\preferencias-notificacao\\pausar\\route.ts";
  var hash = "840fa825068e564f0204f2c29b20855538c4586f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\preferencias-notificacao\\pausar\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 22
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 19
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 20
        }
      },
      "7": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 38
        }
      },
      "8": {
        start: {
          line: 23,
          column: 18
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "9": {
        start: {
          line: 24,
          column: 15
        },
        end: {
          line: 24,
          column: 56
        }
      },
      "10": {
        start: {
          line: 25,
          column: 33
        },
        end: {
          line: 25,
          column: 93
        }
      },
      "11": {
        start: {
          line: 26,
          column: 13
        },
        end: {
          line: 26,
          column: 27
        }
      },
      "12": {
        start: {
          line: 28,
          column: 21
        },
        end: {
          line: 32,
          column: 2
        }
      },
      "13": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 80,
          column: 5
        }
      },
      "14": {
        start: {
          line: 35,
          column: 24
        },
        end: {
          line: 35,
          column: 81
        }
      },
      "15": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 42,
          column: 9
        }
      },
      "16": {
        start: {
          line: 37,
          column: 12
        },
        end: {
          line: 41,
          column: 15
        }
      },
      "17": {
        start: {
          line: 43,
          column: 21
        },
        end: {
          line: 43,
          column: 41
        }
      },
      "18": {
        start: {
          line: 45,
          column: 33
        },
        end: {
          line: 45,
          column: 61
        }
      },
      "19": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "20": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 52,
          column: 15
        }
      },
      "21": {
        start: {
          line: 54,
          column: 48
        },
        end: {
          line: 54,
          column: 69
        }
      },
      "22": {
        start: {
          line: 56,
          column: 23
        },
        end: {
          line: 56,
          column: 69
        }
      },
      "23": {
        start: {
          line: 57,
          column: 20
        },
        end: {
          line: 57,
          column: 37
        }
      },
      "24": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 65,
          column: 9
        }
      },
      "25": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 64,
          column: 15
        }
      },
      "26": {
        start: {
          line: 66,
          column: 40
        },
        end: {
          line: 66,
          column: 158
        }
      },
      "27": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 71,
          column: 11
        }
      },
      "28": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 61
        }
      },
      "29": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 79,
          column: 11
        }
      },
      "30": {
        start: {
          line: 83,
          column: 4
        },
        end: {
          line: 106,
          column: 5
        }
      },
      "31": {
        start: {
          line: 84,
          column: 24
        },
        end: {
          line: 84,
          column: 81
        }
      },
      "32": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 91,
          column: 9
        }
      },
      "33": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 90,
          column: 15
        }
      },
      "34": {
        start: {
          line: 92,
          column: 40
        },
        end: {
          line: 92,
          column: 138
        }
      },
      "35": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 97,
          column: 11
        }
      },
      "36": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 99,
          column: 62
        }
      },
      "37": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 105,
          column: 11
        }
      },
      "38": {
        start: {
          line: 109,
          column: 4
        },
        end: {
          line: 133,
          column: 5
        }
      },
      "39": {
        start: {
          line: 110,
          column: 24
        },
        end: {
          line: 110,
          column: 81
        }
      },
      "40": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 117,
          column: 9
        }
      },
      "41": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 116,
          column: 15
        }
      },
      "42": {
        start: {
          line: 118,
          column: 25
        },
        end: {
          line: 118,
          column: 133
        }
      },
      "43": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 124,
          column: 11
        }
      },
      "44": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 67
        }
      },
      "45": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 132,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 18
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 15
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 16
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "POST",
        decl: {
          start: {
            line: 33,
            column: 15
          },
          end: {
            line: 33,
            column: 19
          }
        },
        loc: {
          start: {
            line: 33,
            column: 29
          },
          end: {
            line: 81,
            column: 1
          }
        },
        line: 33
      },
      "5": {
        name: "DELETE",
        decl: {
          start: {
            line: 82,
            column: 15
          },
          end: {
            line: 82,
            column: 21
          }
        },
        loc: {
          start: {
            line: 82,
            column: 31
          },
          end: {
            line: 107,
            column: 1
          }
        },
        line: 82
      },
      "6": {
        name: "GET",
        decl: {
          start: {
            line: 108,
            column: 15
          },
          end: {
            line: 108,
            column: 18
          }
        },
        loc: {
          start: {
            line: 108,
            column: 28
          },
          end: {
            line: 134,
            column: 1
          }
        },
        line: 108
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 42,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "1": {
        loc: {
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "2": {
        loc: {
          start: {
            line: 56,
            column: 23
          },
          end: {
            line: 56,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 56,
            column: 36
          },
          end: {
            line: 56,
            column: 56
          }
        }, {
          start: {
            line: 56,
            column: 59
          },
          end: {
            line: 56,
            column: 69
          }
        }],
        line: 56
      },
      "3": {
        loc: {
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "4": {
        loc: {
          start: {
            line: 76,
            column: 21
          },
          end: {
            line: 76,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 76,
            column: 46
          },
          end: {
            line: 76,
            column: 59
          }
        }, {
          start: {
            line: 76,
            column: 62
          },
          end: {
            line: 76,
            column: 81
          }
        }],
        line: 76
      },
      "5": {
        loc: {
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "6": {
        loc: {
          start: {
            line: 102,
            column: 21
          },
          end: {
            line: 102,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 102,
            column: 46
          },
          end: {
            line: 102,
            column: 59
          }
        }, {
          start: {
            line: 102,
            column: 62
          },
          end: {
            line: 102,
            column: 81
          }
        }],
        line: 102
      },
      "7": {
        loc: {
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 117,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 111
      },
      "8": {
        loc: {
          start: {
            line: 129,
            column: 21
          },
          end: {
            line: 129,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 129,
            column: 46
          },
          end: {
            line: 129,
            column: 59
          }
        }, {
          start: {
            line: 129,
            column: 62
          },
          end: {
            line: 129,
            column: 81
          }
        }],
        line: 129
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\preferencias-notificacao\\pausar\\route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { getServerSession } from 'next-auth';\nimport { authOptions } from '../../auth/[...nextauth]/route';\nimport { PreferenciasNotificacaoService } from '@/lib/services/preferencias-notificacao';\nimport { z } from 'zod';\n\n// Schema de valida\xE7\xE3o para pausar notifica\xE7\xF5es\nconst pausarSchema = z.object({\n  dataInicio: z.string().datetime().optional(),\n  dataFim: z.string().datetime(),\n  motivo: z.string().optional(),\n});\n\n/**\n * POST /api/preferencias-notificacao/pausar\n * Pausa as notifica\xE7\xF5es por um per\xEDodo espec\xEDfico\n */\nexport async function POST(request: NextRequest) {\n  try {\n    const session = await getServerSession(authOptions);\n    \n    if (!session?.user?.id) {\n      return NextResponse.json(\n        { error: 'N\xE3o autorizado' },\n        { status: 401 }\n      );\n    }\n\n    const body = await request.json();\n    \n    // Valida\xE7\xE3o dos dados\n    const validationResult = pausarSchema.safeParse(body);\n    if (!validationResult.success) {\n      return NextResponse.json(\n        { \n          error: 'Dados inv\xE1lidos',\n          details: validationResult.error.errors\n        },\n        { status: 400 }\n      );\n    }\n\n    const { dataInicio, dataFim, motivo } = validationResult.data;\n    \n    // Converte strings para Date\n    const inicio = dataInicio ? new Date(dataInicio) : new Date();\n    const fim = new Date(dataFim);\n    \n    // Valida\xE7\xE3o de datas\n    if (fim <= inicio) {\n      return NextResponse.json(\n        { error: 'Data de fim deve ser posterior \xE0 data de in\xEDcio' },\n        { status: 400 }\n      );\n    }\n\n    const preferenciasAtualizadas = await PreferenciasNotificacaoService.pausarNotificacoes(\n      session.user.id,\n      inicio,\n      fim,\n      motivo\n    );\n\n    return NextResponse.json({\n      success: true,\n      data: preferenciasAtualizadas,\n      message: `Notifica\xE7\xF5es pausadas at\xE9 ${fim.toLocaleDateString('pt-BR')}`,\n    });\n  } catch (error) {\n    console.error('Erro ao pausar notifica\xE7\xF5es:', error);\n    return NextResponse.json(\n      { \n        error: 'Erro interno do servidor',\n        details: error instanceof Error ? error.message : 'Erro desconhecido'\n      },\n      { status: 500 }\n    );\n  }\n}\n\n/**\n * DELETE /api/preferencias-notificacao/pausar\n * Retoma as notifica\xE7\xF5es (remove pausa)\n */\nexport async function DELETE(request: NextRequest) {\n  try {\n    const session = await getServerSession(authOptions);\n    \n    if (!session?.user?.id) {\n      return NextResponse.json(\n        { error: 'N\xE3o autorizado' },\n        { status: 401 }\n      );\n    }\n\n    const preferenciasAtualizadas = await PreferenciasNotificacaoService.retomarNotificacoes(\n      session.user.id\n    );\n\n    return NextResponse.json({\n      success: true,\n      data: preferenciasAtualizadas,\n      message: 'Notifica\xE7\xF5es retomadas com sucesso',\n    });\n  } catch (error) {\n    console.error('Erro ao retomar notifica\xE7\xF5es:', error);\n    return NextResponse.json(\n      { \n        error: 'Erro interno do servidor',\n        details: error instanceof Error ? error.message : 'Erro desconhecido'\n      },\n      { status: 500 }\n    );\n  }\n}\n\n/**\n * GET /api/preferencias-notificacao/pausar\n * Verifica se as notifica\xE7\xF5es est\xE3o pausadas\n */\nexport async function GET(request: NextRequest) {\n  try {\n    const session = await getServerSession(authOptions);\n    \n    if (!session?.user?.id) {\n      return NextResponse.json(\n        { error: 'N\xE3o autorizado' },\n        { status: 401 }\n      );\n    }\n\n    const pausadas = await PreferenciasNotificacaoService.verificarNotificacoesPausadas(\n      session.user.id\n    );\n\n    return NextResponse.json({\n      success: true,\n      data: { pausadas },\n    });\n  } catch (error) {\n    console.error('Erro ao verificar status de pausa:', error);\n    return NextResponse.json(\n      { \n        error: 'Erro interno do servidor',\n        details: error instanceof Error ? error.message : 'Erro desconhecido'\n      },\n      { status: 500 }\n    );\n  }\n}"],
      names: ["DELETE", "GET", "POST", "pausarSchema", "z", "object", "dataInicio", "string", "datetime", "optional", "dataFim", "motivo", "request", "session", "getServerSession", "authOptions", "user", "id", "NextResponse", "json", "error", "status", "body", "validationResult", "safeParse", "success", "details", "errors", "data", "inicio", "Date", "fim", "preferenciasAtualizadas", "PreferenciasNotificacaoService", "pausarNotificacoes", "message", "toLocaleDateString", "console", "Error", "retomarNotificacoes", "pausadas", "verificarNotificacoesPausadas"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "840fa825068e564f0204f2c29b20855538c4586f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_211kgoml3q = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_211kgoml3q();
cov_211kgoml3q().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_211kgoml3q().f[0]++;
  cov_211kgoml3q().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_211kgoml3q().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_211kgoml3q().s[3]++;
_export(exports, {
  get DELETE() {
    /* istanbul ignore next */
    cov_211kgoml3q().f[1]++;
    cov_211kgoml3q().s[4]++;
    return DELETE;
  },
  get GET() {
    /* istanbul ignore next */
    cov_211kgoml3q().f[2]++;
    cov_211kgoml3q().s[5]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_211kgoml3q().f[3]++;
    cov_211kgoml3q().s[6]++;
    return POST;
  }
});
const _server =
/* istanbul ignore next */
(cov_211kgoml3q().s[7]++, require("next/server"));
const _nextauth =
/* istanbul ignore next */
(cov_211kgoml3q().s[8]++, require("next-auth"));
const _route =
/* istanbul ignore next */
(cov_211kgoml3q().s[9]++, require("../../auth/[...nextauth]/route"));
const _preferenciasnotificacao =
/* istanbul ignore next */
(cov_211kgoml3q().s[10]++, require("../../../../lib/services/preferencias-notificacao"));
const _zod =
/* istanbul ignore next */
(cov_211kgoml3q().s[11]++, require("zod"));
// Schema de validação para pausar notificações
const pausarSchema =
/* istanbul ignore next */
(cov_211kgoml3q().s[12]++, _zod.z.object({
  dataInicio: _zod.z.string().datetime().optional(),
  dataFim: _zod.z.string().datetime(),
  motivo: _zod.z.string().optional()
}));
async function POST(request) {
  /* istanbul ignore next */
  cov_211kgoml3q().f[4]++;
  cov_211kgoml3q().s[13]++;
  try {
    const session =
    /* istanbul ignore next */
    (cov_211kgoml3q().s[14]++, await (0, _nextauth.getServerSession)(_route.authOptions));
    /* istanbul ignore next */
    cov_211kgoml3q().s[15]++;
    if (!session?.user?.id) {
      /* istanbul ignore next */
      cov_211kgoml3q().b[0][0]++;
      cov_211kgoml3q().s[16]++;
      return _server.NextResponse.json({
        error: 'Não autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_211kgoml3q().b[0][1]++;
    }
    const body =
    /* istanbul ignore next */
    (cov_211kgoml3q().s[17]++, await request.json());
    // Validação dos dados
    const validationResult =
    /* istanbul ignore next */
    (cov_211kgoml3q().s[18]++, pausarSchema.safeParse(body));
    /* istanbul ignore next */
    cov_211kgoml3q().s[19]++;
    if (!validationResult.success) {
      /* istanbul ignore next */
      cov_211kgoml3q().b[1][0]++;
      cov_211kgoml3q().s[20]++;
      return _server.NextResponse.json({
        error: 'Dados inválidos',
        details: validationResult.error.errors
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_211kgoml3q().b[1][1]++;
    }
    const {
      dataInicio,
      dataFim,
      motivo
    } =
    /* istanbul ignore next */
    (cov_211kgoml3q().s[21]++, validationResult.data);
    // Converte strings para Date
    const inicio =
    /* istanbul ignore next */
    (cov_211kgoml3q().s[22]++, dataInicio ?
    /* istanbul ignore next */
    (cov_211kgoml3q().b[2][0]++, new Date(dataInicio)) :
    /* istanbul ignore next */
    (cov_211kgoml3q().b[2][1]++, new Date()));
    const fim =
    /* istanbul ignore next */
    (cov_211kgoml3q().s[23]++, new Date(dataFim));
    // Validação de datas
    /* istanbul ignore next */
    cov_211kgoml3q().s[24]++;
    if (fim <= inicio) {
      /* istanbul ignore next */
      cov_211kgoml3q().b[3][0]++;
      cov_211kgoml3q().s[25]++;
      return _server.NextResponse.json({
        error: 'Data de fim deve ser posterior à data de início'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_211kgoml3q().b[3][1]++;
    }
    const preferenciasAtualizadas =
    /* istanbul ignore next */
    (cov_211kgoml3q().s[26]++, await _preferenciasnotificacao.PreferenciasNotificacaoService.pausarNotificacoes(session.user.id, inicio, fim, motivo));
    /* istanbul ignore next */
    cov_211kgoml3q().s[27]++;
    return _server.NextResponse.json({
      success: true,
      data: preferenciasAtualizadas,
      message: `Notificações pausadas até ${fim.toLocaleDateString('pt-BR')}`
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_211kgoml3q().s[28]++;
    console.error('Erro ao pausar notificações:', error);
    /* istanbul ignore next */
    cov_211kgoml3q().s[29]++;
    return _server.NextResponse.json({
      error: 'Erro interno do servidor',
      details: error instanceof Error ?
      /* istanbul ignore next */
      (cov_211kgoml3q().b[4][0]++, error.message) :
      /* istanbul ignore next */
      (cov_211kgoml3q().b[4][1]++, 'Erro desconhecido')
    }, {
      status: 500
    });
  }
}
async function DELETE(request) {
  /* istanbul ignore next */
  cov_211kgoml3q().f[5]++;
  cov_211kgoml3q().s[30]++;
  try {
    const session =
    /* istanbul ignore next */
    (cov_211kgoml3q().s[31]++, await (0, _nextauth.getServerSession)(_route.authOptions));
    /* istanbul ignore next */
    cov_211kgoml3q().s[32]++;
    if (!session?.user?.id) {
      /* istanbul ignore next */
      cov_211kgoml3q().b[5][0]++;
      cov_211kgoml3q().s[33]++;
      return _server.NextResponse.json({
        error: 'Não autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_211kgoml3q().b[5][1]++;
    }
    const preferenciasAtualizadas =
    /* istanbul ignore next */
    (cov_211kgoml3q().s[34]++, await _preferenciasnotificacao.PreferenciasNotificacaoService.retomarNotificacoes(session.user.id));
    /* istanbul ignore next */
    cov_211kgoml3q().s[35]++;
    return _server.NextResponse.json({
      success: true,
      data: preferenciasAtualizadas,
      message: 'Notificações retomadas com sucesso'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_211kgoml3q().s[36]++;
    console.error('Erro ao retomar notificações:', error);
    /* istanbul ignore next */
    cov_211kgoml3q().s[37]++;
    return _server.NextResponse.json({
      error: 'Erro interno do servidor',
      details: error instanceof Error ?
      /* istanbul ignore next */
      (cov_211kgoml3q().b[6][0]++, error.message) :
      /* istanbul ignore next */
      (cov_211kgoml3q().b[6][1]++, 'Erro desconhecido')
    }, {
      status: 500
    });
  }
}
async function GET(request) {
  /* istanbul ignore next */
  cov_211kgoml3q().f[6]++;
  cov_211kgoml3q().s[38]++;
  try {
    const session =
    /* istanbul ignore next */
    (cov_211kgoml3q().s[39]++, await (0, _nextauth.getServerSession)(_route.authOptions));
    /* istanbul ignore next */
    cov_211kgoml3q().s[40]++;
    if (!session?.user?.id) {
      /* istanbul ignore next */
      cov_211kgoml3q().b[7][0]++;
      cov_211kgoml3q().s[41]++;
      return _server.NextResponse.json({
        error: 'Não autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_211kgoml3q().b[7][1]++;
    }
    const pausadas =
    /* istanbul ignore next */
    (cov_211kgoml3q().s[42]++, await _preferenciasnotificacao.PreferenciasNotificacaoService.verificarNotificacoesPausadas(session.user.id));
    /* istanbul ignore next */
    cov_211kgoml3q().s[43]++;
    return _server.NextResponse.json({
      success: true,
      data: {
        pausadas
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_211kgoml3q().s[44]++;
    console.error('Erro ao verificar status de pausa:', error);
    /* istanbul ignore next */
    cov_211kgoml3q().s[45]++;
    return _server.NextResponse.json({
      error: 'Erro interno do servidor',
      details: error instanceof Error ?
      /* istanbul ignore next */
      (cov_211kgoml3q().b[8][0]++, error.message) :
      /* istanbul ignore next */
      (cov_211kgoml3q().b[8][1]++, 'Erro desconhecido')
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJERUxFVEUiLCJjb3ZfMjExa2dvbWwzcSIsImYiLCJzIiwiR0VUIiwiUE9TVCIsInBhdXNhclNjaGVtYSIsIl96b2QiLCJ6Iiwib2JqZWN0IiwiZGF0YUluaWNpbyIsInN0cmluZyIsImRhdGV0aW1lIiwib3B0aW9uYWwiLCJkYXRhRmltIiwibW90aXZvIiwicmVxdWVzdCIsInNlc3Npb24iLCJfbmV4dGF1dGgiLCJnZXRTZXJ2ZXJTZXNzaW9uIiwiX3JvdXRlIiwiYXV0aE9wdGlvbnMiLCJ1c2VyIiwiaWQiLCJiIiwiX3NlcnZlciIsIk5leHRSZXNwb25zZSIsImpzb24iLCJlcnJvciIsInN0YXR1cyIsImJvZHkiLCJ2YWxpZGF0aW9uUmVzdWx0Iiwic2FmZVBhcnNlIiwic3VjY2VzcyIsImRldGFpbHMiLCJlcnJvcnMiLCJkYXRhIiwiaW5pY2lvIiwiRGF0ZSIsImZpbSIsInByZWZlcmVuY2lhc0F0dWFsaXphZGFzIiwiX3ByZWZlcmVuY2lhc25vdGlmaWNhY2FvIiwiUHJlZmVyZW5jaWFzTm90aWZpY2FjYW9TZXJ2aWNlIiwicGF1c2FyTm90aWZpY2Fjb2VzIiwibWVzc2FnZSIsInRvTG9jYWxlRGF0ZVN0cmluZyIsImNvbnNvbGUiLCJFcnJvciIsInJldG9tYXJOb3RpZmljYWNvZXMiLCJwYXVzYWRhcyIsInZlcmlmaWNhck5vdGlmaWNhY29lc1BhdXNhZGFzIl0sInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxOZXJldSBKclxcRG9jdW1lbnRzXFxEZXZcXG5ld1xcc3JjXFxhcHBcXGFwaVxccHJlZmVyZW5jaWFzLW5vdGlmaWNhY2FvXFxwYXVzYXJcXHJvdXRlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXF1ZXN0LCBOZXh0UmVzcG9uc2UgfSBmcm9tICduZXh0L3NlcnZlcic7XG5pbXBvcnQgeyBnZXRTZXJ2ZXJTZXNzaW9uIH0gZnJvbSAnbmV4dC1hdXRoJztcbmltcG9ydCB7IGF1dGhPcHRpb25zIH0gZnJvbSAnLi4vLi4vYXV0aC9bLi4ubmV4dGF1dGhdL3JvdXRlJztcbmltcG9ydCB7IFByZWZlcmVuY2lhc05vdGlmaWNhY2FvU2VydmljZSB9IGZyb20gJ0AvbGliL3NlcnZpY2VzL3ByZWZlcmVuY2lhcy1ub3RpZmljYWNhbyc7XG5pbXBvcnQgeyB6IH0gZnJvbSAnem9kJztcblxuLy8gU2NoZW1hIGRlIHZhbGlkYcOnw6NvIHBhcmEgcGF1c2FyIG5vdGlmaWNhw6fDtWVzXG5jb25zdCBwYXVzYXJTY2hlbWEgPSB6Lm9iamVjdCh7XG4gIGRhdGFJbmljaW86IHouc3RyaW5nKCkuZGF0ZXRpbWUoKS5vcHRpb25hbCgpLFxuICBkYXRhRmltOiB6LnN0cmluZygpLmRhdGV0aW1lKCksXG4gIG1vdGl2bzogei5zdHJpbmcoKS5vcHRpb25hbCgpLFxufSk7XG5cbi8qKlxuICogUE9TVCAvYXBpL3ByZWZlcmVuY2lhcy1ub3RpZmljYWNhby9wYXVzYXJcbiAqIFBhdXNhIGFzIG5vdGlmaWNhw6fDtWVzIHBvciB1bSBwZXLDrW9kbyBlc3BlY8OtZmljb1xuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gUE9TVChyZXF1ZXN0OiBOZXh0UmVxdWVzdCkge1xuICB0cnkge1xuICAgIGNvbnN0IHNlc3Npb24gPSBhd2FpdCBnZXRTZXJ2ZXJTZXNzaW9uKGF1dGhPcHRpb25zKTtcbiAgICBcbiAgICBpZiAoIXNlc3Npb24/LnVzZXI/LmlkKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgIHsgZXJyb3I6ICdOw6NvIGF1dG9yaXphZG8nIH0sXG4gICAgICAgIHsgc3RhdHVzOiA0MDEgfVxuICAgICAgKTtcbiAgICB9XG5cbiAgICBjb25zdCBib2R5ID0gYXdhaXQgcmVxdWVzdC5qc29uKCk7XG4gICAgXG4gICAgLy8gVmFsaWRhw6fDo28gZG9zIGRhZG9zXG4gICAgY29uc3QgdmFsaWRhdGlvblJlc3VsdCA9IHBhdXNhclNjaGVtYS5zYWZlUGFyc2UoYm9keSk7XG4gICAgaWYgKCF2YWxpZGF0aW9uUmVzdWx0LnN1Y2Nlc3MpIHtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgICAgeyBcbiAgICAgICAgICBlcnJvcjogJ0RhZG9zIGludsOhbGlkb3MnLFxuICAgICAgICAgIGRldGFpbHM6IHZhbGlkYXRpb25SZXN1bHQuZXJyb3IuZXJyb3JzXG4gICAgICAgIH0sXG4gICAgICAgIHsgc3RhdHVzOiA0MDAgfVxuICAgICAgKTtcbiAgICB9XG5cbiAgICBjb25zdCB7IGRhdGFJbmljaW8sIGRhdGFGaW0sIG1vdGl2byB9ID0gdmFsaWRhdGlvblJlc3VsdC5kYXRhO1xuICAgIFxuICAgIC8vIENvbnZlcnRlIHN0cmluZ3MgcGFyYSBEYXRlXG4gICAgY29uc3QgaW5pY2lvID0gZGF0YUluaWNpbyA/IG5ldyBEYXRlKGRhdGFJbmljaW8pIDogbmV3IERhdGUoKTtcbiAgICBjb25zdCBmaW0gPSBuZXcgRGF0ZShkYXRhRmltKTtcbiAgICBcbiAgICAvLyBWYWxpZGHDp8OjbyBkZSBkYXRhc1xuICAgIGlmIChmaW0gPD0gaW5pY2lvKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgIHsgZXJyb3I6ICdEYXRhIGRlIGZpbSBkZXZlIHNlciBwb3N0ZXJpb3Igw6AgZGF0YSBkZSBpbsOtY2lvJyB9LFxuICAgICAgICB7IHN0YXR1czogNDAwIH1cbiAgICAgICk7XG4gICAgfVxuXG4gICAgY29uc3QgcHJlZmVyZW5jaWFzQXR1YWxpemFkYXMgPSBhd2FpdCBQcmVmZXJlbmNpYXNOb3RpZmljYWNhb1NlcnZpY2UucGF1c2FyTm90aWZpY2Fjb2VzKFxuICAgICAgc2Vzc2lvbi51c2VyLmlkLFxuICAgICAgaW5pY2lvLFxuICAgICAgZmltLFxuICAgICAgbW90aXZvXG4gICAgKTtcblxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XG4gICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgZGF0YTogcHJlZmVyZW5jaWFzQXR1YWxpemFkYXMsXG4gICAgICBtZXNzYWdlOiBgTm90aWZpY2HDp8O1ZXMgcGF1c2FkYXMgYXTDqSAke2ZpbS50b0xvY2FsZURhdGVTdHJpbmcoJ3B0LUJSJyl9YCxcbiAgICB9KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvIGFvIHBhdXNhciBub3RpZmljYcOnw7VlczonLCBlcnJvcik7XG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgeyBcbiAgICAgICAgZXJyb3I6ICdFcnJvIGludGVybm8gZG8gc2Vydmlkb3InLFxuICAgICAgICBkZXRhaWxzOiBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6ICdFcnJvIGRlc2NvbmhlY2lkbydcbiAgICAgIH0sXG4gICAgICB7IHN0YXR1czogNTAwIH1cbiAgICApO1xuICB9XG59XG5cbi8qKlxuICogREVMRVRFIC9hcGkvcHJlZmVyZW5jaWFzLW5vdGlmaWNhY2FvL3BhdXNhclxuICogUmV0b21hIGFzIG5vdGlmaWNhw6fDtWVzIChyZW1vdmUgcGF1c2EpXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBERUxFVEUocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCBzZXNzaW9uID0gYXdhaXQgZ2V0U2VydmVyU2Vzc2lvbihhdXRoT3B0aW9ucyk7XG4gICAgXG4gICAgaWYgKCFzZXNzaW9uPy51c2VyPy5pZCkge1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICB7IGVycm9yOiAnTsOjbyBhdXRvcml6YWRvJyB9LFxuICAgICAgICB7IHN0YXR1czogNDAxIH1cbiAgICAgICk7XG4gICAgfVxuXG4gICAgY29uc3QgcHJlZmVyZW5jaWFzQXR1YWxpemFkYXMgPSBhd2FpdCBQcmVmZXJlbmNpYXNOb3RpZmljYWNhb1NlcnZpY2UucmV0b21hck5vdGlmaWNhY29lcyhcbiAgICAgIHNlc3Npb24udXNlci5pZFxuICAgICk7XG5cbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgIGRhdGE6IHByZWZlcmVuY2lhc0F0dWFsaXphZGFzLFxuICAgICAgbWVzc2FnZTogJ05vdGlmaWNhw6fDtWVzIHJldG9tYWRhcyBjb20gc3VjZXNzbycsXG4gICAgfSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJybyBhbyByZXRvbWFyIG5vdGlmaWNhw6fDtWVzOicsIGVycm9yKTtcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICB7IFxuICAgICAgICBlcnJvcjogJ0Vycm8gaW50ZXJubyBkbyBzZXJ2aWRvcicsXG4gICAgICAgIGRldGFpbHM6IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogJ0Vycm8gZGVzY29uaGVjaWRvJ1xuICAgICAgfSxcbiAgICAgIHsgc3RhdHVzOiA1MDAgfVxuICAgICk7XG4gIH1cbn1cblxuLyoqXG4gKiBHRVQgL2FwaS9wcmVmZXJlbmNpYXMtbm90aWZpY2FjYW8vcGF1c2FyXG4gKiBWZXJpZmljYSBzZSBhcyBub3RpZmljYcOnw7VlcyBlc3TDo28gcGF1c2FkYXNcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIEdFVChyZXF1ZXN0OiBOZXh0UmVxdWVzdCkge1xuICB0cnkge1xuICAgIGNvbnN0IHNlc3Npb24gPSBhd2FpdCBnZXRTZXJ2ZXJTZXNzaW9uKGF1dGhPcHRpb25zKTtcbiAgICBcbiAgICBpZiAoIXNlc3Npb24/LnVzZXI/LmlkKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgIHsgZXJyb3I6ICdOw6NvIGF1dG9yaXphZG8nIH0sXG4gICAgICAgIHsgc3RhdHVzOiA0MDEgfVxuICAgICAgKTtcbiAgICB9XG5cbiAgICBjb25zdCBwYXVzYWRhcyA9IGF3YWl0IFByZWZlcmVuY2lhc05vdGlmaWNhY2FvU2VydmljZS52ZXJpZmljYXJOb3RpZmljYWNvZXNQYXVzYWRhcyhcbiAgICAgIHNlc3Npb24udXNlci5pZFxuICAgICk7XG5cbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgIGRhdGE6IHsgcGF1c2FkYXMgfSxcbiAgICB9KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvIGFvIHZlcmlmaWNhciBzdGF0dXMgZGUgcGF1c2E6JywgZXJyb3IpO1xuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgIHsgXG4gICAgICAgIGVycm9yOiAnRXJybyBpbnRlcm5vIGRvIHNlcnZpZG9yJyxcbiAgICAgICAgZGV0YWlsczogZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiAnRXJybyBkZXNjb25oZWNpZG8nXG4gICAgICB9LFxuICAgICAgeyBzdGF0dXM6IDUwMCB9XG4gICAgKTtcbiAgfVxufSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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