{"version":3,"names":["FormularioUsuario","usuario","onSucesso","onCancelar","cov_6pvxywucj","f","carregando","setCarregando","s","_react","useState","mostrarSenha","setMostrarSenha","mostrarConfirmarSenha","setMostrarConfirmarSenha","gerarSenhaAutomatica","setGerarSenhaAutomatica","isEdicao","schema","b","_validations","atualizarUsuarioSchema","criarUsuarioSchema","form","_reacthookform","useForm","resolver","_zod","zodResolver","defaultValues","nome","email","perfil","ativo","senha","confirmarSenha","gerarSenhaAleatoria","caracteres","Math","floor","random","i","length","split","sort","join","useEffect","senhaGerada","setValue","onSubmit","data","url","id","method","response","fetch","headers","body","JSON","stringify","ok","errorData","json","Error","erro","resultado","_sonner","toast","success","error","console","message","_jsxruntime","jsx","_form","Form","jsxs","handleSubmit","className","_card","Card","CardHeader","CardTitle","CardDescription","CardContent","FormField","control","name","render","field","FormItem","FormLabel","FormControl","_input","Input","placeholder","disabled","FormMessage","type","FormDescription","_switch","Switch","checked","onCheckedChange","_label","Label","htmlFor","Fragment","_button","Button","variant","size","onClick","_lucidereact","EyeOff","Eye","_auth","PermissionGuard","requiredPermissions","_select","Select","onValueChange","onChange","defaultValue","value","SelectTrigger","SelectValue","SelectContent","SelectItem","podeEditarUsuarios","Loader2"],"sources":["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\components\\usuarios\\formulario-usuario.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { Switch } from '@/components/ui/switch';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { toast } from 'sonner';\nimport { Eye, EyeOff, Loader2 } from 'lucide-react';\nimport {\n  criarUsuarioSchema,\n  atualizarUsuarioSchema,\n  type CriarUsuarioInput,\n  type AtualizarUsuarioInput,\n} from '@/lib/validations';\nimport { usePermissions } from '@/hooks/use-permissions';\nimport { PermissionGuard } from '@/components/auth';\n\ninterface Usuario {\n  id: string;\n  nome: string;\n  email: string;\n  perfil: 'ADMIN' | 'GESTOR' | 'OPERADOR';\n  ativo: boolean;\n  criadoEm: string;\n  atualizadoEm: string;\n}\n\ninterface FormularioUsuarioProps {\n  usuario?: Usuario | null;\n  onSucesso: () => void;\n  onCancelar: () => void;\n}\n\nexport function FormularioUsuario({\n  usuario,\n  onSucesso,\n  onCancelar,\n}: FormularioUsuarioProps) {\n  // Permissões são agora gerenciadas pelo PermissionGuard\n  const [carregando, setCarregando] = useState(false);\n  const [mostrarSenha, setMostrarSenha] = useState(false);\n  const [mostrarConfirmarSenha, setMostrarConfirmarSenha] = useState(false);\n  const [gerarSenhaAutomatica, setGerarSenhaAutomatica] = useState(false);\n\n  const isEdicao = !!usuario;\n  const schema = isEdicao ? atualizarUsuarioSchema : criarUsuarioSchema;\n\n  const form = useForm<CriarUsuarioInput | AtualizarUsuarioInput>({\n    resolver: zodResolver(schema),\n    defaultValues: {\n      nome: usuario?.nome || '',\n      email: usuario?.email || '',\n      perfil: usuario?.perfil || 'OPERADOR',\n      ativo: usuario?.ativo ?? true,\n      ...(isEdicao ? {} : { senha: '', confirmarSenha: '' }),\n    },\n  });\n\n  // Gerar senha automática\n  const gerarSenhaAleatoria = () => {\n    const caracteres =\n      'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#$%&*';\n    let senha = '';\n\n    // Garantir pelo menos um de cada tipo\n    senha += 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'[Math.floor(Math.random() * 26)];\n    senha += 'abcdefghijklmnopqrstuvwxyz'[Math.floor(Math.random() * 26)];\n    senha += '0123456789'[Math.floor(Math.random() * 10)];\n    senha += '@#$%&*'[Math.floor(Math.random() * 6)];\n\n    // Completar com caracteres aleatórios\n    for (let i = 4; i < 12; i++) {\n      senha += caracteres[Math.floor(Math.random() * caracteres.length)];\n    }\n\n    // Embaralhar a senha\n    return senha\n      .split('')\n      .sort(() => Math.random() - 0.5)\n      .join('');\n  };\n\n  // Aplicar senha gerada automaticamente\n  useEffect(() => {\n    if (gerarSenhaAutomatica && !isEdicao) {\n      const senhaGerada = gerarSenhaAleatoria();\n      form.setValue('senha', senhaGerada);\n      form.setValue('confirmarSenha', senhaGerada);\n    }\n  }, [gerarSenhaAutomatica, isEdicao, form]);\n\n  // Submeter formulário\n  const onSubmit = async (data: CriarUsuarioInput | AtualizarUsuarioInput) => {\n    try {\n      setCarregando(true);\n\n      const url = isEdicao ? `/api/usuarios/${usuario.id}` : '/api/usuarios';\n      const method = isEdicao ? 'PUT' : 'POST';\n\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(\n          errorData.erro ||\n            `Erro ao ${isEdicao ? 'atualizar' : 'criar'} usuário`\n        );\n      }\n\n      const resultado = await response.json();\n\n      toast.success(\n        isEdicao\n          ? 'Usuário atualizado com sucesso'\n          : `Usuário criado com sucesso${gerarSenhaAutomatica ? '. Senha: ' + data.senha : ''}`\n      );\n\n      onSucesso();\n    } catch (error) {\n      console.error('Erro ao submeter formulário:', error);\n      toast.error(error instanceof Error ? error.message : 'Erro inesperado');\n    } finally {\n      setCarregando(false);\n    }\n  };\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n        {/* Informações básicas */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Informações Básicas</CardTitle>\n            <CardDescription>\n              Dados pessoais e de identificação do usuário\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <FormField\n              control={form.control}\n              name=\"nome\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Nome Completo</FormLabel>\n                  <FormControl>\n                    <Input\n                      placeholder=\"Digite o nome completo\"\n                      {...field}\n                      disabled={carregando}\n                    />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"email\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Email</FormLabel>\n                  <FormControl>\n                    <Input\n                      type=\"email\"\n                      placeholder=\"usuario@exemplo.com\"\n                      {...field}\n                      disabled={carregando}\n                    />\n                  </FormControl>\n                  <FormDescription>\n                    O email será usado para login e comunicações do sistema\n                  </FormDescription>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          </CardContent>\n        </Card>\n\n        {/* Senha (apenas para criação) */}\n        {!isEdicao && (\n          <Card>\n            <CardHeader>\n              <CardTitle>Configuração de Senha</CardTitle>\n              <CardDescription>\n                Defina a senha inicial do usuário\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"flex items-center space-x-2\">\n                <Switch\n                  id=\"gerar-senha\"\n                  checked={gerarSenhaAutomatica}\n                  onCheckedChange={setGerarSenhaAutomatica}\n                  disabled={carregando}\n                />\n                <Label htmlFor=\"gerar-senha\">Gerar senha automaticamente</Label>\n              </div>\n\n              {!gerarSenhaAutomatica && (\n                <>\n                  <FormField\n                    control={form.control}\n                    name=\"senha\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Senha</FormLabel>\n                        <FormControl>\n                          <div className=\"relative\">\n                            <Input\n                              type={mostrarSenha ? 'text' : 'password'}\n                              placeholder=\"Digite a senha\"\n                              {...field}\n                              disabled={carregando}\n                            />\n                            <Button\n                              type=\"button\"\n                              variant=\"ghost\"\n                              size=\"sm\"\n                              className=\"absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent\"\n                              onClick={() => setMostrarSenha(!mostrarSenha)}\n                              disabled={carregando}\n                            >\n                              {mostrarSenha ? (\n                                <EyeOff className=\"h-4 w-4\" />\n                              ) : (\n                                <Eye className=\"h-4 w-4\" />\n                              )}\n                            </Button>\n                          </div>\n                        </FormControl>\n                        <FormDescription>\n                          Mínimo 8 caracteres com letras maiúsculas, minúsculas,\n                          números e símbolos\n                        </FormDescription>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  <FormField\n                    control={form.control}\n                    name=\"confirmarSenha\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Confirmar Senha</FormLabel>\n                        <FormControl>\n                          <div className=\"relative\">\n                            <Input\n                              type={mostrarConfirmarSenha ? 'text' : 'password'}\n                              placeholder=\"Confirme a senha\"\n                              {...field}\n                              disabled={carregando}\n                            />\n                            <Button\n                              type=\"button\"\n                              variant=\"ghost\"\n                              size=\"sm\"\n                              className=\"absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent\"\n                              onClick={() =>\n                                setMostrarConfirmarSenha(!mostrarConfirmarSenha)\n                              }\n                              disabled={carregando}\n                            >\n                              {mostrarConfirmarSenha ? (\n                                <EyeOff className=\"h-4 w-4\" />\n                              ) : (\n                                <Eye className=\"h-4 w-4\" />\n                              )}\n                            </Button>\n                          </div>\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                </>\n              )}\n\n              {gerarSenhaAutomatica && (\n                <div className=\"p-4 bg-muted rounded-lg\">\n                  <p className=\"text-sm text-muted-foreground\">\n                    Uma senha segura será gerada automaticamente. A senha será\n                    exibida após a criação do usuário.\n                  </p>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        )}\n\n        {/* Permissões e configurações */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Permissões e Configurações</CardTitle>\n            <CardDescription>\n              Configure o perfil de acesso e status do usuário\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <PermissionGuard requiredPermissions={['gerenciar_usuarios']}>\n              <FormField\n                control={form.control}\n                name=\"perfil\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Perfil de Acesso</FormLabel>\n                    <Select\n                      onValueChange={field.onChange}\n                      defaultValue={field.value}\n                      disabled={carregando}\n                    >\n                      <FormControl>\n                        <SelectTrigger>\n                          <SelectValue placeholder=\"Selecione o perfil\" />\n                        </SelectTrigger>\n                      </FormControl>\n                      <SelectContent>\n                        <SelectItem value=\"OPERADOR\">Operador</SelectItem>\n                        <SelectItem value=\"GESTOR\">Gestor</SelectItem>\n                        <SelectItem value=\"ADMIN\">Administrador</SelectItem>\n                      </SelectContent>\n                    </Select>\n                    <FormDescription>\n                      Define as permissões e funcionalidades disponíveis para o\n                      usuário\n                    </FormDescription>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </PermissionGuard>\n\n            <FormField\n              control={form.control}\n              name=\"ativo\"\n              render={({ field }) => (\n                <FormItem className=\"flex flex-row items-center justify-between rounded-lg border p-4\">\n                  <div className=\"space-y-0.5\">\n                    <FormLabel className=\"text-base\">Usuário Ativo</FormLabel>\n                    <FormDescription>\n                      Usuários inativos não podem fazer login no sistema\n                    </FormDescription>\n                  </div>\n                  <FormControl>\n                    <Switch\n                      checked={field.value}\n                      onCheckedChange={field.onChange}\n                      disabled={carregando}\n                    />\n                  </FormControl>\n                </FormItem>\n              )}\n            />\n          </CardContent>\n        </Card>\n\n        {/* Botões de ação */}\n        <div className=\"flex flex-col sm:flex-row gap-3 pt-6\">\n          <Button\n            type=\"button\"\n            variant=\"outline\"\n            onClick={onCancelar}\n            disabled={carregando}\n            className=\"flex-1 sm:flex-none\"\n          >\n            Cancelar\n          </Button>\n\n          <Button\n            type=\"submit\"\n            disabled={carregando || (!podeEditarUsuarios && isEdicao)}\n            className=\"flex-1 sm:flex-none\"\n          >\n            {carregando && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n            {isEdicao ? 'Atualizar Usuário' : 'Criar Usuário'}\n          </Button>\n        </div>\n      </form>\n    </Form>\n  );\n}\n"],"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","ignoreList":[]}