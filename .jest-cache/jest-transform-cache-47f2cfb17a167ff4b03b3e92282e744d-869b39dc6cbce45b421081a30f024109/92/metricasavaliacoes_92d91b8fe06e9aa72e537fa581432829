2459afa2d904de535be7f9816391930d
"use strict";

/* istanbul ignore next */
function cov_16vyaceovy() {
  var path = "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\lib\\utils\\metricas-avaliacoes.ts";
  var hash = "bf5100094c401f7e5d7af98f1a8c7116e071e2ac";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\lib\\utils\\metricas-avaliacoes.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 42,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 42
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 42
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 39
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 36
        }
      },
      "8": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 41
        }
      },
      "9": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 29
        }
      },
      "10": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 31
        }
      },
      "11": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 41
        }
      },
      "12": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 39
        }
      },
      "13": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 40
        }
      },
      "14": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 49
        }
      },
      "15": {
        start: {
          line: 44,
          column: 15
        },
        end: {
          line: 44,
          column: 41
        }
      },
      "16": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 46,
          column: 39
        }
      },
      "17": {
        start: {
          line: 46,
          column: 30
        },
        end: {
          line: 46,
          column: 39
        }
      },
      "18": {
        start: {
          line: 47,
          column: 17
        },
        end: {
          line: 47,
          column: 61
        }
      },
      "19": {
        start: {
          line: 47,
          column: 46
        },
        end: {
          line: 47,
          column: 57
        }
      },
      "20": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 54
        }
      },
      "21": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 39
        }
      },
      "22": {
        start: {
          line: 51,
          column: 30
        },
        end: {
          line: 51,
          column: 39
        }
      },
      "23": {
        start: {
          line: 52,
          column: 29
        },
        end: {
          line: 54,
          column: 25
        }
      },
      "24": {
        start: {
          line: 54,
          column: 19
        },
        end: {
          line: 54,
          column: 24
        }
      },
      "25": {
        start: {
          line: 55,
          column: 17
        },
        end: {
          line: 55,
          column: 56
        }
      },
      "26": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 60,
          column: 5
        }
      },
      "27": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 94
        }
      },
      "28": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 38
        }
      },
      "29": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 63,
          column: 39
        }
      },
      "30": {
        start: {
          line: 63,
          column: 30
        },
        end: {
          line: 63,
          column: 39
        }
      },
      "31": {
        start: {
          line: 64,
          column: 18
        },
        end: {
          line: 64,
          column: 40
        }
      },
      "32": {
        start: {
          line: 65,
          column: 22
        },
        end: {
          line: 67,
          column: 26
        }
      },
      "33": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 48
        }
      },
      "34": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 68,
          column: 51
        }
      },
      "35": {
        start: {
          line: 71,
          column: 25
        },
        end: {
          line: 77,
          column: 5
        }
      },
      "36": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 96,
          column: 7
        }
      },
      "37": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 95,
          column: 9
        }
      },
      "38": {
        start: {
          line: 81,
          column: 16
        },
        end: {
          line: 81,
          column: 37
        }
      },
      "39": {
        start: {
          line: 82,
          column: 16
        },
        end: {
          line: 82,
          column: 22
        }
      },
      "40": {
        start: {
          line: 84,
          column: 16
        },
        end: {
          line: 84,
          column: 37
        }
      },
      "41": {
        start: {
          line: 85,
          column: 16
        },
        end: {
          line: 85,
          column: 22
        }
      },
      "42": {
        start: {
          line: 87,
          column: 16
        },
        end: {
          line: 87,
          column: 37
        }
      },
      "43": {
        start: {
          line: 88,
          column: 16
        },
        end: {
          line: 88,
          column: 22
        }
      },
      "44": {
        start: {
          line: 90,
          column: 16
        },
        end: {
          line: 90,
          column: 37
        }
      },
      "45": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 91,
          column: 22
        }
      },
      "46": {
        start: {
          line: 93,
          column: 16
        },
        end: {
          line: 93,
          column: 37
        }
      },
      "47": {
        start: {
          line: 94,
          column: 16
        },
        end: {
          line: 94,
          column: 22
        }
      },
      "48": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 97,
          column: 24
        }
      },
      "49": {
        start: {
          line: 100,
          column: 18
        },
        end: {
          line: 102,
          column: 5
        }
      },
      "50": {
        start: {
          line: 104,
          column: 4
        },
        end: {
          line: 108,
          column: 5
        }
      },
      "51": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 107,
          column: 10
        }
      },
      "52": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 114,
          column: 5
        }
      },
      "53": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 113,
          column: 10
        }
      },
      "54": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 122,
          column: 5
        }
      },
      "55": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 121,
          column: 10
        }
      },
      "56": {
        start: {
          line: 123,
          column: 4
        },
        end: {
          line: 130,
          column: 5
        }
      },
      "57": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 129,
          column: 10
        }
      },
      "58": {
        start: {
          line: 132,
          column: 4
        },
        end: {
          line: 140,
          column: 5
        }
      },
      "59": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 33
        }
      },
      "60": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 136,
          column: 9
        }
      },
      "61": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 57
        }
      },
      "62": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 139,
          column: 9
        }
      },
      "63": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 138,
          column: 54
        }
      },
      "64": {
        start: {
          line: 142,
          column: 4
        },
        end: {
          line: 150,
          column: 5
        }
      },
      "65": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 143,
          column: 24
        }
      },
      "66": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 146,
          column: 9
        }
      },
      "67": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 48
        }
      },
      "68": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 149,
          column: 9
        }
      },
      "69": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 48
        }
      },
      "70": {
        start: {
          line: 151,
          column: 4
        },
        end: {
          line: 165,
          column: 7
        }
      },
      "71": {
        start: {
          line: 168,
          column: 23
        },
        end: {
          line: 173,
          column: 6
        }
      },
      "72": {
        start: {
          line: 174,
          column: 4
        },
        end: {
          line: 174,
          column: 45
        }
      },
      "73": {
        start: {
          line: 174,
          column: 33
        },
        end: {
          line: 174,
          column: 45
        }
      },
      "74": {
        start: {
          line: 175,
          column: 18
        },
        end: {
          line: 175,
          column: 47
        }
      },
      "75": {
        start: {
          line: 175,
          column: 39
        },
        end: {
          line: 175,
          column: 46
        }
      },
      "76": {
        start: {
          line: 176,
          column: 22
        },
        end: {
          line: 176,
          column: 44
        }
      },
      "77": {
        start: {
          line: 177,
          column: 4
        },
        end: {
          line: 189,
          column: 6
        }
      },
      "78": {
        start: {
          line: 192,
          column: 20
        },
        end: {
          line: 196,
          column: 6
        }
      },
      "79": {
        start: {
          line: 197,
          column: 4
        },
        end: {
          line: 197,
          column: 30
        }
      },
      "80": {
        start: {
          line: 197,
          column: 18
        },
        end: {
          line: 197,
          column: 30
        }
      },
      "81": {
        start: {
          line: 198,
          column: 23
        },
        end: {
          line: 203,
          column: 6
        }
      },
      "82": {
        start: {
          line: 204,
          column: 4
        },
        end: {
          line: 223,
          column: 5
        }
      },
      "83": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 222,
          column: 10
        }
      },
      "84": {
        start: {
          line: 224,
          column: 24
        },
        end: {
          line: 224,
          column: 53
        }
      },
      "85": {
        start: {
          line: 224,
          column: 45
        },
        end: {
          line: 224,
          column: 52
        }
      },
      "86": {
        start: {
          line: 226,
          column: 35
        },
        end: {
          line: 233,
          column: 10
        }
      },
      "87": {
        start: {
          line: 227,
          column: 28
        },
        end: {
          line: 227,
          column: 48
        }
      },
      "88": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 230,
          column: 9
        }
      },
      "89": {
        start: {
          line: 229,
          column: 12
        },
        end: {
          line: 229,
          column: 34
        }
      },
      "90": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 231,
          column: 41
        }
      },
      "91": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 232,
          column: 19
        }
      },
      "92": {
        start: {
          line: 235,
          column: 33
        },
        end: {
          line: 235,
          column: 35
        }
      },
      "93": {
        start: {
          line: 236,
          column: 4
        },
        end: {
          line: 252,
          column: 5
        }
      },
      "94": {
        start: {
          line: 237,
          column: 22
        },
        end: {
          line: 237,
          column: 60
        }
      },
      "95": {
        start: {
          line: 237,
          column: 52
        },
        end: {
          line: 237,
          column: 59
        }
      },
      "96": {
        start: {
          line: 238,
          column: 26
        },
        end: {
          line: 238,
          column: 57
        }
      },
      "97": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 251,
          column: 11
        }
      },
      "98": {
        start: {
          line: 253,
          column: 4
        },
        end: {
          line: 264,
          column: 6
        }
      },
      "99": {
        start: {
          line: 263,
          column: 64
        },
        end: {
          line: 263,
          column: 81
        }
      },
      "100": {
        start: {
          line: 267,
          column: 21
        },
        end: {
          line: 284,
          column: 6
        }
      },
      "101": {
        start: {
          line: 285,
          column: 24
        },
        end: {
          line: 285,
          column: 26
        }
      },
      "102": {
        start: {
          line: 286,
          column: 4
        },
        end: {
          line: 302,
          column: 5
        }
      },
      "103": {
        start: {
          line: 287,
          column: 27
        },
        end: {
          line: 292,
          column: 10
        }
      },
      "104": {
        start: {
          line: 293,
          column: 22
        },
        end: {
          line: 293,
          column: 51
        }
      },
      "105": {
        start: {
          line: 293,
          column: 43
        },
        end: {
          line: 293,
          column: 50
        }
      },
      "106": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 301,
          column: 11
        }
      },
      "107": {
        start: {
          line: 303,
          column: 4
        },
        end: {
          line: 303,
          column: 23
        }
      },
      "108": {
        start: {
          line: 306,
          column: 23
        },
        end: {
          line: 306,
          column: 64
        }
      },
      "109": {
        start: {
          line: 307,
          column: 4
        },
        end: {
          line: 323,
          column: 5
        }
      },
      "110": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 322,
          column: 10
        }
      },
      "111": {
        start: {
          line: 324,
          column: 18
        },
        end: {
          line: 324,
          column: 47
        }
      },
      "112": {
        start: {
          line: 324,
          column: 39
        },
        end: {
          line: 324,
          column: 46
        }
      },
      "113": {
        start: {
          line: 325,
          column: 29
        },
        end: {
          line: 325,
          column: 73
        }
      },
      "114": {
        start: {
          line: 325,
          column: 58
        },
        end: {
          line: 325,
          column: 71
        }
      },
      "115": {
        start: {
          line: 326,
          column: 27
        },
        end: {
          line: 326,
          column: 70
        }
      },
      "116": {
        start: {
          line: 326,
          column: 56
        },
        end: {
          line: 326,
          column: 68
        }
      },
      "117": {
        start: {
          line: 327,
          column: 4
        },
        end: {
          line: 335,
          column: 6
        }
      },
      "118": {
        start: {
          line: 338,
          column: 23
        },
        end: {
          line: 338,
          column: 64
        }
      },
      "119": {
        start: {
          line: 340,
          column: 35
        },
        end: {
          line: 347,
          column: 10
        }
      },
      "120": {
        start: {
          line: 341,
          column: 28
        },
        end: {
          line: 341,
          column: 48
        }
      },
      "121": {
        start: {
          line: 342,
          column: 8
        },
        end: {
          line: 344,
          column: 9
        }
      },
      "122": {
        start: {
          line: 343,
          column: 12
        },
        end: {
          line: 343,
          column: 34
        }
      },
      "123": {
        start: {
          line: 345,
          column: 8
        },
        end: {
          line: 345,
          column: 41
        }
      },
      "124": {
        start: {
          line: 346,
          column: 8
        },
        end: {
          line: 346,
          column: 19
        }
      },
      "125": {
        start: {
          line: 348,
          column: 20
        },
        end: {
          line: 348,
          column: 22
        }
      },
      "126": {
        start: {
          line: 349,
          column: 4
        },
        end: {
          line: 365,
          column: 5
        }
      },
      "127": {
        start: {
          line: 350,
          column: 22
        },
        end: {
          line: 350,
          column: 60
        }
      },
      "128": {
        start: {
          line: 350,
          column: 52
        },
        end: {
          line: 350,
          column: 59
        }
      },
      "129": {
        start: {
          line: 351,
          column: 26
        },
        end: {
          line: 351,
          column: 57
        }
      },
      "130": {
        start: {
          line: 352,
          column: 8
        },
        end: {
          line: 364,
          column: 11
        }
      },
      "131": {
        start: {
          line: 366,
          column: 4
        },
        end: {
          line: 366,
          column: 68
        }
      },
      "132": {
        start: {
          line: 366,
          column: 32
        },
        end: {
          line: 366,
          column: 49
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 38
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 38
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 35
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 32
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 37
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 25
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 27
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 37
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 35
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 36
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        loc: {
          start: {
            line: 39,
            column: 36
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 39
      },
      "11": {
        name: "calcularMedia",
        decl: {
          start: {
            line: 45,
            column: 9
          },
          end: {
            line: 45,
            column: 22
          }
        },
        loc: {
          start: {
            line: 45,
            column: 32
          },
          end: {
            line: 49,
            column: 1
          }
        },
        line: 45
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 47,
            column: 32
          },
          end: {
            line: 47,
            column: 33
          }
        },
        loc: {
          start: {
            line: 47,
            column: 46
          },
          end: {
            line: 47,
            column: 57
          }
        },
        line: 47
      },
      "13": {
        name: "calcularMediana",
        decl: {
          start: {
            line: 50,
            column: 9
          },
          end: {
            line: 50,
            column: 24
          }
        },
        loc: {
          start: {
            line: 50,
            column: 34
          },
          end: {
            line: 61,
            column: 1
          }
        },
        line: 50
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 54,
            column: 11
          },
          end: {
            line: 54,
            column: 12
          }
        },
        loc: {
          start: {
            line: 54,
            column: 19
          },
          end: {
            line: 54,
            column: 24
          }
        },
        line: 54
      },
      "15": {
        name: "calcularDesvioPadrao",
        decl: {
          start: {
            line: 62,
            column: 9
          },
          end: {
            line: 62,
            column: 29
          }
        },
        loc: {
          start: {
            line: 62,
            column: 39
          },
          end: {
            line: 69,
            column: 1
          }
        },
        line: 62
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 65,
            column: 37
          },
          end: {
            line: 65,
            column: 38
          }
        },
        loc: {
          start: {
            line: 65,
            column: 51
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 65
      },
      "17": {
        name: "calcularDistribuicaoNotas",
        decl: {
          start: {
            line: 70,
            column: 9
          },
          end: {
            line: 70,
            column: 34
          }
        },
        loc: {
          start: {
            line: 70,
            column: 42
          },
          end: {
            line: 98,
            column: 1
          }
        },
        line: 70
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 78,
            column: 18
          },
          end: {
            line: 78,
            column: 19
          }
        },
        loc: {
          start: {
            line: 78,
            column: 26
          },
          end: {
            line: 96,
            column: 5
          }
        },
        line: 78
      },
      "19": {
        name: "buscarAvaliacoesComFiltros",
        decl: {
          start: {
            line: 99,
            column: 15
          },
          end: {
            line: 99,
            column: 41
          }
        },
        loc: {
          start: {
            line: 99,
            column: 56
          },
          end: {
            line: 166,
            column: 1
          }
        },
        line: 99
      },
      "20": {
        name: "calcularMetricasAtendente",
        decl: {
          start: {
            line: 167,
            column: 15
          },
          end: {
            line: 167,
            column: 40
          }
        },
        loc: {
          start: {
            line: 167,
            column: 68
          },
          end: {
            line: 190,
            column: 1
          }
        },
        line: 167
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 175,
            column: 33
          },
          end: {
            line: 175,
            column: 34
          }
        },
        loc: {
          start: {
            line: 175,
            column: 39
          },
          end: {
            line: 175,
            column: 46
          }
        },
        line: 175
      },
      "22": {
        name: "calcularMetricasPeriodo",
        decl: {
          start: {
            line: 191,
            column: 15
          },
          end: {
            line: 191,
            column: 38
          }
        },
        loc: {
          start: {
            line: 191,
            column: 64
          },
          end: {
            line: 265,
            column: 1
          }
        },
        line: 191
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 224,
            column: 39
          },
          end: {
            line: 224,
            column: 40
          }
        },
        loc: {
          start: {
            line: 224,
            column: 45
          },
          end: {
            line: 224,
            column: 52
          }
        },
        line: 224
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 226,
            column: 53
          },
          end: {
            line: 226,
            column: 54
          }
        },
        loc: {
          start: {
            line: 226,
            column: 71
          },
          end: {
            line: 233,
            column: 5
          }
        },
        line: 226
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 237,
            column: 46
          },
          end: {
            line: 237,
            column: 47
          }
        },
        loc: {
          start: {
            line: 237,
            column: 52
          },
          end: {
            line: 237,
            column: 59
          }
        },
        line: 237
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 263,
            column: 56
          },
          end: {
            line: 263,
            column: 57
          }
        },
        loc: {
          start: {
            line: 263,
            column: 64
          },
          end: {
            line: 263,
            column: 81
          }
        },
        line: 263
      },
      "27": {
        name: "gerarComparativoTemporal",
        decl: {
          start: {
            line: 266,
            column: 15
          },
          end: {
            line: 266,
            column: 39
          }
        },
        loc: {
          start: {
            line: 266,
            column: 54
          },
          end: {
            line: 304,
            column: 1
          }
        },
        line: 266
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 293,
            column: 37
          },
          end: {
            line: 293,
            column: 38
          }
        },
        loc: {
          start: {
            line: 293,
            column: 43
          },
          end: {
            line: 293,
            column: 50
          }
        },
        line: 293
      },
      "29": {
        name: "buscarMetricasConsolidadas",
        decl: {
          start: {
            line: 305,
            column: 15
          },
          end: {
            line: 305,
            column: 41
          }
        },
        loc: {
          start: {
            line: 305,
            column: 56
          },
          end: {
            line: 336,
            column: 1
          }
        },
        line: 305
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 324,
            column: 33
          },
          end: {
            line: 324,
            column: 34
          }
        },
        loc: {
          start: {
            line: 324,
            column: 39
          },
          end: {
            line: 324,
            column: 46
          }
        },
        line: 324
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 325,
            column: 52
          },
          end: {
            line: 325,
            column: 53
          }
        },
        loc: {
          start: {
            line: 325,
            column: 58
          },
          end: {
            line: 325,
            column: 71
          }
        },
        line: 325
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 326,
            column: 50
          },
          end: {
            line: 326,
            column: 51
          }
        },
        loc: {
          start: {
            line: 326,
            column: 56
          },
          end: {
            line: 326,
            column: 68
          }
        },
        line: 326
      },
      "33": {
        name: "buscarRankingAtendentes",
        decl: {
          start: {
            line: 337,
            column: 15
          },
          end: {
            line: 337,
            column: 38
          }
        },
        loc: {
          start: {
            line: 337,
            column: 66
          },
          end: {
            line: 367,
            column: 1
          }
        },
        line: 337
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 340,
            column: 53
          },
          end: {
            line: 340,
            column: 54
          }
        },
        loc: {
          start: {
            line: 340,
            column: 71
          },
          end: {
            line: 347,
            column: 5
          }
        },
        line: 340
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 350,
            column: 46
          },
          end: {
            line: 350,
            column: 47
          }
        },
        loc: {
          start: {
            line: 350,
            column: 52
          },
          end: {
            line: 350,
            column: 59
          }
        },
        line: 350
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 366,
            column: 24
          },
          end: {
            line: 366,
            column: 25
          }
        },
        loc: {
          start: {
            line: 366,
            column: 32
          },
          end: {
            line: 366,
            column: 49
          }
        },
        line: 366
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 46,
            column: 39
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 46,
            column: 39
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "1": {
        loc: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 51,
            column: 39
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 51,
            column: 39
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "2": {
        loc: {
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        }, {
          start: {
            line: 58,
            column: 11
          },
          end: {
            line: 60,
            column: 5
          }
        }],
        line: 56
      },
      "3": {
        loc: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 63,
            column: 39
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 63,
            column: 39
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 63
      },
      "4": {
        loc: {
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 80,
            column: 12
          },
          end: {
            line: 82,
            column: 22
          }
        }, {
          start: {
            line: 83,
            column: 12
          },
          end: {
            line: 85,
            column: 22
          }
        }, {
          start: {
            line: 86,
            column: 12
          },
          end: {
            line: 88,
            column: 22
          }
        }, {
          start: {
            line: 89,
            column: 12
          },
          end: {
            line: 91,
            column: 22
          }
        }, {
          start: {
            line: 92,
            column: 12
          },
          end: {
            line: 94,
            column: 22
          }
        }],
        line: 79
      },
      "5": {
        loc: {
          start: {
            line: 99,
            column: 42
          },
          end: {
            line: 99,
            column: 54
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 99,
            column: 52
          },
          end: {
            line: 99,
            column: 54
          }
        }],
        line: 99
      },
      "6": {
        loc: {
          start: {
            line: 104,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 104,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 104
      },
      "7": {
        loc: {
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 104,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 8
          },
          end: {
            line: 104,
            column: 26
          }
        }, {
          start: {
            line: 104,
            column: 30
          },
          end: {
            line: 104,
            column: 59
          }
        }],
        line: 104
      },
      "8": {
        loc: {
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 114,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 114,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "9": {
        loc: {
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 110,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 110,
            column: 28
          }
        }, {
          start: {
            line: 110,
            column: 32
          },
          end: {
            line: 110,
            column: 63
          }
        }],
        line: 110
      },
      "10": {
        loc: {
          start: {
            line: 116,
            column: 4
          },
          end: {
            line: 122,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 4
          },
          end: {
            line: 122,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "11": {
        loc: {
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 116,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 116,
            column: 23
          }
        }, {
          start: {
            line: 116,
            column: 27
          },
          end: {
            line: 116,
            column: 53
          }
        }],
        line: 116
      },
      "12": {
        loc: {
          start: {
            line: 123,
            column: 4
          },
          end: {
            line: 130,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 4
          },
          end: {
            line: 130,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      },
      "13": {
        loc: {
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 123,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 123,
            column: 29
          }
        }, {
          start: {
            line: 123,
            column: 33
          },
          end: {
            line: 123,
            column: 65
          }
        }],
        line: 123
      },
      "14": {
        loc: {
          start: {
            line: 132,
            column: 4
          },
          end: {
            line: 140,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 4
          },
          end: {
            line: 140,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 132
      },
      "15": {
        loc: {
          start: {
            line: 132,
            column: 8
          },
          end: {
            line: 132,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 132,
            column: 8
          },
          end: {
            line: 132,
            column: 26
          }
        }, {
          start: {
            line: 132,
            column: 30
          },
          end: {
            line: 132,
            column: 45
          }
        }],
        line: 132
      },
      "16": {
        loc: {
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 136,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "17": {
        loc: {
          start: {
            line: 137,
            column: 8
          },
          end: {
            line: 139,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 137,
            column: 8
          },
          end: {
            line: 139,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 137
      },
      "18": {
        loc: {
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 150,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 150,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "19": {
        loc: {
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 142,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 142,
            column: 8
          },
          end: {
            line: 142,
            column: 40
          }
        }, {
          start: {
            line: 142,
            column: 44
          },
          end: {
            line: 142,
            column: 76
          }
        }],
        line: 142
      },
      "20": {
        loc: {
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 146,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 8
          },
          end: {
            line: 146,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "21": {
        loc: {
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 149,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 8
          },
          end: {
            line: 149,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "22": {
        loc: {
          start: {
            line: 167,
            column: 54
          },
          end: {
            line: 167,
            column: 66
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 167,
            column: 64
          },
          end: {
            line: 167,
            column: 66
          }
        }],
        line: 167
      },
      "23": {
        loc: {
          start: {
            line: 174,
            column: 4
          },
          end: {
            line: 174,
            column: 45
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 4
          },
          end: {
            line: 174,
            column: 45
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 174
      },
      "24": {
        loc: {
          start: {
            line: 181,
            column: 22
          },
          end: {
            line: 181,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 181,
            column: 22
          },
          end: {
            line: 181,
            column: 44
          }
        }, {
          start: {
            line: 181,
            column: 48
          },
          end: {
            line: 181,
            column: 57
          }
        }],
        line: 181
      },
      "25": {
        loc: {
          start: {
            line: 191,
            column: 50
          },
          end: {
            line: 191,
            column: 62
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 191,
            column: 60
          },
          end: {
            line: 191,
            column: 62
          }
        }],
        line: 191
      },
      "26": {
        loc: {
          start: {
            line: 197,
            column: 4
          },
          end: {
            line: 197,
            column: 30
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 197,
            column: 4
          },
          end: {
            line: 197,
            column: 30
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 197
      },
      "27": {
        loc: {
          start: {
            line: 204,
            column: 4
          },
          end: {
            line: 223,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 4
          },
          end: {
            line: 223,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 204
      },
      "28": {
        loc: {
          start: {
            line: 228,
            column: 8
          },
          end: {
            line: 230,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 228,
            column: 8
          },
          end: {
            line: 230,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 228
      },
      "29": {
        loc: {
          start: {
            line: 243,
            column: 26
          },
          end: {
            line: 243,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 243,
            column: 26
          },
          end: {
            line: 243,
            column: 48
          }
        }, {
          start: {
            line: 243,
            column: 52
          },
          end: {
            line: 243,
            column: 61
          }
        }],
        line: 243
      },
      "30": {
        loc: {
          start: {
            line: 266,
            column: 40
          },
          end: {
            line: 266,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 266,
            column: 50
          },
          end: {
            line: 266,
            column: 52
          }
        }],
        line: 266
      },
      "31": {
        loc: {
          start: {
            line: 275,
            column: 15
          },
          end: {
            line: 279,
            column: 13
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 275,
            column: 15
          },
          end: {
            line: 275,
            column: 33
          }
        }, {
          start: {
            line: 275,
            column: 37
          },
          end: {
            line: 279,
            column: 13
          }
        }],
        line: 275
      },
      "32": {
        loc: {
          start: {
            line: 305,
            column: 42
          },
          end: {
            line: 305,
            column: 54
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 305,
            column: 52
          },
          end: {
            line: 305,
            column: 54
          }
        }],
        line: 305
      },
      "33": {
        loc: {
          start: {
            line: 307,
            column: 4
          },
          end: {
            line: 323,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 307,
            column: 4
          },
          end: {
            line: 323,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 307
      },
      "34": {
        loc: {
          start: {
            line: 337,
            column: 39
          },
          end: {
            line: 337,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 337,
            column: 49
          },
          end: {
            line: 337,
            column: 51
          }
        }],
        line: 337
      },
      "35": {
        loc: {
          start: {
            line: 337,
            column: 53
          },
          end: {
            line: 337,
            column: 64
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 337,
            column: 62
          },
          end: {
            line: 337,
            column: 64
          }
        }],
        line: 337
      },
      "36": {
        loc: {
          start: {
            line: 342,
            column: 8
          },
          end: {
            line: 344,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 342,
            column: 8
          },
          end: {
            line: 344,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 342
      },
      "37": {
        loc: {
          start: {
            line: 356,
            column: 26
          },
          end: {
            line: 356,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 356,
            column: 26
          },
          end: {
            line: 356,
            column: 48
          }
        }, {
          start: {
            line: 356,
            column: 52
          },
          end: {
            line: 356,
            column: 61
          }
        }],
        line: 356
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0, 0, 0],
      "5": [0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0],
      "31": [0, 0],
      "32": [0],
      "33": [0, 0],
      "34": [0],
      "35": [0],
      "36": [0, 0],
      "37": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\lib\\utils\\metricas-avaliacoes.ts"],
      sourcesContent: ["import { PrismaClient } from '@/generated/prisma';\nimport { StatusAvaliacao, StatusPeriodo } from '@/generated/prisma';\n\nconst prisma = new PrismaClient();\n\n// Tipos para as m\xE9tricas calculadas\nexport interface MetricasAtendente {\n  atendenteId: string;\n  nomeAtendente: string;\n  setor: string;\n  departamento?: string;\n  totalAvaliacoes: number;\n  media: number;\n  mediana: number;\n  desvioPadrao: number;\n  notaMinima: number;\n  notaMaxima: number;\n  distribuicaoNotas: DistribuicaoNotas;\n}\n\nexport interface DistribuicaoNotas {\n  nota1: number;\n  nota2: number;\n  nota3: number;\n  nota4: number;\n  nota5: number;\n}\n\nexport interface MetricasPeriodo {\n  periodoId: string;\n  nomePeriodo: string;\n  dataInicio: Date;\n  dataFim: Date;\n  totalAvaliacoes: number;\n  mediaGeral: number;\n  medianaGeral: number;\n  desvioPadraoGeral: number;\n  distribuicaoGeral: DistribuicaoNotas;\n  metricasPorAtendente: MetricasAtendente[];\n}\n\nexport interface ComparativoTemporal {\n  periodoId: string;\n  nomePeriodo: string;\n  dataInicio: Date;\n  dataFim: Date;\n  mediaGeral: number;\n  totalAvaliacoes: number;\n}\n\nexport interface FiltrosMetricas {\n  periodoIds?: string[];\n  atendenteIds?: string[];\n  setores?: string[];\n  departamentos?: string[];\n  dataInicio?: Date;\n  dataFim?: Date;\n  notaMinima?: number;\n  notaMaxima?: number;\n}\n\n/**\n * Calcula a m\xE9dia de um array de n\xFAmeros\n */\nexport function calcularMedia(valores: number[]): number {\n  if (valores.length === 0) return 0;\n  const soma = valores.reduce((acc, valor) => acc + valor, 0);\n  return Number((soma / valores.length).toFixed(2));\n}\n\n/**\n * Calcula a mediana de um array de n\xFAmeros\n */\nexport function calcularMediana(valores: number[]): number {\n  if (valores.length === 0) return 0;\n  \n  const valoresOrdenados = [...valores].sort((a, b) => a - b);\n  const meio = Math.floor(valoresOrdenados.length / 2);\n  \n  if (valoresOrdenados.length % 2 === 0) {\n    return Number(((valoresOrdenados[meio - 1] + valoresOrdenados[meio]) / 2).toFixed(2));\n  } else {\n    return valoresOrdenados[meio];\n  }\n}\n\n/**\n * Calcula o desvio padr\xE3o de um array de n\xFAmeros\n */\nexport function calcularDesvioPadrao(valores: number[]): number {\n  if (valores.length === 0) return 0;\n  \n  const media = calcularMedia(valores);\n  const variancia = valores.reduce((acc, valor) => {\n    return acc + Math.pow(valor - media, 2);\n  }, 0) / valores.length;\n  \n  return Number(Math.sqrt(variancia).toFixed(2));\n}\n\n/**\n * Calcula a distribui\xE7\xE3o de notas (1-5)\n */\nexport function calcularDistribuicaoNotas(notas: number[]): DistribuicaoNotas {\n  const distribuicao: DistribuicaoNotas = {\n    nota1: 0,\n    nota2: 0,\n    nota3: 0,\n    nota4: 0,\n    nota5: 0\n  };\n  \n  notas.forEach(nota => {\n    switch (nota) {\n      case 1:\n        distribuicao.nota1++;\n        break;\n      case 2:\n        distribuicao.nota2++;\n        break;\n      case 3:\n        distribuicao.nota3++;\n        break;\n      case 4:\n        distribuicao.nota4++;\n        break;\n      case 5:\n        distribuicao.nota5++;\n        break;\n    }\n  });\n  \n  return distribuicao;\n}\n\n/**\n * Busca avalia\xE7\xF5es com filtros aplicados\n */\nexport async function buscarAvaliacoesComFiltros(filtros: FiltrosMetricas = {}) {\n  const where: any = {\n    status: StatusAvaliacao.CONCLUIDA\n  };\n  \n  // Filtros por per\xEDodo\n  if (filtros.periodoIds && filtros.periodoIds.length > 0) {\n    where.periodoId = {\n      in: filtros.periodoIds\n    };\n  }\n  \n  // Filtros por atendente\n  if (filtros.atendenteIds && filtros.atendenteIds.length > 0) {\n    where.avaliadoId = {\n      in: filtros.atendenteIds\n    };\n  }\n  \n  // Filtros por setor/departamento\n  if (filtros.setores && filtros.setores.length > 0) {\n    where.avaliado = {\n      setor: {\n        in: filtros.setores\n      }\n    };\n  }\n  \n  if (filtros.departamentos && filtros.departamentos.length > 0) {\n    where.avaliado = {\n      ...where.avaliado,\n      departamento: {\n        in: filtros.departamentos\n      }\n    };\n  }\n  \n  // Filtros por data\n  if (filtros.dataInicio || filtros.dataFim) {\n    where.dataAvaliacao = {};\n    if (filtros.dataInicio) {\n      where.dataAvaliacao.gte = filtros.dataInicio;\n    }\n    if (filtros.dataFim) {\n      where.dataAvaliacao.lte = filtros.dataFim;\n    }\n  }\n  \n  // Filtros por nota\n  if (filtros.notaMinima !== undefined || filtros.notaMaxima !== undefined) {\n    where.nota = {};\n    if (filtros.notaMinima !== undefined) {\n      where.nota.gte = filtros.notaMinima;\n    }\n    if (filtros.notaMaxima !== undefined) {\n      where.nota.lte = filtros.notaMaxima;\n    }\n  }\n  \n  return await prisma.avaliacao.findMany({\n    where,\n    include: {\n      avaliado: {\n        include: {\n          usuario: true\n        }\n      },\n      periodo: true,\n      avaliador: true\n    },\n    orderBy: {\n      dataAvaliacao: 'desc'\n    }\n  });\n}\n\n/**\n * Calcula m\xE9tricas para um atendente espec\xEDfico\n */\nexport async function calcularMetricasAtendente(\n  atendenteId: string,\n  filtros: FiltrosMetricas = {}\n): Promise<MetricasAtendente | null> {\n  const avaliacoes = await buscarAvaliacoesComFiltros({\n    ...filtros,\n    atendenteIds: [atendenteId]\n  });\n  \n  if (avaliacoes.length === 0) return null;\n  \n  const notas = avaliacoes.map(av => av.nota);\n  const atendente = avaliacoes[0].avaliado;\n  \n  return {\n    atendenteId,\n    nomeAtendente: atendente.usuario.nome,\n    setor: atendente.setor,\n    departamento: atendente.departamento || undefined,\n    totalAvaliacoes: avaliacoes.length,\n    media: calcularMedia(notas),\n    mediana: calcularMediana(notas),\n    desvioPadrao: calcularDesvioPadrao(notas),\n    notaMinima: Math.min(...notas),\n    notaMaxima: Math.max(...notas),\n    distribuicaoNotas: calcularDistribuicaoNotas(notas)\n  };\n}\n\n/**\n * Calcula m\xE9tricas para um per\xEDodo espec\xEDfico\n */\nexport async function calcularMetricasPeriodo(\n  periodoId: string,\n  filtros: FiltrosMetricas = {}\n): Promise<MetricasPeriodo | null> {\n  const periodo = await prisma.periodoAvaliacao.findUnique({\n    where: { id: periodoId }\n  });\n  \n  if (!periodo) return null;\n  \n  const avaliacoes = await buscarAvaliacoesComFiltros({\n    ...filtros,\n    periodoIds: [periodoId]\n  });\n  \n  if (avaliacoes.length === 0) {\n    return {\n      periodoId,\n      nomePeriodo: periodo.nome,\n      dataInicio: periodo.dataInicio,\n      dataFim: periodo.dataFim,\n      totalAvaliacoes: 0,\n      mediaGeral: 0,\n      medianaGeral: 0,\n      desvioPadraoGeral: 0,\n      distribuicaoGeral: {\n        nota1: 0,\n        nota2: 0,\n        nota3: 0,\n        nota4: 0,\n        nota5: 0\n      },\n      metricasPorAtendente: []\n    };\n  }\n  \n  const notasGerais = avaliacoes.map(av => av.nota);\n  \n  // Agrupar avalia\xE7\xF5es por atendente\n  const avaliacoesPorAtendente = avaliacoes.reduce((acc, avaliacao) => {\n    const atendenteId = avaliacao.avaliadoId;\n    if (!acc[atendenteId]) {\n      acc[atendenteId] = [];\n    }\n    acc[atendenteId].push(avaliacao);\n    return acc;\n  }, {} as Record<string, typeof avaliacoes>);\n  \n  // Calcular m\xE9tricas por atendente\n  const metricasPorAtendente: MetricasAtendente[] = [];\n  \n  for (const [atendenteId, avaliacoesAtendente] of Object.entries(avaliacoesPorAtendente)) {\n    const notas = avaliacoesAtendente.map(av => av.nota);\n    const atendente = avaliacoesAtendente[0].avaliado;\n    \n    metricasPorAtendente.push({\n      atendenteId,\n      nomeAtendente: atendente.usuario.nome,\n      setor: atendente.setor,\n      departamento: atendente.departamento || undefined,\n      totalAvaliacoes: avaliacoesAtendente.length,\n      media: calcularMedia(notas),\n      mediana: calcularMediana(notas),\n      desvioPadrao: calcularDesvioPadrao(notas),\n      notaMinima: Math.min(...notas),\n      notaMaxima: Math.max(...notas),\n      distribuicaoNotas: calcularDistribuicaoNotas(notas)\n    });\n  }\n  \n  return {\n    periodoId,\n    nomePeriodo: periodo.nome,\n    dataInicio: periodo.dataInicio,\n    dataFim: periodo.dataFim,\n    totalAvaliacoes: avaliacoes.length,\n    mediaGeral: calcularMedia(notasGerais),\n    medianaGeral: calcularMediana(notasGerais),\n    desvioPadraoGeral: calcularDesvioPadrao(notasGerais),\n    distribuicaoGeral: calcularDistribuicaoNotas(notasGerais),\n    metricasPorAtendente: metricasPorAtendente.sort((a, b) => b.media - a.media)\n  };\n}\n\n/**\n * Gera comparativo temporal entre per\xEDodos\n */\nexport async function gerarComparativoTemporal(\n  filtros: FiltrosMetricas = {}\n): Promise<ComparativoTemporal[]> {\n  const periodos = await prisma.periodoAvaliacao.findMany({\n    where: {\n      status: {\n        in: [StatusPeriodo.ATIVO, StatusPeriodo.FINALIZADO]\n      },\n      ...(filtros.periodoIds && {\n        id: {\n          in: filtros.periodoIds\n        }\n      })\n    },\n    orderBy: {\n      dataInicio: 'asc'\n    }\n  });\n  \n  const comparativo: ComparativoTemporal[] = [];\n  \n  for (const periodo of periodos) {\n    const avaliacoes = await buscarAvaliacoesComFiltros({\n      ...filtros,\n      periodoIds: [periodo.id]\n    });\n    \n    const notas = avaliacoes.map(av => av.nota);\n    \n    comparativo.push({\n      periodoId: periodo.id,\n      nomePeriodo: periodo.nome,\n      dataInicio: periodo.dataInicio,\n      dataFim: periodo.dataFim,\n      mediaGeral: calcularMedia(notas),\n      totalAvaliacoes: avaliacoes.length\n    });\n  }\n  \n  return comparativo;\n}\n\n/**\n * Busca m\xE9tricas consolidadas com filtros\n */\nexport async function buscarMetricasConsolidadas(\n  filtros: FiltrosMetricas = {}\n) {\n  const avaliacoes = await buscarAvaliacoesComFiltros(filtros);\n  \n  if (avaliacoes.length === 0) {\n    return {\n      totalAvaliacoes: 0,\n      mediaGeral: 0,\n      medianaGeral: 0,\n      desvioPadraoGeral: 0,\n      distribuicaoGeral: {\n        nota1: 0,\n        nota2: 0,\n        nota3: 0,\n        nota4: 0,\n        nota5: 0\n      },\n      atendentesAvaliados: 0,\n      periodosAtivos: 0\n    };\n  }\n  \n  const notas = avaliacoes.map(av => av.nota);\n  const atendentesUnicos = new Set(avaliacoes.map(av => av.avaliadoId));\n  const periodosUnicos = new Set(avaliacoes.map(av => av.periodoId));\n  \n  return {\n    totalAvaliacoes: avaliacoes.length,\n    mediaGeral: calcularMedia(notas),\n    medianaGeral: calcularMediana(notas),\n    desvioPadraoGeral: calcularDesvioPadrao(notas),\n    distribuicaoGeral: calcularDistribuicaoNotas(notas),\n    atendentesAvaliados: atendentesUnicos.size,\n    periodosAtivos: periodosUnicos.size\n  };\n}\n\n/**\n * Busca ranking de atendentes por m\xE9dia de avalia\xE7\xF5es\n */\nexport async function buscarRankingAtendentes(\n  filtros: FiltrosMetricas = {},\n  limite: number = 10\n): Promise<MetricasAtendente[]> {\n  const avaliacoes = await buscarAvaliacoesComFiltros(filtros);\n  \n  // Agrupar por atendente\n  const avaliacoesPorAtendente = avaliacoes.reduce((acc, avaliacao) => {\n    const atendenteId = avaliacao.avaliadoId;\n    if (!acc[atendenteId]) {\n      acc[atendenteId] = [];\n    }\n    acc[atendenteId].push(avaliacao);\n    return acc;\n  }, {} as Record<string, typeof avaliacoes>);\n  \n  const ranking: MetricasAtendente[] = [];\n  \n  for (const [atendenteId, avaliacoesAtendente] of Object.entries(avaliacoesPorAtendente)) {\n    const notas = avaliacoesAtendente.map(av => av.nota);\n    const atendente = avaliacoesAtendente[0].avaliado;\n    \n    ranking.push({\n      atendenteId,\n      nomeAtendente: atendente.usuario.nome,\n      setor: atendente.setor,\n      departamento: atendente.departamento || undefined,\n      totalAvaliacoes: avaliacoesAtendente.length,\n      media: calcularMedia(notas),\n      mediana: calcularMediana(notas),\n      desvioPadrao: calcularDesvioPadrao(notas),\n      notaMinima: Math.min(...notas),\n      notaMaxima: Math.max(...notas),\n      distribuicaoNotas: calcularDistribuicaoNotas(notas)\n    });\n  }\n  \n  return ranking\n    .sort((a, b) => b.media - a.media)\n    .slice(0, limite);\n}"],
      names: ["buscarAvaliacoesComFiltros", "buscarMetricasConsolidadas", "buscarRankingAtendentes", "calcularDesvioPadrao", "calcularDistribuicaoNotas", "calcularMedia", "calcularMediana", "calcularMetricasAtendente", "calcularMetricasPeriodo", "gerarComparativoTemporal", "prisma", "PrismaClient", "valores", "length", "soma", "reduce", "acc", "valor", "Number", "toFixed", "valoresOrdenados", "sort", "a", "b", "meio", "Math", "floor", "media", "variancia", "pow", "sqrt", "notas", "distribuicao", "nota1", "nota2", "nota3", "nota4", "nota5", "forEach", "nota", "filtros", "where", "status", "StatusAvaliacao", "CONCLUIDA", "periodoIds", "periodoId", "in", "atendenteIds", "avaliadoId", "setores", "avaliado", "setor", "departamentos", "departamento", "dataInicio", "dataFim", "dataAvaliacao", "gte", "lte", "notaMinima", "undefined", "notaMaxima", "avaliacao", "findMany", "include", "usuario", "periodo", "avaliador", "orderBy", "atendenteId", "avaliacoes", "map", "av", "atendente", "nomeAtendente", "nome", "totalAvaliacoes", "mediana", "desvioPadrao", "min", "max", "distribuicaoNotas", "periodoAvaliacao", "findUnique", "id", "nomePeriodo", "mediaGeral", "medianaGeral", "desvioPadraoGeral", "distribuicaoGeral", "metricasPorAtendente", "notasGerais", "avaliacoesPorAtendente", "push", "avaliacoesAtendente", "Object", "entries", "periodos", "StatusPeriodo", "ATIVO", "FINALIZADO", "comparativo", "atendentesAvaliados", "periodosAtivos", "atendentesUnicos", "Set", "periodosUnicos", "size", "limite", "ranking", "slice"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "bf5100094c401f7e5d7af98f1a8c7116e071e2ac"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_16vyaceovy = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_16vyaceovy();
cov_16vyaceovy().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_16vyaceovy().f[0]++;
  cov_16vyaceovy().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_16vyaceovy().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_16vyaceovy().s[3]++;
_export(exports, {
  get buscarAvaliacoesComFiltros() {
    /* istanbul ignore next */
    cov_16vyaceovy().f[1]++;
    cov_16vyaceovy().s[4]++;
    return buscarAvaliacoesComFiltros;
  },
  get buscarMetricasConsolidadas() {
    /* istanbul ignore next */
    cov_16vyaceovy().f[2]++;
    cov_16vyaceovy().s[5]++;
    return buscarMetricasConsolidadas;
  },
  get buscarRankingAtendentes() {
    /* istanbul ignore next */
    cov_16vyaceovy().f[3]++;
    cov_16vyaceovy().s[6]++;
    return buscarRankingAtendentes;
  },
  get calcularDesvioPadrao() {
    /* istanbul ignore next */
    cov_16vyaceovy().f[4]++;
    cov_16vyaceovy().s[7]++;
    return calcularDesvioPadrao;
  },
  get calcularDistribuicaoNotas() {
    /* istanbul ignore next */
    cov_16vyaceovy().f[5]++;
    cov_16vyaceovy().s[8]++;
    return calcularDistribuicaoNotas;
  },
  get calcularMedia() {
    /* istanbul ignore next */
    cov_16vyaceovy().f[6]++;
    cov_16vyaceovy().s[9]++;
    return calcularMedia;
  },
  get calcularMediana() {
    /* istanbul ignore next */
    cov_16vyaceovy().f[7]++;
    cov_16vyaceovy().s[10]++;
    return calcularMediana;
  },
  get calcularMetricasAtendente() {
    /* istanbul ignore next */
    cov_16vyaceovy().f[8]++;
    cov_16vyaceovy().s[11]++;
    return calcularMetricasAtendente;
  },
  get calcularMetricasPeriodo() {
    /* istanbul ignore next */
    cov_16vyaceovy().f[9]++;
    cov_16vyaceovy().s[12]++;
    return calcularMetricasPeriodo;
  },
  get gerarComparativoTemporal() {
    /* istanbul ignore next */
    cov_16vyaceovy().f[10]++;
    cov_16vyaceovy().s[13]++;
    return gerarComparativoTemporal;
  }
});
const _prisma =
/* istanbul ignore next */
(cov_16vyaceovy().s[14]++, require("../../generated/prisma"));
const prisma =
/* istanbul ignore next */
(cov_16vyaceovy().s[15]++, new _prisma.PrismaClient());
function calcularMedia(valores) {
  /* istanbul ignore next */
  cov_16vyaceovy().f[11]++;
  cov_16vyaceovy().s[16]++;
  if (valores.length === 0) {
    /* istanbul ignore next */
    cov_16vyaceovy().b[0][0]++;
    cov_16vyaceovy().s[17]++;
    return 0;
  } else
  /* istanbul ignore next */
  {
    cov_16vyaceovy().b[0][1]++;
  }
  const soma =
  /* istanbul ignore next */
  (cov_16vyaceovy().s[18]++, valores.reduce((acc, valor) => {
    /* istanbul ignore next */
    cov_16vyaceovy().f[12]++;
    cov_16vyaceovy().s[19]++;
    return acc + valor;
  }, 0));
  /* istanbul ignore next */
  cov_16vyaceovy().s[20]++;
  return Number((soma / valores.length).toFixed(2));
}
function calcularMediana(valores) {
  /* istanbul ignore next */
  cov_16vyaceovy().f[13]++;
  cov_16vyaceovy().s[21]++;
  if (valores.length === 0) {
    /* istanbul ignore next */
    cov_16vyaceovy().b[1][0]++;
    cov_16vyaceovy().s[22]++;
    return 0;
  } else
  /* istanbul ignore next */
  {
    cov_16vyaceovy().b[1][1]++;
  }
  const valoresOrdenados =
  /* istanbul ignore next */
  (cov_16vyaceovy().s[23]++, [...valores].sort((a, b) => {
    /* istanbul ignore next */
    cov_16vyaceovy().f[14]++;
    cov_16vyaceovy().s[24]++;
    return a - b;
  }));
  const meio =
  /* istanbul ignore next */
  (cov_16vyaceovy().s[25]++, Math.floor(valoresOrdenados.length / 2));
  /* istanbul ignore next */
  cov_16vyaceovy().s[26]++;
  if (valoresOrdenados.length % 2 === 0) {
    /* istanbul ignore next */
    cov_16vyaceovy().b[2][0]++;
    cov_16vyaceovy().s[27]++;
    return Number(((valoresOrdenados[meio - 1] + valoresOrdenados[meio]) / 2).toFixed(2));
  } else {
    /* istanbul ignore next */
    cov_16vyaceovy().b[2][1]++;
    cov_16vyaceovy().s[28]++;
    return valoresOrdenados[meio];
  }
}
function calcularDesvioPadrao(valores) {
  /* istanbul ignore next */
  cov_16vyaceovy().f[15]++;
  cov_16vyaceovy().s[29]++;
  if (valores.length === 0) {
    /* istanbul ignore next */
    cov_16vyaceovy().b[3][0]++;
    cov_16vyaceovy().s[30]++;
    return 0;
  } else
  /* istanbul ignore next */
  {
    cov_16vyaceovy().b[3][1]++;
  }
  const media =
  /* istanbul ignore next */
  (cov_16vyaceovy().s[31]++, calcularMedia(valores));
  const variancia =
  /* istanbul ignore next */
  (cov_16vyaceovy().s[32]++, valores.reduce((acc, valor) => {
    /* istanbul ignore next */
    cov_16vyaceovy().f[16]++;
    cov_16vyaceovy().s[33]++;
    return acc + Math.pow(valor - media, 2);
  }, 0) / valores.length);
  /* istanbul ignore next */
  cov_16vyaceovy().s[34]++;
  return Number(Math.sqrt(variancia).toFixed(2));
}
function calcularDistribuicaoNotas(notas) {
  /* istanbul ignore next */
  cov_16vyaceovy().f[17]++;
  const distribuicao =
  /* istanbul ignore next */
  (cov_16vyaceovy().s[35]++, {
    nota1: 0,
    nota2: 0,
    nota3: 0,
    nota4: 0,
    nota5: 0
  });
  /* istanbul ignore next */
  cov_16vyaceovy().s[36]++;
  notas.forEach(nota => {
    /* istanbul ignore next */
    cov_16vyaceovy().f[18]++;
    cov_16vyaceovy().s[37]++;
    switch (nota) {
      case 1:
        /* istanbul ignore next */
        cov_16vyaceovy().b[4][0]++;
        cov_16vyaceovy().s[38]++;
        distribuicao.nota1++;
        /* istanbul ignore next */
        cov_16vyaceovy().s[39]++;
        break;
      case 2:
        /* istanbul ignore next */
        cov_16vyaceovy().b[4][1]++;
        cov_16vyaceovy().s[40]++;
        distribuicao.nota2++;
        /* istanbul ignore next */
        cov_16vyaceovy().s[41]++;
        break;
      case 3:
        /* istanbul ignore next */
        cov_16vyaceovy().b[4][2]++;
        cov_16vyaceovy().s[42]++;
        distribuicao.nota3++;
        /* istanbul ignore next */
        cov_16vyaceovy().s[43]++;
        break;
      case 4:
        /* istanbul ignore next */
        cov_16vyaceovy().b[4][3]++;
        cov_16vyaceovy().s[44]++;
        distribuicao.nota4++;
        /* istanbul ignore next */
        cov_16vyaceovy().s[45]++;
        break;
      case 5:
        /* istanbul ignore next */
        cov_16vyaceovy().b[4][4]++;
        cov_16vyaceovy().s[46]++;
        distribuicao.nota5++;
        /* istanbul ignore next */
        cov_16vyaceovy().s[47]++;
        break;
    }
  });
  /* istanbul ignore next */
  cov_16vyaceovy().s[48]++;
  return distribuicao;
}
async function buscarAvaliacoesComFiltros(filtros =
/* istanbul ignore next */
(cov_16vyaceovy().b[5][0]++, {})) {
  /* istanbul ignore next */
  cov_16vyaceovy().f[19]++;
  const where =
  /* istanbul ignore next */
  (cov_16vyaceovy().s[49]++, {
    status: _prisma.StatusAvaliacao.CONCLUIDA
  });
  // Filtros por período
  /* istanbul ignore next */
  cov_16vyaceovy().s[50]++;
  if (
  /* istanbul ignore next */
  (cov_16vyaceovy().b[7][0]++, filtros.periodoIds) &&
  /* istanbul ignore next */
  (cov_16vyaceovy().b[7][1]++, filtros.periodoIds.length > 0)) {
    /* istanbul ignore next */
    cov_16vyaceovy().b[6][0]++;
    cov_16vyaceovy().s[51]++;
    where.periodoId = {
      in: filtros.periodoIds
    };
  } else
  /* istanbul ignore next */
  {
    cov_16vyaceovy().b[6][1]++;
  }
  // Filtros por atendente
  cov_16vyaceovy().s[52]++;
  if (
  /* istanbul ignore next */
  (cov_16vyaceovy().b[9][0]++, filtros.atendenteIds) &&
  /* istanbul ignore next */
  (cov_16vyaceovy().b[9][1]++, filtros.atendenteIds.length > 0)) {
    /* istanbul ignore next */
    cov_16vyaceovy().b[8][0]++;
    cov_16vyaceovy().s[53]++;
    where.avaliadoId = {
      in: filtros.atendenteIds
    };
  } else
  /* istanbul ignore next */
  {
    cov_16vyaceovy().b[8][1]++;
  }
  // Filtros por setor/departamento
  cov_16vyaceovy().s[54]++;
  if (
  /* istanbul ignore next */
  (cov_16vyaceovy().b[11][0]++, filtros.setores) &&
  /* istanbul ignore next */
  (cov_16vyaceovy().b[11][1]++, filtros.setores.length > 0)) {
    /* istanbul ignore next */
    cov_16vyaceovy().b[10][0]++;
    cov_16vyaceovy().s[55]++;
    where.avaliado = {
      setor: {
        in: filtros.setores
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_16vyaceovy().b[10][1]++;
  }
  cov_16vyaceovy().s[56]++;
  if (
  /* istanbul ignore next */
  (cov_16vyaceovy().b[13][0]++, filtros.departamentos) &&
  /* istanbul ignore next */
  (cov_16vyaceovy().b[13][1]++, filtros.departamentos.length > 0)) {
    /* istanbul ignore next */
    cov_16vyaceovy().b[12][0]++;
    cov_16vyaceovy().s[57]++;
    where.avaliado = {
      ...where.avaliado,
      departamento: {
        in: filtros.departamentos
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_16vyaceovy().b[12][1]++;
  }
  // Filtros por data
  cov_16vyaceovy().s[58]++;
  if (
  /* istanbul ignore next */
  (cov_16vyaceovy().b[15][0]++, filtros.dataInicio) ||
  /* istanbul ignore next */
  (cov_16vyaceovy().b[15][1]++, filtros.dataFim)) {
    /* istanbul ignore next */
    cov_16vyaceovy().b[14][0]++;
    cov_16vyaceovy().s[59]++;
    where.dataAvaliacao = {};
    /* istanbul ignore next */
    cov_16vyaceovy().s[60]++;
    if (filtros.dataInicio) {
      /* istanbul ignore next */
      cov_16vyaceovy().b[16][0]++;
      cov_16vyaceovy().s[61]++;
      where.dataAvaliacao.gte = filtros.dataInicio;
    } else
    /* istanbul ignore next */
    {
      cov_16vyaceovy().b[16][1]++;
    }
    cov_16vyaceovy().s[62]++;
    if (filtros.dataFim) {
      /* istanbul ignore next */
      cov_16vyaceovy().b[17][0]++;
      cov_16vyaceovy().s[63]++;
      where.dataAvaliacao.lte = filtros.dataFim;
    } else
    /* istanbul ignore next */
    {
      cov_16vyaceovy().b[17][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_16vyaceovy().b[14][1]++;
  }
  // Filtros por nota
  cov_16vyaceovy().s[64]++;
  if (
  /* istanbul ignore next */
  (cov_16vyaceovy().b[19][0]++, filtros.notaMinima !== undefined) ||
  /* istanbul ignore next */
  (cov_16vyaceovy().b[19][1]++, filtros.notaMaxima !== undefined)) {
    /* istanbul ignore next */
    cov_16vyaceovy().b[18][0]++;
    cov_16vyaceovy().s[65]++;
    where.nota = {};
    /* istanbul ignore next */
    cov_16vyaceovy().s[66]++;
    if (filtros.notaMinima !== undefined) {
      /* istanbul ignore next */
      cov_16vyaceovy().b[20][0]++;
      cov_16vyaceovy().s[67]++;
      where.nota.gte = filtros.notaMinima;
    } else
    /* istanbul ignore next */
    {
      cov_16vyaceovy().b[20][1]++;
    }
    cov_16vyaceovy().s[68]++;
    if (filtros.notaMaxima !== undefined) {
      /* istanbul ignore next */
      cov_16vyaceovy().b[21][0]++;
      cov_16vyaceovy().s[69]++;
      where.nota.lte = filtros.notaMaxima;
    } else
    /* istanbul ignore next */
    {
      cov_16vyaceovy().b[21][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_16vyaceovy().b[18][1]++;
  }
  cov_16vyaceovy().s[70]++;
  return await prisma.avaliacao.findMany({
    where,
    include: {
      avaliado: {
        include: {
          usuario: true
        }
      },
      periodo: true,
      avaliador: true
    },
    orderBy: {
      dataAvaliacao: 'desc'
    }
  });
}
async function calcularMetricasAtendente(atendenteId, filtros =
/* istanbul ignore next */
(cov_16vyaceovy().b[22][0]++, {})) {
  /* istanbul ignore next */
  cov_16vyaceovy().f[20]++;
  const avaliacoes =
  /* istanbul ignore next */
  (cov_16vyaceovy().s[71]++, await buscarAvaliacoesComFiltros({
    ...filtros,
    atendenteIds: [atendenteId]
  }));
  /* istanbul ignore next */
  cov_16vyaceovy().s[72]++;
  if (avaliacoes.length === 0) {
    /* istanbul ignore next */
    cov_16vyaceovy().b[23][0]++;
    cov_16vyaceovy().s[73]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_16vyaceovy().b[23][1]++;
  }
  const notas =
  /* istanbul ignore next */
  (cov_16vyaceovy().s[74]++, avaliacoes.map(av => {
    /* istanbul ignore next */
    cov_16vyaceovy().f[21]++;
    cov_16vyaceovy().s[75]++;
    return av.nota;
  }));
  const atendente =
  /* istanbul ignore next */
  (cov_16vyaceovy().s[76]++, avaliacoes[0].avaliado);
  /* istanbul ignore next */
  cov_16vyaceovy().s[77]++;
  return {
    atendenteId,
    nomeAtendente: atendente.usuario.nome,
    setor: atendente.setor,
    departamento:
    /* istanbul ignore next */
    (cov_16vyaceovy().b[24][0]++, atendente.departamento) ||
    /* istanbul ignore next */
    (cov_16vyaceovy().b[24][1]++, undefined),
    totalAvaliacoes: avaliacoes.length,
    media: calcularMedia(notas),
    mediana: calcularMediana(notas),
    desvioPadrao: calcularDesvioPadrao(notas),
    notaMinima: Math.min(...notas),
    notaMaxima: Math.max(...notas),
    distribuicaoNotas: calcularDistribuicaoNotas(notas)
  };
}
async function calcularMetricasPeriodo(periodoId, filtros =
/* istanbul ignore next */
(cov_16vyaceovy().b[25][0]++, {})) {
  /* istanbul ignore next */
  cov_16vyaceovy().f[22]++;
  const periodo =
  /* istanbul ignore next */
  (cov_16vyaceovy().s[78]++, await prisma.periodoAvaliacao.findUnique({
    where: {
      id: periodoId
    }
  }));
  /* istanbul ignore next */
  cov_16vyaceovy().s[79]++;
  if (!periodo) {
    /* istanbul ignore next */
    cov_16vyaceovy().b[26][0]++;
    cov_16vyaceovy().s[80]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_16vyaceovy().b[26][1]++;
  }
  const avaliacoes =
  /* istanbul ignore next */
  (cov_16vyaceovy().s[81]++, await buscarAvaliacoesComFiltros({
    ...filtros,
    periodoIds: [periodoId]
  }));
  /* istanbul ignore next */
  cov_16vyaceovy().s[82]++;
  if (avaliacoes.length === 0) {
    /* istanbul ignore next */
    cov_16vyaceovy().b[27][0]++;
    cov_16vyaceovy().s[83]++;
    return {
      periodoId,
      nomePeriodo: periodo.nome,
      dataInicio: periodo.dataInicio,
      dataFim: periodo.dataFim,
      totalAvaliacoes: 0,
      mediaGeral: 0,
      medianaGeral: 0,
      desvioPadraoGeral: 0,
      distribuicaoGeral: {
        nota1: 0,
        nota2: 0,
        nota3: 0,
        nota4: 0,
        nota5: 0
      },
      metricasPorAtendente: []
    };
  } else
  /* istanbul ignore next */
  {
    cov_16vyaceovy().b[27][1]++;
  }
  const notasGerais =
  /* istanbul ignore next */
  (cov_16vyaceovy().s[84]++, avaliacoes.map(av => {
    /* istanbul ignore next */
    cov_16vyaceovy().f[23]++;
    cov_16vyaceovy().s[85]++;
    return av.nota;
  }));
  // Agrupar avaliações por atendente
  const avaliacoesPorAtendente =
  /* istanbul ignore next */
  (cov_16vyaceovy().s[86]++, avaliacoes.reduce((acc, avaliacao) => {
    /* istanbul ignore next */
    cov_16vyaceovy().f[24]++;
    const atendenteId =
    /* istanbul ignore next */
    (cov_16vyaceovy().s[87]++, avaliacao.avaliadoId);
    /* istanbul ignore next */
    cov_16vyaceovy().s[88]++;
    if (!acc[atendenteId]) {
      /* istanbul ignore next */
      cov_16vyaceovy().b[28][0]++;
      cov_16vyaceovy().s[89]++;
      acc[atendenteId] = [];
    } else
    /* istanbul ignore next */
    {
      cov_16vyaceovy().b[28][1]++;
    }
    cov_16vyaceovy().s[90]++;
    acc[atendenteId].push(avaliacao);
    /* istanbul ignore next */
    cov_16vyaceovy().s[91]++;
    return acc;
  }, {}));
  // Calcular métricas por atendente
  const metricasPorAtendente =
  /* istanbul ignore next */
  (cov_16vyaceovy().s[92]++, []);
  /* istanbul ignore next */
  cov_16vyaceovy().s[93]++;
  for (const [atendenteId, avaliacoesAtendente] of Object.entries(avaliacoesPorAtendente)) {
    const notas =
    /* istanbul ignore next */
    (cov_16vyaceovy().s[94]++, avaliacoesAtendente.map(av => {
      /* istanbul ignore next */
      cov_16vyaceovy().f[25]++;
      cov_16vyaceovy().s[95]++;
      return av.nota;
    }));
    const atendente =
    /* istanbul ignore next */
    (cov_16vyaceovy().s[96]++, avaliacoesAtendente[0].avaliado);
    /* istanbul ignore next */
    cov_16vyaceovy().s[97]++;
    metricasPorAtendente.push({
      atendenteId,
      nomeAtendente: atendente.usuario.nome,
      setor: atendente.setor,
      departamento:
      /* istanbul ignore next */
      (cov_16vyaceovy().b[29][0]++, atendente.departamento) ||
      /* istanbul ignore next */
      (cov_16vyaceovy().b[29][1]++, undefined),
      totalAvaliacoes: avaliacoesAtendente.length,
      media: calcularMedia(notas),
      mediana: calcularMediana(notas),
      desvioPadrao: calcularDesvioPadrao(notas),
      notaMinima: Math.min(...notas),
      notaMaxima: Math.max(...notas),
      distribuicaoNotas: calcularDistribuicaoNotas(notas)
    });
  }
  /* istanbul ignore next */
  cov_16vyaceovy().s[98]++;
  return {
    periodoId,
    nomePeriodo: periodo.nome,
    dataInicio: periodo.dataInicio,
    dataFim: periodo.dataFim,
    totalAvaliacoes: avaliacoes.length,
    mediaGeral: calcularMedia(notasGerais),
    medianaGeral: calcularMediana(notasGerais),
    desvioPadraoGeral: calcularDesvioPadrao(notasGerais),
    distribuicaoGeral: calcularDistribuicaoNotas(notasGerais),
    metricasPorAtendente: metricasPorAtendente.sort((a, b) => {
      /* istanbul ignore next */
      cov_16vyaceovy().f[26]++;
      cov_16vyaceovy().s[99]++;
      return b.media - a.media;
    })
  };
}
async function gerarComparativoTemporal(filtros =
/* istanbul ignore next */
(cov_16vyaceovy().b[30][0]++, {})) {
  /* istanbul ignore next */
  cov_16vyaceovy().f[27]++;
  const periodos =
  /* istanbul ignore next */
  (cov_16vyaceovy().s[100]++, await prisma.periodoAvaliacao.findMany({
    where: {
      status: {
        in: [_prisma.StatusPeriodo.ATIVO, _prisma.StatusPeriodo.FINALIZADO]
      },
      ...(
      /* istanbul ignore next */
      (cov_16vyaceovy().b[31][0]++, filtros.periodoIds) &&
      /* istanbul ignore next */
      (cov_16vyaceovy().b[31][1]++, {
        id: {
          in: filtros.periodoIds
        }
      }))
    },
    orderBy: {
      dataInicio: 'asc'
    }
  }));
  const comparativo =
  /* istanbul ignore next */
  (cov_16vyaceovy().s[101]++, []);
  /* istanbul ignore next */
  cov_16vyaceovy().s[102]++;
  for (const periodo of periodos) {
    const avaliacoes =
    /* istanbul ignore next */
    (cov_16vyaceovy().s[103]++, await buscarAvaliacoesComFiltros({
      ...filtros,
      periodoIds: [periodo.id]
    }));
    const notas =
    /* istanbul ignore next */
    (cov_16vyaceovy().s[104]++, avaliacoes.map(av => {
      /* istanbul ignore next */
      cov_16vyaceovy().f[28]++;
      cov_16vyaceovy().s[105]++;
      return av.nota;
    }));
    /* istanbul ignore next */
    cov_16vyaceovy().s[106]++;
    comparativo.push({
      periodoId: periodo.id,
      nomePeriodo: periodo.nome,
      dataInicio: periodo.dataInicio,
      dataFim: periodo.dataFim,
      mediaGeral: calcularMedia(notas),
      totalAvaliacoes: avaliacoes.length
    });
  }
  /* istanbul ignore next */
  cov_16vyaceovy().s[107]++;
  return comparativo;
}
async function buscarMetricasConsolidadas(filtros =
/* istanbul ignore next */
(cov_16vyaceovy().b[32][0]++, {})) {
  /* istanbul ignore next */
  cov_16vyaceovy().f[29]++;
  const avaliacoes =
  /* istanbul ignore next */
  (cov_16vyaceovy().s[108]++, await buscarAvaliacoesComFiltros(filtros));
  /* istanbul ignore next */
  cov_16vyaceovy().s[109]++;
  if (avaliacoes.length === 0) {
    /* istanbul ignore next */
    cov_16vyaceovy().b[33][0]++;
    cov_16vyaceovy().s[110]++;
    return {
      totalAvaliacoes: 0,
      mediaGeral: 0,
      medianaGeral: 0,
      desvioPadraoGeral: 0,
      distribuicaoGeral: {
        nota1: 0,
        nota2: 0,
        nota3: 0,
        nota4: 0,
        nota5: 0
      },
      atendentesAvaliados: 0,
      periodosAtivos: 0
    };
  } else
  /* istanbul ignore next */
  {
    cov_16vyaceovy().b[33][1]++;
  }
  const notas =
  /* istanbul ignore next */
  (cov_16vyaceovy().s[111]++, avaliacoes.map(av => {
    /* istanbul ignore next */
    cov_16vyaceovy().f[30]++;
    cov_16vyaceovy().s[112]++;
    return av.nota;
  }));
  const atendentesUnicos =
  /* istanbul ignore next */
  (cov_16vyaceovy().s[113]++, new Set(avaliacoes.map(av => {
    /* istanbul ignore next */
    cov_16vyaceovy().f[31]++;
    cov_16vyaceovy().s[114]++;
    return av.avaliadoId;
  })));
  const periodosUnicos =
  /* istanbul ignore next */
  (cov_16vyaceovy().s[115]++, new Set(avaliacoes.map(av => {
    /* istanbul ignore next */
    cov_16vyaceovy().f[32]++;
    cov_16vyaceovy().s[116]++;
    return av.periodoId;
  })));
  /* istanbul ignore next */
  cov_16vyaceovy().s[117]++;
  return {
    totalAvaliacoes: avaliacoes.length,
    mediaGeral: calcularMedia(notas),
    medianaGeral: calcularMediana(notas),
    desvioPadraoGeral: calcularDesvioPadrao(notas),
    distribuicaoGeral: calcularDistribuicaoNotas(notas),
    atendentesAvaliados: atendentesUnicos.size,
    periodosAtivos: periodosUnicos.size
  };
}
async function buscarRankingAtendentes(filtros =
/* istanbul ignore next */
(cov_16vyaceovy().b[34][0]++, {}), limite =
/* istanbul ignore next */
(cov_16vyaceovy().b[35][0]++, 10)) {
  /* istanbul ignore next */
  cov_16vyaceovy().f[33]++;
  const avaliacoes =
  /* istanbul ignore next */
  (cov_16vyaceovy().s[118]++, await buscarAvaliacoesComFiltros(filtros));
  // Agrupar por atendente
  const avaliacoesPorAtendente =
  /* istanbul ignore next */
  (cov_16vyaceovy().s[119]++, avaliacoes.reduce((acc, avaliacao) => {
    /* istanbul ignore next */
    cov_16vyaceovy().f[34]++;
    const atendenteId =
    /* istanbul ignore next */
    (cov_16vyaceovy().s[120]++, avaliacao.avaliadoId);
    /* istanbul ignore next */
    cov_16vyaceovy().s[121]++;
    if (!acc[atendenteId]) {
      /* istanbul ignore next */
      cov_16vyaceovy().b[36][0]++;
      cov_16vyaceovy().s[122]++;
      acc[atendenteId] = [];
    } else
    /* istanbul ignore next */
    {
      cov_16vyaceovy().b[36][1]++;
    }
    cov_16vyaceovy().s[123]++;
    acc[atendenteId].push(avaliacao);
    /* istanbul ignore next */
    cov_16vyaceovy().s[124]++;
    return acc;
  }, {}));
  const ranking =
  /* istanbul ignore next */
  (cov_16vyaceovy().s[125]++, []);
  /* istanbul ignore next */
  cov_16vyaceovy().s[126]++;
  for (const [atendenteId, avaliacoesAtendente] of Object.entries(avaliacoesPorAtendente)) {
    const notas =
    /* istanbul ignore next */
    (cov_16vyaceovy().s[127]++, avaliacoesAtendente.map(av => {
      /* istanbul ignore next */
      cov_16vyaceovy().f[35]++;
      cov_16vyaceovy().s[128]++;
      return av.nota;
    }));
    const atendente =
    /* istanbul ignore next */
    (cov_16vyaceovy().s[129]++, avaliacoesAtendente[0].avaliado);
    /* istanbul ignore next */
    cov_16vyaceovy().s[130]++;
    ranking.push({
      atendenteId,
      nomeAtendente: atendente.usuario.nome,
      setor: atendente.setor,
      departamento:
      /* istanbul ignore next */
      (cov_16vyaceovy().b[37][0]++, atendente.departamento) ||
      /* istanbul ignore next */
      (cov_16vyaceovy().b[37][1]++, undefined),
      totalAvaliacoes: avaliacoesAtendente.length,
      media: calcularMedia(notas),
      mediana: calcularMediana(notas),
      desvioPadrao: calcularDesvioPadrao(notas),
      notaMinima: Math.min(...notas),
      notaMaxima: Math.max(...notas),
      distribuicaoNotas: calcularDistribuicaoNotas(notas)
    });
  }
  /* istanbul ignore next */
  cov_16vyaceovy().s[131]++;
  return ranking.sort((a, b) => {
    /* istanbul ignore next */
    cov_16vyaceovy().f[36]++;
    cov_16vyaceovy().s[132]++;
    return b.media - a.media;
  }).slice(0, limite);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,