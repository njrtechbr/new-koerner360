{"version":3,"names":["cov_2bi95683f5","actualCoverage","s","default","f","_default","useUserForm","criarUsuarioSchema","_zod","z","object","nome","string","min","max","regex","email","toLowerCase","senha","confirmarSenha","perfil","enum","errorMap","message","ativo","boolean","refine","data","path","atualizarUsuarioSchema","optional","criarUsuario","atualizarUsuario","carregando","_useusuarios","useUsuarios","formularioCriacao","setFormularioCriacao","_react","useState","formularioAtualizacao","setFormularioAtualizacao","errosCriacao","setErrosCriacao","errosAtualizacao","setErrosAtualizacao","validandoCriacao","setValidandoCriacao","validandoAtualizacao","setValidandoAtualizacao","atualizarCampoCriacao","useCallback","campo","valor","prev","b","undefined","atualizarCampoAtualizacao","validarFormularioCriacao","dadosValidados","parse","sucesso","dados","error","ZodError","novosErros","errors","forEach","err","length","validarFormularioAtualizacao","submeterCriacao","validacao","usuario","dadosUsuario","novoUsuario","limparFormularioCriacao","submeterAtualizacao","id","usuarioAtualizado","carregarUsuarioParaEdicao","limparFormularioAtualizacao","formularioCriacaoValido","Object","keys","trim","formularioAtualizacaoValido","temMudancasAtualizacao","usuarioOriginal"],"sources":["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\hooks\\use-user-form.ts"],"sourcesContent":["'use client';\n\nimport { useState, useCallback, useEffect } from 'react';\nimport { z } from 'zod';\nimport {\n  useUsuarios,\n  type CriarUsuarioData,\n  type AtualizarUsuarioData,\n  type Usuario,\n} from './use-usuarios';\n\n// Schemas de validação\nconst criarUsuarioSchema = z\n  .object({\n    nome: z\n      .string()\n      .min(2, 'Nome deve ter pelo menos 2 caracteres')\n      .max(100, 'Nome muito longo')\n      .regex(/^[a-zA-ZÀ-ÿ\\s]+$/, 'Nome deve conter apenas letras e espaços'),\n    email: z.string().email('Email inválido').toLowerCase(),\n    senha: z\n      .string()\n      .min(6, 'Senha deve ter pelo menos 6 caracteres')\n      .regex(\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/,\n        'Senha deve conter ao menos uma letra minúscula, uma maiúscula e um número'\n      ),\n    confirmarSenha: z.string(),\n    perfil: z.enum(['ADMIN', 'GESTOR', 'ATENDENTE'], {\n      errorMap: () => ({ message: 'Selecione um perfil válido' }),\n    }),\n    ativo: z.boolean().default(true),\n  })\n  .refine(data => data.senha === data.confirmarSenha, {\n    message: 'Senhas não coincidem',\n    path: ['confirmarSenha'],\n  });\n\nconst atualizarUsuarioSchema = z.object({\n  nome: z\n    .string()\n    .min(2, 'Nome deve ter pelo menos 2 caracteres')\n    .max(100, 'Nome muito longo')\n    .regex(/^[a-zA-ZÀ-ÿ\\s]+$/, 'Nome deve conter apenas letras e espaços')\n    .optional(),\n  email: z.string().email('Email inválido').toLowerCase().optional(),\n  perfil: z\n    .enum(['ADMIN', 'GESTOR', 'ATENDENTE'], {\n      errorMap: () => ({ message: 'Selecione um perfil válido' }),\n    })\n    .optional(),\n  ativo: z.boolean().optional(),\n});\n\n// Tipos para os formulários\nexport interface FormularioCriarUsuario {\n  nome: string;\n  email: string;\n  senha: string;\n  confirmarSenha: string;\n  perfil: 'ADMIN' | 'GESTOR' | 'ATENDENTE';\n  ativo: boolean;\n}\n\nexport interface FormularioAtualizarUsuario {\n  nome: string;\n  email: string;\n  perfil: 'ADMIN' | 'GESTOR' | 'ATENDENTE';\n  ativo: boolean;\n}\n\nexport interface ErrosFormulario {\n  [key: string]: string | undefined;\n}\n\n/**\n * Hook para gerenciamento de formulários de usuário\n * Fornece validação, estado e submissão de formulários\n */\nexport function useUserForm() {\n  const { criarUsuario, atualizarUsuario, carregando } = useUsuarios();\n\n  // Estado do formulário de criação\n  const [formularioCriacao, setFormularioCriacao] =\n    useState<FormularioCriarUsuario>({\n      nome: '',\n      email: '',\n      senha: '',\n      confirmarSenha: '',\n      perfil: 'ATENDENTE',\n      ativo: true,\n    });\n\n  // Estado do formulário de atualização\n  const [formularioAtualizacao, setFormularioAtualizacao] =\n    useState<FormularioAtualizarUsuario>({\n      nome: '',\n      email: '',\n      perfil: 'ATENDENTE',\n      ativo: true,\n    });\n\n  // Erros de validação\n  const [errosCriacao, setErrosCriacao] = useState<ErrosFormulario>({});\n  const [errosAtualizacao, setErrosAtualizacao] = useState<ErrosFormulario>({});\n\n  // Estado de validação\n  const [validandoCriacao, setValidandoCriacao] = useState(false);\n  const [validandoAtualizacao, setValidandoAtualizacao] = useState(false);\n\n  /**\n   * Atualizar campo do formulário de criação\n   */\n  const atualizarCampoCriacao = useCallback(\n    (campo: keyof FormularioCriarUsuario, valor: any) => {\n      setFormularioCriacao(prev => ({ ...prev, [campo]: valor }));\n\n      // Limpar erro do campo quando o usuário começar a digitar\n      if (errosCriacao[campo]) {\n        setErrosCriacao(prev => ({ ...prev, [campo]: undefined }));\n      }\n    },\n    [errosCriacao]\n  );\n\n  /**\n   * Atualizar campo do formulário de atualização\n   */\n  const atualizarCampoAtualizacao = useCallback(\n    (campo: keyof FormularioAtualizarUsuario, valor: any) => {\n      setFormularioAtualizacao(prev => ({ ...prev, [campo]: valor }));\n\n      // Limpar erro do campo quando o usuário começar a digitar\n      if (errosAtualizacao[campo]) {\n        setErrosAtualizacao(prev => ({ ...prev, [campo]: undefined }));\n      }\n    },\n    [errosAtualizacao]\n  );\n\n  /**\n   * Validar formulário de criação\n   */\n  const validarFormularioCriacao = useCallback(async () => {\n    try {\n      setValidandoCriacao(true);\n      setErrosCriacao({});\n\n      const dadosValidados = criarUsuarioSchema.parse(formularioCriacao);\n      return { sucesso: true, dados: dadosValidados };\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        const novosErros: ErrosFormulario = {};\n        error.errors.forEach(err => {\n          if (err.path.length > 0) {\n            novosErros[err.path[0] as string] = err.message;\n          }\n        });\n        setErrosCriacao(novosErros);\n      }\n      return { sucesso: false, dados: null };\n    } finally {\n      setValidandoCriacao(false);\n    }\n  }, [formularioCriacao]);\n\n  /**\n   * Validar formulário de atualização\n   */\n  const validarFormularioAtualizacao = useCallback(async () => {\n    try {\n      setValidandoAtualizacao(true);\n      setErrosAtualizacao({});\n\n      const dadosValidados = atualizarUsuarioSchema.parse(\n        formularioAtualizacao\n      );\n      return { sucesso: true, dados: dadosValidados };\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        const novosErros: ErrosFormulario = {};\n        error.errors.forEach(err => {\n          if (err.path.length > 0) {\n            novosErros[err.path[0] as string] = err.message;\n          }\n        });\n        setErrosAtualizacao(novosErros);\n      }\n      return { sucesso: false, dados: null };\n    } finally {\n      setValidandoAtualizacao(false);\n    }\n  }, [formularioAtualizacao]);\n\n  /**\n   * Submeter formulário de criação\n   */\n  const submeterCriacao = useCallback(async () => {\n    const validacao = await validarFormularioCriacao();\n\n    if (!validacao.sucesso || !validacao.dados) {\n      return { sucesso: false, usuario: null };\n    }\n\n    try {\n      // Remover confirmarSenha dos dados enviados\n      const { confirmarSenha, ...dadosUsuario } = validacao.dados;\n      const novoUsuario = await criarUsuario(dadosUsuario as CriarUsuarioData);\n\n      // Limpar formulário após sucesso\n      limparFormularioCriacao();\n\n      return { sucesso: true, usuario: novoUsuario };\n    } catch (error) {\n      return { sucesso: false, usuario: null };\n    }\n  }, [validarFormularioCriacao, criarUsuario]);\n\n  /**\n   * Submeter formulário de atualização\n   */\n  const submeterAtualizacao = useCallback(\n    async (id: string) => {\n      const validacao = await validarFormularioAtualizacao();\n\n      if (!validacao.sucesso || !validacao.dados) {\n        return { sucesso: false, usuario: null };\n      }\n\n      try {\n        const usuarioAtualizado = await atualizarUsuario(\n          id,\n          validacao.dados as AtualizarUsuarioData\n        );\n        return { sucesso: true, usuario: usuarioAtualizado };\n      } catch (error) {\n        return { sucesso: false, usuario: null };\n      }\n    },\n    [validarFormularioAtualizacao, atualizarUsuario]\n  );\n\n  /**\n   * Carregar dados do usuário no formulário de atualização\n   */\n  const carregarUsuarioParaEdicao = useCallback((usuario: Usuario) => {\n    setFormularioAtualizacao({\n      nome: usuario.nome,\n      email: usuario.email,\n      perfil: usuario.perfil,\n      ativo: usuario.ativo,\n    });\n    setErrosAtualizacao({});\n  }, []);\n\n  /**\n   * Limpar formulário de criação\n   */\n  const limparFormularioCriacao = useCallback(() => {\n    setFormularioCriacao({\n      nome: '',\n      email: '',\n      senha: '',\n      confirmarSenha: '',\n      perfil: 'ATENDENTE',\n      ativo: true,\n    });\n    setErrosCriacao({});\n  }, []);\n\n  /**\n   * Limpar formulário de atualização\n   */\n  const limparFormularioAtualizacao = useCallback(() => {\n    setFormularioAtualizacao({\n      nome: '',\n      email: '',\n      perfil: 'ATENDENTE',\n      ativo: true,\n    });\n    setErrosAtualizacao({});\n  }, []);\n\n  /**\n   * Verificar se formulário de criação é válido\n   */\n  const formularioCriacaoValido = useCallback(() => {\n    return (\n      Object.keys(errosCriacao).length === 0 &&\n      formularioCriacao.nome.trim() !== '' &&\n      formularioCriacao.email.trim() !== '' &&\n      formularioCriacao.senha.trim() !== '' &&\n      formularioCriacao.confirmarSenha.trim() !== ''\n    );\n  }, [errosCriacao, formularioCriacao]);\n\n  /**\n   * Verificar se formulário de atualização é válido\n   */\n  const formularioAtualizacaoValido = useCallback(() => {\n    return (\n      Object.keys(errosAtualizacao).length === 0 &&\n      formularioAtualizacao.nome.trim() !== '' &&\n      formularioAtualizacao.email.trim() !== ''\n    );\n  }, [errosAtualizacao, formularioAtualizacao]);\n\n  /**\n   * Verificar se há mudanças no formulário de atualização\n   */\n  const temMudancasAtualizacao = useCallback(\n    (usuarioOriginal: Usuario) => {\n      return (\n        usuarioOriginal.nome !== formularioAtualizacao.nome ||\n        usuarioOriginal.email !== formularioAtualizacao.email ||\n        usuarioOriginal.perfil !== formularioAtualizacao.perfil ||\n        usuarioOriginal.ativo !== formularioAtualizacao.ativo\n      );\n    },\n    [formularioAtualizacao]\n  );\n\n  return {\n    // Estado dos formulários\n    formularioCriacao,\n    formularioAtualizacao,\n    errosCriacao,\n    errosAtualizacao,\n\n    // Estado de validação\n    validandoCriacao,\n    validandoAtualizacao,\n    carregando,\n\n    // Ações dos formulários\n    atualizarCampoCriacao,\n    atualizarCampoAtualizacao,\n    submeterCriacao,\n    submeterAtualizacao,\n    carregarUsuarioParaEdicao,\n\n    // Validação\n    validarFormularioCriacao,\n    validarFormularioAtualizacao,\n    formularioCriacaoValido,\n    formularioAtualizacaoValido,\n    temMudancasAtualizacao,\n\n    // Limpeza\n    limparFormularioCriacao,\n    limparFormularioAtualizacao,\n  };\n}\n\nexport default useUserForm;\n"],"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","ignoreList":[]}