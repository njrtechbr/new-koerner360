{"version":3,"names":["ConfiguracoesPage","mockConfiguracoes","cov_gnczt8fd7","s","id","categoria","nome","descricao","valor","tipo","obrigatorio","ativo","opcoes","categoriaIcons","geral","_lucidereact","Globe","notificacoes","Bell","seguranca","Shield","email","Mail","backup","Database","categoriaLabels","f","configuracoes","setConfiguracoes","_react","useState","tabAtiva","setTabAtiva","alteracoesPendentes","setAlteracoesPendentes","Set","salvando","setSalvando","handleValorChange","novoValor","prev","map","config","b","handleSalvar","Promise","resolve","setTimeout","_sonner","toast","success","error","handleReset","info","renderCampoConfiguracao","temAlteracao","has","_jsxruntime","jsxs","className","jsx","_label","Label","htmlFor","_badge","Badge","variant","_input","Input","value","onChange","e","target","disabled","type","parseInt","_textarea","Textarea","rows","_switch","Switch","checked","onCheckedChange","_select","Select","onValueChange","SelectTrigger","SelectValue","SelectContent","opcao","SelectItem","configuracoesPorCategoria","reduce","acc","push","size","AlertTriangle","_button","Button","onClick","RefreshCw","Save","_tabs","Tabs","TabsList","Object","entries","label","Icon","temAlteracoes","some","TabsTrigger","configs","TabsContent","_card","Card","CardHeader","CardTitle","CardDescription","toLowerCase","CardContent","CheckCircle"],"sources":["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\(dashboard)\\configuracoes\\page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Switch } from '@/components/ui/switch';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Separator } from '@/components/ui/separator';\nimport { Badge } from '@/components/ui/badge';\nimport {\n  Settings,\n  Bell,\n  Shield,\n  Database,\n  Mail,\n  Users,\n  Clock,\n  Globe,\n  Palette,\n  Save,\n  RefreshCw,\n  AlertTriangle,\n  CheckCircle,\n} from 'lucide-react';\nimport { toast } from 'sonner';\n\ninterface ConfiguracaoSistema {\n  id: string;\n  categoria: 'geral' | 'notificacoes' | 'seguranca' | 'email' | 'backup';\n  nome: string;\n  descricao: string;\n  valor: string | boolean | number;\n  tipo: 'texto' | 'numero' | 'boolean' | 'select' | 'textarea';\n  opcoes?: string[];\n  obrigatorio: boolean;\n  ativo: boolean;\n}\n\nconst mockConfiguracoes: ConfiguracaoSistema[] = [\n  // Configurações Gerais\n  {\n    id: 'nome_empresa',\n    categoria: 'geral',\n    nome: 'Nome da Empresa',\n    descricao: 'Nome oficial da empresa exibido no sistema',\n    valor: 'Koerner 360',\n    tipo: 'texto',\n    obrigatorio: true,\n    ativo: true,\n  },\n  {\n    id: 'timezone',\n    categoria: 'geral',\n    nome: 'Fuso Horário',\n    descricao: 'Fuso horário padrão do sistema',\n    valor: 'America/Sao_Paulo',\n    tipo: 'select',\n    opcoes: [\n      'America/Sao_Paulo',\n      'America/New_York',\n      'Europe/London',\n      'Asia/Tokyo',\n    ],\n    obrigatorio: true,\n    ativo: true,\n  },\n  {\n    id: 'idioma_padrao',\n    categoria: 'geral',\n    nome: 'Idioma Padrão',\n    descricao: 'Idioma padrão da interface do sistema',\n    valor: 'pt-BR',\n    tipo: 'select',\n    opcoes: ['pt-BR', 'en-US', 'es-ES'],\n    obrigatorio: true,\n    ativo: true,\n  },\n  {\n    id: 'manutencao',\n    categoria: 'geral',\n    nome: 'Modo Manutenção',\n    descricao: 'Ativar modo de manutenção do sistema',\n    valor: false,\n    tipo: 'boolean',\n    obrigatorio: false,\n    ativo: true,\n  },\n\n  // Configurações de Notificações\n  {\n    id: 'notif_email',\n    categoria: 'notificacoes',\n    nome: 'Notificações por Email',\n    descricao: 'Enviar notificações por email',\n    valor: true,\n    tipo: 'boolean',\n    obrigatorio: false,\n    ativo: true,\n  },\n  {\n    id: 'notif_push',\n    categoria: 'notificacoes',\n    nome: 'Notificações Push',\n    descricao: 'Enviar notificações push no navegador',\n    valor: true,\n    tipo: 'boolean',\n    obrigatorio: false,\n    ativo: true,\n  },\n  {\n    id: 'notif_frequencia',\n    categoria: 'notificacoes',\n    nome: 'Frequência de Notificações',\n    descricao: 'Frequência de envio de notificações em lote',\n    valor: 'diaria',\n    tipo: 'select',\n    opcoes: ['imediata', 'horaria', 'diaria', 'semanal'],\n    obrigatorio: true,\n    ativo: true,\n  },\n\n  // Configurações de Segurança\n  {\n    id: 'sessao_timeout',\n    categoria: 'seguranca',\n    nome: 'Timeout de Sessão (minutos)',\n    descricao: 'Tempo limite para expirar sessões inativas',\n    valor: 30,\n    tipo: 'numero',\n    obrigatorio: true,\n    ativo: true,\n  },\n  {\n    id: 'senha_complexidade',\n    categoria: 'seguranca',\n    nome: 'Exigir Senha Complexa',\n    descricao: 'Exigir senhas com caracteres especiais e números',\n    valor: true,\n    tipo: 'boolean',\n    obrigatorio: false,\n    ativo: true,\n  },\n  {\n    id: 'tentativas_login',\n    categoria: 'seguranca',\n    nome: 'Máximo de Tentativas de Login',\n    descricao: 'Número máximo de tentativas de login antes do bloqueio',\n    valor: 5,\n    tipo: 'numero',\n    obrigatorio: true,\n    ativo: true,\n  },\n\n  // Configurações de Email\n  {\n    id: 'smtp_host',\n    categoria: 'email',\n    nome: 'Servidor SMTP',\n    descricao: 'Endereço do servidor SMTP para envio de emails',\n    valor: 'smtp.gmail.com',\n    tipo: 'texto',\n    obrigatorio: true,\n    ativo: true,\n  },\n  {\n    id: 'smtp_porta',\n    categoria: 'email',\n    nome: 'Porta SMTP',\n    descricao: 'Porta do servidor SMTP',\n    valor: 587,\n    tipo: 'numero',\n    obrigatorio: true,\n    ativo: true,\n  },\n  {\n    id: 'email_remetente',\n    categoria: 'email',\n    nome: 'Email Remetente',\n    descricao: 'Email usado como remetente das mensagens do sistema',\n    valor: 'noreply@koerner360.com',\n    tipo: 'texto',\n    obrigatorio: true,\n    ativo: true,\n  },\n\n  // Configurações de Backup\n  {\n    id: 'backup_automatico',\n    categoria: 'backup',\n    nome: 'Backup Automático',\n    descricao: 'Realizar backup automático do banco de dados',\n    valor: true,\n    tipo: 'boolean',\n    obrigatorio: false,\n    ativo: true,\n  },\n  {\n    id: 'backup_frequencia',\n    categoria: 'backup',\n    nome: 'Frequência do Backup',\n    descricao: 'Frequência de execução do backup automático',\n    valor: 'diario',\n    tipo: 'select',\n    opcoes: ['diario', 'semanal', 'mensal'],\n    obrigatorio: true,\n    ativo: true,\n  },\n  {\n    id: 'backup_retencao',\n    categoria: 'backup',\n    nome: 'Retenção de Backups (dias)',\n    descricao: 'Número de dias para manter os backups',\n    valor: 30,\n    tipo: 'numero',\n    obrigatorio: true,\n    ativo: true,\n  },\n];\n\nconst categoriaIcons = {\n  geral: Globe,\n  notificacoes: Bell,\n  seguranca: Shield,\n  email: Mail,\n  backup: Database,\n};\n\nconst categoriaLabels = {\n  geral: 'Configurações Gerais',\n  notificacoes: 'Notificações',\n  seguranca: 'Segurança',\n  email: 'Email',\n  backup: 'Backup',\n};\n\nexport default function ConfiguracoesPage() {\n  const [configuracoes, setConfiguracoes] =\n    useState<ConfiguracaoSistema[]>(mockConfiguracoes);\n  const [tabAtiva, setTabAtiva] = useState('geral');\n  const [alteracoesPendentes, setAlteracoesPendentes] = useState<Set<string>>(\n    new Set()\n  );\n  const [salvando, setSalvando] = useState(false);\n\n  const handleValorChange = (\n    id: string,\n    novoValor: string | boolean | number\n  ) => {\n    setConfiguracoes(prev =>\n      prev.map(config =>\n        config.id === id ? { ...config, valor: novoValor } : config\n      )\n    );\n    setAlteracoesPendentes(prev => new Set([...prev, id]));\n  };\n\n  const handleSalvar = async () => {\n    setSalvando(true);\n    try {\n      // Simular salvamento\n      await new Promise(resolve => setTimeout(resolve, 1500));\n      setAlteracoesPendentes(new Set());\n      toast.success('Configurações salvas com sucesso!');\n    } catch (error) {\n      toast.error('Erro ao salvar configurações');\n    } finally {\n      setSalvando(false);\n    }\n  };\n\n  const handleReset = () => {\n    setConfiguracoes(mockConfiguracoes);\n    setAlteracoesPendentes(new Set());\n    toast.info('Configurações resetadas para os valores padrão');\n  };\n\n  const renderCampoConfiguracao = (config: ConfiguracaoSistema) => {\n    const temAlteracao = alteracoesPendentes.has(config.id);\n\n    return (\n      <div\n        key={config.id}\n        className=\"space-y-3 p-4 border rounded-lg hover:bg-muted/50 transition-colors\"\n      >\n        <div className=\"flex items-start justify-between\">\n          <div className=\"space-y-1 flex-1\">\n            <div className=\"flex items-center gap-2\">\n              <Label htmlFor={config.id} className=\"font-medium\">\n                {config.nome}\n              </Label>\n              {config.obrigatorio && (\n                <Badge variant=\"destructive\" className=\"text-xs\">\n                  Obrigatório\n                </Badge>\n              )}\n              {temAlteracao && (\n                <Badge variant=\"outline\" className=\"text-xs\">\n                  Alterado\n                </Badge>\n              )}\n            </div>\n            <p className=\"text-sm text-muted-foreground\">{config.descricao}</p>\n          </div>\n        </div>\n\n        <div className=\"space-y-2\">\n          {config.tipo === 'texto' && (\n            <Input\n              id={config.id}\n              value={config.valor as string}\n              onChange={e => handleValorChange(config.id, e.target.value)}\n              disabled={!config.ativo}\n            />\n          )}\n\n          {config.tipo === 'numero' && (\n            <Input\n              id={config.id}\n              type=\"number\"\n              value={config.valor as number}\n              onChange={e =>\n                handleValorChange(config.id, parseInt(e.target.value) || 0)\n              }\n              disabled={!config.ativo}\n            />\n          )}\n\n          {config.tipo === 'textarea' && (\n            <Textarea\n              id={config.id}\n              value={config.valor as string}\n              onChange={e => handleValorChange(config.id, e.target.value)}\n              disabled={!config.ativo}\n              rows={3}\n            />\n          )}\n\n          {config.tipo === 'boolean' && (\n            <div className=\"flex items-center space-x-2\">\n              <Switch\n                id={config.id}\n                checked={config.valor as boolean}\n                onCheckedChange={checked =>\n                  handleValorChange(config.id, checked)\n                }\n                disabled={!config.ativo}\n              />\n              <Label htmlFor={config.id} className=\"text-sm\">\n                {config.valor ? 'Ativado' : 'Desativado'}\n              </Label>\n            </div>\n          )}\n\n          {config.tipo === 'select' && config.opcoes && (\n            <Select\n              value={config.valor as string}\n              onValueChange={value => handleValorChange(config.id, value)}\n              disabled={!config.ativo}\n            >\n              <SelectTrigger>\n                <SelectValue />\n              </SelectTrigger>\n              <SelectContent>\n                {config.opcoes.map(opcao => (\n                  <SelectItem key={opcao} value={opcao}>\n                    {opcao}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  const configuracoesPorCategoria = configuracoes.reduce(\n    (acc, config) => {\n      if (!acc[config.categoria]) {\n        acc[config.categoria] = [];\n      }\n      acc[config.categoria].push(config);\n      return acc;\n    },\n    {} as Record<string, ConfiguracaoSistema[]>\n  );\n\n  return (\n    <div className=\"container mx-auto p-6 space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold tracking-tight\">\n            Configurações do Sistema\n          </h1>\n          <p className=\"text-muted-foreground\">\n            Gerencie as configurações globais do sistema\n          </p>\n        </div>\n\n        <div className=\"flex items-center gap-2\">\n          {alteracoesPendentes.size > 0 && (\n            <Badge variant=\"outline\" className=\"flex items-center gap-1\">\n              <AlertTriangle className=\"h-3 w-3\" />\n              {alteracoesPendentes.size} alteração(ões) pendente(s)\n            </Badge>\n          )}\n\n          <Button\n            variant=\"outline\"\n            onClick={handleReset}\n            disabled={salvando || alteracoesPendentes.size === 0}\n          >\n            <RefreshCw className=\"h-4 w-4 mr-2\" />\n            Resetar\n          </Button>\n\n          <Button\n            onClick={handleSalvar}\n            disabled={salvando || alteracoesPendentes.size === 0}\n          >\n            {salvando ? (\n              <RefreshCw className=\"h-4 w-4 mr-2 animate-spin\" />\n            ) : (\n              <Save className=\"h-4 w-4 mr-2\" />\n            )}\n            {salvando ? 'Salvando...' : 'Salvar Alterações'}\n          </Button>\n        </div>\n      </div>\n\n      <Tabs value={tabAtiva} onValueChange={setTabAtiva} className=\"space-y-4\">\n        <TabsList className=\"grid w-full grid-cols-5\">\n          {Object.entries(categoriaLabels).map(([categoria, label]) => {\n            const Icon =\n              categoriaIcons[categoria as keyof typeof categoriaIcons];\n            const temAlteracoes = configuracoesPorCategoria[categoria]?.some(\n              config => alteracoesPendentes.has(config.id)\n            );\n\n            return (\n              <TabsTrigger\n                key={categoria}\n                value={categoria}\n                className=\"flex items-center gap-2\"\n              >\n                <Icon className=\"h-4 w-4\" />\n                {label}\n                {temAlteracoes && (\n                  <div className=\"w-2 h-2 bg-orange-500 rounded-full\" />\n                )}\n              </TabsTrigger>\n            );\n          })}\n        </TabsList>\n\n        {Object.entries(configuracoesPorCategoria).map(\n          ([categoria, configs]) => {\n            const Icon =\n              categoriaIcons[categoria as keyof typeof categoriaIcons];\n\n            return (\n              <TabsContent\n                key={categoria}\n                value={categoria}\n                className=\"space-y-4\"\n              >\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center gap-2\">\n                      <Icon className=\"h-5 w-5\" />\n                      {\n                        categoriaLabels[\n                          categoria as keyof typeof categoriaLabels\n                        ]\n                      }\n                    </CardTitle>\n                    <CardDescription>\n                      Configure as opções relacionadas a{' '}\n                      {categoriaLabels[\n                        categoria as keyof typeof categoriaLabels\n                      ].toLowerCase()}\n                    </CardDescription>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-4\">\n                      {configs.map(renderCampoConfiguracao)}\n                    </div>\n                  </CardContent>\n                </Card>\n              </TabsContent>\n            );\n          }\n        )}\n      </Tabs>\n\n      {/* Status do Sistema */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <CheckCircle className=\"h-5 w-5 text-green-500\" />\n            Status do Sistema\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div className=\"text-center p-4 border rounded-lg\">\n              <div className=\"text-2xl font-bold text-green-600\">Online</div>\n              <div className=\"text-sm text-muted-foreground\">\n                Status do Servidor\n              </div>\n            </div>\n            <div className=\"text-center p-4 border rounded-lg\">\n              <div className=\"text-2xl font-bold text-blue-600\">99.9%</div>\n              <div className=\"text-sm text-muted-foreground\">Uptime</div>\n            </div>\n            <div className=\"text-center p-4 border rounded-lg\">\n              <div className=\"text-2xl font-bold text-purple-600\">v1.0.0</div>\n              <div className=\"text-sm text-muted-foreground\">\n                Versão do Sistema\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","ignoreList":[]}