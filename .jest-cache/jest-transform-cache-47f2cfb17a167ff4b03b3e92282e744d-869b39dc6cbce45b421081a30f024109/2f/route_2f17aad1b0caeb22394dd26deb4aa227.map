{"version":3,"names":["DELETE","cov_cri6zuiww","f","s","GET","PUT","preferenciaSchema","_zod","z","object","notificacoesAtivas","boolean","optional","emailAtivo","diasAntecedenciaLembrete","number","min","max","horarioEnvio","string","regex","incluirFinsDeSemanaSemana","incluirFeriados","tiposNotificacao","avaliacaoPendente","avaliacaoVencida","avaliacaoProximaVencimento","novaAvaliacaoRecebida","avaliacaoCompletada","lembretePersonalizado","urgenciaMinima","enum","frequenciaLembretes","incluirDetalhesAvaliacao","incluirLinkDireto","incluirResumoEstatisticas","formatoEmail","idiomaNotificacao","pausarNotificacoes","ativo","dataInicio","datetime","dataFim","motivo","filtros","apenasMinhasAvaliacoes","apenasAvaliacoesQueEuAvalio","departamentosEspecificos","array","cargosEspecificos","request","session","_nextauth","getServerSession","_route","authOptions","user","id","b","_server","NextResponse","json","error","status","preferencias","_preferenciasnotificacao","PreferenciasNotificacaoService","buscarPorUsuario","success","data","console","details","Error","message","body","validationResult","safeParse","errors","dados","Date","preferenciasAtualizadas","atualizar","preferenciasResetadas","resetarParaDefault"],"sources":["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\preferencias-notificacao\\route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { getServerSession } from 'next-auth';\nimport { authOptions } from '../auth/[...nextauth]/route';\nimport { PreferenciasNotificacaoService } from '@/lib/services/preferencias-notificacao';\nimport { PreferenciasNotificacaoInput } from '@/lib/types/preferencias-notificacao';\nimport { z } from 'zod';\n\n// Schema de validação para atualização de preferências\nconst preferenciaSchema = z.object({\n  notificacoesAtivas: z.boolean().optional(),\n  emailAtivo: z.boolean().optional(),\n  diasAntecedenciaLembrete: z.number().min(0).max(30).optional(),\n  horarioEnvio: z.string().regex(/^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/).optional(),\n  incluirFinsDeSemanaSemana: z.boolean().optional(),\n  incluirFeriados: z.boolean().optional(),\n  tiposNotificacao: z.object({\n    avaliacaoPendente: z.boolean().optional(),\n    avaliacaoVencida: z.boolean().optional(),\n    avaliacaoProximaVencimento: z.boolean().optional(),\n    novaAvaliacaoRecebida: z.boolean().optional(),\n    avaliacaoCompletada: z.boolean().optional(),\n    lembretePersonalizado: z.boolean().optional(),\n  }).optional(),\n  urgenciaMinima: z.enum(['BAIXA', 'MEDIA', 'ALTA']).optional(),\n  frequenciaLembretes: z.object({\n    avaliacaoPendente: z.enum(['DIARIO', 'SEMANAL', 'QUINZENAL', 'MENSAL', 'NUNCA']).optional(),\n    avaliacaoVencida: z.enum(['DIARIO', 'SEMANAL', 'NUNCA']).optional(),\n  }).optional(),\n  incluirDetalhesAvaliacao: z.boolean().optional(),\n  incluirLinkDireto: z.boolean().optional(),\n  incluirResumoEstatisticas: z.boolean().optional(),\n  formatoEmail: z.enum(['TEXTO', 'HTML']).optional(),\n  idiomaNotificacao: z.enum(['PT_BR', 'EN', 'ES']).optional(),\n  pausarNotificacoes: z.object({\n    ativo: z.boolean().optional(),\n    dataInicio: z.string().datetime().optional(),\n    dataFim: z.string().datetime().optional(),\n    motivo: z.string().optional(),\n  }).optional(),\n  filtros: z.object({\n    apenasMinhasAvaliacoes: z.boolean().optional(),\n    apenasAvaliacoesQueEuAvalio: z.boolean().optional(),\n    departamentosEspecificos: z.array(z.string()).optional(),\n    cargosEspecificos: z.array(z.string()).optional(),\n  }).optional(),\n});\n\n/**\n * GET /api/preferencias-notificacao\n * Busca as preferências de notificação do usuário autenticado\n */\nexport async function GET(request: NextRequest) {\n  try {\n    const session = await getServerSession(authOptions);\n    \n    if (!session?.user?.id) {\n      return NextResponse.json(\n        { error: 'Não autorizado' },\n        { status: 401 }\n      );\n    }\n\n    const preferencias = await PreferenciasNotificacaoService.buscarPorUsuario(\n      session.user.id\n    );\n\n    return NextResponse.json({\n      success: true,\n      data: preferencias,\n    });\n  } catch (error) {\n    console.error('Erro ao buscar preferências de notificação:', error);\n    return NextResponse.json(\n      { \n        error: 'Erro interno do servidor',\n        details: error instanceof Error ? error.message : 'Erro desconhecido'\n      },\n      { status: 500 }\n    );\n  }\n}\n\n/**\n * PUT /api/preferencias-notificacao\n * Atualiza as preferências de notificação do usuário autenticado\n */\nexport async function PUT(request: NextRequest) {\n  try {\n    const session = await getServerSession(authOptions);\n    \n    if (!session?.user?.id) {\n      return NextResponse.json(\n        { error: 'Não autorizado' },\n        { status: 401 }\n      );\n    }\n\n    const body = await request.json();\n    \n    // Validação dos dados\n    const validationResult = preferenciaSchema.safeParse(body);\n    if (!validationResult.success) {\n      return NextResponse.json(\n        { \n          error: 'Dados inválidos',\n          details: validationResult.error.errors\n        },\n        { status: 400 }\n      );\n    }\n\n    const dados = validationResult.data as PreferenciasNotificacaoInput;\n    \n    // Converte strings de data para Date objects se necessário\n    if (dados.pausarNotificacoes) {\n      if (dados.pausarNotificacoes.dataInicio) {\n        dados.pausarNotificacoes.dataInicio = new Date(dados.pausarNotificacoes.dataInicio);\n      }\n      if (dados.pausarNotificacoes.dataFim) {\n        dados.pausarNotificacoes.dataFim = new Date(dados.pausarNotificacoes.dataFim);\n      }\n    }\n\n    const preferenciasAtualizadas = await PreferenciasNotificacaoService.atualizar(\n      session.user.id,\n      dados\n    );\n\n    return NextResponse.json({\n      success: true,\n      data: preferenciasAtualizadas,\n      message: 'Preferências atualizadas com sucesso',\n    });\n  } catch (error) {\n    console.error('Erro ao atualizar preferências de notificação:', error);\n    return NextResponse.json(\n      { \n        error: 'Erro interno do servidor',\n        details: error instanceof Error ? error.message : 'Erro desconhecido'\n      },\n      { status: 500 }\n    );\n  }\n}\n\n/**\n * DELETE /api/preferencias-notificacao\n * Reseta as preferências para os valores padrão\n */\nexport async function DELETE(request: NextRequest) {\n  try {\n    const session = await getServerSession(authOptions);\n    \n    if (!session?.user?.id) {\n      return NextResponse.json(\n        { error: 'Não autorizado' },\n        { status: 401 }\n      );\n    }\n\n    const preferenciasResetadas = await PreferenciasNotificacaoService.resetarParaDefault(\n      session.user.id\n    );\n\n    return NextResponse.json({\n      success: true,\n      data: preferenciasResetadas,\n      message: 'Preferências resetadas para os valores padrão',\n    });\n  } catch (error) {\n    console.error('Erro ao resetar preferências de notificação:', error);\n    return NextResponse.json(\n      { \n        error: 'Erro interno do servidor',\n        details: error instanceof Error ? error.message : 'Erro desconhecido'\n      },\n      { status: 500 }\n    );\n  }\n}"],"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","ignoreList":[]}