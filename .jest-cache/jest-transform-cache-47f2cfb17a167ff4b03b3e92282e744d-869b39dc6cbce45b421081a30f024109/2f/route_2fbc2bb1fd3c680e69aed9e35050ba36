88c51345290f2a5e960de60edf7bf2c1
"use strict";

/* istanbul ignore next */
function cov_1dw9wtg4cu() {
  var path = "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\atendentes\\[id]\\ativar\\route.ts";
  var hash = "1cd7183219a48eec7f26c76a687834e90b0c38eb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\atendentes\\[id]\\ativar\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 20
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 18
        },
        end: {
          line: 12,
          column: 38
        }
      },
      "5": {
        start: {
          line: 13,
          column: 14
        },
        end: {
          line: 13,
          column: 48
        }
      },
      "6": {
        start: {
          line: 14,
          column: 16
        },
        end: {
          line: 14,
          column: 52
        }
      },
      "7": {
        start: {
          line: 15,
          column: 20
        },
        end: {
          line: 15,
          column: 72
        }
      },
      "8": {
        start: {
          line: 16,
          column: 13
        },
        end: {
          line: 16,
          column: 27
        }
      },
      "9": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 152,
          column: 5
        }
      },
      "10": {
        start: {
          line: 20,
          column: 24
        },
        end: {
          line: 20,
          column: 80
        }
      },
      "11": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 27,
          column: 9
        }
      },
      "12": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 26,
          column: 15
        }
      },
      "13": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 35,
          column: 9
        }
      },
      "14": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 34,
          column: 15
        }
      },
      "15": {
        start: {
          line: 37,
          column: 28
        },
        end: {
          line: 37,
          column: 74
        }
      },
      "16": {
        start: {
          line: 39,
          column: 26
        },
        end: {
          line: 53,
          column: 10
        }
      },
      "17": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 60,
          column: 9
        }
      },
      "18": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 59,
          column: 15
        }
      },
      "19": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "20": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 67,
          column: 15
        }
      },
      "21": {
        start: {
          line: 70,
          column: 32
        },
        end: {
          line: 70,
          column: 52
        }
      },
      "22": {
        start: {
          line: 72,
          column: 39
        },
        end: {
          line: 72,
          column: 95
        }
      },
      "23": {
        start: {
          line: 74,
          column: 32
        },
        end: {
          line: 77,
          column: 9
        }
      },
      "24": {
        start: {
          line: 79,
          column: 26
        },
        end: {
          line: 117,
          column: 10
        }
      },
      "25": {
        start: {
          line: 81,
          column: 38
        },
        end: {
          line: 88,
          column: 14
        }
      },
      "26": {
        start: {
          line: 90,
          column: 40
        },
        end: {
          line: 97,
          column: 14
        }
      },
      "27": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 112,
          column: 15
        }
      },
      "28": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 116,
          column: 14
        }
      },
      "29": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 136,
          column: 11
        }
      },
      "30": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 58
        }
      },
      "31": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 146,
          column: 9
        }
      },
      "32": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 145,
          column: 15
        }
      },
      "33": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 151,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "POST",
        decl: {
          start: {
            line: 17,
            column: 15
          },
          end: {
            line: 17,
            column: 19
          }
        },
        loc: {
          start: {
            line: 17,
            column: 41
          },
          end: {
            line: 153,
            column: 1
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 79,
            column: 60
          },
          end: {
            line: 79,
            column: 61
          }
        },
        loc: {
          start: {
            line: 79,
            column: 72
          },
          end: {
            line: 117,
            column: 9
          }
        },
        line: 79
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 21,
            column: 8
          },
          end: {
            line: 27,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 21
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 35,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 35,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "2": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "3": {
        loc: {
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 68,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "4": {
        loc: {
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 62,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 12
          },
          end: {
            line: 62,
            column: 40
          }
        }, {
          start: {
            line: 62,
            column: 44
          },
          end: {
            line: 62,
            column: 67
          }
        }],
        line: 62
      },
      "5": {
        loc: {
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 146,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 146,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\atendentes\\[id]\\ativar\\route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { getServerSession } from 'next-auth';\nimport { authOptions } from '@/lib/auth';\nimport { prisma } from '@/lib/prisma';\nimport { z } from 'zod';\nimport {\n  idAtendenteSchema,\n  ativarAtendenteSchema,\n  MENSAGENS_ERRO_ATENDENTES,\n} from '@/lib/validations/atendentes';\nimport { ZodError } from 'zod';\n\ninterface RouteParams {\n  params: {\n    id: string;\n  };\n}\n\n/**\n * POST /api/atendentes/[id]/ativar\n * Ativa um atendente inativo\n */\nexport async function POST(request: NextRequest, { params }: RouteParams) {\n  try {\n    // Verificar autentica\xE7\xE3o\n    const session = await getServerSession(authOptions);\n    if (!session?.user) {\n      return NextResponse.json({ erro: 'N\xE3o autorizado' }, { status: 401 });\n    }\n\n    // Verificar permiss\xF5es (apenas ADMIN pode ativar atendentes)\n    if (session.user.userType !== 'ADMIN') {\n      return NextResponse.json(\n        { erro: MENSAGENS_ERRO_ATENDENTES.SEM_PERMISSAO },\n        { status: 403 }\n      );\n    }\n\n    // Validar ID\n    const atendenteId = idAtendenteSchema.parse(params.id);\n\n    // Buscar atendente com dados do usu\xE1rio\n    const atendente = await prisma.atendente.findUnique({\n      where: { id: atendenteId },\n      include: {\n        usuario: {\n          select: {\n            id: true,\n            nome: true,\n            email: true,\n            ativo: true,\n          },\n        },\n      },\n    });\n\n    if (!atendente) {\n      return NextResponse.json(\n        { erro: MENSAGENS_ERRO_ATENDENTES.ATENDENTE_NAO_ENCONTRADO },\n        { status: 404 }\n      );\n    }\n\n    // Verificar se o atendente j\xE1 est\xE1 ativo\n    if (atendente.status === 'ATIVO' && atendente.usuario.ativo) {\n      return NextResponse.json(\n        { erro: 'Atendente j\xE1 est\xE1 ativo' },\n        { status: 400 }\n      );\n    }\n\n    // Extrair dados do corpo da requisi\xE7\xE3o\n    const dadosRequisicao = await request.json();\n\n    // Validar dados\n    const { motivo, novoStatus } = ativarAtendenteSchema.parse(dadosRequisicao);\n\n    // Salvar dados anteriores para o hist\xF3rico\n    const dadosAnteriores = {\n      statusAtendente: atendente.status,\n      usuarioAtivo: atendente.usuario.ativo,\n    };\n\n    // Usar transa\xE7\xE3o para garantir consist\xEAncia\n    const resultado = await prisma.$transaction(async tx => {\n      // Ativar usu\xE1rio\n      const usuarioAtualizado = await tx.usuario.update({\n        where: { id: atendente.usuarioId },\n        data: { ativo: true },\n      });\n\n      // Atualizar status do atendente\n      const atendenteAtualizado = await tx.atendente.update({\n        where: { id: atendenteId },\n        data: { status: novoStatus },\n      });\n\n      // Registrar no hist\xF3rico de altera\xE7\xF5es\n      await tx.historicoAlteracaoAtendente.create({\n        data: {\n          atendenteId,\n          tipo: 'ATIVACAO',\n          descricao: `Atendente reativado - ${motivo}`,\n          valorAnterior: JSON.stringify(dadosAnteriores),\n          valorNovo: JSON.stringify({\n            statusAtendente: novoStatus,\n            usuarioAtivo: true,\n            motivo,\n          }),\n          criadoPorId: session.user.id,\n        },\n      });\n\n      return {\n        atendente: atendenteAtualizado,\n        usuario: usuarioAtualizado,\n      };\n    });\n\n    return NextResponse.json({\n      mensagem: 'Atendente ativado com sucesso',\n      atendente: {\n        id: resultado.atendente.id,\n        status: resultado.atendente.status,\n        usuario: {\n          id: resultado.usuario.id,\n          nome: resultado.usuario.nome,\n          email: resultado.usuario.email,\n          ativo: resultado.usuario.ativo,\n        },\n        ativadoEm: new Date().toISOString(),\n        ativadoPor: {\n          id: session.user.id,\n          nome: session.user.name,\n        },\n        motivo,\n      },\n    });\n  } catch (error) {\n    console.error('Erro ao ativar atendente:', error);\n\n    if (error instanceof ZodError) {\n      return NextResponse.json(\n        {\n          erro: MENSAGENS_ERRO_ATENDENTES.DADOS_INVALIDOS,\n          detalhes: error.errors,\n        },\n        { status: 400 }\n      );\n    }\n\n    return NextResponse.json(\n      { erro: MENSAGENS_ERRO_ATENDENTES.ERRO_INTERNO },\n      { status: 500 }\n    );\n  }\n}\n"],
      names: ["POST", "request", "params", "session", "getServerSession", "authOptions", "user", "NextResponse", "json", "erro", "status", "userType", "MENSAGENS_ERRO_ATENDENTES", "SEM_PERMISSAO", "atendenteId", "idAtendenteSchema", "parse", "id", "atendente", "prisma", "findUnique", "where", "include", "usuario", "select", "nome", "email", "ativo", "ATENDENTE_NAO_ENCONTRADO", "dadosRequisicao", "motivo", "novoStatus", "ativarAtendenteSchema", "dadosAnteriores", "statusAtendente", "usuarioAtivo", "resultado", "$transaction", "tx", "usuarioAtualizado", "update", "usuarioId", "data", "atendenteAtualizado", "historicoAlteracaoAtendente", "create", "tipo", "descricao", "valorAnterior", "JSON", "stringify", "valorNovo", "criadoPorId", "mensagem", "ativadoEm", "Date", "toISOString", "ativadoPor", "name", "error", "console", "ZodError", "DADOS_INVALIDOS", "detalhes", "errors", "ERRO_INTERNO"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1cd7183219a48eec7f26c76a687834e90b0c38eb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1dw9wtg4cu = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1dw9wtg4cu();
cov_1dw9wtg4cu().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1dw9wtg4cu().s[1]++;
Object.defineProperty(exports, "POST", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1dw9wtg4cu().f[0]++;
    cov_1dw9wtg4cu().s[2]++;
    return POST;
  }
});
const _server =
/* istanbul ignore next */
(cov_1dw9wtg4cu().s[3]++, require("next/server"));
const _nextauth =
/* istanbul ignore next */
(cov_1dw9wtg4cu().s[4]++, require("next-auth"));
const _auth =
/* istanbul ignore next */
(cov_1dw9wtg4cu().s[5]++, require("../../../../../lib/auth"));
const _prisma =
/* istanbul ignore next */
(cov_1dw9wtg4cu().s[6]++, require("../../../../../lib/prisma"));
const _atendentes =
/* istanbul ignore next */
(cov_1dw9wtg4cu().s[7]++, require("../../../../../lib/validations/atendentes"));
const _zod =
/* istanbul ignore next */
(cov_1dw9wtg4cu().s[8]++, require("zod"));
async function POST(request, {
  params
}) {
  /* istanbul ignore next */
  cov_1dw9wtg4cu().f[1]++;
  cov_1dw9wtg4cu().s[9]++;
  try {
    // Verificar autenticação
    const session =
    /* istanbul ignore next */
    (cov_1dw9wtg4cu().s[10]++, await (0, _nextauth.getServerSession)(_auth.authOptions));
    /* istanbul ignore next */
    cov_1dw9wtg4cu().s[11]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_1dw9wtg4cu().b[0][0]++;
      cov_1dw9wtg4cu().s[12]++;
      return _server.NextResponse.json({
        erro: 'Não autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_1dw9wtg4cu().b[0][1]++;
    }
    // Verificar permissões (apenas ADMIN pode ativar atendentes)
    cov_1dw9wtg4cu().s[13]++;
    if (session.user.userType !== 'ADMIN') {
      /* istanbul ignore next */
      cov_1dw9wtg4cu().b[1][0]++;
      cov_1dw9wtg4cu().s[14]++;
      return _server.NextResponse.json({
        erro: _atendentes.MENSAGENS_ERRO_ATENDENTES.SEM_PERMISSAO
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_1dw9wtg4cu().b[1][1]++;
    }
    // Validar ID
    const atendenteId =
    /* istanbul ignore next */
    (cov_1dw9wtg4cu().s[15]++, _atendentes.idAtendenteSchema.parse(params.id));
    // Buscar atendente com dados do usuário
    const atendente =
    /* istanbul ignore next */
    (cov_1dw9wtg4cu().s[16]++, await _prisma.prisma.atendente.findUnique({
      where: {
        id: atendenteId
      },
      include: {
        usuario: {
          select: {
            id: true,
            nome: true,
            email: true,
            ativo: true
          }
        }
      }
    }));
    /* istanbul ignore next */
    cov_1dw9wtg4cu().s[17]++;
    if (!atendente) {
      /* istanbul ignore next */
      cov_1dw9wtg4cu().b[2][0]++;
      cov_1dw9wtg4cu().s[18]++;
      return _server.NextResponse.json({
        erro: _atendentes.MENSAGENS_ERRO_ATENDENTES.ATENDENTE_NAO_ENCONTRADO
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_1dw9wtg4cu().b[2][1]++;
    }
    // Verificar se o atendente já está ativo
    cov_1dw9wtg4cu().s[19]++;
    if (
    /* istanbul ignore next */
    (cov_1dw9wtg4cu().b[4][0]++, atendente.status === 'ATIVO') &&
    /* istanbul ignore next */
    (cov_1dw9wtg4cu().b[4][1]++, atendente.usuario.ativo)) {
      /* istanbul ignore next */
      cov_1dw9wtg4cu().b[3][0]++;
      cov_1dw9wtg4cu().s[20]++;
      return _server.NextResponse.json({
        erro: 'Atendente já está ativo'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_1dw9wtg4cu().b[3][1]++;
    }
    // Extrair dados do corpo da requisição
    const dadosRequisicao =
    /* istanbul ignore next */
    (cov_1dw9wtg4cu().s[21]++, await request.json());
    // Validar dados
    const {
      motivo,
      novoStatus
    } =
    /* istanbul ignore next */
    (cov_1dw9wtg4cu().s[22]++, _atendentes.ativarAtendenteSchema.parse(dadosRequisicao));
    // Salvar dados anteriores para o histórico
    const dadosAnteriores =
    /* istanbul ignore next */
    (cov_1dw9wtg4cu().s[23]++, {
      statusAtendente: atendente.status,
      usuarioAtivo: atendente.usuario.ativo
    });
    // Usar transação para garantir consistência
    const resultado =
    /* istanbul ignore next */
    (cov_1dw9wtg4cu().s[24]++, await _prisma.prisma.$transaction(async tx => {
      /* istanbul ignore next */
      cov_1dw9wtg4cu().f[2]++;
      // Ativar usuário
      const usuarioAtualizado =
      /* istanbul ignore next */
      (cov_1dw9wtg4cu().s[25]++, await tx.usuario.update({
        where: {
          id: atendente.usuarioId
        },
        data: {
          ativo: true
        }
      }));
      // Atualizar status do atendente
      const atendenteAtualizado =
      /* istanbul ignore next */
      (cov_1dw9wtg4cu().s[26]++, await tx.atendente.update({
        where: {
          id: atendenteId
        },
        data: {
          status: novoStatus
        }
      }));
      // Registrar no histórico de alterações
      /* istanbul ignore next */
      cov_1dw9wtg4cu().s[27]++;
      await tx.historicoAlteracaoAtendente.create({
        data: {
          atendenteId,
          tipo: 'ATIVACAO',
          descricao: `Atendente reativado - ${motivo}`,
          valorAnterior: JSON.stringify(dadosAnteriores),
          valorNovo: JSON.stringify({
            statusAtendente: novoStatus,
            usuarioAtivo: true,
            motivo
          }),
          criadoPorId: session.user.id
        }
      });
      /* istanbul ignore next */
      cov_1dw9wtg4cu().s[28]++;
      return {
        atendente: atendenteAtualizado,
        usuario: usuarioAtualizado
      };
    }));
    /* istanbul ignore next */
    cov_1dw9wtg4cu().s[29]++;
    return _server.NextResponse.json({
      mensagem: 'Atendente ativado com sucesso',
      atendente: {
        id: resultado.atendente.id,
        status: resultado.atendente.status,
        usuario: {
          id: resultado.usuario.id,
          nome: resultado.usuario.nome,
          email: resultado.usuario.email,
          ativo: resultado.usuario.ativo
        },
        ativadoEm: new Date().toISOString(),
        ativadoPor: {
          id: session.user.id,
          nome: session.user.name
        },
        motivo
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1dw9wtg4cu().s[30]++;
    console.error('Erro ao ativar atendente:', error);
    /* istanbul ignore next */
    cov_1dw9wtg4cu().s[31]++;
    if (error instanceof _zod.ZodError) {
      /* istanbul ignore next */
      cov_1dw9wtg4cu().b[5][0]++;
      cov_1dw9wtg4cu().s[32]++;
      return _server.NextResponse.json({
        erro: _atendentes.MENSAGENS_ERRO_ATENDENTES.DADOS_INVALIDOS,
        detalhes: error.errors
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_1dw9wtg4cu().b[5][1]++;
    }
    cov_1dw9wtg4cu().s[33]++;
    return _server.NextResponse.json({
      erro: _atendentes.MENSAGENS_ERRO_ATENDENTES.ERRO_INTERNO
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,