5576128b54343b05e3bc156c5f78bf02
'use client';
"use strict";

/* istanbul ignore next */
function cov_6rb6tgtmk() {
  var path = "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\hooks\\use-email-notificacoes.ts";
  var hash = "5f9d5f8f24074e1e02b453c3319e14f7ee9b5f1b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\hooks\\use-email-notificacoes.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 36
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 30
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 36
        }
      },
      "7": {
        start: {
          line: 23,
          column: 15
        },
        end: {
          line: 23,
          column: 31
        }
      },
      "8": {
        start: {
          line: 24,
          column: 27
        },
        end: {
          line: 24,
          column: 69
        }
      },
      "9": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 33
        }
      },
      "10": {
        start: {
          line: 27,
          column: 36
        },
        end: {
          line: 27,
          column: 63
        }
      },
      "11": {
        start: {
          line: 28,
          column: 50
        },
        end: {
          line: 28,
          column: 76
        }
      },
      "12": {
        start: {
          line: 29,
          column: 44
        },
        end: {
          line: 29,
          column: 75
        }
      },
      "13": {
        start: {
          line: 30,
          column: 19
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "14": {
        start: {
          line: 37,
          column: 24
        },
        end: {
          line: 37,
          column: 71
        }
      },
      "15": {
        start: {
          line: 40,
          column: 29
        },
        end: {
          line: 60,
          column: 6
        }
      },
      "16": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "17": {
        start: {
          line: 42,
          column: 30
        },
        end: {
          line: 42,
          column: 49
        }
      },
      "18": {
        start: {
          line: 43,
          column: 12
        },
        end: {
          line: 45,
          column: 13
        }
      },
      "19": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 44,
          column: 33
        }
      },
      "20": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 49,
          column: 13
        }
      },
      "21": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 47,
          column: 106
        }
      },
      "22": {
        start: {
          line: 47,
          column: 45
        },
        end: {
          line: 47,
          column: 104
        }
      },
      "23": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 48,
          column: 66
        }
      },
      "24": {
        start: {
          line: 50,
          column: 12
        },
        end: {
          line: 50,
          column: 29
        }
      },
      "25": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 55,
          column: 13
        }
      },
      "26": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 53,
          column: 106
        }
      },
      "27": {
        start: {
          line: 53,
          column: 45
        },
        end: {
          line: 53,
          column: 104
        }
      },
      "28": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 66
        }
      },
      "29": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 24
        }
      },
      "30": {
        start: {
          line: 63,
          column: 49
        },
        end: {
          line: 92,
          column: 6
        }
      },
      "31": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 26
        }
      },
      "32": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 88,
          column: 9
        }
      },
      "33": {
        start: {
          line: 66,
          column: 30
        },
        end: {
          line: 66,
          column: 137
        }
      },
      "34": {
        start: {
          line: 66,
          column: 55
        },
        end: {
          line: 66,
          column: 136
        }
      },
      "35": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 42
        }
      },
      "36": {
        start: {
          line: 68,
          column: 12
        },
        end: {
          line: 72,
          column: 13
        }
      },
      "37": {
        start: {
          line: 69,
          column: 16
        },
        end: {
          line: 69,
          column: 82
        }
      },
      "38": {
        start: {
          line: 70,
          column: 19
        },
        end: {
          line: 72,
          column: 13
        }
      },
      "39": {
        start: {
          line: 71,
          column: 16
        },
        end: {
          line: 71,
          column: 81
        }
      },
      "40": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 29
        }
      },
      "41": {
        start: {
          line: 75,
          column: 30
        },
        end: {
          line: 80,
          column: 13
        }
      },
      "42": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 42
        }
      },
      "43": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 84,
          column: 13
        }
      },
      "44": {
        start: {
          line: 83,
          column: 16
        },
        end: {
          line: 83,
          column: 80
        }
      },
      "45": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 29
        }
      },
      "46": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 31
        }
      },
      "47": {
        start: {
          line: 95,
          column: 34
        },
        end: {
          line: 124,
          column: 6
        }
      },
      "48": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 26
        }
      },
      "49": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 120,
          column: 9
        }
      },
      "50": {
        start: {
          line: 98,
          column: 30
        },
        end: {
          line: 98,
          column: 140
        }
      },
      "51": {
        start: {
          line: 98,
          column: 55
        },
        end: {
          line: 98,
          column: 139
        }
      },
      "52": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 42
        }
      },
      "53": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 104,
          column: 13
        }
      },
      "54": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 101,
          column: 84
        }
      },
      "55": {
        start: {
          line: 102,
          column: 19
        },
        end: {
          line: 104,
          column: 13
        }
      },
      "56": {
        start: {
          line: 103,
          column: 16
        },
        end: {
          line: 103,
          column: 83
        }
      },
      "57": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 29
        }
      },
      "58": {
        start: {
          line: 107,
          column: 30
        },
        end: {
          line: 112,
          column: 13
        }
      },
      "59": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 42
        }
      },
      "60": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 116,
          column: 13
        }
      },
      "61": {
        start: {
          line: 115,
          column: 16
        },
        end: {
          line: 115,
          column: 82
        }
      },
      "62": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 117,
          column: 29
        }
      },
      "63": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 31
        }
      },
      "64": {
        start: {
          line: 127,
          column: 39
        },
        end: {
          line: 156,
          column: 6
        }
      },
      "65": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 26
        }
      },
      "66": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 152,
          column: 9
        }
      },
      "67": {
        start: {
          line: 130,
          column: 30
        },
        end: {
          line: 130,
          column: 130
        }
      },
      "68": {
        start: {
          line: 130,
          column: 55
        },
        end: {
          line: 130,
          column: 129
        }
      },
      "69": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 131,
          column: 42
        }
      },
      "70": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 136,
          column: 13
        }
      },
      "71": {
        start: {
          line: 133,
          column: 16
        },
        end: {
          line: 133,
          column: 101
        }
      },
      "72": {
        start: {
          line: 134,
          column: 19
        },
        end: {
          line: 136,
          column: 13
        }
      },
      "73": {
        start: {
          line: 135,
          column: 16
        },
        end: {
          line: 135,
          column: 86
        }
      },
      "74": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 29
        }
      },
      "75": {
        start: {
          line: 139,
          column: 30
        },
        end: {
          line: 144,
          column: 13
        }
      },
      "76": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 42
        }
      },
      "77": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 148,
          column: 13
        }
      },
      "78": {
        start: {
          line: 147,
          column: 16
        },
        end: {
          line: 147,
          column: 85
        }
      },
      "79": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 29
        }
      },
      "80": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 31
        }
      },
      "81": {
        start: {
          line: 159,
          column: 34
        },
        end: {
          line: 188,
          column: 6
        }
      },
      "82": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 160,
          column: 26
        }
      },
      "83": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 184,
          column: 9
        }
      },
      "84": {
        start: {
          line: 162,
          column: 30
        },
        end: {
          line: 162,
          column: 124
        }
      },
      "85": {
        start: {
          line: 162,
          column: 55
        },
        end: {
          line: 162,
          column: 123
        }
      },
      "86": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 163,
          column: 42
        }
      },
      "87": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 168,
          column: 13
        }
      },
      "88": {
        start: {
          line: 165,
          column: 16
        },
        end: {
          line: 165,
          column: 90
        }
      },
      "89": {
        start: {
          line: 166,
          column: 19
        },
        end: {
          line: 168,
          column: 13
        }
      },
      "90": {
        start: {
          line: 167,
          column: 16
        },
        end: {
          line: 167,
          column: 81
        }
      },
      "91": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 169,
          column: 29
        }
      },
      "92": {
        start: {
          line: 171,
          column: 30
        },
        end: {
          line: 176,
          column: 13
        }
      },
      "93": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 42
        }
      },
      "94": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 180,
          column: 13
        }
      },
      "95": {
        start: {
          line: 179,
          column: 16
        },
        end: {
          line: 179,
          column: 80
        }
      },
      "96": {
        start: {
          line: 181,
          column: 12
        },
        end: {
          line: 181,
          column: 29
        }
      },
      "97": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 183,
          column: 31
        }
      },
      "98": {
        start: {
          line: 191,
          column: 37
        },
        end: {
          line: 261,
          column: 6
        }
      },
      "99": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 192,
          column: 26
        }
      },
      "100": {
        start: {
          line: 193,
          column: 27
        },
        end: {
          line: 193,
          column: 37
        }
      },
      "101": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 255,
          column: 9
        }
      },
      "102": {
        start: {
          line: 195,
          column: 31
        },
        end: {
          line: 195,
          column: 33
        }
      },
      "103": {
        start: {
          line: 196,
          column: 27
        },
        end: {
          line: 196,
          column: 28
        }
      },
      "104": {
        start: {
          line: 197,
          column: 25
        },
        end: {
          line: 197,
          column: 26
        }
      },
      "105": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 237,
          column: 13
        }
      },
      "106": {
        start: {
          line: 199,
          column: 16
        },
        end: {
          line: 236,
          column: 17
        }
      },
      "107": {
        start: {
          line: 201,
          column: 20
        },
        end: {
          line: 218,
          column: 21
        }
      },
      "108": {
        start: {
          line: 203,
          column: 28
        },
        end: {
          line: 203,
          column: 130
        }
      },
      "109": {
        start: {
          line: 204,
          column: 28
        },
        end: {
          line: 204,
          column: 34
        }
      },
      "110": {
        start: {
          line: 206,
          column: 28
        },
        end: {
          line: 206,
          column: 147
        }
      },
      "111": {
        start: {
          line: 207,
          column: 28
        },
        end: {
          line: 207,
          column: 34
        }
      },
      "112": {
        start: {
          line: 209,
          column: 28
        },
        end: {
          line: 209,
          column: 120
        }
      },
      "113": {
        start: {
          line: 210,
          column: 28
        },
        end: {
          line: 210,
          column: 34
        }
      },
      "114": {
        start: {
          line: 212,
          column: 28
        },
        end: {
          line: 217,
          column: 30
        }
      },
      "115": {
        start: {
          line: 219,
          column: 20
        },
        end: {
          line: 219,
          column: 47
        }
      },
      "116": {
        start: {
          line: 220,
          column: 20
        },
        end: {
          line: 224,
          column: 21
        }
      },
      "117": {
        start: {
          line: 221,
          column: 24
        },
        end: {
          line: 221,
          column: 35
        }
      },
      "118": {
        start: {
          line: 223,
          column: 24
        },
        end: {
          line: 223,
          column: 33
        }
      },
      "119": {
        start: {
          line: 226,
          column: 20
        },
        end: {
          line: 226,
          column: 75
        }
      },
      "120": {
        start: {
          line: 226,
          column: 49
        },
        end: {
          line: 226,
          column: 73
        }
      },
      "121": {
        start: {
          line: 228,
          column: 38
        },
        end: {
          line: 233,
          column: 21
        }
      },
      "122": {
        start: {
          line: 234,
          column: 20
        },
        end: {
          line: 234,
          column: 47
        }
      },
      "123": {
        start: {
          line: 235,
          column: 20
        },
        end: {
          line: 235,
          column: 29
        }
      },
      "124": {
        start: {
          line: 238,
          column: 31
        },
        end: {
          line: 238,
          column: 54
        }
      },
      "125": {
        start: {
          line: 239,
          column: 34
        },
        end: {
          line: 245,
          column: 13
        }
      },
      "126": {
        start: {
          line: 246,
          column: 12
        },
        end: {
          line: 248,
          column: 13
        }
      },
      "127": {
        start: {
          line: 247,
          column: 16
        },
        end: {
          line: 247,
          column: 136
        }
      },
      "128": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 251,
          column: 13
        }
      },
      "129": {
        start: {
          line: 250,
          column: 16
        },
        end: {
          line: 250,
          column: 100
        }
      },
      "130": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 252,
          column: 33
        }
      },
      "131": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 254,
          column: 31
        }
      },
      "132": {
        start: {
          line: 264,
          column: 36
        },
        end: {
          line: 269,
          column: 6
        }
      },
      "133": {
        start: {
          line: 265,
          column: 34
        },
        end: {
          line: 265,
          column: 65
        }
      },
      "134": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 266,
          column: 52
        }
      },
      "135": {
        start: {
          line: 272,
          column: 33
        },
        end: {
          line: 278,
          column: 6
        }
      },
      "136": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 273,
          column: 45
        }
      },
      "137": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 274,
          column: 32
        }
      },
      "138": {
        start: {
          line: 279,
          column: 4
        },
        end: {
          line: 293,
          column: 6
        }
      },
      "139": {
        start: {
          line: 296,
          column: 108
        },
        end: {
          line: 299,
          column: 6
        }
      },
      "140": {
        start: {
          line: 300,
          column: 4
        },
        end: {
          line: 305,
          column: 6
        }
      },
      "141": {
        start: {
          line: 308,
          column: 44
        },
        end: {
          line: 308,
          column: 75
        }
      },
      "142": {
        start: {
          line: 309,
          column: 40
        },
        end: {
          line: 309,
          column: 67
        }
      },
      "143": {
        start: {
          line: 310,
          column: 24
        },
        end: {
          line: 310,
          column: 71
        }
      },
      "144": {
        start: {
          line: 311,
          column: 33
        },
        end: {
          line: 323,
          column: 6
        }
      },
      "145": {
        start: {
          line: 312,
          column: 8
        },
        end: {
          line: 312,
          column: 28
        }
      },
      "146": {
        start: {
          line: 313,
          column: 8
        },
        end: {
          line: 320,
          column: 9
        }
      },
      "147": {
        start: {
          line: 314,
          column: 38
        },
        end: {
          line: 314,
          column: 69
        }
      },
      "148": {
        start: {
          line: 315,
          column: 12
        },
        end: {
          line: 315,
          column: 56
        }
      },
      "149": {
        start: {
          line: 317,
          column: 12
        },
        end: {
          line: 317,
          column: 77
        }
      },
      "150": {
        start: {
          line: 319,
          column: 12
        },
        end: {
          line: 319,
          column: 33
        }
      },
      "151": {
        start: {
          line: 324,
          column: 37
        },
        end: {
          line: 334,
          column: 6
        }
      },
      "152": {
        start: {
          line: 325,
          column: 8
        },
        end: {
          line: 331,
          column: 10
        }
      },
      "153": {
        start: {
          line: 335,
          column: 36
        },
        end: {
          line: 360,
          column: 6
        }
      },
      "154": {
        start: {
          line: 336,
          column: 28
        },
        end: {
          line: 336,
          column: 29
        }
      },
      "155": {
        start: {
          line: 337,
          column: 23
        },
        end: {
          line: 337,
          column: 24
        }
      },
      "156": {
        start: {
          line: 338,
          column: 21
        },
        end: {
          line: 338,
          column: 22
        }
      },
      "157": {
        start: {
          line: 339,
          column: 30
        },
        end: {
          line: 339,
          column: 31
        }
      },
      "158": {
        start: {
          line: 341,
          column: 8
        },
        end: {
          line: 349,
          column: 9
        }
      },
      "159": {
        start: {
          line: 342,
          column: 12
        },
        end: {
          line: 342,
          column: 49
        }
      },
      "160": {
        start: {
          line: 343,
          column: 12
        },
        end: {
          line: 343,
          column: 39
        }
      },
      "161": {
        start: {
          line: 344,
          column: 12
        },
        end: {
          line: 344,
          column: 35
        }
      },
      "162": {
        start: {
          line: 345,
          column: 12
        },
        end: {
          line: 345,
          column: 70
        }
      },
      "163": {
        start: {
          line: 346,
          column: 12
        },
        end: {
          line: 348,
          column: 13
        }
      },
      "164": {
        start: {
          line: 347,
          column: 16
        },
        end: {
          line: 347,
          column: 48
        }
      },
      "165": {
        start: {
          line: 350,
          column: 8
        },
        end: {
          line: 357,
          column: 10
        }
      },
      "166": {
        start: {
          line: 361,
          column: 4
        },
        end: {
          line: 367,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 32
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 26
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 32
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "useEmailNotificacoes",
        decl: {
          start: {
            line: 26,
            column: 9
          },
          end: {
            line: 26,
            column: 29
          }
        },
        loc: {
          start: {
            line: 26,
            column: 44
          },
          end: {
            line: 294,
            column: 1
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 40,
            column: 53
          },
          end: {
            line: 40,
            column: 54
          }
        },
        loc: {
          start: {
            line: 40,
            column: 89
          },
          end: {
            line: 58,
            column: 5
          }
        },
        line: 40
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 47,
            column: 34
          },
          end: {
            line: 47,
            column: 35
          }
        },
        loc: {
          start: {
            line: 47,
            column: 45
          },
          end: {
            line: 47,
            column: 104
          }
        },
        line: 47
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 53,
            column: 34
          },
          end: {
            line: 53,
            column: 35
          }
        },
        loc: {
          start: {
            line: 53,
            column: 45
          },
          end: {
            line: 53,
            column: 104
          }
        },
        line: 53
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 63,
            column: 73
          },
          end: {
            line: 63,
            column: 74
          }
        },
        loc: {
          start: {
            line: 63,
            column: 106
          },
          end: {
            line: 89,
            column: 5
          }
        },
        line: 63
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 66,
            column: 51
          },
          end: {
            line: 66,
            column: 52
          }
        },
        loc: {
          start: {
            line: 66,
            column: 55
          },
          end: {
            line: 66,
            column: 136
          }
        },
        line: 66
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 95,
            column: 58
          },
          end: {
            line: 95,
            column: 59
          }
        },
        loc: {
          start: {
            line: 95,
            column: 106
          },
          end: {
            line: 121,
            column: 5
          }
        },
        line: 95
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 98,
            column: 51
          },
          end: {
            line: 98,
            column: 52
          }
        },
        loc: {
          start: {
            line: 98,
            column: 55
          },
          end: {
            line: 98,
            column: 139
          }
        },
        line: 98
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 127,
            column: 63
          },
          end: {
            line: 127,
            column: 64
          }
        },
        loc: {
          start: {
            line: 127,
            column: 96
          },
          end: {
            line: 153,
            column: 5
          }
        },
        line: 127
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 130,
            column: 51
          },
          end: {
            line: 130,
            column: 52
          }
        },
        loc: {
          start: {
            line: 130,
            column: 55
          },
          end: {
            line: 130,
            column: 129
          }
        },
        line: 130
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 159,
            column: 58
          },
          end: {
            line: 159,
            column: 59
          }
        },
        loc: {
          start: {
            line: 159,
            column: 92
          },
          end: {
            line: 185,
            column: 5
          }
        },
        line: 159
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 162,
            column: 51
          },
          end: {
            line: 162,
            column: 52
          }
        },
        loc: {
          start: {
            line: 162,
            column: 55
          },
          end: {
            line: 162,
            column: 123
          }
        },
        line: 162
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 191,
            column: 61
          },
          end: {
            line: 191,
            column: 62
          }
        },
        loc: {
          start: {
            line: 191,
            column: 83
          },
          end: {
            line: 256,
            column: 5
          }
        },
        line: 191
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 226,
            column: 38
          },
          end: {
            line: 226,
            column: 39
          }
        },
        loc: {
          start: {
            line: 226,
            column: 49
          },
          end: {
            line: 226,
            column: 73
          }
        },
        line: 226
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 264,
            column: 60
          },
          end: {
            line: 264,
            column: 61
          }
        },
        loc: {
          start: {
            line: 264,
            column: 64
          },
          end: {
            line: 267,
            column: 5
          }
        },
        line: 264
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 272,
            column: 57
          },
          end: {
            line: 272,
            column: 58
          }
        },
        loc: {
          start: {
            line: 272,
            column: 65
          },
          end: {
            line: 275,
            column: 5
          }
        },
        line: 272
      },
      "20": {
        name: "useEnvioRapido",
        decl: {
          start: {
            line: 295,
            column: 9
          },
          end: {
            line: 295,
            column: 23
          }
        },
        loc: {
          start: {
            line: 295,
            column: 26
          },
          end: {
            line: 306,
            column: 1
          }
        },
        line: 295
      },
      "21": {
        name: "useEstatisticasEmail",
        decl: {
          start: {
            line: 307,
            column: 9
          },
          end: {
            line: 307,
            column: 29
          }
        },
        loc: {
          start: {
            line: 307,
            column: 32
          },
          end: {
            line: 368,
            column: 1
          }
        },
        line: 307
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 311,
            column: 57
          },
          end: {
            line: 311,
            column: 58
          }
        },
        loc: {
          start: {
            line: 311,
            column: 67
          },
          end: {
            line: 321,
            column: 5
          }
        },
        line: 311
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 324,
            column: 61
          },
          end: {
            line: 324,
            column: 62
          }
        },
        loc: {
          start: {
            line: 324,
            column: 69
          },
          end: {
            line: 332,
            column: 5
          }
        },
        line: 324
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 335,
            column: 60
          },
          end: {
            line: 335,
            column: 61
          }
        },
        loc: {
          start: {
            line: 335,
            column: 64
          },
          end: {
            line: 358,
            column: 5
          }
        },
        line: 335
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 40,
            column: 73
          },
          end: {
            line: 40,
            column: 86
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 40,
            column: 85
          },
          end: {
            line: 40,
            column: 86
          }
        }],
        line: 40
      },
      "1": {
        loc: {
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 45,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 45,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "2": {
        loc: {
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 49,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 12
          },
          end: {
            line: 49,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 46
      },
      "3": {
        loc: {
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 55,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 55,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "4": {
        loc: {
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 72,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 12
          },
          end: {
            line: 72,
            column: 13
          }
        }, {
          start: {
            line: 70,
            column: 19
          },
          end: {
            line: 72,
            column: 13
          }
        }],
        line: 68
      },
      "5": {
        loc: {
          start: {
            line: 68,
            column: 16
          },
          end: {
            line: 68,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 16
          },
          end: {
            line: 68,
            column: 33
          }
        }, {
          start: {
            line: 68,
            column: 37
          },
          end: {
            line: 68,
            column: 60
          }
        }],
        line: 68
      },
      "6": {
        loc: {
          start: {
            line: 70,
            column: 19
          },
          end: {
            line: 72,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 19
          },
          end: {
            line: 72,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "7": {
        loc: {
          start: {
            line: 70,
            column: 23
          },
          end: {
            line: 70,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 23
          },
          end: {
            line: 70,
            column: 41
          }
        }, {
          start: {
            line: 70,
            column: 45
          },
          end: {
            line: 70,
            column: 65
          }
        }],
        line: 70
      },
      "8": {
        loc: {
          start: {
            line: 77,
            column: 22
          },
          end: {
            line: 77,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 77,
            column: 47
          },
          end: {
            line: 77,
            column: 60
          }
        }, {
          start: {
            line: 77,
            column: 63
          },
          end: {
            line: 77,
            column: 82
          }
        }],
        line: 77
      },
      "9": {
        loc: {
          start: {
            line: 82,
            column: 12
          },
          end: {
            line: 84,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 12
          },
          end: {
            line: 84,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "10": {
        loc: {
          start: {
            line: 100,
            column: 12
          },
          end: {
            line: 104,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 12
          },
          end: {
            line: 104,
            column: 13
          }
        }, {
          start: {
            line: 102,
            column: 19
          },
          end: {
            line: 104,
            column: 13
          }
        }],
        line: 100
      },
      "11": {
        loc: {
          start: {
            line: 100,
            column: 16
          },
          end: {
            line: 100,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 100,
            column: 16
          },
          end: {
            line: 100,
            column: 33
          }
        }, {
          start: {
            line: 100,
            column: 37
          },
          end: {
            line: 100,
            column: 60
          }
        }],
        line: 100
      },
      "12": {
        loc: {
          start: {
            line: 102,
            column: 19
          },
          end: {
            line: 104,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 19
          },
          end: {
            line: 104,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "13": {
        loc: {
          start: {
            line: 102,
            column: 23
          },
          end: {
            line: 102,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 102,
            column: 23
          },
          end: {
            line: 102,
            column: 41
          }
        }, {
          start: {
            line: 102,
            column: 45
          },
          end: {
            line: 102,
            column: 65
          }
        }],
        line: 102
      },
      "14": {
        loc: {
          start: {
            line: 109,
            column: 22
          },
          end: {
            line: 109,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 109,
            column: 47
          },
          end: {
            line: 109,
            column: 60
          }
        }, {
          start: {
            line: 109,
            column: 63
          },
          end: {
            line: 109,
            column: 82
          }
        }],
        line: 109
      },
      "15": {
        loc: {
          start: {
            line: 114,
            column: 12
          },
          end: {
            line: 116,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 12
          },
          end: {
            line: 116,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "16": {
        loc: {
          start: {
            line: 132,
            column: 12
          },
          end: {
            line: 136,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 12
          },
          end: {
            line: 136,
            column: 13
          }
        }, {
          start: {
            line: 134,
            column: 19
          },
          end: {
            line: 136,
            column: 13
          }
        }],
        line: 132
      },
      "17": {
        loc: {
          start: {
            line: 132,
            column: 16
          },
          end: {
            line: 132,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 132,
            column: 16
          },
          end: {
            line: 132,
            column: 33
          }
        }, {
          start: {
            line: 132,
            column: 37
          },
          end: {
            line: 132,
            column: 60
          }
        }],
        line: 132
      },
      "18": {
        loc: {
          start: {
            line: 134,
            column: 19
          },
          end: {
            line: 136,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 19
          },
          end: {
            line: 136,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "19": {
        loc: {
          start: {
            line: 134,
            column: 23
          },
          end: {
            line: 134,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 134,
            column: 23
          },
          end: {
            line: 134,
            column: 41
          }
        }, {
          start: {
            line: 134,
            column: 45
          },
          end: {
            line: 134,
            column: 65
          }
        }],
        line: 134
      },
      "20": {
        loc: {
          start: {
            line: 141,
            column: 22
          },
          end: {
            line: 141,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 141,
            column: 47
          },
          end: {
            line: 141,
            column: 60
          }
        }, {
          start: {
            line: 141,
            column: 63
          },
          end: {
            line: 141,
            column: 82
          }
        }],
        line: 141
      },
      "21": {
        loc: {
          start: {
            line: 146,
            column: 12
          },
          end: {
            line: 148,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 12
          },
          end: {
            line: 148,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "22": {
        loc: {
          start: {
            line: 164,
            column: 12
          },
          end: {
            line: 168,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 164,
            column: 12
          },
          end: {
            line: 168,
            column: 13
          }
        }, {
          start: {
            line: 166,
            column: 19
          },
          end: {
            line: 168,
            column: 13
          }
        }],
        line: 164
      },
      "23": {
        loc: {
          start: {
            line: 164,
            column: 16
          },
          end: {
            line: 164,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 164,
            column: 16
          },
          end: {
            line: 164,
            column: 33
          }
        }, {
          start: {
            line: 164,
            column: 37
          },
          end: {
            line: 164,
            column: 60
          }
        }],
        line: 164
      },
      "24": {
        loc: {
          start: {
            line: 166,
            column: 19
          },
          end: {
            line: 168,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 166,
            column: 19
          },
          end: {
            line: 168,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 166
      },
      "25": {
        loc: {
          start: {
            line: 166,
            column: 23
          },
          end: {
            line: 166,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 166,
            column: 23
          },
          end: {
            line: 166,
            column: 41
          }
        }, {
          start: {
            line: 166,
            column: 45
          },
          end: {
            line: 166,
            column: 65
          }
        }],
        line: 166
      },
      "26": {
        loc: {
          start: {
            line: 173,
            column: 22
          },
          end: {
            line: 173,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 173,
            column: 47
          },
          end: {
            line: 173,
            column: 60
          }
        }, {
          start: {
            line: 173,
            column: 63
          },
          end: {
            line: 173,
            column: 82
          }
        }],
        line: 173
      },
      "27": {
        loc: {
          start: {
            line: 178,
            column: 12
          },
          end: {
            line: 180,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 178,
            column: 12
          },
          end: {
            line: 180,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 178
      },
      "28": {
        loc: {
          start: {
            line: 201,
            column: 20
          },
          end: {
            line: 218,
            column: 21
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 202,
            column: 24
          },
          end: {
            line: 204,
            column: 34
          }
        }, {
          start: {
            line: 205,
            column: 24
          },
          end: {
            line: 207,
            column: 34
          }
        }, {
          start: {
            line: 208,
            column: 24
          },
          end: {
            line: 210,
            column: 34
          }
        }, {
          start: {
            line: 211,
            column: 24
          },
          end: {
            line: 217,
            column: 30
          }
        }],
        line: 201
      },
      "29": {
        loc: {
          start: {
            line: 206,
            column: 115
          },
          end: {
            line: 206,
            column: 145
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 206,
            column: 115
          },
          end: {
            line: 206,
            column: 140
          }
        }, {
          start: {
            line: 206,
            column: 144
          },
          end: {
            line: 206,
            column: 145
          }
        }],
        line: 206
      },
      "30": {
        loc: {
          start: {
            line: 220,
            column: 20
          },
          end: {
            line: 224,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 220,
            column: 20
          },
          end: {
            line: 224,
            column: 21
          }
        }, {
          start: {
            line: 222,
            column: 27
          },
          end: {
            line: 224,
            column: 21
          }
        }],
        line: 220
      },
      "31": {
        loc: {
          start: {
            line: 230,
            column: 30
          },
          end: {
            line: 230,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 230,
            column: 55
          },
          end: {
            line: 230,
            column: 68
          }
        }, {
          start: {
            line: 230,
            column: 71
          },
          end: {
            line: 230,
            column: 90
          }
        }],
        line: 230
      },
      "32": {
        loc: {
          start: {
            line: 246,
            column: 12
          },
          end: {
            line: 248,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 246,
            column: 12
          },
          end: {
            line: 248,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 246
      },
      "33": {
        loc: {
          start: {
            line: 246,
            column: 16
          },
          end: {
            line: 246,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 246,
            column: 16
          },
          end: {
            line: 246,
            column: 39
          }
        }, {
          start: {
            line: 246,
            column: 43
          },
          end: {
            line: 246,
            column: 55
          }
        }],
        line: 246
      },
      "34": {
        loc: {
          start: {
            line: 247,
            column: 59
          },
          end: {
            line: 247,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 247,
            column: 76
          },
          end: {
            line: 247,
            column: 79
          }
        }, {
          start: {
            line: 247,
            column: 82
          },
          end: {
            line: 247,
            column: 84
          }
        }],
        line: 247
      },
      "35": {
        loc: {
          start: {
            line: 247,
            column: 95
          },
          end: {
            line: 247,
            column: 120
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 247,
            column: 112
          },
          end: {
            line: 247,
            column: 115
          }
        }, {
          start: {
            line: 247,
            column: 118
          },
          end: {
            line: 247,
            column: 120
          }
        }],
        line: 247
      },
      "36": {
        loc: {
          start: {
            line: 249,
            column: 12
          },
          end: {
            line: 251,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 249,
            column: 12
          },
          end: {
            line: 251,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 249
      },
      "37": {
        loc: {
          start: {
            line: 249,
            column: 16
          },
          end: {
            line: 249,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 249,
            column: 16
          },
          end: {
            line: 249,
            column: 36
          }
        }, {
          start: {
            line: 249,
            column: 40
          },
          end: {
            line: 249,
            column: 50
          }
        }],
        line: 249
      },
      "38": {
        loc: {
          start: {
            line: 250,
            column: 55
          },
          end: {
            line: 250,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 250,
            column: 70
          },
          end: {
            line: 250,
            column: 73
          }
        }, {
          start: {
            line: 250,
            column: 76
          },
          end: {
            line: 250,
            column: 78
          }
        }],
        line: 250
      },
      "39": {
        loc: {
          start: {
            line: 325,
            column: 15
          },
          end: {
            line: 331,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 325,
            column: 15
          },
          end: {
            line: 325,
            column: 37
          }
        }, {
          start: {
            line: 325,
            column: 41
          },
          end: {
            line: 331,
            column: 9
          }
        }],
        line: 325
      },
      "40": {
        loc: {
          start: {
            line: 346,
            column: 12
          },
          end: {
            line: 348,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 346,
            column: 12
          },
          end: {
            line: 348,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 346
      },
      "41": {
        loc: {
          start: {
            line: 346,
            column: 16
          },
          end: {
            line: 346,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 346,
            column: 16
          },
          end: {
            line: 346,
            column: 33
          }
        }, {
          start: {
            line: 346,
            column: 38
          },
          end: {
            line: 346,
            column: 50
          }
        }, {
          start: {
            line: 346,
            column: 54
          },
          end: {
            line: 346,
            column: 85
          }
        }],
        line: 346
      },
      "42": {
        loc: {
          start: {
            line: 354,
            column: 25
          },
          end: {
            line: 354,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 354,
            column: 45
          },
          end: {
            line: 354,
            column: 75
          }
        }, {
          start: {
            line: 354,
            column: 78
          },
          end: {
            line: 354,
            column: 79
          }
        }],
        line: 354
      },
      "43": {
        loc: {
          start: {
            line: 355,
            column: 24
          },
          end: {
            line: 355,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 355,
            column: 44
          },
          end: {
            line: 355,
            column: 75
          }
        }, {
          start: {
            line: 355,
            column: 78
          },
          end: {
            line: 355,
            column: 79
          }
        }],
        line: 355
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0, 0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0, 0],
      "42": [0, 0],
      "43": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\hooks\\use-email-notificacoes.ts"],
      sourcesContent: ["'use client';\n\nimport { useState, useCallback } from 'react';\nimport {\n  GerenciadorEmailNotificacoes,\n  obterGerenciadorEmail,\n  emailUtils,\n  ResultadoEnvioEmail,\n  EstatisticasEnvio,\n  DestinatarioEmail,\n  TipoNotificacaoEmail\n} from '@/lib/utils/email-notificacoes';\nimport { AvaliacaoPendente } from '@/lib/utils/notificacoes-avaliacoes';\nimport { toast } from 'sonner';\n\n/**\n * Interface para configura\xE7\xF5es de envio\n */\nexport interface ConfiguracaoEnvio {\n  tentativasMaximas: number;\n  intervaloTentativas: number;\n  notificarSucesso: boolean;\n  notificarErro: boolean;\n}\n\n/**\n * Interface para resultado de envio em lote\n */\nexport interface ResultadoLote {\n  total: number;\n  sucessos: number;\n  falhas: number;\n  resultados: ResultadoEnvioEmail[];\n  tempoTotal: number;\n}\n\n/**\n * Hook para gerenciar envio de e-mails de notifica\xE7\xF5es\n */\nexport function useEmailNotificacoes(configuracao?: Partial<ConfiguracaoEnvio>) {\n  const [enviando, setEnviando] = useState(false);\n  const [ultimoResultado, setUltimoResultado] = useState<ResultadoEnvioEmail | null>(null);\n  const [estatisticas, setEstatisticas] = useState<Map<string, EstatisticasEnvio>>(new Map());\n  \n  const config: ConfiguracaoEnvio = {\n    tentativasMaximas: 3,\n    intervaloTentativas: 1000,\n    notificarSucesso: true,\n    notificarErro: true,\n    ...configuracao\n  };\n\n  const gerenciador = obterGerenciadorEmail();\n\n  /**\n   * Envia e-mail com retry autom\xE1tico\n   */\n  const enviarComRetry = useCallback(async (\n    funcaoEnvio: () => Promise<ResultadoEnvioEmail>,\n    tentativa = 1\n  ): Promise<ResultadoEnvioEmail> => {\n    try {\n      const resultado = await funcaoEnvio();\n      \n      if (resultado.sucesso) {\n        return resultado;\n      }\n      \n      if (tentativa < config.tentativasMaximas) {\n        await new Promise(resolve => setTimeout(resolve, config.intervaloTentativas * tentativa));\n        return enviarComRetry(funcaoEnvio, tentativa + 1);\n      }\n      \n      return resultado;\n    } catch (error) {\n      if (tentativa < config.tentativasMaximas) {\n        await new Promise(resolve => setTimeout(resolve, config.intervaloTentativas * tentativa));\n        return enviarComRetry(funcaoEnvio, tentativa + 1);\n      }\n      \n      throw error;\n    }\n  }, [config]);\n\n  /**\n   * Envia notifica\xE7\xE3o de avalia\xE7\xE3o pendente\n   */\n  const enviarNotificacaoAvaliacaoPendente = useCallback(async (\n    avaliacao: AvaliacaoPendente,\n    destinatario: DestinatarioEmail\n  ): Promise<ResultadoEnvioEmail> => {\n    setEnviando(true);\n    \n    try {\n      const resultado = await enviarComRetry(() => \n        emailUtils.notificarAvaliacaoPendente(avaliacao, destinatario)\n      );\n      \n      setUltimoResultado(resultado);\n      \n      if (resultado.sucesso && config.notificarSucesso) {\n        toast.success(`E-mail enviado para ${destinatario.nome}`);\n      } else if (!resultado.sucesso && config.notificarErro) {\n        toast.error(`Falha ao enviar e-mail: ${resultado.erro}`);\n      }\n      \n      return resultado;\n    } catch (error) {\n      const resultado: ResultadoEnvioEmail = {\n        sucesso: false,\n        erro: error instanceof Error ? error.message : 'Erro desconhecido',\n        destinatario: destinatario.email,\n        timestamp: new Date()\n      };\n      \n      setUltimoResultado(resultado);\n      \n      if (config.notificarErro) {\n        toast.error(`Erro ao enviar e-mail: ${resultado.erro}`);\n      }\n      \n      return resultado;\n    } finally {\n      setEnviando(false);\n    }\n  }, [enviarComRetry, config]);\n\n  /**\n   * Envia lembrete de prazo\n   */\n  const enviarLembretePrazo = useCallback(async (\n    avaliacao: AvaliacaoPendente,\n    destinatario: DestinatarioEmail,\n    diasRestantes: number\n  ): Promise<ResultadoEnvioEmail> => {\n    setEnviando(true);\n    \n    try {\n      const resultado = await enviarComRetry(() => \n        emailUtils.enviarLembrete(avaliacao, destinatario, diasRestantes)\n      );\n      \n      setUltimoResultado(resultado);\n      \n      if (resultado.sucesso && config.notificarSucesso) {\n        toast.success(`Lembrete enviado para ${destinatario.nome}`);\n      } else if (!resultado.sucesso && config.notificarErro) {\n        toast.error(`Falha ao enviar lembrete: ${resultado.erro}`);\n      }\n      \n      return resultado;\n    } catch (error) {\n      const resultado: ResultadoEnvioEmail = {\n        sucesso: false,\n        erro: error instanceof Error ? error.message : 'Erro desconhecido',\n        destinatario: destinatario.email,\n        timestamp: new Date()\n      };\n      \n      setUltimoResultado(resultado);\n      \n      if (config.notificarErro) {\n        toast.error(`Erro ao enviar lembrete: ${resultado.erro}`);\n      }\n      \n      return resultado;\n    } finally {\n      setEnviando(false);\n    }\n  }, [enviarComRetry, config]);\n\n  /**\n   * Envia notifica\xE7\xE3o de vencimento\n   */\n  const enviarNotificacaoVencida = useCallback(async (\n    avaliacao: AvaliacaoPendente,\n    destinatario: DestinatarioEmail\n  ): Promise<ResultadoEnvioEmail> => {\n    setEnviando(true);\n    \n    try {\n      const resultado = await enviarComRetry(() => \n        emailUtils.notificarVencimento(avaliacao, destinatario)\n      );\n      \n      setUltimoResultado(resultado);\n      \n      if (resultado.sucesso && config.notificarSucesso) {\n        toast.success(`Notifica\xE7\xE3o de vencimento enviada para ${destinatario.nome}`);\n      } else if (!resultado.sucesso && config.notificarErro) {\n        toast.error(`Falha ao enviar notifica\xE7\xE3o: ${resultado.erro}`);\n      }\n      \n      return resultado;\n    } catch (error) {\n      const resultado: ResultadoEnvioEmail = {\n        sucesso: false,\n        erro: error instanceof Error ? error.message : 'Erro desconhecido',\n        destinatario: destinatario.email,\n        timestamp: new Date()\n      };\n      \n      setUltimoResultado(resultado);\n      \n      if (config.notificarErro) {\n        toast.error(`Erro ao enviar notifica\xE7\xE3o: ${resultado.erro}`);\n      }\n      \n      return resultado;\n    } finally {\n      setEnviando(false);\n    }\n  }, [enviarComRetry, config]);\n\n  /**\n   * Envia resumo semanal\n   */\n  const enviarResumoSemanal = useCallback(async (\n    avaliacoes: AvaliacaoPendente[],\n    destinatario: DestinatarioEmail\n  ): Promise<ResultadoEnvioEmail> => {\n    setEnviando(true);\n    \n    try {\n      const resultado = await enviarComRetry(() => \n        emailUtils.enviarResumo(avaliacoes, destinatario)\n      );\n      \n      setUltimoResultado(resultado);\n      \n      if (resultado.sucesso && config.notificarSucesso) {\n        toast.success(`Resumo semanal enviado para ${destinatario.nome}`);\n      } else if (!resultado.sucesso && config.notificarErro) {\n        toast.error(`Falha ao enviar resumo: ${resultado.erro}`);\n      }\n      \n      return resultado;\n    } catch (error) {\n      const resultado: ResultadoEnvioEmail = {\n        sucesso: false,\n        erro: error instanceof Error ? error.message : 'Erro desconhecido',\n        destinatario: destinatario.email,\n        timestamp: new Date()\n      };\n      \n      setUltimoResultado(resultado);\n      \n      if (config.notificarErro) {\n        toast.error(`Erro ao enviar resumo: ${resultado.erro}`);\n      }\n      \n      return resultado;\n    } finally {\n      setEnviando(false);\n    }\n  }, [enviarComRetry, config]);\n\n  /**\n   * Envia m\xFAltiplas notifica\xE7\xF5es em lote\n   */\n  const enviarLoteNotificacoes = useCallback(async (\n    notificacoes: Array<{\n      avaliacao: AvaliacaoPendente;\n      destinatario: DestinatarioEmail;\n      tipo: TipoNotificacaoEmail;\n      diasRestantes?: number;\n    }>\n  ): Promise<ResultadoLote> => {\n    setEnviando(true);\n    const inicioLote = Date.now();\n    \n    try {\n      const resultados: ResultadoEnvioEmail[] = [];\n      let sucessos = 0;\n      let falhas = 0;\n      \n      for (const notificacao of notificacoes) {\n        try {\n          let resultado: ResultadoEnvioEmail;\n          \n          switch (notificacao.tipo) {\n            case 'avaliacao_pendente':\n              resultado = await enviarNotificacaoAvaliacaoPendente(\n                notificacao.avaliacao,\n                notificacao.destinatario\n              );\n              break;\n            case 'lembrete_prazo':\n              resultado = await enviarLembretePrazo(\n                notificacao.avaliacao,\n                notificacao.destinatario,\n                notificacao.diasRestantes || 3\n              );\n              break;\n            case 'avaliacao_vencida':\n              resultado = await enviarNotificacaoVencida(\n                notificacao.avaliacao,\n                notificacao.destinatario\n              );\n              break;\n            default:\n              resultado = {\n                sucesso: false,\n                erro: `Tipo de notifica\xE7\xE3o n\xE3o suportado: ${notificacao.tipo}`,\n                destinatario: notificacao.destinatario.email,\n                timestamp: new Date()\n              };\n          }\n          \n          resultados.push(resultado);\n          \n          if (resultado.sucesso) {\n            sucessos++;\n          } else {\n            falhas++;\n          }\n          \n          // Pequeno delay entre envios\n          await new Promise(resolve => setTimeout(resolve, 100));\n        } catch (error) {\n          const resultado: ResultadoEnvioEmail = {\n            sucesso: false,\n            erro: error instanceof Error ? error.message : 'Erro desconhecido',\n            destinatario: notificacao.destinatario.email,\n            timestamp: new Date()\n          };\n          \n          resultados.push(resultado);\n          falhas++;\n        }\n      }\n      \n      const tempoTotal = Date.now() - inicioLote;\n      \n      const resultadoLote: ResultadoLote = {\n        total: notificacoes.length,\n        sucessos,\n        falhas,\n        resultados,\n        tempoTotal\n      };\n      \n      if (config.notificarSucesso && sucessos > 0) {\n        toast.success(`${sucessos} e-mail${sucessos !== 1 ? 's' : ''} enviado${sucessos !== 1 ? 's' : ''} com sucesso`);\n      }\n      \n      if (config.notificarErro && falhas > 0) {\n        toast.error(`${falhas} e-mail${falhas !== 1 ? 's' : ''} falharam no envio`);\n      }\n      \n      return resultadoLote;\n    } finally {\n      setEnviando(false);\n    }\n  }, [enviarNotificacaoAvaliacaoPendente, enviarLembretePrazo, enviarNotificacaoVencida, config]);\n\n  /**\n   * Atualiza estat\xEDsticas\n   */\n  const atualizarEstatisticas = useCallback(() => {\n    const novasEstatisticas = gerenciador.obterEstatisticas() as Map<string, EstatisticasEnvio>;\n    setEstatisticas(new Map(novasEstatisticas));\n  }, [gerenciador]);\n\n  /**\n   * Limpa estat\xEDsticas\n   */\n  const limparEstatisticas = useCallback((tipo?: TipoNotificacaoEmail) => {\n    gerenciador.limparEstatisticas(tipo);\n    atualizarEstatisticas();\n  }, [gerenciador, atualizarEstatisticas]);\n\n  return {\n    // Estado\n    enviando,\n    ultimoResultado,\n    estatisticas,\n    \n    // Fun\xE7\xF5es de envio\n    enviarNotificacaoAvaliacaoPendente,\n    enviarLembretePrazo,\n    enviarNotificacaoVencida,\n    enviarResumoSemanal,\n    enviarLoteNotificacoes,\n    \n    // Fun\xE7\xF5es de controle\n    atualizarEstatisticas,\n    limparEstatisticas\n  };\n}\n\n/**\n * Hook simplificado para envio r\xE1pido de notifica\xE7\xF5es\n */\nexport function useEnvioRapido() {\n  const {\n    enviarNotificacaoAvaliacaoPendente,\n    enviarLembretePrazo,\n    enviarNotificacaoVencida,\n    enviando\n  } = useEmailNotificacoes({\n    notificarSucesso: false,\n    notificarErro: true\n  });\n\n  return {\n    enviando,\n    notificarAvaliacaoPendente: enviarNotificacaoAvaliacaoPendente,\n    enviarLembrete: enviarLembretePrazo,\n    notificarVencimento: enviarNotificacaoVencida\n  };\n}\n\n/**\n * Hook para monitoramento de estat\xEDsticas de e-mail\n */\nexport function useEstatisticasEmail() {\n  const [estatisticas, setEstatisticas] = useState<Map<string, EstatisticasEnvio>>(new Map());\n  const [carregando, setCarregando] = useState(false);\n  \n  const gerenciador = obterGerenciadorEmail();\n\n  const carregarEstatisticas = useCallback(async () => {\n    setCarregando(true);\n    try {\n      const novasEstatisticas = gerenciador.obterEstatisticas() as Map<string, EstatisticasEnvio>;\n      setEstatisticas(new Map(novasEstatisticas));\n    } catch (error) {\n      console.error('Erro ao carregar estat\xEDsticas de e-mail:', error);\n    } finally {\n      setCarregando(false);\n    }\n  }, [gerenciador]);\n\n  const obterEstatisticasPorTipo = useCallback((tipo: TipoNotificacaoEmail): EstatisticasEnvio => {\n    return estatisticas.get(tipo) || {\n      totalEnviados: 0,\n      sucessos: 0,\n      falhas: 0,\n      taxaSucesso: 0,\n      tempoMedio: 0\n    };\n  }, [estatisticas]);\n\n  const obterEstatisticasGerais = useCallback((): EstatisticasEnvio => {\n    let totalEnviados = 0;\n    let sucessos = 0;\n    let falhas = 0;\n    let tempoMedioTotal = 0;\n    let ultimoEnvio: Date | undefined;\n\n    for (const [, stats] of estatisticas) {\n      totalEnviados += stats.totalEnviados;\n      sucessos += stats.sucessos;\n      falhas += stats.falhas;\n      tempoMedioTotal += stats.tempoMedio * stats.totalEnviados;\n      \n      if (stats.ultimoEnvio && (!ultimoEnvio || stats.ultimoEnvio > ultimoEnvio)) {\n        ultimoEnvio = stats.ultimoEnvio;\n      }\n    }\n\n    return {\n      totalEnviados,\n      sucessos,\n      falhas,\n      taxaSucesso: totalEnviados > 0 ? (sucessos / totalEnviados) * 100 : 0,\n      tempoMedio: totalEnviados > 0 ? tempoMedioTotal / totalEnviados : 0,\n      ultimoEnvio\n    };\n  }, [estatisticas]);\n\n  return {\n    estatisticas,\n    carregando,\n    carregarEstatisticas,\n    obterEstatisticasPorTipo,\n    obterEstatisticasGerais\n  };\n}"],
      names: ["useEmailNotificacoes", "useEnvioRapido", "useEstatisticasEmail", "configuracao", "enviando", "setEnviando", "useState", "ultimoResultado", "setUltimoResultado", "estatisticas", "setEstatisticas", "Map", "config", "tentativasMaximas", "intervaloTentativas", "notificarSucesso", "notificarErro", "gerenciador", "obterGerenciadorEmail", "enviarComRetry", "useCallback", "funcaoEnvio", "tentativa", "resultado", "sucesso", "Promise", "resolve", "setTimeout", "error", "enviarNotificacaoAvaliacaoPendente", "avaliacao", "destinatario", "emailUtils", "notificarAvaliacaoPendente", "toast", "success", "nome", "erro", "Error", "message", "email", "timestamp", "Date", "enviarLembretePrazo", "diasRestantes", "enviarLembrete", "enviarNotificacaoVencida", "notificarVencimento", "enviarResumoSemanal", "avaliacoes", "enviarResumo", "enviarLoteNotificacoes", "notificacoes", "inicioLote", "now", "resultados", "sucessos", "falhas", "notificacao", "tipo", "push", "tempoTotal", "resultadoLote", "total", "length", "atualizarEstatisticas", "novasEstatisticas", "obterEstatisticas", "limparEstatisticas", "carregando", "setCarregando", "carregarEstatisticas", "console", "obterEstatisticasPorTipo", "get", "totalEnviados", "taxaSucesso", "tempoMedio", "obterEstatisticasGerais", "tempoMedioTotal", "ultimoEnvio", "stats"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5f9d5f8f24074e1e02b453c3319e14f7ee9b5f1b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_6rb6tgtmk = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_6rb6tgtmk();
cov_6rb6tgtmk().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_6rb6tgtmk().f[0]++;
  cov_6rb6tgtmk().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_6rb6tgtmk().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_6rb6tgtmk().s[3]++;
_export(exports, {
  get useEmailNotificacoes() {
    /* istanbul ignore next */
    cov_6rb6tgtmk().f[1]++;
    cov_6rb6tgtmk().s[4]++;
    return useEmailNotificacoes;
  },
  get useEnvioRapido() {
    /* istanbul ignore next */
    cov_6rb6tgtmk().f[2]++;
    cov_6rb6tgtmk().s[5]++;
    return useEnvioRapido;
  },
  get useEstatisticasEmail() {
    /* istanbul ignore next */
    cov_6rb6tgtmk().f[3]++;
    cov_6rb6tgtmk().s[6]++;
    return useEstatisticasEmail;
  }
});
const _react =
/* istanbul ignore next */
(cov_6rb6tgtmk().s[7]++, require("react"));
const _emailnotificacoes =
/* istanbul ignore next */
(cov_6rb6tgtmk().s[8]++, require("../lib/utils/email-notificacoes"));
const _sonner =
/* istanbul ignore next */
(cov_6rb6tgtmk().s[9]++, require("sonner"));
function useEmailNotificacoes(configuracao) {
  /* istanbul ignore next */
  cov_6rb6tgtmk().f[4]++;
  const [enviando, setEnviando] =
  /* istanbul ignore next */
  (cov_6rb6tgtmk().s[10]++, (0, _react.useState)(false));
  const [ultimoResultado, setUltimoResultado] =
  /* istanbul ignore next */
  (cov_6rb6tgtmk().s[11]++, (0, _react.useState)(null));
  const [estatisticas, setEstatisticas] =
  /* istanbul ignore next */
  (cov_6rb6tgtmk().s[12]++, (0, _react.useState)(new Map()));
  const config =
  /* istanbul ignore next */
  (cov_6rb6tgtmk().s[13]++, {
    tentativasMaximas: 3,
    intervaloTentativas: 1000,
    notificarSucesso: true,
    notificarErro: true,
    ...configuracao
  });
  const gerenciador =
  /* istanbul ignore next */
  (cov_6rb6tgtmk().s[14]++, (0, _emailnotificacoes.obterGerenciadorEmail)());
  /**
  * Envia e-mail com retry automático
  */
  const enviarComRetry =
  /* istanbul ignore next */
  (cov_6rb6tgtmk().s[15]++, (0, _react.useCallback)(async (funcaoEnvio, tentativa =
  /* istanbul ignore next */
  (cov_6rb6tgtmk().b[0][0]++, 1)) => {
    /* istanbul ignore next */
    cov_6rb6tgtmk().f[5]++;
    cov_6rb6tgtmk().s[16]++;
    try {
      const resultado =
      /* istanbul ignore next */
      (cov_6rb6tgtmk().s[17]++, await funcaoEnvio());
      /* istanbul ignore next */
      cov_6rb6tgtmk().s[18]++;
      if (resultado.sucesso) {
        /* istanbul ignore next */
        cov_6rb6tgtmk().b[1][0]++;
        cov_6rb6tgtmk().s[19]++;
        return resultado;
      } else
      /* istanbul ignore next */
      {
        cov_6rb6tgtmk().b[1][1]++;
      }
      cov_6rb6tgtmk().s[20]++;
      if (tentativa < config.tentativasMaximas) {
        /* istanbul ignore next */
        cov_6rb6tgtmk().b[2][0]++;
        cov_6rb6tgtmk().s[21]++;
        await new Promise(resolve => {
          /* istanbul ignore next */
          cov_6rb6tgtmk().f[6]++;
          cov_6rb6tgtmk().s[22]++;
          return setTimeout(resolve, config.intervaloTentativas * tentativa);
        });
        /* istanbul ignore next */
        cov_6rb6tgtmk().s[23]++;
        return enviarComRetry(funcaoEnvio, tentativa + 1);
      } else
      /* istanbul ignore next */
      {
        cov_6rb6tgtmk().b[2][1]++;
      }
      cov_6rb6tgtmk().s[24]++;
      return resultado;
    } catch (error) {
      /* istanbul ignore next */
      cov_6rb6tgtmk().s[25]++;
      if (tentativa < config.tentativasMaximas) {
        /* istanbul ignore next */
        cov_6rb6tgtmk().b[3][0]++;
        cov_6rb6tgtmk().s[26]++;
        await new Promise(resolve => {
          /* istanbul ignore next */
          cov_6rb6tgtmk().f[7]++;
          cov_6rb6tgtmk().s[27]++;
          return setTimeout(resolve, config.intervaloTentativas * tentativa);
        });
        /* istanbul ignore next */
        cov_6rb6tgtmk().s[28]++;
        return enviarComRetry(funcaoEnvio, tentativa + 1);
      } else
      /* istanbul ignore next */
      {
        cov_6rb6tgtmk().b[3][1]++;
      }
      cov_6rb6tgtmk().s[29]++;
      throw error;
    }
  }, [config]));
  /**
  * Envia notificação de avaliação pendente
  */
  const enviarNotificacaoAvaliacaoPendente =
  /* istanbul ignore next */
  (cov_6rb6tgtmk().s[30]++, (0, _react.useCallback)(async (avaliacao, destinatario) => {
    /* istanbul ignore next */
    cov_6rb6tgtmk().f[8]++;
    cov_6rb6tgtmk().s[31]++;
    setEnviando(true);
    /* istanbul ignore next */
    cov_6rb6tgtmk().s[32]++;
    try {
      const resultado =
      /* istanbul ignore next */
      (cov_6rb6tgtmk().s[33]++, await enviarComRetry(() => {
        /* istanbul ignore next */
        cov_6rb6tgtmk().f[9]++;
        cov_6rb6tgtmk().s[34]++;
        return _emailnotificacoes.emailUtils.notificarAvaliacaoPendente(avaliacao, destinatario);
      }));
      /* istanbul ignore next */
      cov_6rb6tgtmk().s[35]++;
      setUltimoResultado(resultado);
      /* istanbul ignore next */
      cov_6rb6tgtmk().s[36]++;
      if (
      /* istanbul ignore next */
      (cov_6rb6tgtmk().b[5][0]++, resultado.sucesso) &&
      /* istanbul ignore next */
      (cov_6rb6tgtmk().b[5][1]++, config.notificarSucesso)) {
        /* istanbul ignore next */
        cov_6rb6tgtmk().b[4][0]++;
        cov_6rb6tgtmk().s[37]++;
        _sonner.toast.success(`E-mail enviado para ${destinatario.nome}`);
      } else {
        /* istanbul ignore next */
        cov_6rb6tgtmk().b[4][1]++;
        cov_6rb6tgtmk().s[38]++;
        if (
        /* istanbul ignore next */
        (cov_6rb6tgtmk().b[7][0]++, !resultado.sucesso) &&
        /* istanbul ignore next */
        (cov_6rb6tgtmk().b[7][1]++, config.notificarErro)) {
          /* istanbul ignore next */
          cov_6rb6tgtmk().b[6][0]++;
          cov_6rb6tgtmk().s[39]++;
          _sonner.toast.error(`Falha ao enviar e-mail: ${resultado.erro}`);
        } else
        /* istanbul ignore next */
        {
          cov_6rb6tgtmk().b[6][1]++;
        }
      }
      /* istanbul ignore next */
      cov_6rb6tgtmk().s[40]++;
      return resultado;
    } catch (error) {
      const resultado =
      /* istanbul ignore next */
      (cov_6rb6tgtmk().s[41]++, {
        sucesso: false,
        erro: error instanceof Error ?
        /* istanbul ignore next */
        (cov_6rb6tgtmk().b[8][0]++, error.message) :
        /* istanbul ignore next */
        (cov_6rb6tgtmk().b[8][1]++, 'Erro desconhecido'),
        destinatario: destinatario.email,
        timestamp: new Date()
      });
      /* istanbul ignore next */
      cov_6rb6tgtmk().s[42]++;
      setUltimoResultado(resultado);
      /* istanbul ignore next */
      cov_6rb6tgtmk().s[43]++;
      if (config.notificarErro) {
        /* istanbul ignore next */
        cov_6rb6tgtmk().b[9][0]++;
        cov_6rb6tgtmk().s[44]++;
        _sonner.toast.error(`Erro ao enviar e-mail: ${resultado.erro}`);
      } else
      /* istanbul ignore next */
      {
        cov_6rb6tgtmk().b[9][1]++;
      }
      cov_6rb6tgtmk().s[45]++;
      return resultado;
    } finally {
      /* istanbul ignore next */
      cov_6rb6tgtmk().s[46]++;
      setEnviando(false);
    }
  }, [enviarComRetry, config]));
  /**
  * Envia lembrete de prazo
  */
  const enviarLembretePrazo =
  /* istanbul ignore next */
  (cov_6rb6tgtmk().s[47]++, (0, _react.useCallback)(async (avaliacao, destinatario, diasRestantes) => {
    /* istanbul ignore next */
    cov_6rb6tgtmk().f[10]++;
    cov_6rb6tgtmk().s[48]++;
    setEnviando(true);
    /* istanbul ignore next */
    cov_6rb6tgtmk().s[49]++;
    try {
      const resultado =
      /* istanbul ignore next */
      (cov_6rb6tgtmk().s[50]++, await enviarComRetry(() => {
        /* istanbul ignore next */
        cov_6rb6tgtmk().f[11]++;
        cov_6rb6tgtmk().s[51]++;
        return _emailnotificacoes.emailUtils.enviarLembrete(avaliacao, destinatario, diasRestantes);
      }));
      /* istanbul ignore next */
      cov_6rb6tgtmk().s[52]++;
      setUltimoResultado(resultado);
      /* istanbul ignore next */
      cov_6rb6tgtmk().s[53]++;
      if (
      /* istanbul ignore next */
      (cov_6rb6tgtmk().b[11][0]++, resultado.sucesso) &&
      /* istanbul ignore next */
      (cov_6rb6tgtmk().b[11][1]++, config.notificarSucesso)) {
        /* istanbul ignore next */
        cov_6rb6tgtmk().b[10][0]++;
        cov_6rb6tgtmk().s[54]++;
        _sonner.toast.success(`Lembrete enviado para ${destinatario.nome}`);
      } else {
        /* istanbul ignore next */
        cov_6rb6tgtmk().b[10][1]++;
        cov_6rb6tgtmk().s[55]++;
        if (
        /* istanbul ignore next */
        (cov_6rb6tgtmk().b[13][0]++, !resultado.sucesso) &&
        /* istanbul ignore next */
        (cov_6rb6tgtmk().b[13][1]++, config.notificarErro)) {
          /* istanbul ignore next */
          cov_6rb6tgtmk().b[12][0]++;
          cov_6rb6tgtmk().s[56]++;
          _sonner.toast.error(`Falha ao enviar lembrete: ${resultado.erro}`);
        } else
        /* istanbul ignore next */
        {
          cov_6rb6tgtmk().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_6rb6tgtmk().s[57]++;
      return resultado;
    } catch (error) {
      const resultado =
      /* istanbul ignore next */
      (cov_6rb6tgtmk().s[58]++, {
        sucesso: false,
        erro: error instanceof Error ?
        /* istanbul ignore next */
        (cov_6rb6tgtmk().b[14][0]++, error.message) :
        /* istanbul ignore next */
        (cov_6rb6tgtmk().b[14][1]++, 'Erro desconhecido'),
        destinatario: destinatario.email,
        timestamp: new Date()
      });
      /* istanbul ignore next */
      cov_6rb6tgtmk().s[59]++;
      setUltimoResultado(resultado);
      /* istanbul ignore next */
      cov_6rb6tgtmk().s[60]++;
      if (config.notificarErro) {
        /* istanbul ignore next */
        cov_6rb6tgtmk().b[15][0]++;
        cov_6rb6tgtmk().s[61]++;
        _sonner.toast.error(`Erro ao enviar lembrete: ${resultado.erro}`);
      } else
      /* istanbul ignore next */
      {
        cov_6rb6tgtmk().b[15][1]++;
      }
      cov_6rb6tgtmk().s[62]++;
      return resultado;
    } finally {
      /* istanbul ignore next */
      cov_6rb6tgtmk().s[63]++;
      setEnviando(false);
    }
  }, [enviarComRetry, config]));
  /**
  * Envia notificação de vencimento
  */
  const enviarNotificacaoVencida =
  /* istanbul ignore next */
  (cov_6rb6tgtmk().s[64]++, (0, _react.useCallback)(async (avaliacao, destinatario) => {
    /* istanbul ignore next */
    cov_6rb6tgtmk().f[12]++;
    cov_6rb6tgtmk().s[65]++;
    setEnviando(true);
    /* istanbul ignore next */
    cov_6rb6tgtmk().s[66]++;
    try {
      const resultado =
      /* istanbul ignore next */
      (cov_6rb6tgtmk().s[67]++, await enviarComRetry(() => {
        /* istanbul ignore next */
        cov_6rb6tgtmk().f[13]++;
        cov_6rb6tgtmk().s[68]++;
        return _emailnotificacoes.emailUtils.notificarVencimento(avaliacao, destinatario);
      }));
      /* istanbul ignore next */
      cov_6rb6tgtmk().s[69]++;
      setUltimoResultado(resultado);
      /* istanbul ignore next */
      cov_6rb6tgtmk().s[70]++;
      if (
      /* istanbul ignore next */
      (cov_6rb6tgtmk().b[17][0]++, resultado.sucesso) &&
      /* istanbul ignore next */
      (cov_6rb6tgtmk().b[17][1]++, config.notificarSucesso)) {
        /* istanbul ignore next */
        cov_6rb6tgtmk().b[16][0]++;
        cov_6rb6tgtmk().s[71]++;
        _sonner.toast.success(`Notificação de vencimento enviada para ${destinatario.nome}`);
      } else {
        /* istanbul ignore next */
        cov_6rb6tgtmk().b[16][1]++;
        cov_6rb6tgtmk().s[72]++;
        if (
        /* istanbul ignore next */
        (cov_6rb6tgtmk().b[19][0]++, !resultado.sucesso) &&
        /* istanbul ignore next */
        (cov_6rb6tgtmk().b[19][1]++, config.notificarErro)) {
          /* istanbul ignore next */
          cov_6rb6tgtmk().b[18][0]++;
          cov_6rb6tgtmk().s[73]++;
          _sonner.toast.error(`Falha ao enviar notificação: ${resultado.erro}`);
        } else
        /* istanbul ignore next */
        {
          cov_6rb6tgtmk().b[18][1]++;
        }
      }
      /* istanbul ignore next */
      cov_6rb6tgtmk().s[74]++;
      return resultado;
    } catch (error) {
      const resultado =
      /* istanbul ignore next */
      (cov_6rb6tgtmk().s[75]++, {
        sucesso: false,
        erro: error instanceof Error ?
        /* istanbul ignore next */
        (cov_6rb6tgtmk().b[20][0]++, error.message) :
        /* istanbul ignore next */
        (cov_6rb6tgtmk().b[20][1]++, 'Erro desconhecido'),
        destinatario: destinatario.email,
        timestamp: new Date()
      });
      /* istanbul ignore next */
      cov_6rb6tgtmk().s[76]++;
      setUltimoResultado(resultado);
      /* istanbul ignore next */
      cov_6rb6tgtmk().s[77]++;
      if (config.notificarErro) {
        /* istanbul ignore next */
        cov_6rb6tgtmk().b[21][0]++;
        cov_6rb6tgtmk().s[78]++;
        _sonner.toast.error(`Erro ao enviar notificação: ${resultado.erro}`);
      } else
      /* istanbul ignore next */
      {
        cov_6rb6tgtmk().b[21][1]++;
      }
      cov_6rb6tgtmk().s[79]++;
      return resultado;
    } finally {
      /* istanbul ignore next */
      cov_6rb6tgtmk().s[80]++;
      setEnviando(false);
    }
  }, [enviarComRetry, config]));
  /**
  * Envia resumo semanal
  */
  const enviarResumoSemanal =
  /* istanbul ignore next */
  (cov_6rb6tgtmk().s[81]++, (0, _react.useCallback)(async (avaliacoes, destinatario) => {
    /* istanbul ignore next */
    cov_6rb6tgtmk().f[14]++;
    cov_6rb6tgtmk().s[82]++;
    setEnviando(true);
    /* istanbul ignore next */
    cov_6rb6tgtmk().s[83]++;
    try {
      const resultado =
      /* istanbul ignore next */
      (cov_6rb6tgtmk().s[84]++, await enviarComRetry(() => {
        /* istanbul ignore next */
        cov_6rb6tgtmk().f[15]++;
        cov_6rb6tgtmk().s[85]++;
        return _emailnotificacoes.emailUtils.enviarResumo(avaliacoes, destinatario);
      }));
      /* istanbul ignore next */
      cov_6rb6tgtmk().s[86]++;
      setUltimoResultado(resultado);
      /* istanbul ignore next */
      cov_6rb6tgtmk().s[87]++;
      if (
      /* istanbul ignore next */
      (cov_6rb6tgtmk().b[23][0]++, resultado.sucesso) &&
      /* istanbul ignore next */
      (cov_6rb6tgtmk().b[23][1]++, config.notificarSucesso)) {
        /* istanbul ignore next */
        cov_6rb6tgtmk().b[22][0]++;
        cov_6rb6tgtmk().s[88]++;
        _sonner.toast.success(`Resumo semanal enviado para ${destinatario.nome}`);
      } else {
        /* istanbul ignore next */
        cov_6rb6tgtmk().b[22][1]++;
        cov_6rb6tgtmk().s[89]++;
        if (
        /* istanbul ignore next */
        (cov_6rb6tgtmk().b[25][0]++, !resultado.sucesso) &&
        /* istanbul ignore next */
        (cov_6rb6tgtmk().b[25][1]++, config.notificarErro)) {
          /* istanbul ignore next */
          cov_6rb6tgtmk().b[24][0]++;
          cov_6rb6tgtmk().s[90]++;
          _sonner.toast.error(`Falha ao enviar resumo: ${resultado.erro}`);
        } else
        /* istanbul ignore next */
        {
          cov_6rb6tgtmk().b[24][1]++;
        }
      }
      /* istanbul ignore next */
      cov_6rb6tgtmk().s[91]++;
      return resultado;
    } catch (error) {
      const resultado =
      /* istanbul ignore next */
      (cov_6rb6tgtmk().s[92]++, {
        sucesso: false,
        erro: error instanceof Error ?
        /* istanbul ignore next */
        (cov_6rb6tgtmk().b[26][0]++, error.message) :
        /* istanbul ignore next */
        (cov_6rb6tgtmk().b[26][1]++, 'Erro desconhecido'),
        destinatario: destinatario.email,
        timestamp: new Date()
      });
      /* istanbul ignore next */
      cov_6rb6tgtmk().s[93]++;
      setUltimoResultado(resultado);
      /* istanbul ignore next */
      cov_6rb6tgtmk().s[94]++;
      if (config.notificarErro) {
        /* istanbul ignore next */
        cov_6rb6tgtmk().b[27][0]++;
        cov_6rb6tgtmk().s[95]++;
        _sonner.toast.error(`Erro ao enviar resumo: ${resultado.erro}`);
      } else
      /* istanbul ignore next */
      {
        cov_6rb6tgtmk().b[27][1]++;
      }
      cov_6rb6tgtmk().s[96]++;
      return resultado;
    } finally {
      /* istanbul ignore next */
      cov_6rb6tgtmk().s[97]++;
      setEnviando(false);
    }
  }, [enviarComRetry, config]));
  /**
  * Envia múltiplas notificações em lote
  */
  const enviarLoteNotificacoes =
  /* istanbul ignore next */
  (cov_6rb6tgtmk().s[98]++, (0, _react.useCallback)(async notificacoes => {
    /* istanbul ignore next */
    cov_6rb6tgtmk().f[16]++;
    cov_6rb6tgtmk().s[99]++;
    setEnviando(true);
    const inicioLote =
    /* istanbul ignore next */
    (cov_6rb6tgtmk().s[100]++, Date.now());
    /* istanbul ignore next */
    cov_6rb6tgtmk().s[101]++;
    try {
      const resultados =
      /* istanbul ignore next */
      (cov_6rb6tgtmk().s[102]++, []);
      let sucessos =
      /* istanbul ignore next */
      (cov_6rb6tgtmk().s[103]++, 0);
      let falhas =
      /* istanbul ignore next */
      (cov_6rb6tgtmk().s[104]++, 0);
      /* istanbul ignore next */
      cov_6rb6tgtmk().s[105]++;
      for (const notificacao of notificacoes) {
        /* istanbul ignore next */
        cov_6rb6tgtmk().s[106]++;
        try {
          let resultado;
          /* istanbul ignore next */
          cov_6rb6tgtmk().s[107]++;
          switch (notificacao.tipo) {
            case 'avaliacao_pendente':
              /* istanbul ignore next */
              cov_6rb6tgtmk().b[28][0]++;
              cov_6rb6tgtmk().s[108]++;
              resultado = await enviarNotificacaoAvaliacaoPendente(notificacao.avaliacao, notificacao.destinatario);
              /* istanbul ignore next */
              cov_6rb6tgtmk().s[109]++;
              break;
            case 'lembrete_prazo':
              /* istanbul ignore next */
              cov_6rb6tgtmk().b[28][1]++;
              cov_6rb6tgtmk().s[110]++;
              resultado = await enviarLembretePrazo(notificacao.avaliacao, notificacao.destinatario,
              /* istanbul ignore next */
              (cov_6rb6tgtmk().b[29][0]++, notificacao.diasRestantes) ||
              /* istanbul ignore next */
              (cov_6rb6tgtmk().b[29][1]++, 3));
              /* istanbul ignore next */
              cov_6rb6tgtmk().s[111]++;
              break;
            case 'avaliacao_vencida':
              /* istanbul ignore next */
              cov_6rb6tgtmk().b[28][2]++;
              cov_6rb6tgtmk().s[112]++;
              resultado = await enviarNotificacaoVencida(notificacao.avaliacao, notificacao.destinatario);
              /* istanbul ignore next */
              cov_6rb6tgtmk().s[113]++;
              break;
            default:
              /* istanbul ignore next */
              cov_6rb6tgtmk().b[28][3]++;
              cov_6rb6tgtmk().s[114]++;
              resultado = {
                sucesso: false,
                erro: `Tipo de notificação não suportado: ${notificacao.tipo}`,
                destinatario: notificacao.destinatario.email,
                timestamp: new Date()
              };
          }
          /* istanbul ignore next */
          cov_6rb6tgtmk().s[115]++;
          resultados.push(resultado);
          /* istanbul ignore next */
          cov_6rb6tgtmk().s[116]++;
          if (resultado.sucesso) {
            /* istanbul ignore next */
            cov_6rb6tgtmk().b[30][0]++;
            cov_6rb6tgtmk().s[117]++;
            sucessos++;
          } else {
            /* istanbul ignore next */
            cov_6rb6tgtmk().b[30][1]++;
            cov_6rb6tgtmk().s[118]++;
            falhas++;
          }
          // Pequeno delay entre envios
          /* istanbul ignore next */
          cov_6rb6tgtmk().s[119]++;
          await new Promise(resolve => {
            /* istanbul ignore next */
            cov_6rb6tgtmk().f[17]++;
            cov_6rb6tgtmk().s[120]++;
            return setTimeout(resolve, 100);
          });
        } catch (error) {
          const resultado =
          /* istanbul ignore next */
          (cov_6rb6tgtmk().s[121]++, {
            sucesso: false,
            erro: error instanceof Error ?
            /* istanbul ignore next */
            (cov_6rb6tgtmk().b[31][0]++, error.message) :
            /* istanbul ignore next */
            (cov_6rb6tgtmk().b[31][1]++, 'Erro desconhecido'),
            destinatario: notificacao.destinatario.email,
            timestamp: new Date()
          });
          /* istanbul ignore next */
          cov_6rb6tgtmk().s[122]++;
          resultados.push(resultado);
          /* istanbul ignore next */
          cov_6rb6tgtmk().s[123]++;
          falhas++;
        }
      }
      const tempoTotal =
      /* istanbul ignore next */
      (cov_6rb6tgtmk().s[124]++, Date.now() - inicioLote);
      const resultadoLote =
      /* istanbul ignore next */
      (cov_6rb6tgtmk().s[125]++, {
        total: notificacoes.length,
        sucessos,
        falhas,
        resultados,
        tempoTotal
      });
      /* istanbul ignore next */
      cov_6rb6tgtmk().s[126]++;
      if (
      /* istanbul ignore next */
      (cov_6rb6tgtmk().b[33][0]++, config.notificarSucesso) &&
      /* istanbul ignore next */
      (cov_6rb6tgtmk().b[33][1]++, sucessos > 0)) {
        /* istanbul ignore next */
        cov_6rb6tgtmk().b[32][0]++;
        cov_6rb6tgtmk().s[127]++;
        _sonner.toast.success(`${sucessos} e-mail${sucessos !== 1 ?
        /* istanbul ignore next */
        (cov_6rb6tgtmk().b[34][0]++, 's') :
        /* istanbul ignore next */
        (cov_6rb6tgtmk().b[34][1]++, '')} enviado${sucessos !== 1 ?
        /* istanbul ignore next */
        (cov_6rb6tgtmk().b[35][0]++, 's') :
        /* istanbul ignore next */
        (cov_6rb6tgtmk().b[35][1]++, '')} com sucesso`);
      } else
      /* istanbul ignore next */
      {
        cov_6rb6tgtmk().b[32][1]++;
      }
      cov_6rb6tgtmk().s[128]++;
      if (
      /* istanbul ignore next */
      (cov_6rb6tgtmk().b[37][0]++, config.notificarErro) &&
      /* istanbul ignore next */
      (cov_6rb6tgtmk().b[37][1]++, falhas > 0)) {
        /* istanbul ignore next */
        cov_6rb6tgtmk().b[36][0]++;
        cov_6rb6tgtmk().s[129]++;
        _sonner.toast.error(`${falhas} e-mail${falhas !== 1 ?
        /* istanbul ignore next */
        (cov_6rb6tgtmk().b[38][0]++, 's') :
        /* istanbul ignore next */
        (cov_6rb6tgtmk().b[38][1]++, '')} falharam no envio`);
      } else
      /* istanbul ignore next */
      {
        cov_6rb6tgtmk().b[36][1]++;
      }
      cov_6rb6tgtmk().s[130]++;
      return resultadoLote;
    } finally {
      /* istanbul ignore next */
      cov_6rb6tgtmk().s[131]++;
      setEnviando(false);
    }
  }, [enviarNotificacaoAvaliacaoPendente, enviarLembretePrazo, enviarNotificacaoVencida, config]));
  /**
  * Atualiza estatísticas
  */
  const atualizarEstatisticas =
  /* istanbul ignore next */
  (cov_6rb6tgtmk().s[132]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_6rb6tgtmk().f[18]++;
    const novasEstatisticas =
    /* istanbul ignore next */
    (cov_6rb6tgtmk().s[133]++, gerenciador.obterEstatisticas());
    /* istanbul ignore next */
    cov_6rb6tgtmk().s[134]++;
    setEstatisticas(new Map(novasEstatisticas));
  }, [gerenciador]));
  /**
  * Limpa estatísticas
  */
  const limparEstatisticas =
  /* istanbul ignore next */
  (cov_6rb6tgtmk().s[135]++, (0, _react.useCallback)(tipo => {
    /* istanbul ignore next */
    cov_6rb6tgtmk().f[19]++;
    cov_6rb6tgtmk().s[136]++;
    gerenciador.limparEstatisticas(tipo);
    /* istanbul ignore next */
    cov_6rb6tgtmk().s[137]++;
    atualizarEstatisticas();
  }, [gerenciador, atualizarEstatisticas]));
  /* istanbul ignore next */
  cov_6rb6tgtmk().s[138]++;
  return {
    // Estado
    enviando,
    ultimoResultado,
    estatisticas,
    // Funções de envio
    enviarNotificacaoAvaliacaoPendente,
    enviarLembretePrazo,
    enviarNotificacaoVencida,
    enviarResumoSemanal,
    enviarLoteNotificacoes,
    // Funções de controle
    atualizarEstatisticas,
    limparEstatisticas
  };
}
function useEnvioRapido() {
  /* istanbul ignore next */
  cov_6rb6tgtmk().f[20]++;
  const {
    enviarNotificacaoAvaliacaoPendente,
    enviarLembretePrazo,
    enviarNotificacaoVencida,
    enviando
  } =
  /* istanbul ignore next */
  (cov_6rb6tgtmk().s[139]++, useEmailNotificacoes({
    notificarSucesso: false,
    notificarErro: true
  }));
  /* istanbul ignore next */
  cov_6rb6tgtmk().s[140]++;
  return {
    enviando,
    notificarAvaliacaoPendente: enviarNotificacaoAvaliacaoPendente,
    enviarLembrete: enviarLembretePrazo,
    notificarVencimento: enviarNotificacaoVencida
  };
}
function useEstatisticasEmail() {
  /* istanbul ignore next */
  cov_6rb6tgtmk().f[21]++;
  const [estatisticas, setEstatisticas] =
  /* istanbul ignore next */
  (cov_6rb6tgtmk().s[141]++, (0, _react.useState)(new Map()));
  const [carregando, setCarregando] =
  /* istanbul ignore next */
  (cov_6rb6tgtmk().s[142]++, (0, _react.useState)(false));
  const gerenciador =
  /* istanbul ignore next */
  (cov_6rb6tgtmk().s[143]++, (0, _emailnotificacoes.obterGerenciadorEmail)());
  const carregarEstatisticas =
  /* istanbul ignore next */
  (cov_6rb6tgtmk().s[144]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_6rb6tgtmk().f[22]++;
    cov_6rb6tgtmk().s[145]++;
    setCarregando(true);
    /* istanbul ignore next */
    cov_6rb6tgtmk().s[146]++;
    try {
      const novasEstatisticas =
      /* istanbul ignore next */
      (cov_6rb6tgtmk().s[147]++, gerenciador.obterEstatisticas());
      /* istanbul ignore next */
      cov_6rb6tgtmk().s[148]++;
      setEstatisticas(new Map(novasEstatisticas));
    } catch (error) {
      /* istanbul ignore next */
      cov_6rb6tgtmk().s[149]++;
      console.error('Erro ao carregar estatísticas de e-mail:', error);
    } finally {
      /* istanbul ignore next */
      cov_6rb6tgtmk().s[150]++;
      setCarregando(false);
    }
  }, [gerenciador]));
  const obterEstatisticasPorTipo =
  /* istanbul ignore next */
  (cov_6rb6tgtmk().s[151]++, (0, _react.useCallback)(tipo => {
    /* istanbul ignore next */
    cov_6rb6tgtmk().f[23]++;
    cov_6rb6tgtmk().s[152]++;
    return /* istanbul ignore next */(cov_6rb6tgtmk().b[39][0]++, estatisticas.get(tipo)) ||
    /* istanbul ignore next */
    (cov_6rb6tgtmk().b[39][1]++, {
      totalEnviados: 0,
      sucessos: 0,
      falhas: 0,
      taxaSucesso: 0,
      tempoMedio: 0
    });
  }, [estatisticas]));
  const obterEstatisticasGerais =
  /* istanbul ignore next */
  (cov_6rb6tgtmk().s[153]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_6rb6tgtmk().f[24]++;
    let totalEnviados =
    /* istanbul ignore next */
    (cov_6rb6tgtmk().s[154]++, 0);
    let sucessos =
    /* istanbul ignore next */
    (cov_6rb6tgtmk().s[155]++, 0);
    let falhas =
    /* istanbul ignore next */
    (cov_6rb6tgtmk().s[156]++, 0);
    let tempoMedioTotal =
    /* istanbul ignore next */
    (cov_6rb6tgtmk().s[157]++, 0);
    let ultimoEnvio;
    /* istanbul ignore next */
    cov_6rb6tgtmk().s[158]++;
    for (const [, stats] of estatisticas) {
      /* istanbul ignore next */
      cov_6rb6tgtmk().s[159]++;
      totalEnviados += stats.totalEnviados;
      /* istanbul ignore next */
      cov_6rb6tgtmk().s[160]++;
      sucessos += stats.sucessos;
      /* istanbul ignore next */
      cov_6rb6tgtmk().s[161]++;
      falhas += stats.falhas;
      /* istanbul ignore next */
      cov_6rb6tgtmk().s[162]++;
      tempoMedioTotal += stats.tempoMedio * stats.totalEnviados;
      /* istanbul ignore next */
      cov_6rb6tgtmk().s[163]++;
      if (
      /* istanbul ignore next */
      (cov_6rb6tgtmk().b[41][0]++, stats.ultimoEnvio) && (
      /* istanbul ignore next */
      (cov_6rb6tgtmk().b[41][1]++, !ultimoEnvio) ||
      /* istanbul ignore next */
      (cov_6rb6tgtmk().b[41][2]++, stats.ultimoEnvio > ultimoEnvio))) {
        /* istanbul ignore next */
        cov_6rb6tgtmk().b[40][0]++;
        cov_6rb6tgtmk().s[164]++;
        ultimoEnvio = stats.ultimoEnvio;
      } else
      /* istanbul ignore next */
      {
        cov_6rb6tgtmk().b[40][1]++;
      }
    }
    /* istanbul ignore next */
    cov_6rb6tgtmk().s[165]++;
    return {
      totalEnviados,
      sucessos,
      falhas,
      taxaSucesso: totalEnviados > 0 ?
      /* istanbul ignore next */
      (cov_6rb6tgtmk().b[42][0]++, sucessos / totalEnviados * 100) :
      /* istanbul ignore next */
      (cov_6rb6tgtmk().b[42][1]++, 0),
      tempoMedio: totalEnviados > 0 ?
      /* istanbul ignore next */
      (cov_6rb6tgtmk().b[43][0]++, tempoMedioTotal / totalEnviados) :
      /* istanbul ignore next */
      (cov_6rb6tgtmk().b[43][1]++, 0),
      ultimoEnvio
    };
  }, [estatisticas]));
  /* istanbul ignore next */
  cov_6rb6tgtmk().s[166]++;
  return {
    estatisticas,
    carregando,
    carregarEstatisticas,
    obterEstatisticasPorTipo,
    obterEstatisticasGerais
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,