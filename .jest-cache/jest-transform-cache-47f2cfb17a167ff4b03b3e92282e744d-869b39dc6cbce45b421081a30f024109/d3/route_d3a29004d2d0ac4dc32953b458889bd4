12c19159e0582561a3fa39b6a79d6351
"use strict";

/* istanbul ignore next */
function cov_xiktbcegh() {
  var path = "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\atendentes\\estatisticas\\route.ts";
  var hash = "4ffcd6fcc35dff5c61a6a013fbd9cab96e44feaa";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\atendentes\\estatisticas\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 19
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 18
        },
        end: {
          line: 12,
          column: 38
        }
      },
      "5": {
        start: {
          line: 13,
          column: 14
        },
        end: {
          line: 13,
          column: 45
        }
      },
      "6": {
        start: {
          line: 14,
          column: 16
        },
        end: {
          line: 14,
          column: 49
        }
      },
      "7": {
        start: {
          line: 15,
          column: 20
        },
        end: {
          line: 15,
          column: 69
        }
      },
      "8": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 231,
          column: 5
        }
      },
      "9": {
        start: {
          line: 19,
          column: 24
        },
        end: {
          line: 19,
          column: 80
        }
      },
      "10": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 26,
          column: 9
        }
      },
      "11": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 25,
          column: 15
        }
      },
      "12": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 37,
          column: 9
        }
      },
      "13": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 36,
          column: 15
        }
      },
      "14": {
        start: {
          line: 39,
          column: 46
        },
        end: {
          line: 56,
          column: 10
        }
      },
      "15": {
        start: {
          line: 58,
          column: 36
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "16": {
        start: {
          line: 60,
          column: 43
        },
        end: {
          line: 60,
          column: 82
        }
      },
      "17": {
        start: {
          line: 61,
          column: 45
        },
        end: {
          line: 61,
          column: 87
        }
      },
      "18": {
        start: {
          line: 62,
          column: 46
        },
        end: {
          line: 62,
          column: 69
        }
      },
      "19": {
        start: {
          line: 63,
          column: 48
        },
        end: {
          line: 63,
          column: 74
        }
      },
      "20": {
        start: {
          line: 64,
          column: 43
        },
        end: {
          line: 64,
          column: 64
        }
      },
      "21": {
        start: {
          line: 65,
          column: 46
        },
        end: {
          line: 65,
          column: 69
        }
      },
      "22": {
        start: {
          line: 66,
          column: 50
        },
        end: {
          line: 66,
          column: 79
        }
      },
      "23": {
        start: {
          line: 67,
          column: 55
        },
        end: {
          line: 67,
          column: 89
        }
      },
      "24": {
        start: {
          line: 70,
          column: 37
        },
        end: {
          line: 86,
          column: 14
        }
      },
      "25": {
        start: {
          line: 71,
          column: 26
        },
        end: {
          line: 71,
          column: 60
        }
      },
      "26": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 78,
          column: 13
        }
      },
      "27": {
        start: {
          line: 73,
          column: 16
        },
        end: {
          line: 77,
          column: 18
        }
      },
      "28": {
        start: {
          line: 79,
          column: 12
        },
        end: {
          line: 79,
          column: 31
        }
      },
      "29": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 84,
          column: 13
        }
      },
      "30": {
        start: {
          line: 81,
          column: 16
        },
        end: {
          line: 81,
          column: 36
        }
      },
      "31": {
        start: {
          line: 83,
          column: 16
        },
        end: {
          line: 83,
          column: 38
        }
      },
      "32": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 23
        }
      },
      "33": {
        start: {
          line: 88,
          column: 37
        },
        end: {
          line: 104,
          column: 14
        }
      },
      "34": {
        start: {
          line: 89,
          column: 26
        },
        end: {
          line: 89,
          column: 60
        }
      },
      "35": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 96,
          column: 13
        }
      },
      "36": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 95,
          column: 18
        }
      },
      "37": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 97,
          column: 31
        }
      },
      "38": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 102,
          column: 13
        }
      },
      "39": {
        start: {
          line: 99,
          column: 16
        },
        end: {
          line: 99,
          column: 36
        }
      },
      "40": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 101,
          column: 38
        }
      },
      "41": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 23
        }
      },
      "42": {
        start: {
          line: 106,
          column: 44
        },
        end: {
          line: 122,
          column: 14
        }
      },
      "43": {
        start: {
          line: 107,
          column: 33
        },
        end: {
          line: 107,
          column: 74
        }
      },
      "44": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 114,
          column: 13
        }
      },
      "45": {
        start: {
          line: 109,
          column: 16
        },
        end: {
          line: 113,
          column: 18
        }
      },
      "46": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 38
        }
      },
      "47": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 120,
          column: 13
        }
      },
      "48": {
        start: {
          line: 117,
          column: 16
        },
        end: {
          line: 117,
          column: 43
        }
      },
      "49": {
        start: {
          line: 119,
          column: 16
        },
        end: {
          line: 119,
          column: 45
        }
      },
      "50": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 23
        }
      },
      "51": {
        start: {
          line: 124,
          column: 23
        },
        end: {
          line: 124,
          column: 137
        }
      },
      "52": {
        start: {
          line: 124,
          column: 46
        },
        end: {
          line: 124,
          column: 62
        }
      },
      "53": {
        start: {
          line: 124,
          column: 73
        },
        end: {
          line: 124,
          column: 136
        }
      },
      "54": {
        start: {
          line: 125,
          column: 34
        },
        end: {
          line: 136,
          column: 9
        }
      },
      "55": {
        start: {
          line: 126,
          column: 78
        },
        end: {
          line: 126,
          column: 89
        }
      },
      "56": {
        start: {
          line: 130,
          column: 42
        },
        end: {
          line: 130,
          column: 49
        }
      },
      "57": {
        start: {
          line: 131,
          column: 44
        },
        end: {
          line: 131,
          column: 62
        }
      },
      "58": {
        start: {
          line: 132,
          column: 44
        },
        end: {
          line: 132,
          column: 62
        }
      },
      "59": {
        start: {
          line: 133,
          column: 44
        },
        end: {
          line: 133,
          column: 62
        }
      },
      "60": {
        start: {
          line: 134,
          column: 46
        },
        end: {
          line: 134,
          column: 52
        }
      },
      "61": {
        start: {
          line: 138,
          column: 30
        },
        end: {
          line: 138,
          column: 119
        }
      },
      "62": {
        start: {
          line: 138,
          column: 50
        },
        end: {
          line: 138,
          column: 118
        }
      },
      "63": {
        start: {
          line: 139,
          column: 41
        },
        end: {
          line: 150,
          column: 9
        }
      },
      "64": {
        start: {
          line: 140,
          column: 97
        },
        end: {
          line: 140,
          column: 108
        }
      },
      "65": {
        start: {
          line: 144,
          column: 53
        },
        end: {
          line: 144,
          column: 59
        }
      },
      "66": {
        start: {
          line: 145,
          column: 55
        },
        end: {
          line: 145,
          column: 72
        }
      },
      "67": {
        start: {
          line: 146,
          column: 53
        },
        end: {
          line: 146,
          column: 71
        }
      },
      "68": {
        start: {
          line: 147,
          column: 53
        },
        end: {
          line: 147,
          column: 71
        }
      },
      "69": {
        start: {
          line: 148,
          column: 56
        },
        end: {
          line: 148,
          column: 62
        }
      },
      "70": {
        start: {
          line: 152,
          column: 25
        },
        end: {
          line: 152,
          column: 95
        }
      },
      "71": {
        start: {
          line: 152,
          column: 48
        },
        end: {
          line: 152,
          column: 74
        }
      },
      "72": {
        start: {
          line: 152,
          column: 85
        },
        end: {
          line: 152,
          column: 94
        }
      },
      "73": {
        start: {
          line: 153,
          column: 36
        },
        end: {
          line: 171,
          column: 9
        }
      },
      "74": {
        start: {
          line: 154,
          column: 84
        },
        end: {
          line: 154,
          column: 97
        }
      },
      "75": {
        start: {
          line: 158,
          column: 31
        },
        end: {
          line: 160,
          column: 37
        }
      },
      "76": {
        start: {
          line: 160,
          column: 31
        },
        end: {
          line: 160,
          column: 36
        }
      },
      "77": {
        start: {
          line: 161,
          column: 28
        },
        end: {
          line: 161,
          column: 57
        }
      },
      "78": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 162,
          column: 111
        }
      },
      "79": {
        start: {
          line: 165,
          column: 46
        },
        end: {
          line: 165,
          column: 55
        }
      },
      "80": {
        start: {
          line: 166,
          column: 50
        },
        end: {
          line: 166,
          column: 72
        }
      },
      "81": {
        start: {
          line: 167,
          column: 50
        },
        end: {
          line: 167,
          column: 72
        }
      },
      "82": {
        start: {
          line: 168,
          column: 51
        },
        end: {
          line: 168,
          column: 74
        }
      },
      "83": {
        start: {
          line: 169,
          column: 51
        },
        end: {
          line: 169,
          column: 60
        }
      },
      "84": {
        start: {
          line: 173,
          column: 32
        },
        end: {
          line: 173,
          column: 89
        }
      },
      "85": {
        start: {
          line: 173,
          column: 60
        },
        end: {
          line: 173,
          column: 85
        }
      },
      "86": {
        start: {
          line: 174,
          column: 40
        },
        end: {
          line: 174,
          column: 96
        }
      },
      "87": {
        start: {
          line: 174,
          column: 63
        },
        end: {
          line: 174,
          column: 88
        }
      },
      "88": {
        start: {
          line: 175,
          column: 34
        },
        end: {
          line: 175,
          column: 71
        }
      },
      "89": {
        start: {
          line: 175,
          column: 57
        },
        end: {
          line: 175,
          column: 63
        }
      },
      "90": {
        start: {
          line: 177,
          column: 22
        },
        end: {
          line: 177,
          column: 32
        }
      },
      "91": {
        start: {
          line: 178,
          column: 32
        },
        end: {
          line: 191,
          column: 20
        }
      },
      "92": {
        start: {
          line: 181,
          column: 24
        },
        end: {
          line: 181,
          column: 78
        }
      },
      "93": {
        start: {
          line: 182,
          column: 31
        },
        end: {
          line: 182,
          column: 89
        }
      },
      "94": {
        start: {
          line: 183,
          column: 30
        },
        end: {
          line: 183,
          column: 113
        }
      },
      "95": {
        start: {
          line: 183,
          column: 53
        },
        end: {
          line: 183,
          column: 105
        }
      },
      "96": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 190,
          column: 14
        }
      },
      "97": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 223,
          column: 11
        }
      },
      "98": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 225,
          column: 74
        }
      },
      "99": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 230,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "GET",
        decl: {
          start: {
            line: 16,
            column: 15
          },
          end: {
            line: 16,
            column: 18
          }
        },
        loc: {
          start: {
            line: 16,
            column: 28
          },
          end: {
            line: 232,
            column: 1
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 60,
            column: 38
          },
          end: {
            line: 60,
            column: 39
          }
        },
        loc: {
          start: {
            line: 60,
            column: 43
          },
          end: {
            line: 60,
            column: 82
          }
        },
        line: 60
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 61,
            column: 40
          },
          end: {
            line: 61,
            column: 41
          }
        },
        loc: {
          start: {
            line: 61,
            column: 45
          },
          end: {
            line: 61,
            column: 87
          }
        },
        line: 61
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 62,
            column: 41
          },
          end: {
            line: 62,
            column: 42
          }
        },
        loc: {
          start: {
            line: 62,
            column: 46
          },
          end: {
            line: 62,
            column: 69
          }
        },
        line: 62
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 63,
            column: 43
          },
          end: {
            line: 63,
            column: 44
          }
        },
        loc: {
          start: {
            line: 63,
            column: 48
          },
          end: {
            line: 63,
            column: 74
          }
        },
        line: 63
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 64,
            column: 38
          },
          end: {
            line: 64,
            column: 39
          }
        },
        loc: {
          start: {
            line: 64,
            column: 43
          },
          end: {
            line: 64,
            column: 64
          }
        },
        line: 64
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 65,
            column: 41
          },
          end: {
            line: 65,
            column: 42
          }
        },
        loc: {
          start: {
            line: 65,
            column: 46
          },
          end: {
            line: 65,
            column: 69
          }
        },
        line: 65
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 66,
            column: 45
          },
          end: {
            line: 66,
            column: 46
          }
        },
        loc: {
          start: {
            line: 66,
            column: 50
          },
          end: {
            line: 66,
            column: 79
          }
        },
        line: 66
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 67,
            column: 50
          },
          end: {
            line: 67,
            column: 51
          }
        },
        loc: {
          start: {
            line: 67,
            column: 55
          },
          end: {
            line: 67,
            column: 89
          }
        },
        line: 67
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 70,
            column: 55
          },
          end: {
            line: 70,
            column: 56
          }
        },
        loc: {
          start: {
            line: 70,
            column: 73
          },
          end: {
            line: 86,
            column: 9
          }
        },
        line: 70
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 88,
            column: 55
          },
          end: {
            line: 88,
            column: 56
          }
        },
        loc: {
          start: {
            line: 88,
            column: 73
          },
          end: {
            line: 104,
            column: 9
          }
        },
        line: 88
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 106,
            column: 62
          },
          end: {
            line: 106,
            column: 63
          }
        },
        loc: {
          start: {
            line: 106,
            column: 80
          },
          end: {
            line: 122,
            column: 9
          }
        },
        line: 106
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 124,
            column: 41
          },
          end: {
            line: 124,
            column: 42
          }
        },
        loc: {
          start: {
            line: 124,
            column: 46
          },
          end: {
            line: 124,
            column: 62
          }
        },
        line: 124
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 124,
            column: 68
          },
          end: {
            line: 124,
            column: 69
          }
        },
        loc: {
          start: {
            line: 124,
            column: 73
          },
          end: {
            line: 124,
            column: 136
          }
        },
        line: 124
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 126,
            column: 64
          },
          end: {
            line: 126,
            column: 65
          }
        },
        loc: {
          start: {
            line: 126,
            column: 78
          },
          end: {
            line: 126,
            column: 89
          }
        },
        line: 126
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 130,
            column: 37
          },
          end: {
            line: 130,
            column: 38
          }
        },
        loc: {
          start: {
            line: 130,
            column: 42
          },
          end: {
            line: 130,
            column: 49
          }
        },
        line: 130
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 131,
            column: 39
          },
          end: {
            line: 131,
            column: 40
          }
        },
        loc: {
          start: {
            line: 131,
            column: 44
          },
          end: {
            line: 131,
            column: 62
          }
        },
        line: 131
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 132,
            column: 39
          },
          end: {
            line: 132,
            column: 40
          }
        },
        loc: {
          start: {
            line: 132,
            column: 44
          },
          end: {
            line: 132,
            column: 62
          }
        },
        line: 132
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 133,
            column: 39
          },
          end: {
            line: 133,
            column: 40
          }
        },
        loc: {
          start: {
            line: 133,
            column: 44
          },
          end: {
            line: 133,
            column: 62
          }
        },
        line: 133
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 134,
            column: 41
          },
          end: {
            line: 134,
            column: 42
          }
        },
        loc: {
          start: {
            line: 134,
            column: 46
          },
          end: {
            line: 134,
            column: 52
          }
        },
        line: 134
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 138,
            column: 45
          },
          end: {
            line: 138,
            column: 46
          }
        },
        loc: {
          start: {
            line: 138,
            column: 50
          },
          end: {
            line: 138,
            column: 118
          }
        },
        line: 138
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 140,
            column: 83
          },
          end: {
            line: 140,
            column: 84
          }
        },
        loc: {
          start: {
            line: 140,
            column: 97
          },
          end: {
            line: 140,
            column: 108
          }
        },
        line: 140
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 144,
            column: 48
          },
          end: {
            line: 144,
            column: 49
          }
        },
        loc: {
          start: {
            line: 144,
            column: 53
          },
          end: {
            line: 144,
            column: 59
          }
        },
        line: 144
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 145,
            column: 50
          },
          end: {
            line: 145,
            column: 51
          }
        },
        loc: {
          start: {
            line: 145,
            column: 55
          },
          end: {
            line: 145,
            column: 72
          }
        },
        line: 145
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 146,
            column: 48
          },
          end: {
            line: 146,
            column: 49
          }
        },
        loc: {
          start: {
            line: 146,
            column: 53
          },
          end: {
            line: 146,
            column: 71
          }
        },
        line: 146
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 147,
            column: 48
          },
          end: {
            line: 147,
            column: 49
          }
        },
        loc: {
          start: {
            line: 147,
            column: 53
          },
          end: {
            line: 147,
            column: 71
          }
        },
        line: 147
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 148,
            column: 51
          },
          end: {
            line: 148,
            column: 52
          }
        },
        loc: {
          start: {
            line: 148,
            column: 56
          },
          end: {
            line: 148,
            column: 62
          }
        },
        line: 148
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 152,
            column: 43
          },
          end: {
            line: 152,
            column: 44
          }
        },
        loc: {
          start: {
            line: 152,
            column: 48
          },
          end: {
            line: 152,
            column: 74
          }
        },
        line: 152
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 152,
            column: 80
          },
          end: {
            line: 152,
            column: 81
          }
        },
        loc: {
          start: {
            line: 152,
            column: 85
          },
          end: {
            line: 152,
            column: 94
          }
        },
        line: 152
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 154,
            column: 68
          },
          end: {
            line: 154,
            column: 69
          }
        },
        loc: {
          start: {
            line: 154,
            column: 84
          },
          end: {
            line: 154,
            column: 97
          }
        },
        line: 154
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 157,
            column: 44
          },
          end: {
            line: 157,
            column: 45
          }
        },
        loc: {
          start: {
            line: 157,
            column: 48
          },
          end: {
            line: 163,
            column: 13
          }
        },
        line: 157
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 160,
            column: 23
          },
          end: {
            line: 160,
            column: 24
          }
        },
        loc: {
          start: {
            line: 160,
            column: 31
          },
          end: {
            line: 160,
            column: 36
          }
        },
        line: 160
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 165,
            column: 41
          },
          end: {
            line: 165,
            column: 42
          }
        },
        loc: {
          start: {
            line: 165,
            column: 46
          },
          end: {
            line: 165,
            column: 55
          }
        },
        line: 165
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 166,
            column: 45
          },
          end: {
            line: 166,
            column: 46
          }
        },
        loc: {
          start: {
            line: 166,
            column: 50
          },
          end: {
            line: 166,
            column: 72
          }
        },
        line: 166
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 167,
            column: 45
          },
          end: {
            line: 167,
            column: 46
          }
        },
        loc: {
          start: {
            line: 167,
            column: 50
          },
          end: {
            line: 167,
            column: 72
          }
        },
        line: 167
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 168,
            column: 46
          },
          end: {
            line: 168,
            column: 47
          }
        },
        loc: {
          start: {
            line: 168,
            column: 51
          },
          end: {
            line: 168,
            column: 74
          }
        },
        line: 168
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 169,
            column: 46
          },
          end: {
            line: 169,
            column: 47
          }
        },
        loc: {
          start: {
            line: 169,
            column: 51
          },
          end: {
            line: 169,
            column: 60
          }
        },
        line: 169
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 173,
            column: 50
          },
          end: {
            line: 173,
            column: 51
          }
        },
        loc: {
          start: {
            line: 173,
            column: 60
          },
          end: {
            line: 173,
            column: 85
          }
        },
        line: 173
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 174,
            column: 58
          },
          end: {
            line: 174,
            column: 59
          }
        },
        loc: {
          start: {
            line: 174,
            column: 63
          },
          end: {
            line: 174,
            column: 88
          }
        },
        line: 174
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 175,
            column: 52
          },
          end: {
            line: 175,
            column: 53
          }
        },
        loc: {
          start: {
            line: 175,
            column: 57
          },
          end: {
            line: 175,
            column: 63
          }
        },
        line: 175
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 180,
            column: 11
          },
          end: {
            line: 180,
            column: 12
          }
        },
        loc: {
          start: {
            line: 180,
            column: 19
          },
          end: {
            line: 191,
            column: 9
          }
        },
        line: 180
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 183,
            column: 48
          },
          end: {
            line: 183,
            column: 49
          }
        },
        loc: {
          start: {
            line: 183,
            column: 53
          },
          end: {
            line: 183,
            column: 105
          }
        },
        line: 183
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 20,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 8
          },
          end: {
            line: 26,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 20
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 37,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 60,
            column: 43
          },
          end: {
            line: 60,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 43
          },
          end: {
            line: 60,
            column: 63
          }
        }, {
          start: {
            line: 60,
            column: 67
          },
          end: {
            line: 60,
            column: 82
          }
        }],
        line: 60
      },
      "3": {
        loc: {
          start: {
            line: 61,
            column: 45
          },
          end: {
            line: 61,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 45
          },
          end: {
            line: 61,
            column: 67
          }
        }, {
          start: {
            line: 61,
            column: 71
          },
          end: {
            line: 61,
            column: 87
          }
        }],
        line: 61
      },
      "4": {
        loc: {
          start: {
            line: 71,
            column: 26
          },
          end: {
            line: 71,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 26
          },
          end: {
            line: 71,
            column: 41
          }
        }, {
          start: {
            line: 71,
            column: 45
          },
          end: {
            line: 71,
            column: 60
          }
        }],
        line: 71
      },
      "5": {
        loc: {
          start: {
            line: 72,
            column: 12
          },
          end: {
            line: 78,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 12
          },
          end: {
            line: 78,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "6": {
        loc: {
          start: {
            line: 80,
            column: 12
          },
          end: {
            line: 84,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 12
          },
          end: {
            line: 84,
            column: 13
          }
        }, {
          start: {
            line: 82,
            column: 19
          },
          end: {
            line: 84,
            column: 13
          }
        }],
        line: 80
      },
      "7": {
        loc: {
          start: {
            line: 80,
            column: 16
          },
          end: {
            line: 80,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 16
          },
          end: {
            line: 80,
            column: 44
          }
        }, {
          start: {
            line: 80,
            column: 48
          },
          end: {
            line: 80,
            column: 71
          }
        }],
        line: 80
      },
      "8": {
        loc: {
          start: {
            line: 89,
            column: 26
          },
          end: {
            line: 89,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 89,
            column: 26
          },
          end: {
            line: 89,
            column: 41
          }
        }, {
          start: {
            line: 89,
            column: 45
          },
          end: {
            line: 89,
            column: 60
          }
        }],
        line: 89
      },
      "9": {
        loc: {
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 96,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 96,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "10": {
        loc: {
          start: {
            line: 98,
            column: 12
          },
          end: {
            line: 102,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 12
          },
          end: {
            line: 102,
            column: 13
          }
        }, {
          start: {
            line: 100,
            column: 19
          },
          end: {
            line: 102,
            column: 13
          }
        }],
        line: 98
      },
      "11": {
        loc: {
          start: {
            line: 98,
            column: 16
          },
          end: {
            line: 98,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 98,
            column: 16
          },
          end: {
            line: 98,
            column: 44
          }
        }, {
          start: {
            line: 98,
            column: 48
          },
          end: {
            line: 98,
            column: 71
          }
        }],
        line: 98
      },
      "12": {
        loc: {
          start: {
            line: 107,
            column: 33
          },
          end: {
            line: 107,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 107,
            column: 33
          },
          end: {
            line: 107,
            column: 55
          }
        }, {
          start: {
            line: 107,
            column: 59
          },
          end: {
            line: 107,
            column: 74
          }
        }],
        line: 107
      },
      "13": {
        loc: {
          start: {
            line: 108,
            column: 12
          },
          end: {
            line: 114,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 12
          },
          end: {
            line: 114,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "14": {
        loc: {
          start: {
            line: 116,
            column: 12
          },
          end: {
            line: 120,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 12
          },
          end: {
            line: 120,
            column: 13
          }
        }, {
          start: {
            line: 118,
            column: 19
          },
          end: {
            line: 120,
            column: 13
          }
        }],
        line: 116
      },
      "15": {
        loc: {
          start: {
            line: 116,
            column: 16
          },
          end: {
            line: 116,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 16
          },
          end: {
            line: 116,
            column: 44
          }
        }, {
          start: {
            line: 116,
            column: 48
          },
          end: {
            line: 116,
            column: 71
          }
        }],
        line: 116
      },
      "16": {
        loc: {
          start: {
            line: 126,
            column: 19
          },
          end: {
            line: 126,
            column: 114
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 126,
            column: 39
          },
          end: {
            line: 126,
            column: 110
          }
        }, {
          start: {
            line: 126,
            column: 113
          },
          end: {
            line: 126,
            column: 114
          }
        }],
        line: 126
      },
      "17": {
        loc: {
          start: {
            line: 127,
            column: 20
          },
          end: {
            line: 127,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 127,
            column: 40
          },
          end: {
            line: 127,
            column: 59
          }
        }, {
          start: {
            line: 127,
            column: 62
          },
          end: {
            line: 127,
            column: 63
          }
        }],
        line: 127
      },
      "18": {
        loc: {
          start: {
            line: 128,
            column: 20
          },
          end: {
            line: 128,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 128,
            column: 40
          },
          end: {
            line: 128,
            column: 59
          }
        }, {
          start: {
            line: 128,
            column: 62
          },
          end: {
            line: 128,
            column: 63
          }
        }],
        line: 128
      },
      "19": {
        loc: {
          start: {
            line: 131,
            column: 44
          },
          end: {
            line: 131,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 131,
            column: 44
          },
          end: {
            line: 131,
            column: 51
          }
        }, {
          start: {
            line: 131,
            column: 55
          },
          end: {
            line: 131,
            column: 62
          }
        }],
        line: 131
      },
      "20": {
        loc: {
          start: {
            line: 132,
            column: 44
          },
          end: {
            line: 132,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 132,
            column: 44
          },
          end: {
            line: 132,
            column: 51
          }
        }, {
          start: {
            line: 132,
            column: 55
          },
          end: {
            line: 132,
            column: 62
          }
        }],
        line: 132
      },
      "21": {
        loc: {
          start: {
            line: 133,
            column: 44
          },
          end: {
            line: 133,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 133,
            column: 44
          },
          end: {
            line: 133,
            column: 51
          }
        }, {
          start: {
            line: 133,
            column: 55
          },
          end: {
            line: 133,
            column: 62
          }
        }],
        line: 133
      },
      "22": {
        loc: {
          start: {
            line: 140,
            column: 24
          },
          end: {
            line: 140,
            column: 140
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 140,
            column: 51
          },
          end: {
            line: 140,
            column: 136
          }
        }, {
          start: {
            line: 140,
            column: 139
          },
          end: {
            line: 140,
            column: 140
          }
        }],
        line: 140
      },
      "23": {
        loc: {
          start: {
            line: 141,
            column: 25
          },
          end: {
            line: 141,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 141,
            column: 52
          },
          end: {
            line: 141,
            column: 78
          }
        }, {
          start: {
            line: 141,
            column: 81
          },
          end: {
            line: 141,
            column: 82
          }
        }],
        line: 141
      },
      "24": {
        loc: {
          start: {
            line: 142,
            column: 25
          },
          end: {
            line: 142,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 142,
            column: 52
          },
          end: {
            line: 142,
            column: 78
          }
        }, {
          start: {
            line: 142,
            column: 81
          },
          end: {
            line: 142,
            column: 82
          }
        }],
        line: 142
      },
      "25": {
        loc: {
          start: {
            line: 145,
            column: 55
          },
          end: {
            line: 145,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 145,
            column: 55
          },
          end: {
            line: 145,
            column: 61
          }
        }, {
          start: {
            line: 145,
            column: 65
          },
          end: {
            line: 145,
            column: 72
          }
        }],
        line: 145
      },
      "26": {
        loc: {
          start: {
            line: 146,
            column: 53
          },
          end: {
            line: 146,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 146,
            column: 53
          },
          end: {
            line: 146,
            column: 60
          }
        }, {
          start: {
            line: 146,
            column: 64
          },
          end: {
            line: 146,
            column: 71
          }
        }],
        line: 146
      },
      "27": {
        loc: {
          start: {
            line: 147,
            column: 53
          },
          end: {
            line: 147,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 147,
            column: 53
          },
          end: {
            line: 147,
            column: 60
          }
        }, {
          start: {
            line: 147,
            column: 64
          },
          end: {
            line: 147,
            column: 71
          }
        }],
        line: 147
      },
      "28": {
        loc: {
          start: {
            line: 152,
            column: 48
          },
          end: {
            line: 152,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 152,
            column: 48
          },
          end: {
            line: 152,
            column: 57
          }
        }, {
          start: {
            line: 152,
            column: 61
          },
          end: {
            line: 152,
            column: 74
          }
        }],
        line: 152
      },
      "29": {
        loc: {
          start: {
            line: 154,
            column: 19
          },
          end: {
            line: 154,
            column: 124
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 154,
            column: 41
          },
          end: {
            line: 154,
            column: 120
          }
        }, {
          start: {
            line: 154,
            column: 123
          },
          end: {
            line: 154,
            column: 124
          }
        }],
        line: 154
      },
      "30": {
        loc: {
          start: {
            line: 155,
            column: 20
          },
          end: {
            line: 155,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 155,
            column: 42
          },
          end: {
            line: 155,
            column: 63
          }
        }, {
          start: {
            line: 155,
            column: 66
          },
          end: {
            line: 155,
            column: 67
          }
        }],
        line: 155
      },
      "31": {
        loc: {
          start: {
            line: 156,
            column: 20
          },
          end: {
            line: 156,
            column: 67
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 156,
            column: 42
          },
          end: {
            line: 156,
            column: 63
          }
        }, {
          start: {
            line: 156,
            column: 66
          },
          end: {
            line: 156,
            column: 67
          }
        }],
        line: 156
      },
      "32": {
        loc: {
          start: {
            line: 157,
            column: 21
          },
          end: {
            line: 163,
            column: 20
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 157,
            column: 43
          },
          end: {
            line: 163,
            column: 16
          }
        }, {
          start: {
            line: 163,
            column: 19
          },
          end: {
            line: 163,
            column: 20
          }
        }],
        line: 157
      },
      "33": {
        loc: {
          start: {
            line: 162,
            column: 23
          },
          end: {
            line: 162,
            column: 110
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 162,
            column: 49
          },
          end: {
            line: 162,
            column: 60
          }
        }, {
          start: {
            line: 162,
            column: 63
          },
          end: {
            line: 162,
            column: 110
          }
        }],
        line: 162
      },
      "34": {
        loc: {
          start: {
            line: 166,
            column: 50
          },
          end: {
            line: 166,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 166,
            column: 50
          },
          end: {
            line: 166,
            column: 59
          }
        }, {
          start: {
            line: 166,
            column: 63
          },
          end: {
            line: 166,
            column: 72
          }
        }],
        line: 166
      },
      "35": {
        loc: {
          start: {
            line: 167,
            column: 50
          },
          end: {
            line: 167,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 167,
            column: 50
          },
          end: {
            line: 167,
            column: 59
          }
        }, {
          start: {
            line: 167,
            column: 63
          },
          end: {
            line: 167,
            column: 72
          }
        }],
        line: 167
      },
      "36": {
        loc: {
          start: {
            line: 168,
            column: 51
          },
          end: {
            line: 168,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 168,
            column: 51
          },
          end: {
            line: 168,
            column: 60
          }
        }, {
          start: {
            line: 168,
            column: 64
          },
          end: {
            line: 168,
            column: 74
          }
        }],
        line: 168
      },
      "37": {
        loc: {
          start: {
            line: 183,
            column: 53
          },
          end: {
            line: 183,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 183,
            column: 53
          },
          end: {
            line: 183,
            column: 74
          }
        }, {
          start: {
            line: 183,
            column: 78
          },
          end: {
            line: 183,
            column: 105
          }
        }],
        line: 183
      },
      "38": {
        loc: {
          start: {
            line: 210,
            column: 35
          },
          end: {
            line: 210,
            column: 114
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 210,
            column: 57
          },
          end: {
            line: 210,
            column: 110
          }
        }, {
          start: {
            line: 210,
            column: 113
          },
          end: {
            line: 210,
            column: 114
          }
        }],
        line: 210
      },
      "39": {
        loc: {
          start: {
            line: 216,
            column: 34
          },
          end: {
            line: 216,
            column: 122
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 216,
            column: 56
          },
          end: {
            line: 216,
            column: 118
          }
        }, {
          start: {
            line: 216,
            column: 121
          },
          end: {
            line: 216,
            column: 122
          }
        }],
        line: 216
      },
      "40": {
        loc: {
          start: {
            line: 217,
            column: 36
          },
          end: {
            line: 217,
            column: 126
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 217,
            column: 58
          },
          end: {
            line: 217,
            column: 122
          }
        }, {
          start: {
            line: 217,
            column: 125
          },
          end: {
            line: 217,
            column: 126
          }
        }],
        line: 217
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\atendentes\\estatisticas\\route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { getServerSession } from 'next-auth';\nimport { authOptions } from '@/lib/auth';\nimport { prisma } from '@/lib/prisma';\nimport {\n  MENSAGENS_ERRO_ATENDENTES,\n  validacaoAtendentes,\n} from '@/lib/validations/atendentes';\n\n/**\n * GET /api/atendentes/estatisticas\n * Retorna estat\xEDsticas gerais dos atendentes\n */\nexport async function GET(request: NextRequest) {\n  try {\n    // Verificar autentica\xE7\xE3o\n    const session = await getServerSession(authOptions);\n    if (!session?.user) {\n      return NextResponse.json({ erro: 'N\xE3o autorizado' }, { status: 401 });\n    }\n\n    // Verificar permiss\xF5es\n    if (!['ADMIN', 'GERENTE'].includes(session.user.userType)) {\n      return NextResponse.json(\n        { erro: MENSAGENS_ERRO_ATENDENTES.SEM_PERMISSAO },\n        { status: 403 }\n      );\n    }\n\n    // Buscar dados para estat\xEDsticas\n    const [atendentes, totalAtendentes] = await Promise.all([\n      prisma.atendente.findMany({\n        include: {\n          usuario: {\n            select: {\n              ativo: true,\n            },\n          },\n          _count: {\n            select: {\n              documentos: true,\n              historicoAlteracoes: true,\n            },\n          },\n        },\n      }),\n      prisma.atendente.count(),\n    ]);\n\n    // Calcular estat\xEDsticas b\xE1sicas\n    const estatisticasBasicas = {\n      total: totalAtendentes,\n      ativos: atendentes.filter(a => a.status === 'ATIVO' && a.usuario.ativo)\n        .length,\n      inativos: atendentes.filter(\n        a => a.status === 'INATIVO' || !a.usuario.ativo\n      ).length,\n      suspensos: atendentes.filter(a => a.status === 'SUSPENSO').length,\n      treinamento: atendentes.filter(a => a.status === 'TREINAMENTO').length,\n      ferias: atendentes.filter(a => a.status === 'FERIAS').length,\n      afastados: atendentes.filter(a => a.status === 'AFASTADO').length,\n      licencaMedica: atendentes.filter(a => a.status === 'LICENCA_MEDICA')\n        .length,\n      licencaMaternidade: atendentes.filter(\n        a => a.status === 'LICENCA_MATERNIDADE'\n      ).length,\n    };\n\n    // Estat\xEDsticas por setor\n    const estatisticasPorSetor = atendentes.reduce(\n      (acc, atendente) => {\n        const setor = atendente.setor || 'N\xE3o informado';\n        if (!acc[setor]) {\n          acc[setor] = {\n            total: 0,\n            ativos: 0,\n            inativos: 0,\n          };\n        }\n        acc[setor].total++;\n        if (atendente.status === 'ATIVO' && atendente.usuario.ativo) {\n          acc[setor].ativos++;\n        } else {\n          acc[setor].inativos++;\n        }\n        return acc;\n      },\n      {} as Record<string, { total: number; ativos: number; inativos: number }>\n    );\n\n    // Estat\xEDsticas por cargo\n    const estatisticasPorCargo = atendentes.reduce(\n      (acc, atendente) => {\n        const cargo = atendente.cargo || 'N\xE3o informado';\n        if (!acc[cargo]) {\n          acc[cargo] = {\n            total: 0,\n            ativos: 0,\n            inativos: 0,\n          };\n        }\n        acc[cargo].total++;\n        if (atendente.status === 'ATIVO' && atendente.usuario.ativo) {\n          acc[cargo].ativos++;\n        } else {\n          acc[cargo].inativos++;\n        }\n        return acc;\n      },\n      {} as Record<string, { total: number; ativos: number; inativos: number }>\n    );\n\n    // Estat\xEDsticas por departamento\n    const estatisticasPorDepartamento = atendentes.reduce(\n      (acc, atendente) => {\n        const departamento = atendente.departamento || 'N\xE3o informado';\n        if (!acc[departamento]) {\n          acc[departamento] = {\n            total: 0,\n            ativos: 0,\n            inativos: 0,\n          };\n        }\n        acc[departamento].total++;\n        if (atendente.status === 'ATIVO' && atendente.usuario.ativo) {\n          acc[departamento].ativos++;\n        } else {\n          acc[departamento].inativos++;\n        }\n        return acc;\n      },\n      {} as Record<string, { total: number; ativos: number; inativos: number }>\n    );\n\n    // Estat\xEDsticas de idade\n    const idades = atendentes\n      .filter(a => a.dataNascimento)\n      .map(a => validacaoAtendentes.calcularIdade(a.dataNascimento!));\n\n    const estatisticasIdade = {\n      media:\n        idades.length > 0\n          ? Math.round(\n              idades.reduce((sum, idade) => sum + idade, 0) / idades.length\n            )\n          : 0,\n      minima: idades.length > 0 ? Math.min(...idades) : 0,\n      maxima: idades.length > 0 ? Math.max(...idades) : 0,\n      faixasEtarias: {\n        ate25: idades.filter(i => i <= 25).length,\n        de26a35: idades.filter(i => i >= 26 && i <= 35).length,\n        de36a45: idades.filter(i => i >= 36 && i <= 45).length,\n        de46a55: idades.filter(i => i >= 46 && i <= 55).length,\n        acimaDe55: idades.filter(i => i > 55).length,\n      },\n    };\n\n    // Estat\xEDsticas de tempo de empresa\n    const temposEmpresa = atendentes.map(a =>\n      validacaoAtendentes.calcularTempoEmpresa(a.dataAdmissao)\n    );\n\n    const estatisticasTempoEmpresa = {\n      mediaMeses:\n        temposEmpresa.length > 0\n          ? Math.round(\n              temposEmpresa.reduce((sum, tempo) => sum + tempo, 0) /\n                temposEmpresa.length\n            )\n          : 0,\n      minimoMeses: temposEmpresa.length > 0 ? Math.min(...temposEmpresa) : 0,\n      maximoMeses: temposEmpresa.length > 0 ? Math.max(...temposEmpresa) : 0,\n      faixasTempo: {\n        ate6Meses: temposEmpresa.filter(t => t <= 6).length,\n        de7a12Meses: temposEmpresa.filter(t => t >= 7 && t <= 12).length,\n        de1a2Anos: temposEmpresa.filter(t => t >= 13 && t <= 24).length,\n        de3a5Anos: temposEmpresa.filter(t => t >= 25 && t <= 60).length,\n        acimaDe5Anos: temposEmpresa.filter(t => t > 60).length,\n      },\n    };\n\n    // Estat\xEDsticas de sal\xE1rio (apenas para atendentes com sal\xE1rio informado)\n    const salarios = atendentes\n      .filter(a => a.salario && a.salario > 0)\n      .map(a => a.salario!);\n\n    const estatisticasSalario = {\n      media:\n        salarios.length > 0\n          ? Math.round(\n              salarios.reduce((sum, salario) => sum + salario, 0) /\n                salarios.length\n            )\n          : 0,\n      minimo: salarios.length > 0 ? Math.min(...salarios) : 0,\n      maximo: salarios.length > 0 ? Math.max(...salarios) : 0,\n      mediana:\n        salarios.length > 0\n          ? (() => {\n              const sorted = [...salarios].sort((a, b) => a - b);\n              const mid = Math.floor(sorted.length / 2);\n              return sorted.length % 2 !== 0\n                ? sorted[mid]\n                : Math.round((sorted[mid - 1] + sorted[mid]) / 2);\n            })()\n          : 0,\n      faixasSalariais: {\n        ate2000: salarios.filter(s => s <= 2000).length,\n        de2001a4000: salarios.filter(s => s >= 2001 && s <= 4000).length,\n        de4001a6000: salarios.filter(s => s >= 4001 && s <= 6000).length,\n        de6001a10000: salarios.filter(s => s >= 6001 && s <= 10000).length,\n        acimaDe10000: salarios.filter(s => s > 10000).length,\n      },\n    };\n\n    // Estat\xEDsticas de documentos\n    const totalDocumentos = atendentes.reduce(\n      (sum, a) => sum + a._count.documentos,\n      0\n    );\n    const atendentesSemDocumentos = atendentes.filter(\n      a => a._count.documentos === 0\n    ).length;\n    const atendentesComFoto = atendentes.filter(a => a.foto).length;\n\n    // Estat\xEDsticas de admiss\xF5es por m\xEAs (\xFAltimos 12 meses)\n    const agora = new Date();\n    const admissoesPorMes = Array.from({ length: 12 }, (_, i) => {\n      const mes = new Date(agora.getFullYear(), agora.getMonth() - i, 1);\n      const proximoMes = new Date(\n        agora.getFullYear(),\n        agora.getMonth() - i + 1,\n        1\n      );\n\n      const admissoes = atendentes.filter(\n        a => a.dataAdmissao >= mes && a.dataAdmissao < proximoMes\n      ).length;\n\n      return {\n        mes: mes.toLocaleDateString('pt-BR', {\n          month: 'short',\n          year: 'numeric',\n        }),\n        admissoes,\n      };\n    }).reverse();\n\n    return NextResponse.json({\n      estatisticasBasicas,\n      distribuicao: {\n        porSetor: estatisticasPorSetor,\n        porCargo: estatisticasPorCargo,\n        porDepartamento: estatisticasPorDepartamento,\n      },\n      demograficas: {\n        idade: estatisticasIdade,\n        tempoEmpresa: estatisticasTempoEmpresa,\n      },\n      financeiras: {\n        salario: estatisticasSalario,\n      },\n      documentacao: {\n        totalDocumentos,\n        atendentesSemDocumentos,\n        atendentesComFoto,\n        percentualComFoto:\n          totalAtendentes > 0\n            ? Math.round((atendentesComFoto / totalAtendentes) * 100)\n            : 0,\n      },\n      tendencias: {\n        admissoesPorMes,\n      },\n      resumo: {\n        percentualAtivos:\n          totalAtendentes > 0\n            ? Math.round((estatisticasBasicas.ativos / totalAtendentes) * 100)\n            : 0,\n        percentualInativos:\n          totalAtendentes > 0\n            ? Math.round((estatisticasBasicas.inativos / totalAtendentes) * 100)\n            : 0,\n        idadeMediaAnos: Math.round(estatisticasIdade.media),\n        tempoMedioEmpresaAnos: Math.round(\n          estatisticasTempoEmpresa.mediaMeses / 12\n        ),\n        salarioMedio: estatisticasSalario.media,\n      },\n      geradoEm: new Date().toISOString(),\n    });\n  } catch (error) {\n    console.error('Erro ao gerar estat\xEDsticas de atendentes:', error);\n\n    return NextResponse.json(\n      { erro: MENSAGENS_ERRO_ATENDENTES.ERRO_INTERNO },\n      { status: 500 }\n    );\n  }\n}\n"],
      names: ["GET", "request", "session", "getServerSession", "authOptions", "user", "NextResponse", "json", "erro", "status", "includes", "userType", "MENSAGENS_ERRO_ATENDENTES", "SEM_PERMISSAO", "atendentes", "totalAtendentes", "Promise", "all", "prisma", "atendente", "findMany", "include", "usuario", "select", "ativo", "_count", "documentos", "historicoAlteracoes", "count", "estatisticasBasicas", "total", "ativos", "filter", "a", "length", "inativos", "suspensos", "treinamento", "ferias", "afastados", "licencaMedica", "licencaMaternidade", "estatisticasPorSetor", "reduce", "acc", "setor", "estatisticasPorCargo", "cargo", "estatisticasPorDepartamento", "departamento", "idades", "dataNascimento", "map", "validacaoAtendentes", "calcularIdade", "estatisticasIdade", "media", "Math", "round", "sum", "idade", "minima", "min", "maxima", "max", "faixasEtarias", "ate25", "i", "de26a35", "de36a45", "de46a55", "acimaDe55", "temposEmpresa", "calcularTempoEmpresa", "dataAdmissao", "estatisticasTempoEmpresa", "mediaMeses", "tempo", "minimoMeses", "maximoMeses", "faixasTempo", "ate6Meses", "t", "de7a12Meses", "de1a2Anos", "de3a5Anos", "acimaDe5Anos", "salarios", "salario", "estatisticasSalario", "minimo", "maximo", "mediana", "sorted", "sort", "b", "mid", "floor", "faixasSalariais", "ate2000", "s", "de2001a4000", "de4001a6000", "de6001a10000", "acimaDe10000", "totalDocumentos", "atendentesSemDocumentos", "atendentesComFoto", "foto", "agora", "Date", "admissoesPorMes", "Array", "from", "_", "mes", "getFullYear", "getMonth", "proximoMes", "admissoes", "toLocaleDateString", "month", "year", "reverse", "distribuicao", "porSetor", "porCargo", "porDepartamento", "demograficas", "tempoEmpresa", "financeiras", "documentacao", "percentualComFoto", "tendencias", "resumo", "percentualAtivos", "percentualInativos", "idadeMediaAnos", "tempoMedioEmpresaAnos", "salarioMedio", "geradoEm", "toISOString", "error", "console", "ERRO_INTERNO"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4ffcd6fcc35dff5c61a6a013fbd9cab96e44feaa"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_xiktbcegh = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_xiktbcegh();
cov_xiktbcegh().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_xiktbcegh().s[1]++;
Object.defineProperty(exports, "GET", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_xiktbcegh().f[0]++;
    cov_xiktbcegh().s[2]++;
    return GET;
  }
});
const _server =
/* istanbul ignore next */
(cov_xiktbcegh().s[3]++, require("next/server"));
const _nextauth =
/* istanbul ignore next */
(cov_xiktbcegh().s[4]++, require("next-auth"));
const _auth =
/* istanbul ignore next */
(cov_xiktbcegh().s[5]++, require("../../../../lib/auth"));
const _prisma =
/* istanbul ignore next */
(cov_xiktbcegh().s[6]++, require("../../../../lib/prisma"));
const _atendentes =
/* istanbul ignore next */
(cov_xiktbcegh().s[7]++, require("../../../../lib/validations/atendentes"));
async function GET(request) {
  /* istanbul ignore next */
  cov_xiktbcegh().f[1]++;
  cov_xiktbcegh().s[8]++;
  try {
    // Verificar autenticação
    const session =
    /* istanbul ignore next */
    (cov_xiktbcegh().s[9]++, await (0, _nextauth.getServerSession)(_auth.authOptions));
    /* istanbul ignore next */
    cov_xiktbcegh().s[10]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_xiktbcegh().b[0][0]++;
      cov_xiktbcegh().s[11]++;
      return _server.NextResponse.json({
        erro: 'Não autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_xiktbcegh().b[0][1]++;
    }
    // Verificar permissões
    cov_xiktbcegh().s[12]++;
    if (!['ADMIN', 'GERENTE'].includes(session.user.userType)) {
      /* istanbul ignore next */
      cov_xiktbcegh().b[1][0]++;
      cov_xiktbcegh().s[13]++;
      return _server.NextResponse.json({
        erro: _atendentes.MENSAGENS_ERRO_ATENDENTES.SEM_PERMISSAO
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_xiktbcegh().b[1][1]++;
    }
    // Buscar dados para estatísticas
    const [atendentes, totalAtendentes] =
    /* istanbul ignore next */
    (cov_xiktbcegh().s[14]++, await Promise.all([_prisma.prisma.atendente.findMany({
      include: {
        usuario: {
          select: {
            ativo: true
          }
        },
        _count: {
          select: {
            documentos: true,
            historicoAlteracoes: true
          }
        }
      }
    }), _prisma.prisma.atendente.count()]));
    // Calcular estatísticas básicas
    const estatisticasBasicas =
    /* istanbul ignore next */
    (cov_xiktbcegh().s[15]++, {
      total: totalAtendentes,
      ativos: atendentes.filter(a => {
        /* istanbul ignore next */
        cov_xiktbcegh().f[2]++;
        cov_xiktbcegh().s[16]++;
        return /* istanbul ignore next */(cov_xiktbcegh().b[2][0]++, a.status === 'ATIVO') &&
        /* istanbul ignore next */
        (cov_xiktbcegh().b[2][1]++, a.usuario.ativo);
      }).length,
      inativos: atendentes.filter(a => {
        /* istanbul ignore next */
        cov_xiktbcegh().f[3]++;
        cov_xiktbcegh().s[17]++;
        return /* istanbul ignore next */(cov_xiktbcegh().b[3][0]++, a.status === 'INATIVO') ||
        /* istanbul ignore next */
        (cov_xiktbcegh().b[3][1]++, !a.usuario.ativo);
      }).length,
      suspensos: atendentes.filter(a => {
        /* istanbul ignore next */
        cov_xiktbcegh().f[4]++;
        cov_xiktbcegh().s[18]++;
        return a.status === 'SUSPENSO';
      }).length,
      treinamento: atendentes.filter(a => {
        /* istanbul ignore next */
        cov_xiktbcegh().f[5]++;
        cov_xiktbcegh().s[19]++;
        return a.status === 'TREINAMENTO';
      }).length,
      ferias: atendentes.filter(a => {
        /* istanbul ignore next */
        cov_xiktbcegh().f[6]++;
        cov_xiktbcegh().s[20]++;
        return a.status === 'FERIAS';
      }).length,
      afastados: atendentes.filter(a => {
        /* istanbul ignore next */
        cov_xiktbcegh().f[7]++;
        cov_xiktbcegh().s[21]++;
        return a.status === 'AFASTADO';
      }).length,
      licencaMedica: atendentes.filter(a => {
        /* istanbul ignore next */
        cov_xiktbcegh().f[8]++;
        cov_xiktbcegh().s[22]++;
        return a.status === 'LICENCA_MEDICA';
      }).length,
      licencaMaternidade: atendentes.filter(a => {
        /* istanbul ignore next */
        cov_xiktbcegh().f[9]++;
        cov_xiktbcegh().s[23]++;
        return a.status === 'LICENCA_MATERNIDADE';
      }).length
    });
    // Estatísticas por setor
    const estatisticasPorSetor =
    /* istanbul ignore next */
    (cov_xiktbcegh().s[24]++, atendentes.reduce((acc, atendente) => {
      /* istanbul ignore next */
      cov_xiktbcegh().f[10]++;
      const setor =
      /* istanbul ignore next */
      (cov_xiktbcegh().s[25]++,
      /* istanbul ignore next */
      (cov_xiktbcegh().b[4][0]++, atendente.setor) ||
      /* istanbul ignore next */
      (cov_xiktbcegh().b[4][1]++, 'Não informado'));
      /* istanbul ignore next */
      cov_xiktbcegh().s[26]++;
      if (!acc[setor]) {
        /* istanbul ignore next */
        cov_xiktbcegh().b[5][0]++;
        cov_xiktbcegh().s[27]++;
        acc[setor] = {
          total: 0,
          ativos: 0,
          inativos: 0
        };
      } else
      /* istanbul ignore next */
      {
        cov_xiktbcegh().b[5][1]++;
      }
      cov_xiktbcegh().s[28]++;
      acc[setor].total++;
      /* istanbul ignore next */
      cov_xiktbcegh().s[29]++;
      if (
      /* istanbul ignore next */
      (cov_xiktbcegh().b[7][0]++, atendente.status === 'ATIVO') &&
      /* istanbul ignore next */
      (cov_xiktbcegh().b[7][1]++, atendente.usuario.ativo)) {
        /* istanbul ignore next */
        cov_xiktbcegh().b[6][0]++;
        cov_xiktbcegh().s[30]++;
        acc[setor].ativos++;
      } else {
        /* istanbul ignore next */
        cov_xiktbcegh().b[6][1]++;
        cov_xiktbcegh().s[31]++;
        acc[setor].inativos++;
      }
      /* istanbul ignore next */
      cov_xiktbcegh().s[32]++;
      return acc;
    }, {}));
    // Estatísticas por cargo
    const estatisticasPorCargo =
    /* istanbul ignore next */
    (cov_xiktbcegh().s[33]++, atendentes.reduce((acc, atendente) => {
      /* istanbul ignore next */
      cov_xiktbcegh().f[11]++;
      const cargo =
      /* istanbul ignore next */
      (cov_xiktbcegh().s[34]++,
      /* istanbul ignore next */
      (cov_xiktbcegh().b[8][0]++, atendente.cargo) ||
      /* istanbul ignore next */
      (cov_xiktbcegh().b[8][1]++, 'Não informado'));
      /* istanbul ignore next */
      cov_xiktbcegh().s[35]++;
      if (!acc[cargo]) {
        /* istanbul ignore next */
        cov_xiktbcegh().b[9][0]++;
        cov_xiktbcegh().s[36]++;
        acc[cargo] = {
          total: 0,
          ativos: 0,
          inativos: 0
        };
      } else
      /* istanbul ignore next */
      {
        cov_xiktbcegh().b[9][1]++;
      }
      cov_xiktbcegh().s[37]++;
      acc[cargo].total++;
      /* istanbul ignore next */
      cov_xiktbcegh().s[38]++;
      if (
      /* istanbul ignore next */
      (cov_xiktbcegh().b[11][0]++, atendente.status === 'ATIVO') &&
      /* istanbul ignore next */
      (cov_xiktbcegh().b[11][1]++, atendente.usuario.ativo)) {
        /* istanbul ignore next */
        cov_xiktbcegh().b[10][0]++;
        cov_xiktbcegh().s[39]++;
        acc[cargo].ativos++;
      } else {
        /* istanbul ignore next */
        cov_xiktbcegh().b[10][1]++;
        cov_xiktbcegh().s[40]++;
        acc[cargo].inativos++;
      }
      /* istanbul ignore next */
      cov_xiktbcegh().s[41]++;
      return acc;
    }, {}));
    // Estatísticas por departamento
    const estatisticasPorDepartamento =
    /* istanbul ignore next */
    (cov_xiktbcegh().s[42]++, atendentes.reduce((acc, atendente) => {
      /* istanbul ignore next */
      cov_xiktbcegh().f[12]++;
      const departamento =
      /* istanbul ignore next */
      (cov_xiktbcegh().s[43]++,
      /* istanbul ignore next */
      (cov_xiktbcegh().b[12][0]++, atendente.departamento) ||
      /* istanbul ignore next */
      (cov_xiktbcegh().b[12][1]++, 'Não informado'));
      /* istanbul ignore next */
      cov_xiktbcegh().s[44]++;
      if (!acc[departamento]) {
        /* istanbul ignore next */
        cov_xiktbcegh().b[13][0]++;
        cov_xiktbcegh().s[45]++;
        acc[departamento] = {
          total: 0,
          ativos: 0,
          inativos: 0
        };
      } else
      /* istanbul ignore next */
      {
        cov_xiktbcegh().b[13][1]++;
      }
      cov_xiktbcegh().s[46]++;
      acc[departamento].total++;
      /* istanbul ignore next */
      cov_xiktbcegh().s[47]++;
      if (
      /* istanbul ignore next */
      (cov_xiktbcegh().b[15][0]++, atendente.status === 'ATIVO') &&
      /* istanbul ignore next */
      (cov_xiktbcegh().b[15][1]++, atendente.usuario.ativo)) {
        /* istanbul ignore next */
        cov_xiktbcegh().b[14][0]++;
        cov_xiktbcegh().s[48]++;
        acc[departamento].ativos++;
      } else {
        /* istanbul ignore next */
        cov_xiktbcegh().b[14][1]++;
        cov_xiktbcegh().s[49]++;
        acc[departamento].inativos++;
      }
      /* istanbul ignore next */
      cov_xiktbcegh().s[50]++;
      return acc;
    }, {}));
    // Estatísticas de idade
    const idades =
    /* istanbul ignore next */
    (cov_xiktbcegh().s[51]++, atendentes.filter(a => {
      /* istanbul ignore next */
      cov_xiktbcegh().f[13]++;
      cov_xiktbcegh().s[52]++;
      return a.dataNascimento;
    }).map(a => {
      /* istanbul ignore next */
      cov_xiktbcegh().f[14]++;
      cov_xiktbcegh().s[53]++;
      return _atendentes.validacaoAtendentes.calcularIdade(a.dataNascimento);
    }));
    const estatisticasIdade =
    /* istanbul ignore next */
    (cov_xiktbcegh().s[54]++, {
      media: idades.length > 0 ?
      /* istanbul ignore next */
      (cov_xiktbcegh().b[16][0]++, Math.round(idades.reduce((sum, idade) => {
        /* istanbul ignore next */
        cov_xiktbcegh().f[15]++;
        cov_xiktbcegh().s[55]++;
        return sum + idade;
      }, 0) / idades.length)) :
      /* istanbul ignore next */
      (cov_xiktbcegh().b[16][1]++, 0),
      minima: idades.length > 0 ?
      /* istanbul ignore next */
      (cov_xiktbcegh().b[17][0]++, Math.min(...idades)) :
      /* istanbul ignore next */
      (cov_xiktbcegh().b[17][1]++, 0),
      maxima: idades.length > 0 ?
      /* istanbul ignore next */
      (cov_xiktbcegh().b[18][0]++, Math.max(...idades)) :
      /* istanbul ignore next */
      (cov_xiktbcegh().b[18][1]++, 0),
      faixasEtarias: {
        ate25: idades.filter(i => {
          /* istanbul ignore next */
          cov_xiktbcegh().f[16]++;
          cov_xiktbcegh().s[56]++;
          return i <= 25;
        }).length,
        de26a35: idades.filter(i => {
          /* istanbul ignore next */
          cov_xiktbcegh().f[17]++;
          cov_xiktbcegh().s[57]++;
          return /* istanbul ignore next */(cov_xiktbcegh().b[19][0]++, i >= 26) &&
          /* istanbul ignore next */
          (cov_xiktbcegh().b[19][1]++, i <= 35);
        }).length,
        de36a45: idades.filter(i => {
          /* istanbul ignore next */
          cov_xiktbcegh().f[18]++;
          cov_xiktbcegh().s[58]++;
          return /* istanbul ignore next */(cov_xiktbcegh().b[20][0]++, i >= 36) &&
          /* istanbul ignore next */
          (cov_xiktbcegh().b[20][1]++, i <= 45);
        }).length,
        de46a55: idades.filter(i => {
          /* istanbul ignore next */
          cov_xiktbcegh().f[19]++;
          cov_xiktbcegh().s[59]++;
          return /* istanbul ignore next */(cov_xiktbcegh().b[21][0]++, i >= 46) &&
          /* istanbul ignore next */
          (cov_xiktbcegh().b[21][1]++, i <= 55);
        }).length,
        acimaDe55: idades.filter(i => {
          /* istanbul ignore next */
          cov_xiktbcegh().f[20]++;
          cov_xiktbcegh().s[60]++;
          return i > 55;
        }).length
      }
    });
    // Estatísticas de tempo de empresa
    const temposEmpresa =
    /* istanbul ignore next */
    (cov_xiktbcegh().s[61]++, atendentes.map(a => {
      /* istanbul ignore next */
      cov_xiktbcegh().f[21]++;
      cov_xiktbcegh().s[62]++;
      return _atendentes.validacaoAtendentes.calcularTempoEmpresa(a.dataAdmissao);
    }));
    const estatisticasTempoEmpresa =
    /* istanbul ignore next */
    (cov_xiktbcegh().s[63]++, {
      mediaMeses: temposEmpresa.length > 0 ?
      /* istanbul ignore next */
      (cov_xiktbcegh().b[22][0]++, Math.round(temposEmpresa.reduce((sum, tempo) => {
        /* istanbul ignore next */
        cov_xiktbcegh().f[22]++;
        cov_xiktbcegh().s[64]++;
        return sum + tempo;
      }, 0) / temposEmpresa.length)) :
      /* istanbul ignore next */
      (cov_xiktbcegh().b[22][1]++, 0),
      minimoMeses: temposEmpresa.length > 0 ?
      /* istanbul ignore next */
      (cov_xiktbcegh().b[23][0]++, Math.min(...temposEmpresa)) :
      /* istanbul ignore next */
      (cov_xiktbcegh().b[23][1]++, 0),
      maximoMeses: temposEmpresa.length > 0 ?
      /* istanbul ignore next */
      (cov_xiktbcegh().b[24][0]++, Math.max(...temposEmpresa)) :
      /* istanbul ignore next */
      (cov_xiktbcegh().b[24][1]++, 0),
      faixasTempo: {
        ate6Meses: temposEmpresa.filter(t => {
          /* istanbul ignore next */
          cov_xiktbcegh().f[23]++;
          cov_xiktbcegh().s[65]++;
          return t <= 6;
        }).length,
        de7a12Meses: temposEmpresa.filter(t => {
          /* istanbul ignore next */
          cov_xiktbcegh().f[24]++;
          cov_xiktbcegh().s[66]++;
          return /* istanbul ignore next */(cov_xiktbcegh().b[25][0]++, t >= 7) &&
          /* istanbul ignore next */
          (cov_xiktbcegh().b[25][1]++, t <= 12);
        }).length,
        de1a2Anos: temposEmpresa.filter(t => {
          /* istanbul ignore next */
          cov_xiktbcegh().f[25]++;
          cov_xiktbcegh().s[67]++;
          return /* istanbul ignore next */(cov_xiktbcegh().b[26][0]++, t >= 13) &&
          /* istanbul ignore next */
          (cov_xiktbcegh().b[26][1]++, t <= 24);
        }).length,
        de3a5Anos: temposEmpresa.filter(t => {
          /* istanbul ignore next */
          cov_xiktbcegh().f[26]++;
          cov_xiktbcegh().s[68]++;
          return /* istanbul ignore next */(cov_xiktbcegh().b[27][0]++, t >= 25) &&
          /* istanbul ignore next */
          (cov_xiktbcegh().b[27][1]++, t <= 60);
        }).length,
        acimaDe5Anos: temposEmpresa.filter(t => {
          /* istanbul ignore next */
          cov_xiktbcegh().f[27]++;
          cov_xiktbcegh().s[69]++;
          return t > 60;
        }).length
      }
    });
    // Estatísticas de salário (apenas para atendentes com salário informado)
    const salarios =
    /* istanbul ignore next */
    (cov_xiktbcegh().s[70]++, atendentes.filter(a => {
      /* istanbul ignore next */
      cov_xiktbcegh().f[28]++;
      cov_xiktbcegh().s[71]++;
      return /* istanbul ignore next */(cov_xiktbcegh().b[28][0]++, a.salario) &&
      /* istanbul ignore next */
      (cov_xiktbcegh().b[28][1]++, a.salario > 0);
    }).map(a => {
      /* istanbul ignore next */
      cov_xiktbcegh().f[29]++;
      cov_xiktbcegh().s[72]++;
      return a.salario;
    }));
    const estatisticasSalario =
    /* istanbul ignore next */
    (cov_xiktbcegh().s[73]++, {
      media: salarios.length > 0 ?
      /* istanbul ignore next */
      (cov_xiktbcegh().b[29][0]++, Math.round(salarios.reduce((sum, salario) => {
        /* istanbul ignore next */
        cov_xiktbcegh().f[30]++;
        cov_xiktbcegh().s[74]++;
        return sum + salario;
      }, 0) / salarios.length)) :
      /* istanbul ignore next */
      (cov_xiktbcegh().b[29][1]++, 0),
      minimo: salarios.length > 0 ?
      /* istanbul ignore next */
      (cov_xiktbcegh().b[30][0]++, Math.min(...salarios)) :
      /* istanbul ignore next */
      (cov_xiktbcegh().b[30][1]++, 0),
      maximo: salarios.length > 0 ?
      /* istanbul ignore next */
      (cov_xiktbcegh().b[31][0]++, Math.max(...salarios)) :
      /* istanbul ignore next */
      (cov_xiktbcegh().b[31][1]++, 0),
      mediana: salarios.length > 0 ?
      /* istanbul ignore next */
      (cov_xiktbcegh().b[32][0]++, (() => {
        /* istanbul ignore next */
        cov_xiktbcegh().f[31]++;
        const sorted =
        /* istanbul ignore next */
        (cov_xiktbcegh().s[75]++, [...salarios].sort((a, b) => {
          /* istanbul ignore next */
          cov_xiktbcegh().f[32]++;
          cov_xiktbcegh().s[76]++;
          return a - b;
        }));
        const mid =
        /* istanbul ignore next */
        (cov_xiktbcegh().s[77]++, Math.floor(sorted.length / 2));
        /* istanbul ignore next */
        cov_xiktbcegh().s[78]++;
        return sorted.length % 2 !== 0 ?
        /* istanbul ignore next */
        (cov_xiktbcegh().b[33][0]++, sorted[mid]) :
        /* istanbul ignore next */
        (cov_xiktbcegh().b[33][1]++, Math.round((sorted[mid - 1] + sorted[mid]) / 2));
      })()) :
      /* istanbul ignore next */
      (cov_xiktbcegh().b[32][1]++, 0),
      faixasSalariais: {
        ate2000: salarios.filter(s => {
          /* istanbul ignore next */
          cov_xiktbcegh().f[33]++;
          cov_xiktbcegh().s[79]++;
          return s <= 2000;
        }).length,
        de2001a4000: salarios.filter(s => {
          /* istanbul ignore next */
          cov_xiktbcegh().f[34]++;
          cov_xiktbcegh().s[80]++;
          return /* istanbul ignore next */(cov_xiktbcegh().b[34][0]++, s >= 2001) &&
          /* istanbul ignore next */
          (cov_xiktbcegh().b[34][1]++, s <= 4000);
        }).length,
        de4001a6000: salarios.filter(s => {
          /* istanbul ignore next */
          cov_xiktbcegh().f[35]++;
          cov_xiktbcegh().s[81]++;
          return /* istanbul ignore next */(cov_xiktbcegh().b[35][0]++, s >= 4001) &&
          /* istanbul ignore next */
          (cov_xiktbcegh().b[35][1]++, s <= 6000);
        }).length,
        de6001a10000: salarios.filter(s => {
          /* istanbul ignore next */
          cov_xiktbcegh().f[36]++;
          cov_xiktbcegh().s[82]++;
          return /* istanbul ignore next */(cov_xiktbcegh().b[36][0]++, s >= 6001) &&
          /* istanbul ignore next */
          (cov_xiktbcegh().b[36][1]++, s <= 10000);
        }).length,
        acimaDe10000: salarios.filter(s => {
          /* istanbul ignore next */
          cov_xiktbcegh().f[37]++;
          cov_xiktbcegh().s[83]++;
          return s > 10000;
        }).length
      }
    });
    // Estatísticas de documentos
    const totalDocumentos =
    /* istanbul ignore next */
    (cov_xiktbcegh().s[84]++, atendentes.reduce((sum, a) => {
      /* istanbul ignore next */
      cov_xiktbcegh().f[38]++;
      cov_xiktbcegh().s[85]++;
      return sum + a._count.documentos;
    }, 0));
    const atendentesSemDocumentos =
    /* istanbul ignore next */
    (cov_xiktbcegh().s[86]++, atendentes.filter(a => {
      /* istanbul ignore next */
      cov_xiktbcegh().f[39]++;
      cov_xiktbcegh().s[87]++;
      return a._count.documentos === 0;
    }).length);
    const atendentesComFoto =
    /* istanbul ignore next */
    (cov_xiktbcegh().s[88]++, atendentes.filter(a => {
      /* istanbul ignore next */
      cov_xiktbcegh().f[40]++;
      cov_xiktbcegh().s[89]++;
      return a.foto;
    }).length);
    // Estatísticas de admissões por mês (últimos 12 meses)
    const agora =
    /* istanbul ignore next */
    (cov_xiktbcegh().s[90]++, new Date());
    const admissoesPorMes =
    /* istanbul ignore next */
    (cov_xiktbcegh().s[91]++, Array.from({
      length: 12
    }, (_, i) => {
      /* istanbul ignore next */
      cov_xiktbcegh().f[41]++;
      const mes =
      /* istanbul ignore next */
      (cov_xiktbcegh().s[92]++, new Date(agora.getFullYear(), agora.getMonth() - i, 1));
      const proximoMes =
      /* istanbul ignore next */
      (cov_xiktbcegh().s[93]++, new Date(agora.getFullYear(), agora.getMonth() - i + 1, 1));
      const admissoes =
      /* istanbul ignore next */
      (cov_xiktbcegh().s[94]++, atendentes.filter(a => {
        /* istanbul ignore next */
        cov_xiktbcegh().f[42]++;
        cov_xiktbcegh().s[95]++;
        return /* istanbul ignore next */(cov_xiktbcegh().b[37][0]++, a.dataAdmissao >= mes) &&
        /* istanbul ignore next */
        (cov_xiktbcegh().b[37][1]++, a.dataAdmissao < proximoMes);
      }).length);
      /* istanbul ignore next */
      cov_xiktbcegh().s[96]++;
      return {
        mes: mes.toLocaleDateString('pt-BR', {
          month: 'short',
          year: 'numeric'
        }),
        admissoes
      };
    }).reverse());
    /* istanbul ignore next */
    cov_xiktbcegh().s[97]++;
    return _server.NextResponse.json({
      estatisticasBasicas,
      distribuicao: {
        porSetor: estatisticasPorSetor,
        porCargo: estatisticasPorCargo,
        porDepartamento: estatisticasPorDepartamento
      },
      demograficas: {
        idade: estatisticasIdade,
        tempoEmpresa: estatisticasTempoEmpresa
      },
      financeiras: {
        salario: estatisticasSalario
      },
      documentacao: {
        totalDocumentos,
        atendentesSemDocumentos,
        atendentesComFoto,
        percentualComFoto: totalAtendentes > 0 ?
        /* istanbul ignore next */
        (cov_xiktbcegh().b[38][0]++, Math.round(atendentesComFoto / totalAtendentes * 100)) :
        /* istanbul ignore next */
        (cov_xiktbcegh().b[38][1]++, 0)
      },
      tendencias: {
        admissoesPorMes
      },
      resumo: {
        percentualAtivos: totalAtendentes > 0 ?
        /* istanbul ignore next */
        (cov_xiktbcegh().b[39][0]++, Math.round(estatisticasBasicas.ativos / totalAtendentes * 100)) :
        /* istanbul ignore next */
        (cov_xiktbcegh().b[39][1]++, 0),
        percentualInativos: totalAtendentes > 0 ?
        /* istanbul ignore next */
        (cov_xiktbcegh().b[40][0]++, Math.round(estatisticasBasicas.inativos / totalAtendentes * 100)) :
        /* istanbul ignore next */
        (cov_xiktbcegh().b[40][1]++, 0),
        idadeMediaAnos: Math.round(estatisticasIdade.media),
        tempoMedioEmpresaAnos: Math.round(estatisticasTempoEmpresa.mediaMeses / 12),
        salarioMedio: estatisticasSalario.media
      },
      geradoEm: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_xiktbcegh().s[98]++;
    console.error('Erro ao gerar estatísticas de atendentes:', error);
    /* istanbul ignore next */
    cov_xiktbcegh().s[99]++;
    return _server.NextResponse.json({
      erro: _atendentes.MENSAGENS_ERRO_ATENDENTES.ERRO_INTERNO
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,