047a8e89e880d90047f6b98a40b9b86e
"use strict";

/* istanbul ignore next */
function cov_2k3nryz9fp() {
  var path = "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\hooks\\use-preferencias-notificacao.ts";
  var hash = "220cc10190fe5126d5bfc184a72e8bb6b6848fdc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\hooks\\use-preferencias-notificacao.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 42
        }
      },
      "3": {
        start: {
          line: 11,
          column: 15
        },
        end: {
          line: 11,
          column: 31
        }
      },
      "4": {
        start: {
          line: 12,
          column: 18
        },
        end: {
          line: 12,
          column: 40
        }
      },
      "5": {
        start: {
          line: 14,
          column: 44
        },
        end: {
          line: 14,
          column: 70
        }
      },
      "6": {
        start: {
          line: 15,
          column: 40
        },
        end: {
          line: 15,
          column: 67
        }
      },
      "7": {
        start: {
          line: 16,
          column: 28
        },
        end: {
          line: 16,
          column: 54
        }
      },
      "8": {
        start: {
          line: 17,
          column: 22
        },
        end: {
          line: 17,
          column: 47
        }
      },
      "9": {
        start: {
          line: 20,
          column: 33
        },
        end: {
          line: 43,
          column: 6
        }
      },
      "10": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 28
        }
      },
      "11": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 22
        }
      },
      "12": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 40,
          column: 9
        }
      },
      "13": {
        start: {
          line: 24,
          column: 29
        },
        end: {
          line: 24,
          column: 73
        }
      },
      "14": {
        start: {
          line: 25,
          column: 25
        },
        end: {
          line: 25,
          column: 46
        }
      },
      "15": {
        start: {
          line: 26,
          column: 12
        },
        end: {
          line: 28,
          column: 13
        }
      },
      "16": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 77
        }
      },
      "17": {
        start: {
          line: 29,
          column: 12
        },
        end: {
          line: 29,
          column: 39
        }
      },
      "18": {
        start: {
          line: 31,
          column: 29
        },
        end: {
          line: 31,
          column: 89
        }
      },
      "19": {
        start: {
          line: 32,
          column: 12
        },
        end: {
          line: 32,
          column: 30
        }
      },
      "20": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 37,
          column: 15
        }
      },
      "21": {
        start: {
          line: 39,
          column: 12
        },
        end: {
          line: 39,
          column: 33
        }
      },
      "22": {
        start: {
          line: 46,
          column: 36
        },
        end: {
          line: 81,
          column: 6
        }
      },
      "23": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 47,
          column: 28
        }
      },
      "24": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 22
        }
      },
      "25": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "26": {
        start: {
          line: 50,
          column: 29
        },
        end: {
          line: 56,
          column: 14
        }
      },
      "27": {
        start: {
          line: 57,
          column: 25
        },
        end: {
          line: 57,
          column: 46
        }
      },
      "28": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 60,
          column: 13
        }
      },
      "29": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 59,
          column: 80
        }
      },
      "30": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 39
        }
      },
      "31": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 65,
          column: 15
        }
      },
      "32": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 24
        }
      },
      "33": {
        start: {
          line: 68,
          column: 29
        },
        end: {
          line: 68,
          column: 89
        }
      },
      "34": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 30
        }
      },
      "35": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 74,
          column: 15
        }
      },
      "36": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 25
        }
      },
      "37": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 33
        }
      },
      "38": {
        start: {
          line: 84,
          column: 34
        },
        end: {
          line: 115,
          column: 6
        }
      },
      "39": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 28
        }
      },
      "40": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 22
        }
      },
      "41": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 112,
          column: 9
        }
      },
      "42": {
        start: {
          line: 88,
          column: 29
        },
        end: {
          line: 90,
          column: 14
        }
      },
      "43": {
        start: {
          line: 91,
          column: 25
        },
        end: {
          line: 91,
          column: 46
        }
      },
      "44": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 94,
          column: 13
        }
      },
      "45": {
        start: {
          line: 93,
          column: 16
        },
        end: {
          line: 93,
          column: 78
        }
      },
      "46": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 39
        }
      },
      "47": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 99,
          column: 15
        }
      },
      "48": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 24
        }
      },
      "49": {
        start: {
          line: 102,
          column: 29
        },
        end: {
          line: 102,
          column: 89
        }
      },
      "50": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 30
        }
      },
      "51": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 108,
          column: 15
        }
      },
      "52": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 25
        }
      },
      "53": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 33
        }
      },
      "54": {
        start: {
          line: 118,
          column: 33
        },
        end: {
          line: 162,
          column: 6
        }
      },
      "55": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 119,
          column: 28
        }
      },
      "56": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 120,
          column: 22
        }
      },
      "57": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 159,
          column: 9
        }
      },
      "58": {
        start: {
          line: 122,
          column: 25
        },
        end: {
          line: 124,
          column: 13
        }
      },
      "59": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 127,
          column: 13
        }
      },
      "60": {
        start: {
          line: 126,
          column: 16
        },
        end: {
          line: 126,
          column: 59
        }
      },
      "61": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 130,
          column: 13
        }
      },
      "62": {
        start: {
          line: 129,
          column: 16
        },
        end: {
          line: 129,
          column: 37
        }
      },
      "63": {
        start: {
          line: 131,
          column: 29
        },
        end: {
          line: 137,
          column: 14
        }
      },
      "64": {
        start: {
          line: 138,
          column: 25
        },
        end: {
          line: 138,
          column: 46
        }
      },
      "65": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 141,
          column: 13
        }
      },
      "66": {
        start: {
          line: 140,
          column: 16
        },
        end: {
          line: 140,
          column: 77
        }
      },
      "67": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 142,
          column: 39
        }
      },
      "68": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 146,
          column: 15
        }
      },
      "69": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 147,
          column: 24
        }
      },
      "70": {
        start: {
          line: 149,
          column: 29
        },
        end: {
          line: 149,
          column: 89
        }
      },
      "71": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 150,
          column: 30
        }
      },
      "72": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 155,
          column: 15
        }
      },
      "73": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 156,
          column: 25
        }
      },
      "74": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 158,
          column: 33
        }
      },
      "75": {
        start: {
          line: 165,
          column: 34
        },
        end: {
          line: 196,
          column: 6
        }
      },
      "76": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 166,
          column: 28
        }
      },
      "77": {
        start: {
          line: 167,
          column: 8
        },
        end: {
          line: 167,
          column: 22
        }
      },
      "78": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 193,
          column: 9
        }
      },
      "79": {
        start: {
          line: 169,
          column: 29
        },
        end: {
          line: 171,
          column: 14
        }
      },
      "80": {
        start: {
          line: 172,
          column: 25
        },
        end: {
          line: 172,
          column: 46
        }
      },
      "81": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 175,
          column: 13
        }
      },
      "82": {
        start: {
          line: 174,
          column: 16
        },
        end: {
          line: 174,
          column: 78
        }
      },
      "83": {
        start: {
          line: 176,
          column: 12
        },
        end: {
          line: 176,
          column: 39
        }
      },
      "84": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 180,
          column: 15
        }
      },
      "85": {
        start: {
          line: 181,
          column: 12
        },
        end: {
          line: 181,
          column: 24
        }
      },
      "86": {
        start: {
          line: 183,
          column: 29
        },
        end: {
          line: 183,
          column: 89
        }
      },
      "87": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 30
        }
      },
      "88": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 189,
          column: 15
        }
      },
      "89": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 190,
          column: 25
        }
      },
      "90": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 192,
          column: 33
        }
      },
      "91": {
        start: {
          line: 199,
          column: 44
        },
        end: {
          line: 211,
          column: 10
        }
      },
      "92": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 210,
          column: 9
        }
      },
      "93": {
        start: {
          line: 201,
          column: 29
        },
        end: {
          line: 201,
          column: 80
        }
      },
      "94": {
        start: {
          line: 202,
          column: 25
        },
        end: {
          line: 202,
          column: 46
        }
      },
      "95": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 205,
          column: 13
        }
      },
      "96": {
        start: {
          line: 204,
          column: 16
        },
        end: {
          line: 204,
          column: 74
        }
      },
      "97": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 206,
          column: 38
        }
      },
      "98": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 208,
          column: 77
        }
      },
      "99": {
        start: {
          line: 209,
          column: 12
        },
        end: {
          line: 209,
          column: 25
        }
      },
      "100": {
        start: {
          line: 213,
          column: 4
        },
        end: {
          line: 217,
          column: 7
        }
      },
      "101": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 214,
          column: 29
        }
      },
      "102": {
        start: {
          line: 218,
          column: 4
        },
        end: {
          line: 230,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "usePreferenciasNotificacao",
        decl: {
          start: {
            line: 13,
            column: 9
          },
          end: {
            line: 13,
            column: 35
          }
        },
        loc: {
          start: {
            line: 13,
            column: 38
          },
          end: {
            line: 231,
            column: 1
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 57
          },
          end: {
            line: 20,
            column: 58
          }
        },
        loc: {
          start: {
            line: 20,
            column: 67
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 46,
            column: 60
          },
          end: {
            line: 46,
            column: 61
          }
        },
        loc: {
          start: {
            line: 46,
            column: 75
          },
          end: {
            line: 79,
            column: 5
          }
        },
        line: 46
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 84,
            column: 58
          },
          end: {
            line: 84,
            column: 59
          }
        },
        loc: {
          start: {
            line: 84,
            column: 68
          },
          end: {
            line: 113,
            column: 5
          }
        },
        line: 84
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 118,
            column: 57
          },
          end: {
            line: 118,
            column: 58
          }
        },
        loc: {
          start: {
            line: 118,
            column: 94
          },
          end: {
            line: 160,
            column: 5
          }
        },
        line: 118
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 165,
            column: 58
          },
          end: {
            line: 165,
            column: 59
          }
        },
        loc: {
          start: {
            line: 165,
            column: 68
          },
          end: {
            line: 194,
            column: 5
          }
        },
        line: 165
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 199,
            column: 68
          },
          end: {
            line: 199,
            column: 69
          }
        },
        loc: {
          start: {
            line: 199,
            column: 78
          },
          end: {
            line: 211,
            column: 5
          }
        },
        line: 199
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 213,
            column: 26
          },
          end: {
            line: 213,
            column: 27
          }
        },
        loc: {
          start: {
            line: 213,
            column: 30
          },
          end: {
            line: 215,
            column: 5
          }
        },
        line: 213
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 26,
            column: 12
          },
          end: {
            line: 28,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 12
          },
          end: {
            line: 28,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "1": {
        loc: {
          start: {
            line: 27,
            column: 32
          },
          end: {
            line: 27,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 27,
            column: 32
          },
          end: {
            line: 27,
            column: 42
          }
        }, {
          start: {
            line: 27,
            column: 46
          },
          end: {
            line: 27,
            column: 75
          }
        }],
        line: 27
      },
      "2": {
        loc: {
          start: {
            line: 31,
            column: 29
          },
          end: {
            line: 31,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 31,
            column: 54
          },
          end: {
            line: 31,
            column: 67
          }
        }, {
          start: {
            line: 31,
            column: 70
          },
          end: {
            line: 31,
            column: 89
          }
        }],
        line: 31
      },
      "3": {
        loc: {
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 60,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 60,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "4": {
        loc: {
          start: {
            line: 59,
            column: 32
          },
          end: {
            line: 59,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 32
          },
          end: {
            line: 59,
            column: 42
          }
        }, {
          start: {
            line: 59,
            column: 46
          },
          end: {
            line: 59,
            column: 78
          }
        }],
        line: 59
      },
      "5": {
        loc: {
          start: {
            line: 64,
            column: 29
          },
          end: {
            line: 64,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 29
          },
          end: {
            line: 64,
            column: 41
          }
        }, {
          start: {
            line: 64,
            column: 45
          },
          end: {
            line: 64,
            column: 83
          }
        }],
        line: 64
      },
      "6": {
        loc: {
          start: {
            line: 68,
            column: 29
          },
          end: {
            line: 68,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 68,
            column: 54
          },
          end: {
            line: 68,
            column: 67
          }
        }, {
          start: {
            line: 68,
            column: 70
          },
          end: {
            line: 68,
            column: 89
          }
        }],
        line: 68
      },
      "7": {
        loc: {
          start: {
            line: 92,
            column: 12
          },
          end: {
            line: 94,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 12
          },
          end: {
            line: 94,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "8": {
        loc: {
          start: {
            line: 93,
            column: 32
          },
          end: {
            line: 93,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 32
          },
          end: {
            line: 93,
            column: 42
          }
        }, {
          start: {
            line: 93,
            column: 46
          },
          end: {
            line: 93,
            column: 76
          }
        }],
        line: 93
      },
      "9": {
        loc: {
          start: {
            line: 98,
            column: 29
          },
          end: {
            line: 98,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 98,
            column: 29
          },
          end: {
            line: 98,
            column: 41
          }
        }, {
          start: {
            line: 98,
            column: 45
          },
          end: {
            line: 98,
            column: 81
          }
        }],
        line: 98
      },
      "10": {
        loc: {
          start: {
            line: 102,
            column: 29
          },
          end: {
            line: 102,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 102,
            column: 54
          },
          end: {
            line: 102,
            column: 67
          }
        }, {
          start: {
            line: 102,
            column: 70
          },
          end: {
            line: 102,
            column: 89
          }
        }],
        line: 102
      },
      "11": {
        loc: {
          start: {
            line: 125,
            column: 12
          },
          end: {
            line: 127,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 12
          },
          end: {
            line: 127,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "12": {
        loc: {
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 130,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 130,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 128
      },
      "13": {
        loc: {
          start: {
            line: 139,
            column: 12
          },
          end: {
            line: 141,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 12
          },
          end: {
            line: 141,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "14": {
        loc: {
          start: {
            line: 140,
            column: 32
          },
          end: {
            line: 140,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 140,
            column: 32
          },
          end: {
            line: 140,
            column: 42
          }
        }, {
          start: {
            line: 140,
            column: 46
          },
          end: {
            line: 140,
            column: 75
          }
        }],
        line: 140
      },
      "15": {
        loc: {
          start: {
            line: 145,
            column: 29
          },
          end: {
            line: 145,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 145,
            column: 29
          },
          end: {
            line: 145,
            column: 41
          }
        }, {
          start: {
            line: 145,
            column: 45
          },
          end: {
            line: 145,
            column: 80
          }
        }],
        line: 145
      },
      "16": {
        loc: {
          start: {
            line: 149,
            column: 29
          },
          end: {
            line: 149,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 149,
            column: 54
          },
          end: {
            line: 149,
            column: 67
          }
        }, {
          start: {
            line: 149,
            column: 70
          },
          end: {
            line: 149,
            column: 89
          }
        }],
        line: 149
      },
      "17": {
        loc: {
          start: {
            line: 173,
            column: 12
          },
          end: {
            line: 175,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 12
          },
          end: {
            line: 175,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 173
      },
      "18": {
        loc: {
          start: {
            line: 174,
            column: 32
          },
          end: {
            line: 174,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 174,
            column: 32
          },
          end: {
            line: 174,
            column: 42
          }
        }, {
          start: {
            line: 174,
            column: 46
          },
          end: {
            line: 174,
            column: 76
          }
        }],
        line: 174
      },
      "19": {
        loc: {
          start: {
            line: 179,
            column: 29
          },
          end: {
            line: 179,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 179,
            column: 29
          },
          end: {
            line: 179,
            column: 41
          }
        }, {
          start: {
            line: 179,
            column: 45
          },
          end: {
            line: 179,
            column: 81
          }
        }],
        line: 179
      },
      "20": {
        loc: {
          start: {
            line: 183,
            column: 29
          },
          end: {
            line: 183,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 183,
            column: 54
          },
          end: {
            line: 183,
            column: 67
          }
        }, {
          start: {
            line: 183,
            column: 70
          },
          end: {
            line: 183,
            column: 89
          }
        }],
        line: 183
      },
      "21": {
        loc: {
          start: {
            line: 203,
            column: 12
          },
          end: {
            line: 205,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 12
          },
          end: {
            line: 205,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 203
      },
      "22": {
        loc: {
          start: {
            line: 204,
            column: 32
          },
          end: {
            line: 204,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 204,
            column: 32
          },
          end: {
            line: 204,
            column: 42
          }
        }, {
          start: {
            line: 204,
            column: 46
          },
          end: {
            line: 204,
            column: 72
          }
        }],
        line: 204
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\hooks\\use-preferencias-notificacao.ts"],
      sourcesContent: ["import { useState, useEffect, useCallback } from 'react';\nimport { useToast } from '@/hooks/use-toast';\nimport { \n  PreferenciasNotificacao, \n  PreferenciasNotificacaoInput \n} from '@/lib/types/preferencias-notificacao';\n\ninterface UsePreferenciasNotificacaoReturn {\n  // Estado\n  preferencias: PreferenciasNotificacao | null;\n  carregando: boolean;\n  erro: string | null;\n  \n  // A\xE7\xF5es\n  buscarPreferencias: () => Promise<void>;\n  atualizarPreferencias: (dados: PreferenciasNotificacaoInput) => Promise<boolean>;\n  resetarPreferencias: () => Promise<boolean>;\n  pausarNotificacoes: (dataFim: Date, dataInicio?: Date, motivo?: string) => Promise<boolean>;\n  retomarNotificacoes: () => Promise<boolean>;\n  verificarNotificacoesPausadas: () => Promise<boolean>;\n}\n\nexport function usePreferenciasNotificacao(): UsePreferenciasNotificacaoReturn {\n  const [preferencias, setPreferencias] = useState<PreferenciasNotificacao | null>(null);\n  const [carregando, setCarregando] = useState(false);\n  const [erro, setErro] = useState<string | null>(null);\n  const { toast } = useToast();\n\n  /**\n   * Busca as prefer\xEAncias do usu\xE1rio\n   */\n  const buscarPreferencias = useCallback(async () => {\n    setCarregando(true);\n    setErro(null);\n\n    try {\n      const response = await fetch('/api/preferencias-notificacao');\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.error || 'Erro ao buscar prefer\xEAncias');\n      }\n\n      setPreferencias(data.data);\n    } catch (error) {\n      const mensagem = error instanceof Error ? error.message : 'Erro desconhecido';\n      setErro(mensagem);\n      toast({\n        title: 'Erro',\n        description: `Falha ao carregar prefer\xEAncias: ${mensagem}`,\n        variant: 'destructive',\n      });\n    } finally {\n      setCarregando(false);\n    }\n  }, [toast]);\n\n  /**\n   * Atualiza as prefer\xEAncias do usu\xE1rio\n   */\n  const atualizarPreferencias = useCallback(async (\n    dados: PreferenciasNotificacaoInput\n  ): Promise<boolean> => {\n    setCarregando(true);\n    setErro(null);\n\n    try {\n      const response = await fetch('/api/preferencias-notificacao', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(dados),\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.error || 'Erro ao atualizar prefer\xEAncias');\n      }\n\n      setPreferencias(data.data);\n      toast({\n        title: 'Sucesso',\n        description: data.message || 'Prefer\xEAncias atualizadas com sucesso',\n      });\n\n      return true;\n    } catch (error) {\n      const mensagem = error instanceof Error ? error.message : 'Erro desconhecido';\n      setErro(mensagem);\n      toast({\n        title: 'Erro',\n        description: `Falha ao atualizar prefer\xEAncias: ${mensagem}`,\n        variant: 'destructive',\n      });\n      return false;\n    } finally {\n      setCarregando(false);\n    }\n  }, [toast]);\n\n  /**\n   * Reseta as prefer\xEAncias para os valores padr\xE3o\n   */\n  const resetarPreferencias = useCallback(async (): Promise<boolean> => {\n    setCarregando(true);\n    setErro(null);\n\n    try {\n      const response = await fetch('/api/preferencias-notificacao', {\n        method: 'DELETE',\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.error || 'Erro ao resetar prefer\xEAncias');\n      }\n\n      setPreferencias(data.data);\n      toast({\n        title: 'Sucesso',\n        description: data.message || 'Prefer\xEAncias resetadas com sucesso',\n      });\n\n      return true;\n    } catch (error) {\n      const mensagem = error instanceof Error ? error.message : 'Erro desconhecido';\n      setErro(mensagem);\n      toast({\n        title: 'Erro',\n        description: `Falha ao resetar prefer\xEAncias: ${mensagem}`,\n        variant: 'destructive',\n      });\n      return false;\n    } finally {\n      setCarregando(false);\n    }\n  }, [toast]);\n\n  /**\n   * Pausa as notifica\xE7\xF5es por um per\xEDodo\n   */\n  const pausarNotificacoes = useCallback(async (\n    dataFim: Date,\n    dataInicio?: Date,\n    motivo?: string\n  ): Promise<boolean> => {\n    setCarregando(true);\n    setErro(null);\n\n    try {\n      const body: any = {\n        dataFim: dataFim.toISOString(),\n      };\n\n      if (dataInicio) {\n        body.dataInicio = dataInicio.toISOString();\n      }\n\n      if (motivo) {\n        body.motivo = motivo;\n      }\n\n      const response = await fetch('/api/preferencias-notificacao/pausar', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(body),\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.error || 'Erro ao pausar notifica\xE7\xF5es');\n      }\n\n      setPreferencias(data.data);\n      toast({\n        title: 'Sucesso',\n        description: data.message || 'Notifica\xE7\xF5es pausadas com sucesso',\n      });\n\n      return true;\n    } catch (error) {\n      const mensagem = error instanceof Error ? error.message : 'Erro desconhecido';\n      setErro(mensagem);\n      toast({\n        title: 'Erro',\n        description: `Falha ao pausar notifica\xE7\xF5es: ${mensagem}`,\n        variant: 'destructive',\n      });\n      return false;\n    } finally {\n      setCarregando(false);\n    }\n  }, [toast]);\n\n  /**\n   * Retoma as notifica\xE7\xF5es (remove pausa)\n   */\n  const retomarNotificacoes = useCallback(async (): Promise<boolean> => {\n    setCarregando(true);\n    setErro(null);\n\n    try {\n      const response = await fetch('/api/preferencias-notificacao/pausar', {\n        method: 'DELETE',\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.error || 'Erro ao retomar notifica\xE7\xF5es');\n      }\n\n      setPreferencias(data.data);\n      toast({\n        title: 'Sucesso',\n        description: data.message || 'Notifica\xE7\xF5es retomadas com sucesso',\n      });\n\n      return true;\n    } catch (error) {\n      const mensagem = error instanceof Error ? error.message : 'Erro desconhecido';\n      setErro(mensagem);\n      toast({\n        title: 'Erro',\n        description: `Falha ao retomar notifica\xE7\xF5es: ${mensagem}`,\n        variant: 'destructive',\n      });\n      return false;\n    } finally {\n      setCarregando(false);\n    }\n  }, [toast]);\n\n  /**\n   * Verifica se as notifica\xE7\xF5es est\xE3o pausadas\n   */\n  const verificarNotificacoesPausadas = useCallback(async (): Promise<boolean> => {\n    try {\n      const response = await fetch('/api/preferencias-notificacao/pausar');\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.error || 'Erro ao verificar status');\n      }\n\n      return data.data.pausadas;\n    } catch (error) {\n      console.error('Erro ao verificar notifica\xE7\xF5es pausadas:', error);\n      return false;\n    }\n  }, []);\n\n  // Carrega prefer\xEAncias ao montar o componente\n  useEffect(() => {\n    buscarPreferencias();\n  }, [buscarPreferencias]);\n\n  return {\n    // Estado\n    preferencias,\n    carregando,\n    erro,\n    \n    // A\xE7\xF5es\n    buscarPreferencias,\n    atualizarPreferencias,\n    resetarPreferencias,\n    pausarNotificacoes,\n    retomarNotificacoes,\n    verificarNotificacoesPausadas,\n  };\n}"],
      names: ["usePreferenciasNotificacao", "preferencias", "setPreferencias", "useState", "carregando", "setCarregando", "erro", "setErro", "toast", "useToast", "buscarPreferencias", "useCallback", "response", "fetch", "data", "json", "ok", "Error", "error", "mensagem", "message", "title", "description", "variant", "atualizarPreferencias", "dados", "method", "headers", "body", "JSON", "stringify", "resetarPreferencias", "pausarNotificacoes", "dataFim", "dataInicio", "motivo", "toISOString", "retomarNotificacoes", "verificarNotificacoesPausadas", "pausadas", "console", "useEffect"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "220cc10190fe5126d5bfc184a72e8bb6b6848fdc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2k3nryz9fp = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2k3nryz9fp();
cov_2k3nryz9fp().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2k3nryz9fp().s[1]++;
Object.defineProperty(exports, "usePreferenciasNotificacao", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2k3nryz9fp().f[0]++;
    cov_2k3nryz9fp().s[2]++;
    return usePreferenciasNotificacao;
  }
});
const _react =
/* istanbul ignore next */
(cov_2k3nryz9fp().s[3]++, require("react"));
const _usetoast =
/* istanbul ignore next */
(cov_2k3nryz9fp().s[4]++, require("./use-toast"));
function usePreferenciasNotificacao() {
  /* istanbul ignore next */
  cov_2k3nryz9fp().f[1]++;
  const [preferencias, setPreferencias] =
  /* istanbul ignore next */
  (cov_2k3nryz9fp().s[5]++, (0, _react.useState)(null));
  const [carregando, setCarregando] =
  /* istanbul ignore next */
  (cov_2k3nryz9fp().s[6]++, (0, _react.useState)(false));
  const [erro, setErro] =
  /* istanbul ignore next */
  (cov_2k3nryz9fp().s[7]++, (0, _react.useState)(null));
  const {
    toast
  } =
  /* istanbul ignore next */
  (cov_2k3nryz9fp().s[8]++, (0, _usetoast.useToast)());
  /**
  * Busca as preferências do usuário
  */
  const buscarPreferencias =
  /* istanbul ignore next */
  (cov_2k3nryz9fp().s[9]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_2k3nryz9fp().f[2]++;
    cov_2k3nryz9fp().s[10]++;
    setCarregando(true);
    /* istanbul ignore next */
    cov_2k3nryz9fp().s[11]++;
    setErro(null);
    /* istanbul ignore next */
    cov_2k3nryz9fp().s[12]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_2k3nryz9fp().s[13]++, await fetch('/api/preferencias-notificacao'));
      const data =
      /* istanbul ignore next */
      (cov_2k3nryz9fp().s[14]++, await response.json());
      /* istanbul ignore next */
      cov_2k3nryz9fp().s[15]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_2k3nryz9fp().b[0][0]++;
        cov_2k3nryz9fp().s[16]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_2k3nryz9fp().b[1][0]++, data.error) ||
        /* istanbul ignore next */
        (cov_2k3nryz9fp().b[1][1]++, 'Erro ao buscar preferências'));
      } else
      /* istanbul ignore next */
      {
        cov_2k3nryz9fp().b[0][1]++;
      }
      cov_2k3nryz9fp().s[17]++;
      setPreferencias(data.data);
    } catch (error) {
      const mensagem =
      /* istanbul ignore next */
      (cov_2k3nryz9fp().s[18]++, error instanceof Error ?
      /* istanbul ignore next */
      (cov_2k3nryz9fp().b[2][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2k3nryz9fp().b[2][1]++, 'Erro desconhecido'));
      /* istanbul ignore next */
      cov_2k3nryz9fp().s[19]++;
      setErro(mensagem);
      /* istanbul ignore next */
      cov_2k3nryz9fp().s[20]++;
      toast({
        title: 'Erro',
        description: `Falha ao carregar preferências: ${mensagem}`,
        variant: 'destructive'
      });
    } finally {
      /* istanbul ignore next */
      cov_2k3nryz9fp().s[21]++;
      setCarregando(false);
    }
  }, [toast]));
  /**
  * Atualiza as preferências do usuário
  */
  const atualizarPreferencias =
  /* istanbul ignore next */
  (cov_2k3nryz9fp().s[22]++, (0, _react.useCallback)(async dados => {
    /* istanbul ignore next */
    cov_2k3nryz9fp().f[3]++;
    cov_2k3nryz9fp().s[23]++;
    setCarregando(true);
    /* istanbul ignore next */
    cov_2k3nryz9fp().s[24]++;
    setErro(null);
    /* istanbul ignore next */
    cov_2k3nryz9fp().s[25]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_2k3nryz9fp().s[26]++, await fetch('/api/preferencias-notificacao', {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(dados)
      }));
      const data =
      /* istanbul ignore next */
      (cov_2k3nryz9fp().s[27]++, await response.json());
      /* istanbul ignore next */
      cov_2k3nryz9fp().s[28]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_2k3nryz9fp().b[3][0]++;
        cov_2k3nryz9fp().s[29]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_2k3nryz9fp().b[4][0]++, data.error) ||
        /* istanbul ignore next */
        (cov_2k3nryz9fp().b[4][1]++, 'Erro ao atualizar preferências'));
      } else
      /* istanbul ignore next */
      {
        cov_2k3nryz9fp().b[3][1]++;
      }
      cov_2k3nryz9fp().s[30]++;
      setPreferencias(data.data);
      /* istanbul ignore next */
      cov_2k3nryz9fp().s[31]++;
      toast({
        title: 'Sucesso',
        description:
        /* istanbul ignore next */
        (cov_2k3nryz9fp().b[5][0]++, data.message) ||
        /* istanbul ignore next */
        (cov_2k3nryz9fp().b[5][1]++, 'Preferências atualizadas com sucesso')
      });
      /* istanbul ignore next */
      cov_2k3nryz9fp().s[32]++;
      return true;
    } catch (error) {
      const mensagem =
      /* istanbul ignore next */
      (cov_2k3nryz9fp().s[33]++, error instanceof Error ?
      /* istanbul ignore next */
      (cov_2k3nryz9fp().b[6][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2k3nryz9fp().b[6][1]++, 'Erro desconhecido'));
      /* istanbul ignore next */
      cov_2k3nryz9fp().s[34]++;
      setErro(mensagem);
      /* istanbul ignore next */
      cov_2k3nryz9fp().s[35]++;
      toast({
        title: 'Erro',
        description: `Falha ao atualizar preferências: ${mensagem}`,
        variant: 'destructive'
      });
      /* istanbul ignore next */
      cov_2k3nryz9fp().s[36]++;
      return false;
    } finally {
      /* istanbul ignore next */
      cov_2k3nryz9fp().s[37]++;
      setCarregando(false);
    }
  }, [toast]));
  /**
  * Reseta as preferências para os valores padrão
  */
  const resetarPreferencias =
  /* istanbul ignore next */
  (cov_2k3nryz9fp().s[38]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_2k3nryz9fp().f[4]++;
    cov_2k3nryz9fp().s[39]++;
    setCarregando(true);
    /* istanbul ignore next */
    cov_2k3nryz9fp().s[40]++;
    setErro(null);
    /* istanbul ignore next */
    cov_2k3nryz9fp().s[41]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_2k3nryz9fp().s[42]++, await fetch('/api/preferencias-notificacao', {
        method: 'DELETE'
      }));
      const data =
      /* istanbul ignore next */
      (cov_2k3nryz9fp().s[43]++, await response.json());
      /* istanbul ignore next */
      cov_2k3nryz9fp().s[44]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_2k3nryz9fp().b[7][0]++;
        cov_2k3nryz9fp().s[45]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_2k3nryz9fp().b[8][0]++, data.error) ||
        /* istanbul ignore next */
        (cov_2k3nryz9fp().b[8][1]++, 'Erro ao resetar preferências'));
      } else
      /* istanbul ignore next */
      {
        cov_2k3nryz9fp().b[7][1]++;
      }
      cov_2k3nryz9fp().s[46]++;
      setPreferencias(data.data);
      /* istanbul ignore next */
      cov_2k3nryz9fp().s[47]++;
      toast({
        title: 'Sucesso',
        description:
        /* istanbul ignore next */
        (cov_2k3nryz9fp().b[9][0]++, data.message) ||
        /* istanbul ignore next */
        (cov_2k3nryz9fp().b[9][1]++, 'Preferências resetadas com sucesso')
      });
      /* istanbul ignore next */
      cov_2k3nryz9fp().s[48]++;
      return true;
    } catch (error) {
      const mensagem =
      /* istanbul ignore next */
      (cov_2k3nryz9fp().s[49]++, error instanceof Error ?
      /* istanbul ignore next */
      (cov_2k3nryz9fp().b[10][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2k3nryz9fp().b[10][1]++, 'Erro desconhecido'));
      /* istanbul ignore next */
      cov_2k3nryz9fp().s[50]++;
      setErro(mensagem);
      /* istanbul ignore next */
      cov_2k3nryz9fp().s[51]++;
      toast({
        title: 'Erro',
        description: `Falha ao resetar preferências: ${mensagem}`,
        variant: 'destructive'
      });
      /* istanbul ignore next */
      cov_2k3nryz9fp().s[52]++;
      return false;
    } finally {
      /* istanbul ignore next */
      cov_2k3nryz9fp().s[53]++;
      setCarregando(false);
    }
  }, [toast]));
  /**
  * Pausa as notificações por um período
  */
  const pausarNotificacoes =
  /* istanbul ignore next */
  (cov_2k3nryz9fp().s[54]++, (0, _react.useCallback)(async (dataFim, dataInicio, motivo) => {
    /* istanbul ignore next */
    cov_2k3nryz9fp().f[5]++;
    cov_2k3nryz9fp().s[55]++;
    setCarregando(true);
    /* istanbul ignore next */
    cov_2k3nryz9fp().s[56]++;
    setErro(null);
    /* istanbul ignore next */
    cov_2k3nryz9fp().s[57]++;
    try {
      const body =
      /* istanbul ignore next */
      (cov_2k3nryz9fp().s[58]++, {
        dataFim: dataFim.toISOString()
      });
      /* istanbul ignore next */
      cov_2k3nryz9fp().s[59]++;
      if (dataInicio) {
        /* istanbul ignore next */
        cov_2k3nryz9fp().b[11][0]++;
        cov_2k3nryz9fp().s[60]++;
        body.dataInicio = dataInicio.toISOString();
      } else
      /* istanbul ignore next */
      {
        cov_2k3nryz9fp().b[11][1]++;
      }
      cov_2k3nryz9fp().s[61]++;
      if (motivo) {
        /* istanbul ignore next */
        cov_2k3nryz9fp().b[12][0]++;
        cov_2k3nryz9fp().s[62]++;
        body.motivo = motivo;
      } else
      /* istanbul ignore next */
      {
        cov_2k3nryz9fp().b[12][1]++;
      }
      const response =
      /* istanbul ignore next */
      (cov_2k3nryz9fp().s[63]++, await fetch('/api/preferencias-notificacao/pausar', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(body)
      }));
      const data =
      /* istanbul ignore next */
      (cov_2k3nryz9fp().s[64]++, await response.json());
      /* istanbul ignore next */
      cov_2k3nryz9fp().s[65]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_2k3nryz9fp().b[13][0]++;
        cov_2k3nryz9fp().s[66]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_2k3nryz9fp().b[14][0]++, data.error) ||
        /* istanbul ignore next */
        (cov_2k3nryz9fp().b[14][1]++, 'Erro ao pausar notificações'));
      } else
      /* istanbul ignore next */
      {
        cov_2k3nryz9fp().b[13][1]++;
      }
      cov_2k3nryz9fp().s[67]++;
      setPreferencias(data.data);
      /* istanbul ignore next */
      cov_2k3nryz9fp().s[68]++;
      toast({
        title: 'Sucesso',
        description:
        /* istanbul ignore next */
        (cov_2k3nryz9fp().b[15][0]++, data.message) ||
        /* istanbul ignore next */
        (cov_2k3nryz9fp().b[15][1]++, 'Notificações pausadas com sucesso')
      });
      /* istanbul ignore next */
      cov_2k3nryz9fp().s[69]++;
      return true;
    } catch (error) {
      const mensagem =
      /* istanbul ignore next */
      (cov_2k3nryz9fp().s[70]++, error instanceof Error ?
      /* istanbul ignore next */
      (cov_2k3nryz9fp().b[16][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2k3nryz9fp().b[16][1]++, 'Erro desconhecido'));
      /* istanbul ignore next */
      cov_2k3nryz9fp().s[71]++;
      setErro(mensagem);
      /* istanbul ignore next */
      cov_2k3nryz9fp().s[72]++;
      toast({
        title: 'Erro',
        description: `Falha ao pausar notificações: ${mensagem}`,
        variant: 'destructive'
      });
      /* istanbul ignore next */
      cov_2k3nryz9fp().s[73]++;
      return false;
    } finally {
      /* istanbul ignore next */
      cov_2k3nryz9fp().s[74]++;
      setCarregando(false);
    }
  }, [toast]));
  /**
  * Retoma as notificações (remove pausa)
  */
  const retomarNotificacoes =
  /* istanbul ignore next */
  (cov_2k3nryz9fp().s[75]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_2k3nryz9fp().f[6]++;
    cov_2k3nryz9fp().s[76]++;
    setCarregando(true);
    /* istanbul ignore next */
    cov_2k3nryz9fp().s[77]++;
    setErro(null);
    /* istanbul ignore next */
    cov_2k3nryz9fp().s[78]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_2k3nryz9fp().s[79]++, await fetch('/api/preferencias-notificacao/pausar', {
        method: 'DELETE'
      }));
      const data =
      /* istanbul ignore next */
      (cov_2k3nryz9fp().s[80]++, await response.json());
      /* istanbul ignore next */
      cov_2k3nryz9fp().s[81]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_2k3nryz9fp().b[17][0]++;
        cov_2k3nryz9fp().s[82]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_2k3nryz9fp().b[18][0]++, data.error) ||
        /* istanbul ignore next */
        (cov_2k3nryz9fp().b[18][1]++, 'Erro ao retomar notificações'));
      } else
      /* istanbul ignore next */
      {
        cov_2k3nryz9fp().b[17][1]++;
      }
      cov_2k3nryz9fp().s[83]++;
      setPreferencias(data.data);
      /* istanbul ignore next */
      cov_2k3nryz9fp().s[84]++;
      toast({
        title: 'Sucesso',
        description:
        /* istanbul ignore next */
        (cov_2k3nryz9fp().b[19][0]++, data.message) ||
        /* istanbul ignore next */
        (cov_2k3nryz9fp().b[19][1]++, 'Notificações retomadas com sucesso')
      });
      /* istanbul ignore next */
      cov_2k3nryz9fp().s[85]++;
      return true;
    } catch (error) {
      const mensagem =
      /* istanbul ignore next */
      (cov_2k3nryz9fp().s[86]++, error instanceof Error ?
      /* istanbul ignore next */
      (cov_2k3nryz9fp().b[20][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2k3nryz9fp().b[20][1]++, 'Erro desconhecido'));
      /* istanbul ignore next */
      cov_2k3nryz9fp().s[87]++;
      setErro(mensagem);
      /* istanbul ignore next */
      cov_2k3nryz9fp().s[88]++;
      toast({
        title: 'Erro',
        description: `Falha ao retomar notificações: ${mensagem}`,
        variant: 'destructive'
      });
      /* istanbul ignore next */
      cov_2k3nryz9fp().s[89]++;
      return false;
    } finally {
      /* istanbul ignore next */
      cov_2k3nryz9fp().s[90]++;
      setCarregando(false);
    }
  }, [toast]));
  /**
  * Verifica se as notificações estão pausadas
  */
  const verificarNotificacoesPausadas =
  /* istanbul ignore next */
  (cov_2k3nryz9fp().s[91]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_2k3nryz9fp().f[7]++;
    cov_2k3nryz9fp().s[92]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_2k3nryz9fp().s[93]++, await fetch('/api/preferencias-notificacao/pausar'));
      const data =
      /* istanbul ignore next */
      (cov_2k3nryz9fp().s[94]++, await response.json());
      /* istanbul ignore next */
      cov_2k3nryz9fp().s[95]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_2k3nryz9fp().b[21][0]++;
        cov_2k3nryz9fp().s[96]++;
        throw new Error(
        /* istanbul ignore next */
        (cov_2k3nryz9fp().b[22][0]++, data.error) ||
        /* istanbul ignore next */
        (cov_2k3nryz9fp().b[22][1]++, 'Erro ao verificar status'));
      } else
      /* istanbul ignore next */
      {
        cov_2k3nryz9fp().b[21][1]++;
      }
      cov_2k3nryz9fp().s[97]++;
      return data.data.pausadas;
    } catch (error) {
      /* istanbul ignore next */
      cov_2k3nryz9fp().s[98]++;
      console.error('Erro ao verificar notificações pausadas:', error);
      /* istanbul ignore next */
      cov_2k3nryz9fp().s[99]++;
      return false;
    }
  }, []));
  // Carrega preferências ao montar o componente
  /* istanbul ignore next */
  cov_2k3nryz9fp().s[100]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_2k3nryz9fp().f[8]++;
    cov_2k3nryz9fp().s[101]++;
    buscarPreferencias();
  }, [buscarPreferencias]);
  /* istanbul ignore next */
  cov_2k3nryz9fp().s[102]++;
  return {
    // Estado
    preferencias,
    carregando,
    erro,
    // Ações
    buscarPreferencias,
    atualizarPreferencias,
    resetarPreferencias,
    pausarNotificacoes,
    retomarNotificacoes,
    verificarNotificacoesPausadas
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,