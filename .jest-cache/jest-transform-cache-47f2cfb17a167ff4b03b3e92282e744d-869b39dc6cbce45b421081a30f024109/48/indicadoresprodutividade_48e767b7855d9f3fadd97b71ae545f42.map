{"version":3,"sources":["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\components\\metricas\\indicadores-produtividade.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport { Progress } from '@/components/ui/progress';\nimport { Badge } from '@/components/ui/badge';\nimport {\n  TrendingUp,\n  TrendingDown,\n  Minus,\n  Target,\n  Award,\n  Clock,\n  FileText,\n  Users,\n  Star,\n  Activity,\n  CheckCircle,\n  AlertCircle,\n} from 'lucide-react';\nimport { cn } from '@/lib/utils';\n\n/**\n * Interface para indicador individual\n */\ninterface Indicador {\n  id: string;\n  titulo: string;\n  valor: number;\n  meta?: number;\n  unidade: string;\n  tendencia?: {\n    valor: number;\n    periodo: string;\n  };\n  status: 'excelente' | 'bom' | 'regular' | 'ruim';\n  descricao?: string;\n  icone: React.ReactNode;\n}\n\n/**\n * Interface para dados de produtividade\n */\ninterface DadosProdutividade {\n  avaliacoes: {\n    media: number;\n    total: number;\n    meta?: number;\n    tendencia?: {\n      valor: number;\n      periodo: string;\n    };\n  };\n  documentos: {\n    total: number;\n    ativosNoPeriodo: number;\n    meta?: number;\n    tendencia?: {\n      valor: number;\n      periodo: string;\n    };\n  };\n  atividade: {\n    totalAlteracoes: number;\n    meta?: number;\n    tendencia?: {\n      valor: number;\n      periodo: string;\n    };\n  };\n  eficiencia?: {\n    pontuacao: number;\n    ranking?: number;\n    totalAtendentes?: number;\n  };\n  qualidade?: {\n    pontuacao: number;\n    meta?: number;\n  };\n  pontualidade?: {\n    pontuacao: number;\n    meta?: number;\n  };\n}\n\n/**\n * Props do componente\n */\ninterface IndicadoresProdutividadeProps {\n  dados: DadosProdutividade;\n  periodo?: string;\n  compacto?: boolean;\n  mostrarTendencias?: boolean;\n  className?: string;\n}\n\n/**\n * Função para determinar status baseado no valor e meta\n */\nfunction determinarStatus(\n  valor: number,\n  meta?: number\n): 'excelente' | 'bom' | 'regular' | 'ruim' {\n  if (!meta) {\n    if (valor >= 9) return 'excelente';\n    if (valor >= 7) return 'bom';\n    if (valor >= 5) return 'regular';\n    return 'ruim';\n  }\n\n  const porcentagem = (valor / meta) * 100;\n  if (porcentagem >= 100) return 'excelente';\n  if (porcentagem >= 80) return 'bom';\n  if (porcentagem >= 60) return 'regular';\n  return 'ruim';\n}\n\n/**\n * Função para obter cor do status\n */\nfunction obterCorStatus(status: string): string {\n  switch (status) {\n    case 'excelente':\n      return 'text-green-600';\n    case 'bom':\n      return 'text-blue-600';\n    case 'regular':\n      return 'text-yellow-600';\n    case 'ruim':\n      return 'text-red-600';\n    default:\n      return 'text-gray-600';\n  }\n}\n\n/**\n * Função para obter cor de fundo do status\n */\nfunction obterCorFundoStatus(status: string): string {\n  switch (status) {\n    case 'excelente':\n      return 'bg-green-50 border-green-200';\n    case 'bom':\n      return 'bg-blue-50 border-blue-200';\n    case 'regular':\n      return 'bg-yellow-50 border-yellow-200';\n    case 'ruim':\n      return 'bg-red-50 border-red-200';\n    default:\n      return 'bg-gray-50 border-gray-200';\n  }\n}\n\n/**\n * Componente para renderizar tendência\n */\nfunction RenderizarTendencia({\n  tendencia,\n}: {\n  tendencia?: { valor: number; periodo: string };\n}) {\n  if (!tendencia) return null;\n\n  const { valor, periodo } = tendencia;\n\n  if (valor > 0) {\n    return (\n      <div className=\"flex items-center text-green-600 text-sm\">\n        <TrendingUp className=\"h-3 w-3 mr-1\" />\n        <span>\n          +{valor.toFixed(1)}% ({periodo})\n        </span>\n      </div>\n    );\n  } else if (valor < 0) {\n    return (\n      <div className=\"flex items-center text-red-600 text-sm\">\n        <TrendingDown className=\"h-3 w-3 mr-1\" />\n        <span>\n          {valor.toFixed(1)}% ({periodo})\n        </span>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"flex items-center text-gray-500 text-sm\">\n        <Minus className=\"h-3 w-3 mr-1\" />\n        <span>0% ({periodo})</span>\n      </div>\n    );\n  }\n}\n\n/**\n * Componente para cartão de indicador individual\n */\nfunction CartaoIndicador({\n  indicador,\n  compacto = false,\n  mostrarTendencia = true,\n}: {\n  indicador: Indicador;\n  compacto?: boolean;\n  mostrarTendencia?: boolean;\n}) {\n  const porcentagemMeta = indicador.meta\n    ? (indicador.valor / indicador.meta) * 100\n    : 0;\n  const corStatus = obterCorStatus(indicador.status);\n  const corFundoStatus = obterCorFundoStatus(indicador.status);\n\n  if (compacto) {\n    return (\n      <div className={cn('p-4 rounded-lg border', corFundoStatus)}>\n        <div className=\"flex items-center justify-between mb-2\">\n          <div className=\"flex items-center space-x-2\">\n            <div className={corStatus}>{indicador.icone}</div>\n            <span className=\"font-medium text-sm\">{indicador.titulo}</span>\n          </div>\n          <Badge\n            variant={\n              indicador.status === 'excelente'\n                ? 'default'\n                : indicador.status === 'bom'\n                  ? 'secondary'\n                  : indicador.status === 'regular'\n                    ? 'outline'\n                    : 'destructive'\n            }\n          >\n            {indicador.status}\n          </Badge>\n        </div>\n        <div className=\"flex items-baseline space-x-1\">\n          <span className=\"text-2xl font-bold\">{indicador.valor}</span>\n          <span className=\"text-sm text-gray-500\">{indicador.unidade}</span>\n          {indicador.meta && (\n            <span className=\"text-xs text-gray-400\">/ {indicador.meta}</span>\n          )}\n        </div>\n        {indicador.meta && (\n          <Progress\n            value={Math.min(porcentagemMeta, 100)}\n            className=\"mt-2 h-1\"\n          />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <Card className={corFundoStatus}>\n      <CardHeader className=\"pb-2\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-2\">\n            <div className={corStatus}>{indicador.icone}</div>\n            <CardTitle className=\"text-lg\">{indicador.titulo}</CardTitle>\n          </div>\n          <Badge\n            variant={\n              indicador.status === 'excelente'\n                ? 'default'\n                : indicador.status === 'bom'\n                  ? 'secondary'\n                  : indicador.status === 'regular'\n                    ? 'outline'\n                    : 'destructive'\n            }\n          >\n            {indicador.status}\n          </Badge>\n        </div>\n        {indicador.descricao && (\n          <CardDescription>{indicador.descricao}</CardDescription>\n        )}\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-3\">\n          <div className=\"flex items-baseline space-x-2\">\n            <span className=\"text-3xl font-bold\">{indicador.valor}</span>\n            <span className=\"text-lg text-gray-500\">{indicador.unidade}</span>\n            {indicador.meta && (\n              <span className=\"text-sm text-gray-400\">\n                / {indicador.meta} (meta)\n              </span>\n            )}\n          </div>\n\n          {indicador.meta && (\n            <div className=\"space-y-1\">\n              <div className=\"flex justify-between text-sm\">\n                <span>Progresso</span>\n                <span>{porcentagemMeta.toFixed(1)}%</span>\n              </div>\n              <Progress\n                value={Math.min(porcentagemMeta, 100)}\n                className=\"h-2\"\n              />\n            </div>\n          )}\n\n          {mostrarTendencia && indicador.tendencia && (\n            <RenderizarTendencia tendencia={indicador.tendencia} />\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\n/**\n * Componente principal de indicadores de produtividade\n */\nexport function IndicadoresProdutividade({\n  dados,\n  periodo = '30 dias',\n  compacto = false,\n  mostrarTendencias = true,\n  className,\n}: IndicadoresProdutividadeProps) {\n  // Preparar indicadores baseados nos dados\n  const indicadores: Indicador[] = [\n    {\n      id: 'avaliacoes',\n      titulo: 'Avaliações',\n      valor: dados.avaliacoes.media,\n      meta: dados.avaliacoes.meta || 8,\n      unidade: '/10',\n      tendencia: dados.avaliacoes.tendencia,\n      status: determinarStatus(\n        dados.avaliacoes.media,\n        dados.avaliacoes.meta || 8\n      ),\n      descricao: `${dados.avaliacoes.total} avaliações no período`,\n      icone: <Star className=\"h-5 w-5\" />,\n    },\n    {\n      id: 'documentos',\n      titulo: 'Documentos',\n      valor: dados.documentos.total,\n      meta: dados.documentos.meta || 10,\n      unidade: 'docs',\n      tendencia: dados.documentos.tendencia,\n      status: determinarStatus(\n        dados.documentos.total,\n        dados.documentos.meta || 10\n      ),\n      descricao: `${dados.documentos.ativosNoPeriodo} ativos no período`,\n      icone: <FileText className=\"h-5 w-5\" />,\n    },\n    {\n      id: 'atividade',\n      titulo: 'Atividade',\n      valor: dados.atividade.totalAlteracoes,\n      meta: dados.atividade.meta || 20,\n      unidade: 'ações',\n      tendencia: dados.atividade.tendencia,\n      status: determinarStatus(\n        dados.atividade.totalAlteracoes,\n        dados.atividade.meta || 20\n      ),\n      descricao: 'Alterações e atualizações',\n      icone: <Activity className=\"h-5 w-5\" />,\n    },\n  ];\n\n  // Adicionar indicadores opcionais se disponíveis\n  if (dados.eficiencia) {\n    indicadores.push({\n      id: 'eficiencia',\n      titulo: 'Eficiência',\n      valor: dados.eficiencia.pontuacao,\n      meta: 100,\n      unidade: '%',\n      status: determinarStatus(dados.eficiencia.pontuacao, 100),\n      descricao: dados.eficiencia.ranking\n        ? `Posição ${dados.eficiencia.ranking} de ${dados.eficiencia.totalAtendentes}`\n        : 'Pontuação geral de eficiência',\n      icone: <Target className=\"h-5 w-5\" />,\n    });\n  }\n\n  if (dados.qualidade) {\n    indicadores.push({\n      id: 'qualidade',\n      titulo: 'Qualidade',\n      valor: dados.qualidade.pontuacao,\n      meta: dados.qualidade.meta || 90,\n      unidade: '%',\n      status: determinarStatus(\n        dados.qualidade.pontuacao,\n        dados.qualidade.meta || 90\n      ),\n      descricao: 'Índice de qualidade do trabalho',\n      icone: <Award className=\"h-5 w-5\" />,\n    });\n  }\n\n  if (dados.pontualidade) {\n    indicadores.push({\n      id: 'pontualidade',\n      titulo: 'Pontualidade',\n      valor: dados.pontualidade.pontuacao,\n      meta: dados.pontualidade.meta || 95,\n      unidade: '%',\n      status: determinarStatus(\n        dados.pontualidade.pontuacao,\n        dados.pontualidade.meta || 95\n      ),\n      descricao: 'Cumprimento de prazos',\n      icone: <Clock className=\"h-5 w-5\" />,\n    });\n  }\n\n  // Calcular resumo geral\n  const indicadoresExcelentes = indicadores.filter(\n    i => i.status === 'excelente'\n  ).length;\n  const indicadoresBons = indicadores.filter(i => i.status === 'bom').length;\n  const indicadoresRegulares = indicadores.filter(\n    i => i.status === 'regular'\n  ).length;\n  const indicadoresRuins = indicadores.filter(i => i.status === 'ruim').length;\n\n  const statusGeral =\n    indicadoresExcelentes >= indicadores.length * 0.7\n      ? 'excelente'\n      : indicadoresExcelentes + indicadoresBons >= indicadores.length * 0.6\n        ? 'bom'\n        : indicadoresRuins <= indicadores.length * 0.3\n          ? 'regular'\n          : 'ruim';\n\n  return (\n    <div className={cn('space-y-6', className)}>\n      {/* Resumo Geral */}\n      <Card className={obterCorFundoStatus(statusGeral)}>\n        <CardHeader>\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <CardTitle className=\"flex items-center space-x-2\">\n                <Users className=\"h-5 w-5\" />\n                <span>Resumo de Produtividade</span>\n              </CardTitle>\n              <CardDescription>Período: {periodo}</CardDescription>\n            </div>\n            <Badge\n              variant={\n                statusGeral === 'excelente'\n                  ? 'default'\n                  : statusGeral === 'bom'\n                    ? 'secondary'\n                    : statusGeral === 'regular'\n                      ? 'outline'\n                      : 'destructive'\n              }\n              className=\"text-lg px-3 py-1\"\n            >\n              {statusGeral.charAt(0).toUpperCase() + statusGeral.slice(1)}\n            </Badge>\n          </div>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n            <div className=\"text-center\">\n              <div className=\"flex items-center justify-center mb-1\">\n                <CheckCircle className=\"h-4 w-4 text-green-600 mr-1\" />\n                <span className=\"text-2xl font-bold text-green-600\">\n                  {indicadoresExcelentes}\n                </span>\n              </div>\n              <span className=\"text-sm text-gray-500\">Excelentes</span>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"flex items-center justify-center mb-1\">\n                <CheckCircle className=\"h-4 w-4 text-blue-600 mr-1\" />\n                <span className=\"text-2xl font-bold text-blue-600\">\n                  {indicadoresBons}\n                </span>\n              </div>\n              <span className=\"text-sm text-gray-500\">Bons</span>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"flex items-center justify-center mb-1\">\n                <AlertCircle className=\"h-4 w-4 text-yellow-600 mr-1\" />\n                <span className=\"text-2xl font-bold text-yellow-600\">\n                  {indicadoresRegulares}\n                </span>\n              </div>\n              <span className=\"text-sm text-gray-500\">Regulares</span>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"flex items-center justify-center mb-1\">\n                <AlertCircle className=\"h-4 w-4 text-red-600 mr-1\" />\n                <span className=\"text-2xl font-bold text-red-600\">\n                  {indicadoresRuins}\n                </span>\n              </div>\n              <span className=\"text-sm text-gray-500\">Ruins</span>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Indicadores Individuais */}\n      <div\n        className={cn(\n          compacto\n            ? 'grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4'\n            : 'grid grid-cols-1 md:grid-cols-2 gap-6'\n        )}\n      >\n        {indicadores.map(indicador => (\n          <CartaoIndicador\n            key={indicador.id}\n            indicador={indicador}\n            compacto={compacto}\n            mostrarTendencia={mostrarTendencias}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default IndicadoresProdutividade;\n"],"names":["IndicadoresProdutividade","determinarStatus","valor","meta","porcentagem","obterCorStatus","status","obterCorFundoStatus","RenderizarTendencia","tendencia","periodo","div","className","TrendingUp","span","toFixed","TrendingDown","Minus","CartaoIndicador","indicador","compacto","mostrarTendencia","porcentagemMeta","corStatus","corFundoStatus","cn","icone","titulo","Badge","variant","unidade","Progress","value","Math","min","Card","CardHeader","CardTitle","descricao","CardDescription","CardContent","dados","mostrarTendencias","indicadores","id","avaliacoes","media","total","Star","documentos","ativosNoPeriodo","FileText","atividade","totalAlteracoes","Activity","eficiencia","push","pontuacao","ranking","totalAtendentes","Target","qualidade","Award","pontualidade","Clock","indicadoresExcelentes","filter","i","length","indicadoresBons","indicadoresRegulares","indicadoresRuins","statusGeral","Users","charAt","toUpperCase","slice","CheckCircle","AlertCircle","map"],"mappings":"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"}