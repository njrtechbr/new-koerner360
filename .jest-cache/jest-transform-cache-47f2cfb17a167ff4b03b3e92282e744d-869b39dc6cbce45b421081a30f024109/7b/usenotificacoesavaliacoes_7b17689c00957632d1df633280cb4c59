9acbff6a5487521818b1d293f7b28e92
'use client';
"use strict";

/* istanbul ignore next */
function cov_mi9hjnw4d() {
  var path = "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\hooks\\use-notificacoes-avaliacoes.ts";
  var hash = "31182ff6897c9de8a3fd34d30041b48ca385312b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\hooks\\use-notificacoes-avaliacoes.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 43
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 41
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 43
        }
      },
      "7": {
        start: {
          line: 23,
          column: 15
        },
        end: {
          line: 23,
          column: 31
        }
      },
      "8": {
        start: {
          line: 24,
          column: 32
        },
        end: {
          line: 24,
          column: 79
        }
      },
      "9": {
        start: {
          line: 27,
          column: 58
        },
        end: {
          line: 27,
          column: 82
        }
      },
      "10": {
        start: {
          line: 28,
          column: 44
        },
        end: {
          line: 28,
          column: 70
        }
      },
      "11": {
        start: {
          line: 29,
          column: 44
        },
        end: {
          line: 29,
          column: 70
        }
      },
      "12": {
        start: {
          line: 30,
          column: 34
        },
        end: {
          line: 30,
          column: 60
        }
      },
      "13": {
        start: {
          line: 31,
          column: 30
        },
        end: {
          line: 31,
          column: 56
        }
      },
      "14": {
        start: {
          line: 32,
          column: 22
        },
        end: {
          line: 53,
          column: 6
        }
      },
      "15": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "16": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 34,
          column: 29
        }
      },
      "17": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 35,
          column: 27
        }
      },
      "18": {
        start: {
          line: 37,
          column: 31
        },
        end: {
          line: 37,
          column: 109
        }
      },
      "19": {
        start: {
          line: 38,
          column: 12
        },
        end: {
          line: 38,
          column: 47
        }
      },
      "20": {
        start: {
          line: 40,
          column: 26
        },
        end: {
          line: 40,
          column: 101
        }
      },
      "21": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 41,
          column: 35
        }
      },
      "22": {
        start: {
          line: 43,
          column: 27
        },
        end: {
          line: 43,
          column: 102
        }
      },
      "23": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 44,
          column: 36
        }
      },
      "24": {
        start: {
          line: 46,
          column: 12
        },
        end: {
          line: 46,
          column: 63
        }
      },
      "25": {
        start: {
          line: 47,
          column: 12
        },
        end: {
          line: 47,
          column: 79
        }
      },
      "26": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 49,
          column: 30
        }
      },
      "27": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 59,
          column: 7
        }
      },
      "28": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 20
        }
      },
      "29": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 71,
          column: 7
        }
      },
      "30": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 33
        }
      },
      "31": {
        start: {
          line: 62,
          column: 26
        },
        end: {
          line: 62,
          column: 33
        }
      },
      "32": {
        start: {
          line: 63,
          column: 25
        },
        end: {
          line: 65,
          column: 27
        }
      },
      "33": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 24
        }
      },
      "34": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 43
        }
      },
      "35": {
        start: {
          line: 66,
          column: 19
        },
        end: {
          line: 66,
          column: 42
        }
      },
      "36": {
        start: {
          line: 72,
          column: 27
        },
        end: {
          line: 88,
          column: 6
        }
      },
      "37": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 95
        }
      },
      "38": {
        start: {
          line: 75,
          column: 39
        },
        end: {
          line: 75,
          column: 93
        }
      },
      "39": {
        start: {
          line: 75,
          column: 64
        },
        end: {
          line: 75,
          column: 92
        }
      },
      "40": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 85,
          column: 9
        }
      },
      "41": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 84,
          column: 15
        }
      },
      "42": {
        start: {
          line: 79,
          column: 16
        },
        end: {
          line: 79,
          column: 39
        }
      },
      "43": {
        start: {
          line: 79,
          column: 27
        },
        end: {
          line: 79,
          column: 39
        }
      },
      "44": {
        start: {
          line: 80,
          column: 16
        },
        end: {
          line: 83,
          column: 18
        }
      },
      "45": {
        start: {
          line: 89,
          column: 34
        },
        end: {
          line: 105,
          column: 6
        }
      },
      "46": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 102,
          column: 9
        }
      },
      "47": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 98,
          column: 13
        }
      },
      "48": {
        start: {
          line: 93,
          column: 41
        },
        end: {
          line: 96,
          column: 17
        }
      },
      "49": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 97,
          column: 50
        }
      },
      "50": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 66
        }
      },
      "51": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 92
        }
      },
      "52": {
        start: {
          line: 106,
          column: 4
        },
        end: {
          line: 115,
          column: 6
        }
      },
      "53": {
        start: {
          line: 118,
          column: 50
        },
        end: {
          line: 118,
          column: 77
        }
      },
      "54": {
        start: {
          line: 119,
          column: 50
        },
        end: {
          line: 119,
          column: 73
        }
      },
      "55": {
        start: {
          line: 120,
          column: 56
        },
        end: {
          line: 120,
          column: 79
        }
      },
      "56": {
        start: {
          line: 121,
          column: 34
        },
        end: {
          line: 121,
          column: 60
        }
      },
      "57": {
        start: {
          line: 122,
          column: 4
        },
        end: {
          line: 140,
          column: 7
        }
      },
      "58": {
        start: {
          line: 123,
          column: 38
        },
        end: {
          line: 136,
          column: 9
        }
      },
      "59": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 135,
          column: 13
        }
      },
      "60": {
        start: {
          line: 125,
          column: 16
        },
        end: {
          line: 125,
          column: 33
        }
      },
      "61": {
        start: {
          line: 126,
          column: 35
        },
        end: {
          line: 126,
          column: 113
        }
      },
      "62": {
        start: {
          line: 127,
          column: 30
        },
        end: {
          line: 127,
          column: 105
        }
      },
      "63": {
        start: {
          line: 128,
          column: 16
        },
        end: {
          line: 128,
          column: 58
        }
      },
      "64": {
        start: {
          line: 129,
          column: 16
        },
        end: {
          line: 129,
          column: 57
        }
      },
      "65": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 130,
          column: 54
        }
      },
      "66": {
        start: {
          line: 132,
          column: 16
        },
        end: {
          line: 132,
          column: 70
        }
      },
      "67": {
        start: {
          line: 134,
          column: 16
        },
        end: {
          line: 134,
          column: 34
        }
      },
      "68": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 32
        }
      },
      "69": {
        start: {
          line: 141,
          column: 4
        },
        end: {
          line: 146,
          column: 6
        }
      },
      "70": {
        start: {
          line: 149,
          column: 44
        },
        end: {
          line: 149,
          column: 70
        }
      },
      "71": {
        start: {
          line: 150,
          column: 34
        },
        end: {
          line: 150,
          column: 60
        }
      },
      "72": {
        start: {
          line: 151,
          column: 30
        },
        end: {
          line: 151,
          column: 56
        }
      },
      "73": {
        start: {
          line: 152,
          column: 4
        },
        end: {
          line: 168,
          column: 7
        }
      },
      "74": {
        start: {
          line: 153,
          column: 37
        },
        end: {
          line: 164,
          column: 9
        }
      },
      "75": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 163,
          column: 13
        }
      },
      "76": {
        start: {
          line: 155,
          column: 16
        },
        end: {
          line: 155,
          column: 33
        }
      },
      "77": {
        start: {
          line: 156,
          column: 31
        },
        end: {
          line: 156,
          column: 106
        }
      },
      "78": {
        start: {
          line: 157,
          column: 16
        },
        end: {
          line: 157,
          column: 40
        }
      },
      "79": {
        start: {
          line: 159,
          column: 16
        },
        end: {
          line: 159,
          column: 69
        }
      },
      "80": {
        start: {
          line: 160,
          column: 16
        },
        end: {
          line: 160,
          column: 83
        }
      },
      "81": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 162,
          column: 34
        }
      },
      "82": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 165,
          column: 31
        }
      },
      "83": {
        start: {
          line: 169,
          column: 31
        },
        end: {
          line: 188,
          column: 6
        }
      },
      "84": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 185,
          column: 9
        }
      },
      "85": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 179,
          column: 13
        }
      },
      "86": {
        start: {
          line: 173,
          column: 41
        },
        end: {
          line: 176,
          column: 17
        }
      },
      "87": {
        start: {
          line: 177,
          column: 16
        },
        end: {
          line: 177,
          column: 50
        }
      },
      "88": {
        start: {
          line: 178,
          column: 16
        },
        end: {
          line: 178,
          column: 40
        }
      },
      "89": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 180,
          column: 24
        }
      },
      "90": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 182,
          column: 63
        }
      },
      "91": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 183,
          column: 89
        }
      },
      "92": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 24
        }
      },
      "93": {
        start: {
          line: 189,
          column: 42
        },
        end: {
          line: 193,
          column: 6
        }
      },
      "94": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 90
        }
      },
      "95": {
        start: {
          line: 194,
          column: 4
        },
        end: {
          line: 200,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 39
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 37
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 39
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "useNotificacoesAvaliacoes",
        decl: {
          start: {
            line: 25,
            column: 9
          },
          end: {
            line: 25,
            column: 34
          }
        },
        loc: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 116,
            column: 1
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 32,
            column: 46
          },
          end: {
            line: 32,
            column: 47
          }
        },
        loc: {
          start: {
            line: 32,
            column: 56
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 32
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 55,
            column: 26
          },
          end: {
            line: 55,
            column: 27
          }
        },
        loc: {
          start: {
            line: 55,
            column: 30
          },
          end: {
            line: 57,
            column: 5
          }
        },
        line: 55
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 61,
            column: 26
          },
          end: {
            line: 61,
            column: 27
          }
        },
        loc: {
          start: {
            line: 61,
            column: 30
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 61
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 63,
            column: 37
          },
          end: {
            line: 63,
            column: 38
          }
        },
        loc: {
          start: {
            line: 63,
            column: 41
          },
          end: {
            line: 65,
            column: 9
          }
        },
        line: 63
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 66,
            column: 15
          },
          end: {
            line: 66,
            column: 16
          }
        },
        loc: {
          start: {
            line: 66,
            column: 19
          },
          end: {
            line: 66,
            column: 42
          }
        },
        line: 66
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 72,
            column: 51
          },
          end: {
            line: 72,
            column: 52
          }
        },
        loc: {
          start: {
            line: 72,
            column: 66
          },
          end: {
            line: 86,
            column: 5
          }
        },
        line: 72
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 75,
            column: 31
          },
          end: {
            line: 75,
            column: 32
          }
        },
        loc: {
          start: {
            line: 75,
            column: 39
          },
          end: {
            line: 75,
            column: 93
          }
        },
        line: 75
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 75,
            column: 51
          },
          end: {
            line: 75,
            column: 52
          }
        },
        loc: {
          start: {
            line: 75,
            column: 64
          },
          end: {
            line: 75,
            column: 92
          }
        },
        line: 75
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 78,
            column: 28
          },
          end: {
            line: 78,
            column: 29
          }
        },
        loc: {
          start: {
            line: 78,
            column: 36
          },
          end: {
            line: 84,
            column: 13
          }
        },
        line: 78
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 89,
            column: 58
          },
          end: {
            line: 89,
            column: 59
          }
        },
        loc: {
          start: {
            line: 89,
            column: 78
          },
          end: {
            line: 103,
            column: 5
          }
        },
        line: 89
      },
      "15": {
        name: "useTemNotificacoesPendentes",
        decl: {
          start: {
            line: 117,
            column: 9
          },
          end: {
            line: 117,
            column: 36
          }
        },
        loc: {
          start: {
            line: 117,
            column: 48
          },
          end: {
            line: 147,
            column: 1
          }
        },
        line: 117
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 122,
            column: 26
          },
          end: {
            line: 122,
            column: 27
          }
        },
        loc: {
          start: {
            line: 122,
            column: 30
          },
          end: {
            line: 138,
            column: 5
          }
        },
        line: 122
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 123,
            column: 38
          },
          end: {
            line: 123,
            column: 39
          }
        },
        loc: {
          start: {
            line: 123,
            column: 48
          },
          end: {
            line: 136,
            column: 9
          }
        },
        line: 123
      },
      "18": {
        name: "useConfiguracaoNotificacoes",
        decl: {
          start: {
            line: 148,
            column: 9
          },
          end: {
            line: 148,
            column: 36
          }
        },
        loc: {
          start: {
            line: 148,
            column: 48
          },
          end: {
            line: 201,
            column: 1
          }
        },
        line: 148
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 152,
            column: 26
          },
          end: {
            line: 152,
            column: 27
          }
        },
        loc: {
          start: {
            line: 152,
            column: 30
          },
          end: {
            line: 166,
            column: 5
          }
        },
        line: 152
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 153,
            column: 37
          },
          end: {
            line: 153,
            column: 38
          }
        },
        loc: {
          start: {
            line: 153,
            column: 47
          },
          end: {
            line: 164,
            column: 9
          }
        },
        line: 153
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 169,
            column: 55
          },
          end: {
            line: 169,
            column: 56
          }
        },
        loc: {
          start: {
            line: 169,
            column: 75
          },
          end: {
            line: 186,
            column: 5
          }
        },
        line: 169
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 189,
            column: 66
          },
          end: {
            line: 189,
            column: 67
          }
        },
        loc: {
          start: {
            line: 189,
            column: 80
          },
          end: {
            line: 191,
            column: 5
          }
        },
        line: 189
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 48
          },
          end: {
            line: 25,
            column: 67
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 25,
            column: 62
          },
          end: {
            line: 25,
            column: 67
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 25,
            column: 69
          },
          end: {
            line: 25,
            column: 92
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 25,
            column: 87
          },
          end: {
            line: 25,
            column: 92
          }
        }],
        line: 25
      },
      "2": {
        loc: {
          start: {
            line: 47,
            column: 21
          },
          end: {
            line: 47,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 47,
            column: 44
          },
          end: {
            line: 47,
            column: 55
          }
        }, {
          start: {
            line: 47,
            column: 58
          },
          end: {
            line: 47,
            column: 77
          }
        }],
        line: 47
      },
      "3": {
        loc: {
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 62,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 62,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "4": {
        loc: {
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "5": {
        loc: {
          start: {
            line: 79,
            column: 16
          },
          end: {
            line: 79,
            column: 39
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 16
          },
          end: {
            line: 79,
            column: 39
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      },
      "6": {
        loc: {
          start: {
            line: 92,
            column: 12
          },
          end: {
            line: 98,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 12
          },
          end: {
            line: 98,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "7": {
        loc: {
          start: {
            line: 101,
            column: 21
          },
          end: {
            line: 101,
            column: 90
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 101,
            column: 44
          },
          end: {
            line: 101,
            column: 55
          }
        }, {
          start: {
            line: 101,
            column: 58
          },
          end: {
            line: 101,
            column: 90
          }
        }],
        line: 101
      },
      "8": {
        loc: {
          start: {
            line: 160,
            column: 25
          },
          end: {
            line: 160,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 160,
            column: 48
          },
          end: {
            line: 160,
            column: 59
          }
        }, {
          start: {
            line: 160,
            column: 62
          },
          end: {
            line: 160,
            column: 81
          }
        }],
        line: 160
      },
      "9": {
        loc: {
          start: {
            line: 172,
            column: 12
          },
          end: {
            line: 179,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 172,
            column: 12
          },
          end: {
            line: 179,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 172
      },
      "10": {
        loc: {
          start: {
            line: 183,
            column: 21
          },
          end: {
            line: 183,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 183,
            column: 44
          },
          end: {
            line: 183,
            column: 55
          }
        }, {
          start: {
            line: 183,
            column: 58
          },
          end: {
            line: 183,
            column: 87
          }
        }],
        line: 183
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\hooks\\use-notificacoes-avaliacoes.ts"],
      sourcesContent: ["'use client';\n\nimport { useState, useEffect, useCallback } from 'react';\nimport {\n  AvaliacaoPendente,\n  EstatisticasNotificacoes,\n  NotificacaoConfig,\n  buscarAvaliacoesPendentesUsuario,\n  gerarEstatisticasNotificacoes,\n  buscarConfiguracaoNotificacao,\n  deveReceberNotificacao\n} from '@/lib/utils/notificacoes-avaliacoes';\n\ninterface UseNotificacoesAvaliacoesProps {\n  usuarioId: string;\n  autoRefresh?: boolean;\n  refreshInterval?: number; // em milissegundos\n}\n\ninterface UseNotificacoesAvaliacoesReturn {\n  avaliacoesPendentes: AvaliacaoPendente[];\n  estatisticas: EstatisticasNotificacoes | null;\n  configuracao: NotificacaoConfig | null;\n  loading: boolean;\n  error: string | null;\n  refetch: () => Promise<void>;\n  marcarComoLida: (avaliacaoId: string) => void;\n  atualizarConfiguracao: (novaConfig: Partial<NotificacaoConfig>) => Promise<void>;\n}\n\nexport function useNotificacoesAvaliacoes({\n  usuarioId,\n  autoRefresh = false,\n  refreshInterval = 60000 // 1 minuto\n}: UseNotificacoesAvaliacoesProps): UseNotificacoesAvaliacoesReturn {\n  const [avaliacoesPendentes, setAvaliacoesPendentes] = useState<AvaliacaoPendente[]>([]);\n  const [estatisticas, setEstatisticas] = useState<EstatisticasNotificacoes | null>(null);\n  const [configuracao, setConfiguracao] = useState<NotificacaoConfig | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchData = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Buscar avalia\xE7\xF5es pendentes\n      const avaliacoes = await buscarAvaliacoesPendentesUsuario(usuarioId);\n      setAvaliacoesPendentes(avaliacoes);\n\n      // Gerar estat\xEDsticas\n      const stats = await gerarEstatisticasNotificacoes(usuarioId);\n      setEstatisticas(stats);\n\n      // Buscar configura\xE7\xE3o\n      const config = await buscarConfiguracaoNotificacao(usuarioId);\n      setConfiguracao(config);\n\n    } catch (err) {\n      console.error('Erro ao buscar notifica\xE7\xF5es:', err);\n      setError(err instanceof Error ? err.message : 'Erro desconhecido');\n    } finally {\n      setLoading(false);\n    }\n  }, [usuarioId]);\n\n  // Carregar dados iniciais\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  // Auto-refresh\n  useEffect(() => {\n    if (!autoRefresh) return;\n\n    const interval = setInterval(() => {\n      fetchData();\n    }, refreshInterval);\n\n    return () => clearInterval(interval);\n  }, [autoRefresh, refreshInterval, fetchData]);\n\n  const marcarComoLida = useCallback((avaliacaoId: string) => {\n    // Por enquanto, apenas remove da lista local\n    // Em uma implementa\xE7\xE3o real, isso seria persistido no backend\n    setAvaliacoesPendentes(prev => \n      prev.filter(avaliacao => avaliacao.id !== avaliacaoId)\n    );\n\n    // Atualizar estat\xEDsticas\n    if (estatisticas) {\n      setEstatisticas(prev => {\n        if (!prev) return null;\n        return {\n          ...prev,\n          totalPendentes: prev.totalPendentes - 1\n        };\n      });\n    }\n  }, [estatisticas]);\n\n  const atualizarConfiguracao = useCallback(async (novaConfig: Partial<NotificacaoConfig>) => {\n    try {\n      // Em uma implementa\xE7\xE3o real, isso seria uma chamada para a API\n      if (configuracao) {\n        const configAtualizada = { ...configuracao, ...novaConfig };\n        setConfiguracao(configAtualizada);\n      }\n    } catch (err) {\n      console.error('Erro ao atualizar configura\xE7\xE3o:', err);\n      setError(err instanceof Error ? err.message : 'Erro ao atualizar configura\xE7\xE3o');\n    }\n  }, [configuracao]);\n\n  return {\n    avaliacoesPendentes,\n    estatisticas,\n    configuracao,\n    loading,\n    error,\n    refetch: fetchData,\n    marcarComoLida,\n    atualizarConfiguracao\n  };\n}\n\n// Hook simplificado para apenas verificar se h\xE1 notifica\xE7\xF5es\nexport function useTemNotificacoesPendentes(usuarioId: string): {\n  temNotificacoes: boolean;\n  quantidadeTotal: number;\n  quantidadeCriticas: number;\n  loading: boolean;\n} {\n  const [temNotificacoes, setTemNotificacoes] = useState(false);\n  const [quantidadeTotal, setQuantidadeTotal] = useState(0);\n  const [quantidadeCriticas, setQuantidadeCriticas] = useState(0);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const verificarNotificacoes = async () => {\n      try {\n        setLoading(true);\n        const avaliacoes = await buscarAvaliacoesPendentesUsuario(usuarioId);\n        const stats = await gerarEstatisticasNotificacoes(usuarioId);\n        \n        setTemNotificacoes(avaliacoes.length > 0);\n        setQuantidadeTotal(stats.totalPendentes);\n        setQuantidadeCriticas(stats.criticas);\n      } catch (err) {\n        console.error('Erro ao verificar notifica\xE7\xF5es:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    verificarNotificacoes();\n  }, [usuarioId]);\n\n  return {\n    temNotificacoes,\n    quantidadeTotal,\n    quantidadeCriticas,\n    loading\n  };\n}\n\n// Hook para configura\xE7\xF5es de notifica\xE7\xE3o\nexport function useConfiguracaoNotificacoes(usuarioId: string) {\n  const [configuracao, setConfiguracao] = useState<NotificacaoConfig | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const carregarConfiguracao = async () => {\n      try {\n        setLoading(true);\n        const config = await buscarConfiguracaoNotificacao(usuarioId);\n        setConfiguracao(config);\n      } catch (err) {\n        console.error('Erro ao carregar configura\xE7\xE3o:', err);\n        setError(err instanceof Error ? err.message : 'Erro desconhecido');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    carregarConfiguracao();\n  }, [usuarioId]);\n\n  const salvarConfiguracao = useCallback(async (novaConfig: Partial<NotificacaoConfig>) => {\n    try {\n      // Em uma implementa\xE7\xE3o real, isso seria uma chamada para a API\n      if (configuracao) {\n        const configAtualizada = { ...configuracao, ...novaConfig };\n        setConfiguracao(configAtualizada);\n        return configAtualizada;\n      }\n      return null;\n    } catch (err) {\n      console.error('Erro ao salvar configura\xE7\xE3o:', err);\n      setError(err instanceof Error ? err.message : 'Erro ao salvar configura\xE7\xE3o');\n      return null;\n    }\n  }, [configuracao]);\n\n  const verificarPermissaoNotificacao = useCallback(async (tipo: 'email' | 'interface') => {\n    return await deveReceberNotificacao(usuarioId, tipo);\n  }, [usuarioId]);\n\n  return {\n    configuracao,\n    loading,\n    error,\n    salvarConfiguracao,\n    verificarPermissaoNotificacao\n  };\n}"],
      names: ["useConfiguracaoNotificacoes", "useNotificacoesAvaliacoes", "useTemNotificacoesPendentes", "usuarioId", "autoRefresh", "refreshInterval", "avaliacoesPendentes", "setAvaliacoesPendentes", "useState", "estatisticas", "setEstatisticas", "configuracao", "setConfiguracao", "loading", "setLoading", "error", "setError", "fetchData", "useCallback", "avaliacoes", "buscarAvaliacoesPendentesUsuario", "stats", "gerarEstatisticasNotificacoes", "config", "buscarConfiguracaoNotificacao", "err", "console", "Error", "message", "useEffect", "interval", "setInterval", "clearInterval", "marcarComoLida", "avaliacaoId", "prev", "filter", "avaliacao", "id", "totalPendentes", "atualizarConfiguracao", "novaConfig", "configAtualizada", "refetch", "temNotificacoes", "setTemNotificacoes", "quantidadeTotal", "setQuantidadeTotal", "quantidadeCriticas", "setQuantidadeCriticas", "verificarNotificacoes", "length", "criticas", "carregarConfiguracao", "salvarConfiguracao", "verificarPermissaoNotificacao", "tipo", "deveReceberNotificacao"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "31182ff6897c9de8a3fd34d30041b48ca385312b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_mi9hjnw4d = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_mi9hjnw4d();
cov_mi9hjnw4d().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_mi9hjnw4d().f[0]++;
  cov_mi9hjnw4d().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_mi9hjnw4d().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_mi9hjnw4d().s[3]++;
_export(exports, {
  get useConfiguracaoNotificacoes() {
    /* istanbul ignore next */
    cov_mi9hjnw4d().f[1]++;
    cov_mi9hjnw4d().s[4]++;
    return useConfiguracaoNotificacoes;
  },
  get useNotificacoesAvaliacoes() {
    /* istanbul ignore next */
    cov_mi9hjnw4d().f[2]++;
    cov_mi9hjnw4d().s[5]++;
    return useNotificacoesAvaliacoes;
  },
  get useTemNotificacoesPendentes() {
    /* istanbul ignore next */
    cov_mi9hjnw4d().f[3]++;
    cov_mi9hjnw4d().s[6]++;
    return useTemNotificacoesPendentes;
  }
});
const _react =
/* istanbul ignore next */
(cov_mi9hjnw4d().s[7]++, require("react"));
const _notificacoesavaliacoes =
/* istanbul ignore next */
(cov_mi9hjnw4d().s[8]++, require("../lib/utils/notificacoes-avaliacoes"));
function useNotificacoesAvaliacoes({
  usuarioId,
  autoRefresh =
  /* istanbul ignore next */
  (cov_mi9hjnw4d().b[0][0]++, false),
  refreshInterval =
  /* istanbul ignore next */
  (cov_mi9hjnw4d().b[1][0]++, 60000) // 1 minuto
}) {
  /* istanbul ignore next */
  cov_mi9hjnw4d().f[4]++;
  const [avaliacoesPendentes, setAvaliacoesPendentes] =
  /* istanbul ignore next */
  (cov_mi9hjnw4d().s[9]++, (0, _react.useState)([]));
  const [estatisticas, setEstatisticas] =
  /* istanbul ignore next */
  (cov_mi9hjnw4d().s[10]++, (0, _react.useState)(null));
  const [configuracao, setConfiguracao] =
  /* istanbul ignore next */
  (cov_mi9hjnw4d().s[11]++, (0, _react.useState)(null));
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_mi9hjnw4d().s[12]++, (0, _react.useState)(true));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_mi9hjnw4d().s[13]++, (0, _react.useState)(null));
  const fetchData =
  /* istanbul ignore next */
  (cov_mi9hjnw4d().s[14]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_mi9hjnw4d().f[5]++;
    cov_mi9hjnw4d().s[15]++;
    try {
      /* istanbul ignore next */
      cov_mi9hjnw4d().s[16]++;
      setLoading(true);
      /* istanbul ignore next */
      cov_mi9hjnw4d().s[17]++;
      setError(null);
      // Buscar avaliações pendentes
      const avaliacoes =
      /* istanbul ignore next */
      (cov_mi9hjnw4d().s[18]++, await (0, _notificacoesavaliacoes.buscarAvaliacoesPendentesUsuario)(usuarioId));
      /* istanbul ignore next */
      cov_mi9hjnw4d().s[19]++;
      setAvaliacoesPendentes(avaliacoes);
      // Gerar estatísticas
      const stats =
      /* istanbul ignore next */
      (cov_mi9hjnw4d().s[20]++, await (0, _notificacoesavaliacoes.gerarEstatisticasNotificacoes)(usuarioId));
      /* istanbul ignore next */
      cov_mi9hjnw4d().s[21]++;
      setEstatisticas(stats);
      // Buscar configuração
      const config =
      /* istanbul ignore next */
      (cov_mi9hjnw4d().s[22]++, await (0, _notificacoesavaliacoes.buscarConfiguracaoNotificacao)(usuarioId));
      /* istanbul ignore next */
      cov_mi9hjnw4d().s[23]++;
      setConfiguracao(config);
    } catch (err) {
      /* istanbul ignore next */
      cov_mi9hjnw4d().s[24]++;
      console.error('Erro ao buscar notificações:', err);
      /* istanbul ignore next */
      cov_mi9hjnw4d().s[25]++;
      setError(err instanceof Error ?
      /* istanbul ignore next */
      (cov_mi9hjnw4d().b[2][0]++, err.message) :
      /* istanbul ignore next */
      (cov_mi9hjnw4d().b[2][1]++, 'Erro desconhecido'));
    } finally {
      /* istanbul ignore next */
      cov_mi9hjnw4d().s[26]++;
      setLoading(false);
    }
  }, [usuarioId]));
  // Carregar dados iniciais
  /* istanbul ignore next */
  cov_mi9hjnw4d().s[27]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_mi9hjnw4d().f[6]++;
    cov_mi9hjnw4d().s[28]++;
    fetchData();
  }, [fetchData]);
  // Auto-refresh
  /* istanbul ignore next */
  cov_mi9hjnw4d().s[29]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_mi9hjnw4d().f[7]++;
    cov_mi9hjnw4d().s[30]++;
    if (!autoRefresh) {
      /* istanbul ignore next */
      cov_mi9hjnw4d().b[3][0]++;
      cov_mi9hjnw4d().s[31]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_mi9hjnw4d().b[3][1]++;
    }
    const interval =
    /* istanbul ignore next */
    (cov_mi9hjnw4d().s[32]++, setInterval(() => {
      /* istanbul ignore next */
      cov_mi9hjnw4d().f[8]++;
      cov_mi9hjnw4d().s[33]++;
      fetchData();
    }, refreshInterval));
    /* istanbul ignore next */
    cov_mi9hjnw4d().s[34]++;
    return () => {
      /* istanbul ignore next */
      cov_mi9hjnw4d().f[9]++;
      cov_mi9hjnw4d().s[35]++;
      return clearInterval(interval);
    };
  }, [autoRefresh, refreshInterval, fetchData]);
  const marcarComoLida =
  /* istanbul ignore next */
  (cov_mi9hjnw4d().s[36]++, (0, _react.useCallback)(avaliacaoId => {
    /* istanbul ignore next */
    cov_mi9hjnw4d().f[10]++;
    cov_mi9hjnw4d().s[37]++;
    // Por enquanto, apenas remove da lista local
    // Em uma implementação real, isso seria persistido no backend
    setAvaliacoesPendentes(prev => {
      /* istanbul ignore next */
      cov_mi9hjnw4d().f[11]++;
      cov_mi9hjnw4d().s[38]++;
      return prev.filter(avaliacao => {
        /* istanbul ignore next */
        cov_mi9hjnw4d().f[12]++;
        cov_mi9hjnw4d().s[39]++;
        return avaliacao.id !== avaliacaoId;
      });
    });
    // Atualizar estatísticas
    /* istanbul ignore next */
    cov_mi9hjnw4d().s[40]++;
    if (estatisticas) {
      /* istanbul ignore next */
      cov_mi9hjnw4d().b[4][0]++;
      cov_mi9hjnw4d().s[41]++;
      setEstatisticas(prev => {
        /* istanbul ignore next */
        cov_mi9hjnw4d().f[13]++;
        cov_mi9hjnw4d().s[42]++;
        if (!prev) {
          /* istanbul ignore next */
          cov_mi9hjnw4d().b[5][0]++;
          cov_mi9hjnw4d().s[43]++;
          return null;
        } else
        /* istanbul ignore next */
        {
          cov_mi9hjnw4d().b[5][1]++;
        }
        cov_mi9hjnw4d().s[44]++;
        return {
          ...prev,
          totalPendentes: prev.totalPendentes - 1
        };
      });
    } else
    /* istanbul ignore next */
    {
      cov_mi9hjnw4d().b[4][1]++;
    }
  }, [estatisticas]));
  const atualizarConfiguracao =
  /* istanbul ignore next */
  (cov_mi9hjnw4d().s[45]++, (0, _react.useCallback)(async novaConfig => {
    /* istanbul ignore next */
    cov_mi9hjnw4d().f[14]++;
    cov_mi9hjnw4d().s[46]++;
    try {
      /* istanbul ignore next */
      cov_mi9hjnw4d().s[47]++;
      // Em uma implementação real, isso seria uma chamada para a API
      if (configuracao) {
        /* istanbul ignore next */
        cov_mi9hjnw4d().b[6][0]++;
        const configAtualizada =
        /* istanbul ignore next */
        (cov_mi9hjnw4d().s[48]++, {
          ...configuracao,
          ...novaConfig
        });
        /* istanbul ignore next */
        cov_mi9hjnw4d().s[49]++;
        setConfiguracao(configAtualizada);
      } else
      /* istanbul ignore next */
      {
        cov_mi9hjnw4d().b[6][1]++;
      }
    } catch (err) {
      /* istanbul ignore next */
      cov_mi9hjnw4d().s[50]++;
      console.error('Erro ao atualizar configuração:', err);
      /* istanbul ignore next */
      cov_mi9hjnw4d().s[51]++;
      setError(err instanceof Error ?
      /* istanbul ignore next */
      (cov_mi9hjnw4d().b[7][0]++, err.message) :
      /* istanbul ignore next */
      (cov_mi9hjnw4d().b[7][1]++, 'Erro ao atualizar configuração'));
    }
  }, [configuracao]));
  /* istanbul ignore next */
  cov_mi9hjnw4d().s[52]++;
  return {
    avaliacoesPendentes,
    estatisticas,
    configuracao,
    loading,
    error,
    refetch: fetchData,
    marcarComoLida,
    atualizarConfiguracao
  };
}
function useTemNotificacoesPendentes(usuarioId) {
  /* istanbul ignore next */
  cov_mi9hjnw4d().f[15]++;
  const [temNotificacoes, setTemNotificacoes] =
  /* istanbul ignore next */
  (cov_mi9hjnw4d().s[53]++, (0, _react.useState)(false));
  const [quantidadeTotal, setQuantidadeTotal] =
  /* istanbul ignore next */
  (cov_mi9hjnw4d().s[54]++, (0, _react.useState)(0));
  const [quantidadeCriticas, setQuantidadeCriticas] =
  /* istanbul ignore next */
  (cov_mi9hjnw4d().s[55]++, (0, _react.useState)(0));
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_mi9hjnw4d().s[56]++, (0, _react.useState)(true));
  /* istanbul ignore next */
  cov_mi9hjnw4d().s[57]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_mi9hjnw4d().f[16]++;
    cov_mi9hjnw4d().s[58]++;
    const verificarNotificacoes = async () => {
      /* istanbul ignore next */
      cov_mi9hjnw4d().f[17]++;
      cov_mi9hjnw4d().s[59]++;
      try {
        /* istanbul ignore next */
        cov_mi9hjnw4d().s[60]++;
        setLoading(true);
        const avaliacoes =
        /* istanbul ignore next */
        (cov_mi9hjnw4d().s[61]++, await (0, _notificacoesavaliacoes.buscarAvaliacoesPendentesUsuario)(usuarioId));
        const stats =
        /* istanbul ignore next */
        (cov_mi9hjnw4d().s[62]++, await (0, _notificacoesavaliacoes.gerarEstatisticasNotificacoes)(usuarioId));
        /* istanbul ignore next */
        cov_mi9hjnw4d().s[63]++;
        setTemNotificacoes(avaliacoes.length > 0);
        /* istanbul ignore next */
        cov_mi9hjnw4d().s[64]++;
        setQuantidadeTotal(stats.totalPendentes);
        /* istanbul ignore next */
        cov_mi9hjnw4d().s[65]++;
        setQuantidadeCriticas(stats.criticas);
      } catch (err) {
        /* istanbul ignore next */
        cov_mi9hjnw4d().s[66]++;
        console.error('Erro ao verificar notificações:', err);
      } finally {
        /* istanbul ignore next */
        cov_mi9hjnw4d().s[67]++;
        setLoading(false);
      }
    };
    /* istanbul ignore next */
    cov_mi9hjnw4d().s[68]++;
    verificarNotificacoes();
  }, [usuarioId]);
  /* istanbul ignore next */
  cov_mi9hjnw4d().s[69]++;
  return {
    temNotificacoes,
    quantidadeTotal,
    quantidadeCriticas,
    loading
  };
}
function useConfiguracaoNotificacoes(usuarioId) {
  /* istanbul ignore next */
  cov_mi9hjnw4d().f[18]++;
  const [configuracao, setConfiguracao] =
  /* istanbul ignore next */
  (cov_mi9hjnw4d().s[70]++, (0, _react.useState)(null));
  const [loading, setLoading] =
  /* istanbul ignore next */
  (cov_mi9hjnw4d().s[71]++, (0, _react.useState)(true));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_mi9hjnw4d().s[72]++, (0, _react.useState)(null));
  /* istanbul ignore next */
  cov_mi9hjnw4d().s[73]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_mi9hjnw4d().f[19]++;
    cov_mi9hjnw4d().s[74]++;
    const carregarConfiguracao = async () => {
      /* istanbul ignore next */
      cov_mi9hjnw4d().f[20]++;
      cov_mi9hjnw4d().s[75]++;
      try {
        /* istanbul ignore next */
        cov_mi9hjnw4d().s[76]++;
        setLoading(true);
        const config =
        /* istanbul ignore next */
        (cov_mi9hjnw4d().s[77]++, await (0, _notificacoesavaliacoes.buscarConfiguracaoNotificacao)(usuarioId));
        /* istanbul ignore next */
        cov_mi9hjnw4d().s[78]++;
        setConfiguracao(config);
      } catch (err) {
        /* istanbul ignore next */
        cov_mi9hjnw4d().s[79]++;
        console.error('Erro ao carregar configuração:', err);
        /* istanbul ignore next */
        cov_mi9hjnw4d().s[80]++;
        setError(err instanceof Error ?
        /* istanbul ignore next */
        (cov_mi9hjnw4d().b[8][0]++, err.message) :
        /* istanbul ignore next */
        (cov_mi9hjnw4d().b[8][1]++, 'Erro desconhecido'));
      } finally {
        /* istanbul ignore next */
        cov_mi9hjnw4d().s[81]++;
        setLoading(false);
      }
    };
    /* istanbul ignore next */
    cov_mi9hjnw4d().s[82]++;
    carregarConfiguracao();
  }, [usuarioId]);
  const salvarConfiguracao =
  /* istanbul ignore next */
  (cov_mi9hjnw4d().s[83]++, (0, _react.useCallback)(async novaConfig => {
    /* istanbul ignore next */
    cov_mi9hjnw4d().f[21]++;
    cov_mi9hjnw4d().s[84]++;
    try {
      /* istanbul ignore next */
      cov_mi9hjnw4d().s[85]++;
      // Em uma implementação real, isso seria uma chamada para a API
      if (configuracao) {
        /* istanbul ignore next */
        cov_mi9hjnw4d().b[9][0]++;
        const configAtualizada =
        /* istanbul ignore next */
        (cov_mi9hjnw4d().s[86]++, {
          ...configuracao,
          ...novaConfig
        });
        /* istanbul ignore next */
        cov_mi9hjnw4d().s[87]++;
        setConfiguracao(configAtualizada);
        /* istanbul ignore next */
        cov_mi9hjnw4d().s[88]++;
        return configAtualizada;
      } else
      /* istanbul ignore next */
      {
        cov_mi9hjnw4d().b[9][1]++;
      }
      cov_mi9hjnw4d().s[89]++;
      return null;
    } catch (err) {
      /* istanbul ignore next */
      cov_mi9hjnw4d().s[90]++;
      console.error('Erro ao salvar configuração:', err);
      /* istanbul ignore next */
      cov_mi9hjnw4d().s[91]++;
      setError(err instanceof Error ?
      /* istanbul ignore next */
      (cov_mi9hjnw4d().b[10][0]++, err.message) :
      /* istanbul ignore next */
      (cov_mi9hjnw4d().b[10][1]++, 'Erro ao salvar configuração'));
      /* istanbul ignore next */
      cov_mi9hjnw4d().s[92]++;
      return null;
    }
  }, [configuracao]));
  const verificarPermissaoNotificacao =
  /* istanbul ignore next */
  (cov_mi9hjnw4d().s[93]++, (0, _react.useCallback)(async tipo => {
    /* istanbul ignore next */
    cov_mi9hjnw4d().f[22]++;
    cov_mi9hjnw4d().s[94]++;
    return await (0, _notificacoesavaliacoes.deveReceberNotificacao)(usuarioId, tipo);
  }, [usuarioId]));
  /* istanbul ignore next */
  cov_mi9hjnw4d().s[95]++;
  return {
    configuracao,
    loading,
    error,
    salvarConfiguracao,
    verificarPermissaoNotificacao
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,