bd3656e24b346373e4b278aab0638131
"use strict";

/* istanbul ignore next */
function cov_guv3i2b3y() {
  var path = "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\notificacoes\\configuracao\\route.ts";
  var hash = "f393450320095c96966d6a679371f4142b9ed074";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\notificacoes\\configuracao\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 24,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 22
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 19
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 20
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 19
        }
      },
      "8": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 38
        }
      },
      "9": {
        start: {
          line: 26,
          column: 18
        },
        end: {
          line: 26,
          column: 38
        }
      },
      "10": {
        start: {
          line: 27,
          column: 14
        },
        end: {
          line: 27,
          column: 45
        }
      },
      "11": {
        start: {
          line: 28,
          column: 13
        },
        end: {
          line: 28,
          column: 27
        }
      },
      "12": {
        start: {
          line: 29,
          column: 32
        },
        end: {
          line: 29,
          column: 88
        }
      },
      "13": {
        start: {
          line: 31,
          column: 27
        },
        end: {
          line: 43,
          column: 2
        }
      },
      "14": {
        start: {
          line: 44,
          column: 38
        },
        end: {
          line: 46,
          column: 2
        }
      },
      "15": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 99,
          column: 5
        }
      },
      "16": {
        start: {
          line: 50,
          column: 24
        },
        end: {
          line: 50,
          column: 80
        }
      },
      "17": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "18": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 56,
          column: 15
        }
      },
      "19": {
        start: {
          line: 59,
          column: 33
        },
        end: {
          line: 59,
          column: 53
        }
      },
      "20": {
        start: {
          line: 60,
          column: 26
        },
        end: {
          line: 60,
          column: 74
        }
      },
      "21": {
        start: {
          line: 62,
          column: 24
        },
        end: {
          line: 62,
          column: 53
        }
      },
      "22": {
        start: {
          line: 63,
          column: 25
        },
        end: {
          line: 63,
          column: 55
        }
      },
      "23": {
        start: {
          line: 64,
          column: 33
        },
        end: {
          line: 64,
          column: 62
        }
      },
      "24": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 71,
          column: 9
        }
      },
      "25": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 70,
          column: 15
        }
      },
      "26": {
        start: {
          line: 73,
          column: 29
        },
        end: {
          line: 73,
          column: 104
        }
      },
      "27": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 80,
          column: 9
        }
      },
      "28": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 79,
          column: 15
        }
      },
      "29": {
        start: {
          line: 82,
          column: 33
        },
        end: {
          line: 82,
          column: 110
        }
      },
      "30": {
        start: {
          line: 83,
          column: 37
        },
        end: {
          line: 83,
          column: 118
        }
      },
      "31": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 91,
          column: 11
        }
      },
      "32": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 93,
          column: 77
        }
      },
      "33": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 98,
          column: 11
        }
      },
      "34": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 175,
          column: 5
        }
      },
      "35": {
        start: {
          line: 104,
          column: 24
        },
        end: {
          line: 104,
          column: 80
        }
      },
      "36": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 111,
          column: 9
        }
      },
      "37": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 110,
          column: 15
        }
      },
      "38": {
        start: {
          line: 113,
          column: 21
        },
        end: {
          line: 113,
          column: 41
        }
      },
      "39": {
        start: {
          line: 114,
          column: 51
        },
        end: {
          line: 114,
          column: 55
        }
      },
      "40": {
        start: {
          line: 116,
          column: 28
        },
        end: {
          line: 116,
          column: 56
        }
      },
      "41": {
        start: {
          line: 118,
          column: 24
        },
        end: {
          line: 118,
          column: 53
        }
      },
      "42": {
        start: {
          line: 119,
          column: 25
        },
        end: {
          line: 119,
          column: 55
        }
      },
      "43": {
        start: {
          line: 120,
          column: 33
        },
        end: {
          line: 120,
          column: 64
        }
      },
      "44": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 127,
          column: 9
        }
      },
      "45": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 126,
          column: 15
        }
      },
      "46": {
        start: {
          line: 129,
          column: 31
        },
        end: {
          line: 129,
          column: 84
        }
      },
      "47": {
        start: {
          line: 131,
          column: 34
        },
        end: {
          line: 131,
          column: 111
        }
      },
      "48": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 138,
          column: 9
        }
      },
      "49": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 137,
          column: 15
        }
      },
      "50": {
        start: {
          line: 140,
          column: 39
        },
        end: {
          line: 145,
          column: 9
        }
      },
      "51": {
        start: {
          line: 147,
          column: 37
        },
        end: {
          line: 147,
          column: 85
        }
      },
      "52": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 153,
          column: 11
        }
      },
      "53": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 159,
          column: 11
        }
      },
      "54": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 80
        }
      },
      "55": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 169,
          column: 9
        }
      },
      "56": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 168,
          column: 15
        }
      },
      "57": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 174,
          column: 11
        }
      },
      "58": {
        start: {
          line: 178,
          column: 4
        },
        end: {
          line: 247,
          column: 5
        }
      },
      "59": {
        start: {
          line: 180,
          column: 24
        },
        end: {
          line: 180,
          column: 80
        }
      },
      "60": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 187,
          column: 9
        }
      },
      "61": {
        start: {
          line: 182,
          column: 12
        },
        end: {
          line: 186,
          column: 15
        }
      },
      "62": {
        start: {
          line: 189,
          column: 21
        },
        end: {
          line: 189,
          column: 41
        }
      },
      "63": {
        start: {
          line: 191,
          column: 34
        },
        end: {
          line: 194,
          column: 9
        }
      },
      "64": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 202,
          column: 9
        }
      },
      "65": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 201,
          column: 15
        }
      },
      "66": {
        start: {
          line: 204,
          column: 37
        },
        end: {
          line: 204,
          column: 80
        }
      },
      "67": {
        start: {
          line: 206,
          column: 38
        },
        end: {
          line: 206,
          column: 134
        }
      },
      "68": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 213,
          column: 9
        }
      },
      "69": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 212,
          column: 15
        }
      },
      "70": {
        start: {
          line: 215,
          column: 33
        },
        end: {
          line: 218,
          column: 9
        }
      },
      "71": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 224,
          column: 11
        }
      },
      "72": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 231,
          column: 11
        }
      },
      "73": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 233,
          column: 76
        }
      },
      "74": {
        start: {
          line: 234,
          column: 8
        },
        end: {
          line: 241,
          column: 9
        }
      },
      "75": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 240,
          column: 15
        }
      },
      "76": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 246,
          column: 11
        }
      },
      "77": {
        start: {
          line: 250,
          column: 4
        },
        end: {
          line: 307,
          column: 5
        }
      },
      "78": {
        start: {
          line: 252,
          column: 24
        },
        end: {
          line: 252,
          column: 80
        }
      },
      "79": {
        start: {
          line: 253,
          column: 8
        },
        end: {
          line: 259,
          column: 9
        }
      },
      "80": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 258,
          column: 15
        }
      },
      "81": {
        start: {
          line: 261,
          column: 33
        },
        end: {
          line: 261,
          column: 53
        }
      },
      "82": {
        start: {
          line: 262,
          column: 26
        },
        end: {
          line: 262,
          column: 74
        }
      },
      "83": {
        start: {
          line: 264,
          column: 24
        },
        end: {
          line: 264,
          column: 53
        }
      },
      "84": {
        start: {
          line: 265,
          column: 33
        },
        end: {
          line: 265,
          column: 62
        }
      },
      "85": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 272,
          column: 9
        }
      },
      "86": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 271,
          column: 15
        }
      },
      "87": {
        start: {
          line: 274,
          column: 34
        },
        end: {
          line: 274,
          column: 109
        }
      },
      "88": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 281,
          column: 9
        }
      },
      "89": {
        start: {
          line: 276,
          column: 12
        },
        end: {
          line: 280,
          column: 15
        }
      },
      "90": {
        start: {
          line: 283,
          column: 39
        },
        end: {
          line: 288,
          column: 9
        }
      },
      "91": {
        start: {
          line: 290,
          column: 8
        },
        end: {
          line: 294,
          column: 11
        }
      },
      "92": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 299,
          column: 11
        }
      },
      "93": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 301,
          column: 80
        }
      },
      "94": {
        start: {
          line: 302,
          column: 8
        },
        end: {
          line: 306,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 18
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 15
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 16
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 15
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "GET",
        decl: {
          start: {
            line: 47,
            column: 15
          },
          end: {
            line: 47,
            column: 18
          }
        },
        loc: {
          start: {
            line: 47,
            column: 28
          },
          end: {
            line: 100,
            column: 1
          }
        },
        line: 47
      },
      "6": {
        name: "PUT",
        decl: {
          start: {
            line: 101,
            column: 15
          },
          end: {
            line: 101,
            column: 18
          }
        },
        loc: {
          start: {
            line: 101,
            column: 28
          },
          end: {
            line: 176,
            column: 1
          }
        },
        line: 101
      },
      "7": {
        name: "POST",
        decl: {
          start: {
            line: 177,
            column: 15
          },
          end: {
            line: 177,
            column: 19
          }
        },
        loc: {
          start: {
            line: 177,
            column: 29
          },
          end: {
            line: 248,
            column: 1
          }
        },
        line: 177
      },
      "8": {
        name: "DELETE",
        decl: {
          start: {
            line: 249,
            column: 15
          },
          end: {
            line: 249,
            column: 21
          }
        },
        loc: {
          start: {
            line: 249,
            column: 31
          },
          end: {
            line: 308,
            column: 1
          }
        },
        line: 249
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "1": {
        loc: {
          start: {
            line: 60,
            column: 26
          },
          end: {
            line: 60,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 26
          },
          end: {
            line: 60,
            column: 55
          }
        }, {
          start: {
            line: 60,
            column: 59
          },
          end: {
            line: 60,
            column: 74
          }
        }],
        line: 60
      },
      "2": {
        loc: {
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "3": {
        loc: {
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 65,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 65,
            column: 20
          }
        }, {
          start: {
            line: 65,
            column: 24
          },
          end: {
            line: 65,
            column: 33
          }
        }, {
          start: {
            line: 65,
            column: 37
          },
          end: {
            line: 65,
            column: 54
          }
        }],
        line: 65
      },
      "4": {
        loc: {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 80,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 80,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "5": {
        loc: {
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 111,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 111,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "6": {
        loc: {
          start: {
            line: 116,
            column: 28
          },
          end: {
            line: 116,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 28
          },
          end: {
            line: 116,
            column: 37
          }
        }, {
          start: {
            line: 116,
            column: 41
          },
          end: {
            line: 116,
            column: 56
          }
        }],
        line: 116
      },
      "7": {
        loc: {
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "8": {
        loc: {
          start: {
            line: 121,
            column: 12
          },
          end: {
            line: 121,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 121,
            column: 12
          },
          end: {
            line: 121,
            column: 20
          }
        }, {
          start: {
            line: 121,
            column: 24
          },
          end: {
            line: 121,
            column: 33
          }
        }, {
          start: {
            line: 121,
            column: 37
          },
          end: {
            line: 121,
            column: 54
          }
        }],
        line: 121
      },
      "9": {
        loc: {
          start: {
            line: 132,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 132
      },
      "10": {
        loc: {
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 169,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 169,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 162
      },
      "11": {
        loc: {
          start: {
            line: 181,
            column: 8
          },
          end: {
            line: 187,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 181,
            column: 8
          },
          end: {
            line: 187,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 181
      },
      "12": {
        loc: {
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 202,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 202,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 196
      },
      "13": {
        loc: {
          start: {
            line: 196,
            column: 12
          },
          end: {
            line: 196,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 196,
            column: 12
          },
          end: {
            line: 196,
            column: 59
          }
        }, {
          start: {
            line: 196,
            column: 63
          },
          end: {
            line: 196,
            column: 92
          }
        }],
        line: 196
      },
      "14": {
        loc: {
          start: {
            line: 207,
            column: 8
          },
          end: {
            line: 213,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 207,
            column: 8
          },
          end: {
            line: 213,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 207
      },
      "15": {
        loc: {
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 241,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 8
          },
          end: {
            line: 241,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "16": {
        loc: {
          start: {
            line: 253,
            column: 8
          },
          end: {
            line: 259,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 253,
            column: 8
          },
          end: {
            line: 259,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 253
      },
      "17": {
        loc: {
          start: {
            line: 262,
            column: 26
          },
          end: {
            line: 262,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 262,
            column: 26
          },
          end: {
            line: 262,
            column: 55
          }
        }, {
          start: {
            line: 262,
            column: 59
          },
          end: {
            line: 262,
            column: 74
          }
        }],
        line: 262
      },
      "18": {
        loc: {
          start: {
            line: 266,
            column: 8
          },
          end: {
            line: 272,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 266,
            column: 8
          },
          end: {
            line: 272,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 266
      },
      "19": {
        loc: {
          start: {
            line: 266,
            column: 12
          },
          end: {
            line: 266,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 266,
            column: 12
          },
          end: {
            line: 266,
            column: 20
          }
        }, {
          start: {
            line: 266,
            column: 24
          },
          end: {
            line: 266,
            column: 41
          }
        }],
        line: 266
      },
      "20": {
        loc: {
          start: {
            line: 275,
            column: 8
          },
          end: {
            line: 281,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 275,
            column: 8
          },
          end: {
            line: 281,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 275
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\notificacoes\\configuracao\\route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { getServerSession } from 'next-auth';\nimport { authOptions } from '@/lib/auth';\nimport { z } from 'zod';\nimport {\n  buscarConfiguracaoNotificacao,\n  deveReceberNotificacao\n} from '@/lib/utils/notificacoes-avaliacoes';\n\n// Schema para valida\xE7\xE3o da configura\xE7\xE3o\nconst configuracaoSchema = z.object({\n  usuarioId: z.string(),\n  notificacoesEmail: z.boolean(),\n  notificacoesInterface: z.boolean(),\n  diasAntecedencia: z.number().min(1).max(30),\n  horarioEnvio: z.string().regex(/^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/, 'Formato de hor\xE1rio inv\xE1lido (HH:mm)'),\n  frequenciaLembretes: z.enum(['diario', 'semanal', 'personalizado']),\n  ativo: z.boolean()\n});\n\nconst atualizacaoConfiguracaoSchema = configuracaoSchema.partial().omit({ usuarioId: true });\n\n/**\n * GET /api/notificacoes/configuracao\n * Busca configura\xE7\xF5es de notifica\xE7\xE3o do usu\xE1rio\n */\nexport async function GET(request: NextRequest) {\n  try {\n    // Verificar autentica\xE7\xE3o\n    const session = await getServerSession(authOptions);\n    if (!session?.user) {\n      return NextResponse.json(\n        { error: 'N\xE3o autorizado' },\n        { status: 401 }\n      );\n    }\n\n    // Extrair par\xE2metros da URL\n    const { searchParams } = new URL(request.url);\n    const usuarioId = searchParams.get('usuarioId') || session.user.id;\n\n    // Verificar permiss\xF5es\n    const isAdmin = session.user.tipo === 'ADMIN';\n    const isGestor = session.user.tipo === 'GESTOR';\n    const isProprioUsuario = usuarioId === session.user.id;\n\n    if (!isAdmin && !isGestor && !isProprioUsuario) {\n      return NextResponse.json(\n        { error: 'Sem permiss\xE3o para acessar essa configura\xE7\xE3o' },\n        { status: 403 }\n      );\n    }\n\n    // Buscar configura\xE7\xE3o\n    const configuracao = await buscarConfiguracaoNotificacao(usuarioId);\n\n    if (!configuracao) {\n      return NextResponse.json(\n        { error: 'Configura\xE7\xE3o n\xE3o encontrada' },\n        { status: 404 }\n      );\n    }\n\n    // Verificar permiss\xF5es espec\xEDficas\n    const podeReceberEmail = await deveReceberNotificacao(usuarioId, 'email');\n    const podeReceberInterface = await deveReceberNotificacao(usuarioId, 'interface');\n\n    return NextResponse.json({\n      configuracao,\n      permissoes: {\n        email: podeReceberEmail,\n        interface: podeReceberInterface\n      },\n      timestamp: new Date().toISOString()\n    });\n\n  } catch (error) {\n    console.error('Erro ao buscar configura\xE7\xE3o de notifica\xE7\xF5es:', error);\n    return NextResponse.json(\n      { error: 'Erro interno do servidor' },\n      { status: 500 }\n    );\n  }\n}\n\n/**\n * PUT /api/notificacoes/configuracao\n * Atualiza configura\xE7\xF5es de notifica\xE7\xE3o do usu\xE1rio\n */\nexport async function PUT(request: NextRequest) {\n  try {\n    // Verificar autentica\xE7\xE3o\n    const session = await getServerSession(authOptions);\n    if (!session?.user) {\n      return NextResponse.json(\n        { error: 'N\xE3o autorizado' },\n        { status: 401 }\n      );\n    }\n\n    // Extrair dados do corpo da requisi\xE7\xE3o\n    const body = await request.json();\n    const { usuarioId, ...dadosAtualizacao } = body;\n\n    // Usar o usu\xE1rio da sess\xE3o se n\xE3o especificado\n    const usuarioAlvo = usuarioId || session.user.id;\n\n    // Verificar permiss\xF5es\n    const isAdmin = session.user.tipo === 'ADMIN';\n    const isGestor = session.user.tipo === 'GESTOR';\n    const isProprioUsuario = usuarioAlvo === session.user.id;\n\n    if (!isAdmin && !isGestor && !isProprioUsuario) {\n      return NextResponse.json(\n        { error: 'Sem permiss\xE3o para alterar essa configura\xE7\xE3o' },\n        { status: 403 }\n      );\n    }\n\n    // Validar dados\n    const dadosValidados = atualizacaoConfiguracaoSchema.parse(dadosAtualizacao);\n\n    // Buscar configura\xE7\xE3o atual\n    const configuracaoAtual = await buscarConfiguracaoNotificacao(usuarioAlvo);\n    \n    if (!configuracaoAtual) {\n      return NextResponse.json(\n        { error: 'Configura\xE7\xE3o n\xE3o encontrada' },\n        { status: 404 }\n      );\n    }\n\n    // Simular atualiza\xE7\xE3o (em uma implementa\xE7\xE3o real, isso seria persistido no banco)\n    const configuracaoAtualizada = {\n      ...configuracaoAtual,\n      ...dadosValidados,\n      // Sempre manter o usuarioId original\n      usuarioId: configuracaoAtual.usuarioId\n    };\n\n    // Validar configura\xE7\xE3o completa\n    const configuracaoCompleta = configuracaoSchema.parse(configuracaoAtualizada);\n\n    // Log da altera\xE7\xE3o (em produ\xE7\xE3o, isso seria salvo no banco)\n    console.log(`Configura\xE7\xE3o de notifica\xE7\xF5es atualizada para usu\xE1rio ${usuarioAlvo}:`, {\n      alteracoes: dadosValidados,\n      usuario: session.user.id,\n      timestamp: new Date().toISOString()\n    });\n\n    return NextResponse.json({\n      configuracao: configuracaoCompleta,\n      alteracoes: dadosValidados,\n      timestamp: new Date().toISOString(),\n      message: 'Configura\xE7\xE3o atualizada com sucesso'\n    });\n\n  } catch (error) {\n    console.error('Erro ao atualizar configura\xE7\xE3o de notifica\xE7\xF5es:', error);\n    \n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        { \n          error: 'Dados inv\xE1lidos',\n          details: error.errors\n        },\n        { status: 400 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: 'Erro interno do servidor' },\n      { status: 500 }\n    );\n  }\n}\n\n/**\n * POST /api/notificacoes/configuracao\n * Cria uma nova configura\xE7\xE3o de notifica\xE7\xE3o\n */\nexport async function POST(request: NextRequest) {\n  try {\n    // Verificar autentica\xE7\xE3o\n    const session = await getServerSession(authOptions);\n    if (!session?.user) {\n      return NextResponse.json(\n        { error: 'N\xE3o autorizado' },\n        { status: 401 }\n      );\n    }\n\n    // Extrair dados do corpo da requisi\xE7\xE3o\n    const body = await request.json();\n    \n    // Usar o usu\xE1rio da sess\xE3o se n\xE3o especificado\n    const dadosConfiguracao = {\n      usuarioId: session.user.id,\n      ...body\n    };\n\n    // Verificar permiss\xF5es (apenas admins podem criar configura\xE7\xF5es para outros usu\xE1rios)\n    if (dadosConfiguracao.usuarioId !== session.user.id && session.user.tipo !== 'ADMIN') {\n      return NextResponse.json(\n        { error: 'Sem permiss\xE3o para criar configura\xE7\xE3o para outro usu\xE1rio' },\n        { status: 403 }\n      );\n    }\n\n    // Validar dados\n    const configuracaoValidada = configuracaoSchema.parse(dadosConfiguracao);\n\n    // Verificar se j\xE1 existe configura\xE7\xE3o\n    const configuracaoExistente = await buscarConfiguracaoNotificacao(configuracaoValidada.usuarioId);\n    \n    if (configuracaoExistente) {\n      return NextResponse.json(\n        { error: 'Configura\xE7\xE3o j\xE1 existe para este usu\xE1rio. Use PUT para atualizar.' },\n        { status: 409 }\n      );\n    }\n\n    // Simular cria\xE7\xE3o (em uma implementa\xE7\xE3o real, isso seria salvo no banco)\n    const novaConfiguracao = {\n      ...configuracaoValidada,\n      id: `config-${configuracaoValidada.usuarioId}-${Date.now()}`\n    };\n\n    // Log da cria\xE7\xE3o\n    console.log(`Nova configura\xE7\xE3o de notifica\xE7\xF5es criada:`, {\n      configuracao: novaConfiguracao,\n      criadoPor: session.user.id,\n      timestamp: new Date().toISOString()\n    });\n\n    return NextResponse.json({\n      configuracao: novaConfiguracao,\n      timestamp: new Date().toISOString(),\n      message: 'Configura\xE7\xE3o criada com sucesso'\n    }, { status: 201 });\n\n  } catch (error) {\n    console.error('Erro ao criar configura\xE7\xE3o de notifica\xE7\xF5es:', error);\n    \n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        { \n          error: 'Dados inv\xE1lidos',\n          details: error.errors\n        },\n        { status: 400 }\n      );\n    }\n\n    return NextResponse.json(\n      { error: 'Erro interno do servidor' },\n      { status: 500 }\n    );\n  }\n}\n\n/**\n * DELETE /api/notificacoes/configuracao\n * Remove configura\xE7\xE3o de notifica\xE7\xE3o (desativa)\n */\nexport async function DELETE(request: NextRequest) {\n  try {\n    // Verificar autentica\xE7\xE3o\n    const session = await getServerSession(authOptions);\n    if (!session?.user) {\n      return NextResponse.json(\n        { error: 'N\xE3o autorizado' },\n        { status: 401 }\n      );\n    }\n\n    // Extrair par\xE2metros da URL\n    const { searchParams } = new URL(request.url);\n    const usuarioId = searchParams.get('usuarioId') || session.user.id;\n\n    // Verificar permiss\xF5es\n    const isAdmin = session.user.tipo === 'ADMIN';\n    const isProprioUsuario = usuarioId === session.user.id;\n\n    if (!isAdmin && !isProprioUsuario) {\n      return NextResponse.json(\n        { error: 'Sem permiss\xE3o para remover essa configura\xE7\xE3o' },\n        { status: 403 }\n      );\n    }\n\n    // Buscar configura\xE7\xE3o atual\n    const configuracaoAtual = await buscarConfiguracaoNotificacao(usuarioId);\n    \n    if (!configuracaoAtual) {\n      return NextResponse.json(\n        { error: 'Configura\xE7\xE3o n\xE3o encontrada' },\n        { status: 404 }\n      );\n    }\n\n    // Em vez de deletar, desativar a configura\xE7\xE3o\n    const configuracaoDesativada = {\n      ...configuracaoAtual,\n      ativo: false,\n      notificacoesEmail: false,\n      notificacoesInterface: false\n    };\n\n    // Log da desativa\xE7\xE3o\n    console.log(`Configura\xE7\xE3o de notifica\xE7\xF5es desativada:`, {\n      usuarioId,\n      desativadoPor: session.user.id,\n      timestamp: new Date().toISOString()\n    });\n\n    return NextResponse.json({\n      configuracao: configuracaoDesativada,\n      timestamp: new Date().toISOString(),\n      message: 'Configura\xE7\xE3o desativada com sucesso'\n    });\n\n  } catch (error) {\n    console.error('Erro ao desativar configura\xE7\xE3o de notifica\xE7\xF5es:', error);\n    return NextResponse.json(\n      { error: 'Erro interno do servidor' },\n      { status: 500 }\n    );\n  }\n}"],
      names: ["DELETE", "GET", "POST", "PUT", "configuracaoSchema", "z", "object", "usuarioId", "string", "notificacoesEmail", "boolean", "notificacoesInterface", "diasAntecedencia", "number", "min", "max", "horarioEnvio", "regex", "frequenciaLembretes", "enum", "ativo", "atualizacaoConfiguracaoSchema", "partial", "omit", "request", "session", "getServerSession", "authOptions", "user", "NextResponse", "json", "error", "status", "searchParams", "URL", "url", "get", "id", "isAdmin", "tipo", "isGestor", "isProprioUsuario", "configuracao", "buscarConfiguracaoNotificacao", "podeReceberEmail", "deveReceberNotificacao", "podeReceberInterface", "permissoes", "email", "interface", "timestamp", "Date", "toISOString", "console", "body", "dadosAtualizacao", "usuarioAlvo", "dadosValidados", "parse", "configuracaoAtual", "configuracaoAtualizada", "configuracaoCompleta", "log", "alteracoes", "usuario", "message", "ZodError", "details", "errors", "dadosConfiguracao", "configuracaoValidada", "configuracaoExistente", "novaConfiguracao", "now", "criadoPor", "configuracaoDesativada", "desativadoPor"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f393450320095c96966d6a679371f4142b9ed074"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_guv3i2b3y = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_guv3i2b3y();
cov_guv3i2b3y().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_guv3i2b3y().f[0]++;
  cov_guv3i2b3y().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_guv3i2b3y().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_guv3i2b3y().s[3]++;
_export(exports, {
  get DELETE() {
    /* istanbul ignore next */
    cov_guv3i2b3y().f[1]++;
    cov_guv3i2b3y().s[4]++;
    return DELETE;
  },
  get GET() {
    /* istanbul ignore next */
    cov_guv3i2b3y().f[2]++;
    cov_guv3i2b3y().s[5]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_guv3i2b3y().f[3]++;
    cov_guv3i2b3y().s[6]++;
    return POST;
  },
  get PUT() {
    /* istanbul ignore next */
    cov_guv3i2b3y().f[4]++;
    cov_guv3i2b3y().s[7]++;
    return PUT;
  }
});
const _server =
/* istanbul ignore next */
(cov_guv3i2b3y().s[8]++, require("next/server"));
const _nextauth =
/* istanbul ignore next */
(cov_guv3i2b3y().s[9]++, require("next-auth"));
const _auth =
/* istanbul ignore next */
(cov_guv3i2b3y().s[10]++, require("../../../../lib/auth"));
const _zod =
/* istanbul ignore next */
(cov_guv3i2b3y().s[11]++, require("zod"));
const _notificacoesavaliacoes =
/* istanbul ignore next */
(cov_guv3i2b3y().s[12]++, require("../../../../lib/utils/notificacoes-avaliacoes"));
// Schema para validação da configuração
const configuracaoSchema =
/* istanbul ignore next */
(cov_guv3i2b3y().s[13]++, _zod.z.object({
  usuarioId: _zod.z.string(),
  notificacoesEmail: _zod.z.boolean(),
  notificacoesInterface: _zod.z.boolean(),
  diasAntecedencia: _zod.z.number().min(1).max(30),
  horarioEnvio: _zod.z.string().regex(/^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/, 'Formato de horário inválido (HH:mm)'),
  frequenciaLembretes: _zod.z.enum(['diario', 'semanal', 'personalizado']),
  ativo: _zod.z.boolean()
}));
const atualizacaoConfiguracaoSchema =
/* istanbul ignore next */
(cov_guv3i2b3y().s[14]++, configuracaoSchema.partial().omit({
  usuarioId: true
}));
async function GET(request) {
  /* istanbul ignore next */
  cov_guv3i2b3y().f[5]++;
  cov_guv3i2b3y().s[15]++;
  try {
    // Verificar autenticação
    const session =
    /* istanbul ignore next */
    (cov_guv3i2b3y().s[16]++, await (0, _nextauth.getServerSession)(_auth.authOptions));
    /* istanbul ignore next */
    cov_guv3i2b3y().s[17]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_guv3i2b3y().b[0][0]++;
      cov_guv3i2b3y().s[18]++;
      return _server.NextResponse.json({
        error: 'Não autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_guv3i2b3y().b[0][1]++;
    }
    // Extrair parâmetros da URL
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_guv3i2b3y().s[19]++, new URL(request.url));
    const usuarioId =
    /* istanbul ignore next */
    (cov_guv3i2b3y().s[20]++,
    /* istanbul ignore next */
    (cov_guv3i2b3y().b[1][0]++, searchParams.get('usuarioId')) ||
    /* istanbul ignore next */
    (cov_guv3i2b3y().b[1][1]++, session.user.id));
    // Verificar permissões
    const isAdmin =
    /* istanbul ignore next */
    (cov_guv3i2b3y().s[21]++, session.user.tipo === 'ADMIN');
    const isGestor =
    /* istanbul ignore next */
    (cov_guv3i2b3y().s[22]++, session.user.tipo === 'GESTOR');
    const isProprioUsuario =
    /* istanbul ignore next */
    (cov_guv3i2b3y().s[23]++, usuarioId === session.user.id);
    /* istanbul ignore next */
    cov_guv3i2b3y().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_guv3i2b3y().b[3][0]++, !isAdmin) &&
    /* istanbul ignore next */
    (cov_guv3i2b3y().b[3][1]++, !isGestor) &&
    /* istanbul ignore next */
    (cov_guv3i2b3y().b[3][2]++, !isProprioUsuario)) {
      /* istanbul ignore next */
      cov_guv3i2b3y().b[2][0]++;
      cov_guv3i2b3y().s[25]++;
      return _server.NextResponse.json({
        error: 'Sem permissão para acessar essa configuração'
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_guv3i2b3y().b[2][1]++;
    }
    // Buscar configuração
    const configuracao =
    /* istanbul ignore next */
    (cov_guv3i2b3y().s[26]++, await (0, _notificacoesavaliacoes.buscarConfiguracaoNotificacao)(usuarioId));
    /* istanbul ignore next */
    cov_guv3i2b3y().s[27]++;
    if (!configuracao) {
      /* istanbul ignore next */
      cov_guv3i2b3y().b[4][0]++;
      cov_guv3i2b3y().s[28]++;
      return _server.NextResponse.json({
        error: 'Configuração não encontrada'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_guv3i2b3y().b[4][1]++;
    }
    // Verificar permissões específicas
    const podeReceberEmail =
    /* istanbul ignore next */
    (cov_guv3i2b3y().s[29]++, await (0, _notificacoesavaliacoes.deveReceberNotificacao)(usuarioId, 'email'));
    const podeReceberInterface =
    /* istanbul ignore next */
    (cov_guv3i2b3y().s[30]++, await (0, _notificacoesavaliacoes.deveReceberNotificacao)(usuarioId, 'interface'));
    /* istanbul ignore next */
    cov_guv3i2b3y().s[31]++;
    return _server.NextResponse.json({
      configuracao,
      permissoes: {
        email: podeReceberEmail,
        interface: podeReceberInterface
      },
      timestamp: new Date().toISOString()
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_guv3i2b3y().s[32]++;
    console.error('Erro ao buscar configuração de notificações:', error);
    /* istanbul ignore next */
    cov_guv3i2b3y().s[33]++;
    return _server.NextResponse.json({
      error: 'Erro interno do servidor'
    }, {
      status: 500
    });
  }
}
async function PUT(request) {
  /* istanbul ignore next */
  cov_guv3i2b3y().f[6]++;
  cov_guv3i2b3y().s[34]++;
  try {
    // Verificar autenticação
    const session =
    /* istanbul ignore next */
    (cov_guv3i2b3y().s[35]++, await (0, _nextauth.getServerSession)(_auth.authOptions));
    /* istanbul ignore next */
    cov_guv3i2b3y().s[36]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_guv3i2b3y().b[5][0]++;
      cov_guv3i2b3y().s[37]++;
      return _server.NextResponse.json({
        error: 'Não autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_guv3i2b3y().b[5][1]++;
    }
    // Extrair dados do corpo da requisição
    const body =
    /* istanbul ignore next */
    (cov_guv3i2b3y().s[38]++, await request.json());
    const {
      usuarioId,
      ...dadosAtualizacao
    } =
    /* istanbul ignore next */
    (cov_guv3i2b3y().s[39]++, body);
    // Usar o usuário da sessão se não especificado
    const usuarioAlvo =
    /* istanbul ignore next */
    (cov_guv3i2b3y().s[40]++,
    /* istanbul ignore next */
    (cov_guv3i2b3y().b[6][0]++, usuarioId) ||
    /* istanbul ignore next */
    (cov_guv3i2b3y().b[6][1]++, session.user.id));
    // Verificar permissões
    const isAdmin =
    /* istanbul ignore next */
    (cov_guv3i2b3y().s[41]++, session.user.tipo === 'ADMIN');
    const isGestor =
    /* istanbul ignore next */
    (cov_guv3i2b3y().s[42]++, session.user.tipo === 'GESTOR');
    const isProprioUsuario =
    /* istanbul ignore next */
    (cov_guv3i2b3y().s[43]++, usuarioAlvo === session.user.id);
    /* istanbul ignore next */
    cov_guv3i2b3y().s[44]++;
    if (
    /* istanbul ignore next */
    (cov_guv3i2b3y().b[8][0]++, !isAdmin) &&
    /* istanbul ignore next */
    (cov_guv3i2b3y().b[8][1]++, !isGestor) &&
    /* istanbul ignore next */
    (cov_guv3i2b3y().b[8][2]++, !isProprioUsuario)) {
      /* istanbul ignore next */
      cov_guv3i2b3y().b[7][0]++;
      cov_guv3i2b3y().s[45]++;
      return _server.NextResponse.json({
        error: 'Sem permissão para alterar essa configuração'
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_guv3i2b3y().b[7][1]++;
    }
    // Validar dados
    const dadosValidados =
    /* istanbul ignore next */
    (cov_guv3i2b3y().s[46]++, atualizacaoConfiguracaoSchema.parse(dadosAtualizacao));
    // Buscar configuração atual
    const configuracaoAtual =
    /* istanbul ignore next */
    (cov_guv3i2b3y().s[47]++, await (0, _notificacoesavaliacoes.buscarConfiguracaoNotificacao)(usuarioAlvo));
    /* istanbul ignore next */
    cov_guv3i2b3y().s[48]++;
    if (!configuracaoAtual) {
      /* istanbul ignore next */
      cov_guv3i2b3y().b[9][0]++;
      cov_guv3i2b3y().s[49]++;
      return _server.NextResponse.json({
        error: 'Configuração não encontrada'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_guv3i2b3y().b[9][1]++;
    }
    // Simular atualização (em uma implementação real, isso seria persistido no banco)
    const configuracaoAtualizada =
    /* istanbul ignore next */
    (cov_guv3i2b3y().s[50]++, {
      ...configuracaoAtual,
      ...dadosValidados,
      // Sempre manter o usuarioId original
      usuarioId: configuracaoAtual.usuarioId
    });
    // Validar configuração completa
    const configuracaoCompleta =
    /* istanbul ignore next */
    (cov_guv3i2b3y().s[51]++, configuracaoSchema.parse(configuracaoAtualizada));
    // Log da alteração (em produção, isso seria salvo no banco)
    /* istanbul ignore next */
    cov_guv3i2b3y().s[52]++;
    console.log(`Configuração de notificações atualizada para usuário ${usuarioAlvo}:`, {
      alteracoes: dadosValidados,
      usuario: session.user.id,
      timestamp: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_guv3i2b3y().s[53]++;
    return _server.NextResponse.json({
      configuracao: configuracaoCompleta,
      alteracoes: dadosValidados,
      timestamp: new Date().toISOString(),
      message: 'Configuração atualizada com sucesso'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_guv3i2b3y().s[54]++;
    console.error('Erro ao atualizar configuração de notificações:', error);
    /* istanbul ignore next */
    cov_guv3i2b3y().s[55]++;
    if (error instanceof _zod.z.ZodError) {
      /* istanbul ignore next */
      cov_guv3i2b3y().b[10][0]++;
      cov_guv3i2b3y().s[56]++;
      return _server.NextResponse.json({
        error: 'Dados inválidos',
        details: error.errors
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_guv3i2b3y().b[10][1]++;
    }
    cov_guv3i2b3y().s[57]++;
    return _server.NextResponse.json({
      error: 'Erro interno do servidor'
    }, {
      status: 500
    });
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_guv3i2b3y().f[7]++;
  cov_guv3i2b3y().s[58]++;
  try {
    // Verificar autenticação
    const session =
    /* istanbul ignore next */
    (cov_guv3i2b3y().s[59]++, await (0, _nextauth.getServerSession)(_auth.authOptions));
    /* istanbul ignore next */
    cov_guv3i2b3y().s[60]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_guv3i2b3y().b[11][0]++;
      cov_guv3i2b3y().s[61]++;
      return _server.NextResponse.json({
        error: 'Não autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_guv3i2b3y().b[11][1]++;
    }
    // Extrair dados do corpo da requisição
    const body =
    /* istanbul ignore next */
    (cov_guv3i2b3y().s[62]++, await request.json());
    // Usar o usuário da sessão se não especificado
    const dadosConfiguracao =
    /* istanbul ignore next */
    (cov_guv3i2b3y().s[63]++, {
      usuarioId: session.user.id,
      ...body
    });
    // Verificar permissões (apenas admins podem criar configurações para outros usuários)
    /* istanbul ignore next */
    cov_guv3i2b3y().s[64]++;
    if (
    /* istanbul ignore next */
    (cov_guv3i2b3y().b[13][0]++, dadosConfiguracao.usuarioId !== session.user.id) &&
    /* istanbul ignore next */
    (cov_guv3i2b3y().b[13][1]++, session.user.tipo !== 'ADMIN')) {
      /* istanbul ignore next */
      cov_guv3i2b3y().b[12][0]++;
      cov_guv3i2b3y().s[65]++;
      return _server.NextResponse.json({
        error: 'Sem permissão para criar configuração para outro usuário'
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_guv3i2b3y().b[12][1]++;
    }
    // Validar dados
    const configuracaoValidada =
    /* istanbul ignore next */
    (cov_guv3i2b3y().s[66]++, configuracaoSchema.parse(dadosConfiguracao));
    // Verificar se já existe configuração
    const configuracaoExistente =
    /* istanbul ignore next */
    (cov_guv3i2b3y().s[67]++, await (0, _notificacoesavaliacoes.buscarConfiguracaoNotificacao)(configuracaoValidada.usuarioId));
    /* istanbul ignore next */
    cov_guv3i2b3y().s[68]++;
    if (configuracaoExistente) {
      /* istanbul ignore next */
      cov_guv3i2b3y().b[14][0]++;
      cov_guv3i2b3y().s[69]++;
      return _server.NextResponse.json({
        error: 'Configuração já existe para este usuário. Use PUT para atualizar.'
      }, {
        status: 409
      });
    } else
    /* istanbul ignore next */
    {
      cov_guv3i2b3y().b[14][1]++;
    }
    // Simular criação (em uma implementação real, isso seria salvo no banco)
    const novaConfiguracao =
    /* istanbul ignore next */
    (cov_guv3i2b3y().s[70]++, {
      ...configuracaoValidada,
      id: `config-${configuracaoValidada.usuarioId}-${Date.now()}`
    });
    // Log da criação
    /* istanbul ignore next */
    cov_guv3i2b3y().s[71]++;
    console.log(`Nova configuração de notificações criada:`, {
      configuracao: novaConfiguracao,
      criadoPor: session.user.id,
      timestamp: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_guv3i2b3y().s[72]++;
    return _server.NextResponse.json({
      configuracao: novaConfiguracao,
      timestamp: new Date().toISOString(),
      message: 'Configuração criada com sucesso'
    }, {
      status: 201
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_guv3i2b3y().s[73]++;
    console.error('Erro ao criar configuração de notificações:', error);
    /* istanbul ignore next */
    cov_guv3i2b3y().s[74]++;
    if (error instanceof _zod.z.ZodError) {
      /* istanbul ignore next */
      cov_guv3i2b3y().b[15][0]++;
      cov_guv3i2b3y().s[75]++;
      return _server.NextResponse.json({
        error: 'Dados inválidos',
        details: error.errors
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_guv3i2b3y().b[15][1]++;
    }
    cov_guv3i2b3y().s[76]++;
    return _server.NextResponse.json({
      error: 'Erro interno do servidor'
    }, {
      status: 500
    });
  }
}
async function DELETE(request) {
  /* istanbul ignore next */
  cov_guv3i2b3y().f[8]++;
  cov_guv3i2b3y().s[77]++;
  try {
    // Verificar autenticação
    const session =
    /* istanbul ignore next */
    (cov_guv3i2b3y().s[78]++, await (0, _nextauth.getServerSession)(_auth.authOptions));
    /* istanbul ignore next */
    cov_guv3i2b3y().s[79]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_guv3i2b3y().b[16][0]++;
      cov_guv3i2b3y().s[80]++;
      return _server.NextResponse.json({
        error: 'Não autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_guv3i2b3y().b[16][1]++;
    }
    // Extrair parâmetros da URL
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_guv3i2b3y().s[81]++, new URL(request.url));
    const usuarioId =
    /* istanbul ignore next */
    (cov_guv3i2b3y().s[82]++,
    /* istanbul ignore next */
    (cov_guv3i2b3y().b[17][0]++, searchParams.get('usuarioId')) ||
    /* istanbul ignore next */
    (cov_guv3i2b3y().b[17][1]++, session.user.id));
    // Verificar permissões
    const isAdmin =
    /* istanbul ignore next */
    (cov_guv3i2b3y().s[83]++, session.user.tipo === 'ADMIN');
    const isProprioUsuario =
    /* istanbul ignore next */
    (cov_guv3i2b3y().s[84]++, usuarioId === session.user.id);
    /* istanbul ignore next */
    cov_guv3i2b3y().s[85]++;
    if (
    /* istanbul ignore next */
    (cov_guv3i2b3y().b[19][0]++, !isAdmin) &&
    /* istanbul ignore next */
    (cov_guv3i2b3y().b[19][1]++, !isProprioUsuario)) {
      /* istanbul ignore next */
      cov_guv3i2b3y().b[18][0]++;
      cov_guv3i2b3y().s[86]++;
      return _server.NextResponse.json({
        error: 'Sem permissão para remover essa configuração'
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_guv3i2b3y().b[18][1]++;
    }
    // Buscar configuração atual
    const configuracaoAtual =
    /* istanbul ignore next */
    (cov_guv3i2b3y().s[87]++, await (0, _notificacoesavaliacoes.buscarConfiguracaoNotificacao)(usuarioId));
    /* istanbul ignore next */
    cov_guv3i2b3y().s[88]++;
    if (!configuracaoAtual) {
      /* istanbul ignore next */
      cov_guv3i2b3y().b[20][0]++;
      cov_guv3i2b3y().s[89]++;
      return _server.NextResponse.json({
        error: 'Configuração não encontrada'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_guv3i2b3y().b[20][1]++;
    }
    // Em vez de deletar, desativar a configuração
    const configuracaoDesativada =
    /* istanbul ignore next */
    (cov_guv3i2b3y().s[90]++, {
      ...configuracaoAtual,
      ativo: false,
      notificacoesEmail: false,
      notificacoesInterface: false
    });
    // Log da desativação
    /* istanbul ignore next */
    cov_guv3i2b3y().s[91]++;
    console.log(`Configuração de notificações desativada:`, {
      usuarioId,
      desativadoPor: session.user.id,
      timestamp: new Date().toISOString()
    });
    /* istanbul ignore next */
    cov_guv3i2b3y().s[92]++;
    return _server.NextResponse.json({
      configuracao: configuracaoDesativada,
      timestamp: new Date().toISOString(),
      message: 'Configuração desativada com sucesso'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_guv3i2b3y().s[93]++;
    console.error('Erro ao desativar configuração de notificações:', error);
    /* istanbul ignore next */
    cov_guv3i2b3y().s[94]++;
    return _server.NextResponse.json({
      error: 'Erro interno do servidor'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJERUxFVEUiLCJjb3ZfZ3V2M2kyYjN5IiwiZiIsInMiLCJHRVQiLCJQT1NUIiwiUFVUIiwiY29uZmlndXJhY2FvU2NoZW1hIiwiX3pvZCIsInoiLCJvYmplY3QiLCJ1c3VhcmlvSWQiLCJzdHJpbmciLCJub3RpZmljYWNvZXNFbWFpbCIsImJvb2xlYW4iLCJub3RpZmljYWNvZXNJbnRlcmZhY2UiLCJkaWFzQW50ZWNlZGVuY2lhIiwibnVtYmVyIiwibWluIiwibWF4IiwiaG9yYXJpb0VudmlvIiwicmVnZXgiLCJmcmVxdWVuY2lhTGVtYnJldGVzIiwiZW51bSIsImF0aXZvIiwiYXR1YWxpemFjYW9Db25maWd1cmFjYW9TY2hlbWEiLCJwYXJ0aWFsIiwib21pdCIsInJlcXVlc3QiLCJzZXNzaW9uIiwiX25leHRhdXRoIiwiZ2V0U2VydmVyU2Vzc2lvbiIsIl9hdXRoIiwiYXV0aE9wdGlvbnMiLCJ1c2VyIiwiYiIsIl9zZXJ2ZXIiLCJOZXh0UmVzcG9uc2UiLCJqc29uIiwiZXJyb3IiLCJzdGF0dXMiLCJzZWFyY2hQYXJhbXMiLCJVUkwiLCJ1cmwiLCJnZXQiLCJpZCIsImlzQWRtaW4iLCJ0aXBvIiwiaXNHZXN0b3IiLCJpc1Byb3ByaW9Vc3VhcmlvIiwiY29uZmlndXJhY2FvIiwiX25vdGlmaWNhY29lc2F2YWxpYWNvZXMiLCJidXNjYXJDb25maWd1cmFjYW9Ob3RpZmljYWNhbyIsInBvZGVSZWNlYmVyRW1haWwiLCJkZXZlUmVjZWJlck5vdGlmaWNhY2FvIiwicG9kZVJlY2ViZXJJbnRlcmZhY2UiLCJwZXJtaXNzb2VzIiwiZW1haWwiLCJpbnRlcmZhY2UiLCJ0aW1lc3RhbXAiLCJEYXRlIiwidG9JU09TdHJpbmciLCJjb25zb2xlIiwiYm9keSIsImRhZG9zQXR1YWxpemFjYW8iLCJ1c3VhcmlvQWx2byIsImRhZG9zVmFsaWRhZG9zIiwicGFyc2UiLCJjb25maWd1cmFjYW9BdHVhbCIsImNvbmZpZ3VyYWNhb0F0dWFsaXphZGEiLCJjb25maWd1cmFjYW9Db21wbGV0YSIsImxvZyIsImFsdGVyYWNvZXMiLCJ1c3VhcmlvIiwibWVzc2FnZSIsIlpvZEVycm9yIiwiZGV0YWlscyIsImVycm9ycyIsImRhZG9zQ29uZmlndXJhY2FvIiwiY29uZmlndXJhY2FvVmFsaWRhZGEiLCJjb25maWd1cmFjYW9FeGlzdGVudGUiLCJub3ZhQ29uZmlndXJhY2FvIiwibm93IiwiY3JpYWRvUG9yIiwiY29uZmlndXJhY2FvRGVzYXRpdmFkYSIsImRlc2F0aXZhZG9Qb3IiXSwic291cmNlcyI6WyJDOlxcVXNlcnNcXE5lcmV1IEpyXFxEb2N1bWVudHNcXERldlxcbmV3XFxzcmNcXGFwcFxcYXBpXFxub3RpZmljYWNvZXNcXGNvbmZpZ3VyYWNhb1xccm91dGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlcXVlc3QsIE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJztcbmltcG9ydCB7IGdldFNlcnZlclNlc3Npb24gfSBmcm9tICduZXh0LWF1dGgnO1xuaW1wb3J0IHsgYXV0aE9wdGlvbnMgfSBmcm9tICdAL2xpYi9hdXRoJztcbmltcG9ydCB7IHogfSBmcm9tICd6b2QnO1xuaW1wb3J0IHtcbiAgYnVzY2FyQ29uZmlndXJhY2FvTm90aWZpY2FjYW8sXG4gIGRldmVSZWNlYmVyTm90aWZpY2FjYW9cbn0gZnJvbSAnQC9saWIvdXRpbHMvbm90aWZpY2Fjb2VzLWF2YWxpYWNvZXMnO1xuXG4vLyBTY2hlbWEgcGFyYSB2YWxpZGHDp8OjbyBkYSBjb25maWd1cmHDp8Ojb1xuY29uc3QgY29uZmlndXJhY2FvU2NoZW1hID0gei5vYmplY3Qoe1xuICB1c3VhcmlvSWQ6IHouc3RyaW5nKCksXG4gIG5vdGlmaWNhY29lc0VtYWlsOiB6LmJvb2xlYW4oKSxcbiAgbm90aWZpY2Fjb2VzSW50ZXJmYWNlOiB6LmJvb2xlYW4oKSxcbiAgZGlhc0FudGVjZWRlbmNpYTogei5udW1iZXIoKS5taW4oMSkubWF4KDMwKSxcbiAgaG9yYXJpb0VudmlvOiB6LnN0cmluZygpLnJlZ2V4KC9eKFswLTFdP1swLTldfDJbMC0zXSk6WzAtNV1bMC05XSQvLCAnRm9ybWF0byBkZSBob3LDoXJpbyBpbnbDoWxpZG8gKEhIOm1tKScpLFxuICBmcmVxdWVuY2lhTGVtYnJldGVzOiB6LmVudW0oWydkaWFyaW8nLCAnc2VtYW5hbCcsICdwZXJzb25hbGl6YWRvJ10pLFxuICBhdGl2bzogei5ib29sZWFuKClcbn0pO1xuXG5jb25zdCBhdHVhbGl6YWNhb0NvbmZpZ3VyYWNhb1NjaGVtYSA9IGNvbmZpZ3VyYWNhb1NjaGVtYS5wYXJ0aWFsKCkub21pdCh7IHVzdWFyaW9JZDogdHJ1ZSB9KTtcblxuLyoqXG4gKiBHRVQgL2FwaS9ub3RpZmljYWNvZXMvY29uZmlndXJhY2FvXG4gKiBCdXNjYSBjb25maWd1cmHDp8O1ZXMgZGUgbm90aWZpY2HDp8OjbyBkbyB1c3XDoXJpb1xuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gR0VUKHJlcXVlc3Q6IE5leHRSZXF1ZXN0KSB7XG4gIHRyeSB7XG4gICAgLy8gVmVyaWZpY2FyIGF1dGVudGljYcOnw6NvXG4gICAgY29uc3Qgc2Vzc2lvbiA9IGF3YWl0IGdldFNlcnZlclNlc3Npb24oYXV0aE9wdGlvbnMpO1xuICAgIGlmICghc2Vzc2lvbj8udXNlcikge1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICB7IGVycm9yOiAnTsOjbyBhdXRvcml6YWRvJyB9LFxuICAgICAgICB7IHN0YXR1czogNDAxIH1cbiAgICAgICk7XG4gICAgfVxuXG4gICAgLy8gRXh0cmFpciBwYXLDom1ldHJvcyBkYSBVUkxcbiAgICBjb25zdCB7IHNlYXJjaFBhcmFtcyB9ID0gbmV3IFVSTChyZXF1ZXN0LnVybCk7XG4gICAgY29uc3QgdXN1YXJpb0lkID0gc2VhcmNoUGFyYW1zLmdldCgndXN1YXJpb0lkJykgfHwgc2Vzc2lvbi51c2VyLmlkO1xuXG4gICAgLy8gVmVyaWZpY2FyIHBlcm1pc3PDtWVzXG4gICAgY29uc3QgaXNBZG1pbiA9IHNlc3Npb24udXNlci50aXBvID09PSAnQURNSU4nO1xuICAgIGNvbnN0IGlzR2VzdG9yID0gc2Vzc2lvbi51c2VyLnRpcG8gPT09ICdHRVNUT1InO1xuICAgIGNvbnN0IGlzUHJvcHJpb1VzdWFyaW8gPSB1c3VhcmlvSWQgPT09IHNlc3Npb24udXNlci5pZDtcblxuICAgIGlmICghaXNBZG1pbiAmJiAhaXNHZXN0b3IgJiYgIWlzUHJvcHJpb1VzdWFyaW8pIHtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgICAgeyBlcnJvcjogJ1NlbSBwZXJtaXNzw6NvIHBhcmEgYWNlc3NhciBlc3NhIGNvbmZpZ3VyYcOnw6NvJyB9LFxuICAgICAgICB7IHN0YXR1czogNDAzIH1cbiAgICAgICk7XG4gICAgfVxuXG4gICAgLy8gQnVzY2FyIGNvbmZpZ3VyYcOnw6NvXG4gICAgY29uc3QgY29uZmlndXJhY2FvID0gYXdhaXQgYnVzY2FyQ29uZmlndXJhY2FvTm90aWZpY2FjYW8odXN1YXJpb0lkKTtcblxuICAgIGlmICghY29uZmlndXJhY2FvKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgIHsgZXJyb3I6ICdDb25maWd1cmHDp8OjbyBuw6NvIGVuY29udHJhZGEnIH0sXG4gICAgICAgIHsgc3RhdHVzOiA0MDQgfVxuICAgICAgKTtcbiAgICB9XG5cbiAgICAvLyBWZXJpZmljYXIgcGVybWlzc8O1ZXMgZXNwZWPDrWZpY2FzXG4gICAgY29uc3QgcG9kZVJlY2ViZXJFbWFpbCA9IGF3YWl0IGRldmVSZWNlYmVyTm90aWZpY2FjYW8odXN1YXJpb0lkLCAnZW1haWwnKTtcbiAgICBjb25zdCBwb2RlUmVjZWJlckludGVyZmFjZSA9IGF3YWl0IGRldmVSZWNlYmVyTm90aWZpY2FjYW8odXN1YXJpb0lkLCAnaW50ZXJmYWNlJyk7XG5cbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xuICAgICAgY29uZmlndXJhY2FvLFxuICAgICAgcGVybWlzc29lczoge1xuICAgICAgICBlbWFpbDogcG9kZVJlY2ViZXJFbWFpbCxcbiAgICAgICAgaW50ZXJmYWNlOiBwb2RlUmVjZWJlckludGVyZmFjZVxuICAgICAgfSxcbiAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpXG4gICAgfSk7XG5cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvIGFvIGJ1c2NhciBjb25maWd1cmHDp8OjbyBkZSBub3RpZmljYcOnw7VlczonLCBlcnJvcik7XG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgeyBlcnJvcjogJ0Vycm8gaW50ZXJubyBkbyBzZXJ2aWRvcicgfSxcbiAgICAgIHsgc3RhdHVzOiA1MDAgfVxuICAgICk7XG4gIH1cbn1cblxuLyoqXG4gKiBQVVQgL2FwaS9ub3RpZmljYWNvZXMvY29uZmlndXJhY2FvXG4gKiBBdHVhbGl6YSBjb25maWd1cmHDp8O1ZXMgZGUgbm90aWZpY2HDp8OjbyBkbyB1c3XDoXJpb1xuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gUFVUKHJlcXVlc3Q6IE5leHRSZXF1ZXN0KSB7XG4gIHRyeSB7XG4gICAgLy8gVmVyaWZpY2FyIGF1dGVudGljYcOnw6NvXG4gICAgY29uc3Qgc2Vzc2lvbiA9IGF3YWl0IGdldFNlcnZlclNlc3Npb24oYXV0aE9wdGlvbnMpO1xuICAgIGlmICghc2Vzc2lvbj8udXNlcikge1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICB7IGVycm9yOiAnTsOjbyBhdXRvcml6YWRvJyB9LFxuICAgICAgICB7IHN0YXR1czogNDAxIH1cbiAgICAgICk7XG4gICAgfVxuXG4gICAgLy8gRXh0cmFpciBkYWRvcyBkbyBjb3JwbyBkYSByZXF1aXNpw6fDo29cbiAgICBjb25zdCBib2R5ID0gYXdhaXQgcmVxdWVzdC5qc29uKCk7XG4gICAgY29uc3QgeyB1c3VhcmlvSWQsIC4uLmRhZG9zQXR1YWxpemFjYW8gfSA9IGJvZHk7XG5cbiAgICAvLyBVc2FyIG8gdXN1w6FyaW8gZGEgc2Vzc8OjbyBzZSBuw6NvIGVzcGVjaWZpY2Fkb1xuICAgIGNvbnN0IHVzdWFyaW9BbHZvID0gdXN1YXJpb0lkIHx8IHNlc3Npb24udXNlci5pZDtcblxuICAgIC8vIFZlcmlmaWNhciBwZXJtaXNzw7Vlc1xuICAgIGNvbnN0IGlzQWRtaW4gPSBzZXNzaW9uLnVzZXIudGlwbyA9PT0gJ0FETUlOJztcbiAgICBjb25zdCBpc0dlc3RvciA9IHNlc3Npb24udXNlci50aXBvID09PSAnR0VTVE9SJztcbiAgICBjb25zdCBpc1Byb3ByaW9Vc3VhcmlvID0gdXN1YXJpb0Fsdm8gPT09IHNlc3Npb24udXNlci5pZDtcblxuICAgIGlmICghaXNBZG1pbiAmJiAhaXNHZXN0b3IgJiYgIWlzUHJvcHJpb1VzdWFyaW8pIHtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgICAgeyBlcnJvcjogJ1NlbSBwZXJtaXNzw6NvIHBhcmEgYWx0ZXJhciBlc3NhIGNvbmZpZ3VyYcOnw6NvJyB9LFxuICAgICAgICB7IHN0YXR1czogNDAzIH1cbiAgICAgICk7XG4gICAgfVxuXG4gICAgLy8gVmFsaWRhciBkYWRvc1xuICAgIGNvbnN0IGRhZG9zVmFsaWRhZG9zID0gYXR1YWxpemFjYW9Db25maWd1cmFjYW9TY2hlbWEucGFyc2UoZGFkb3NBdHVhbGl6YWNhbyk7XG5cbiAgICAvLyBCdXNjYXIgY29uZmlndXJhw6fDo28gYXR1YWxcbiAgICBjb25zdCBjb25maWd1cmFjYW9BdHVhbCA9IGF3YWl0IGJ1c2NhckNvbmZpZ3VyYWNhb05vdGlmaWNhY2FvKHVzdWFyaW9BbHZvKTtcbiAgICBcbiAgICBpZiAoIWNvbmZpZ3VyYWNhb0F0dWFsKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgIHsgZXJyb3I6ICdDb25maWd1cmHDp8OjbyBuw6NvIGVuY29udHJhZGEnIH0sXG4gICAgICAgIHsgc3RhdHVzOiA0MDQgfVxuICAgICAgKTtcbiAgICB9XG5cbiAgICAvLyBTaW11bGFyIGF0dWFsaXphw6fDo28gKGVtIHVtYSBpbXBsZW1lbnRhw6fDo28gcmVhbCwgaXNzbyBzZXJpYSBwZXJzaXN0aWRvIG5vIGJhbmNvKVxuICAgIGNvbnN0IGNvbmZpZ3VyYWNhb0F0dWFsaXphZGEgPSB7XG4gICAgICAuLi5jb25maWd1cmFjYW9BdHVhbCxcbiAgICAgIC4uLmRhZG9zVmFsaWRhZG9zLFxuICAgICAgLy8gU2VtcHJlIG1hbnRlciBvIHVzdWFyaW9JZCBvcmlnaW5hbFxuICAgICAgdXN1YXJpb0lkOiBjb25maWd1cmFjYW9BdHVhbC51c3VhcmlvSWRcbiAgICB9O1xuXG4gICAgLy8gVmFsaWRhciBjb25maWd1cmHDp8OjbyBjb21wbGV0YVxuICAgIGNvbnN0IGNvbmZpZ3VyYWNhb0NvbXBsZXRhID0gY29uZmlndXJhY2FvU2NoZW1hLnBhcnNlKGNvbmZpZ3VyYWNhb0F0dWFsaXphZGEpO1xuXG4gICAgLy8gTG9nIGRhIGFsdGVyYcOnw6NvIChlbSBwcm9kdcOnw6NvLCBpc3NvIHNlcmlhIHNhbHZvIG5vIGJhbmNvKVxuICAgIGNvbnNvbGUubG9nKGBDb25maWd1cmHDp8OjbyBkZSBub3RpZmljYcOnw7VlcyBhdHVhbGl6YWRhIHBhcmEgdXN1w6FyaW8gJHt1c3VhcmlvQWx2b306YCwge1xuICAgICAgYWx0ZXJhY29lczogZGFkb3NWYWxpZGFkb3MsXG4gICAgICB1c3VhcmlvOiBzZXNzaW9uLnVzZXIuaWQsXG4gICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcbiAgICAgIGNvbmZpZ3VyYWNhbzogY29uZmlndXJhY2FvQ29tcGxldGEsXG4gICAgICBhbHRlcmFjb2VzOiBkYWRvc1ZhbGlkYWRvcyxcbiAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgICAgbWVzc2FnZTogJ0NvbmZpZ3VyYcOnw6NvIGF0dWFsaXphZGEgY29tIHN1Y2Vzc28nXG4gICAgfSk7XG5cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvIGFvIGF0dWFsaXphciBjb25maWd1cmHDp8OjbyBkZSBub3RpZmljYcOnw7VlczonLCBlcnJvcik7XG4gICAgXG4gICAgaWYgKGVycm9yIGluc3RhbmNlb2Ygei5ab2RFcnJvcikge1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICB7IFxuICAgICAgICAgIGVycm9yOiAnRGFkb3MgaW52w6FsaWRvcycsXG4gICAgICAgICAgZGV0YWlsczogZXJyb3IuZXJyb3JzXG4gICAgICAgIH0sXG4gICAgICAgIHsgc3RhdHVzOiA0MDAgfVxuICAgICAgKTtcbiAgICB9XG5cbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICB7IGVycm9yOiAnRXJybyBpbnRlcm5vIGRvIHNlcnZpZG9yJyB9LFxuICAgICAgeyBzdGF0dXM6IDUwMCB9XG4gICAgKTtcbiAgfVxufVxuXG4vKipcbiAqIFBPU1QgL2FwaS9ub3RpZmljYWNvZXMvY29uZmlndXJhY2FvXG4gKiBDcmlhIHVtYSBub3ZhIGNvbmZpZ3VyYcOnw6NvIGRlIG5vdGlmaWNhw6fDo29cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIFBPU1QocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcbiAgdHJ5IHtcbiAgICAvLyBWZXJpZmljYXIgYXV0ZW50aWNhw6fDo29cbiAgICBjb25zdCBzZXNzaW9uID0gYXdhaXQgZ2V0U2VydmVyU2Vzc2lvbihhdXRoT3B0aW9ucyk7XG4gICAgaWYgKCFzZXNzaW9uPy51c2VyKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgIHsgZXJyb3I6ICdOw6NvIGF1dG9yaXphZG8nIH0sXG4gICAgICAgIHsgc3RhdHVzOiA0MDEgfVxuICAgICAgKTtcbiAgICB9XG5cbiAgICAvLyBFeHRyYWlyIGRhZG9zIGRvIGNvcnBvIGRhIHJlcXVpc2nDp8Ojb1xuICAgIGNvbnN0IGJvZHkgPSBhd2FpdCByZXF1ZXN0Lmpzb24oKTtcbiAgICBcbiAgICAvLyBVc2FyIG8gdXN1w6FyaW8gZGEgc2Vzc8OjbyBzZSBuw6NvIGVzcGVjaWZpY2Fkb1xuICAgIGNvbnN0IGRhZG9zQ29uZmlndXJhY2FvID0ge1xuICAgICAgdXN1YXJpb0lkOiBzZXNzaW9uLnVzZXIuaWQsXG4gICAgICAuLi5ib2R5XG4gICAgfTtcblxuICAgIC8vIFZlcmlmaWNhciBwZXJtaXNzw7VlcyAoYXBlbmFzIGFkbWlucyBwb2RlbSBjcmlhciBjb25maWd1cmHDp8O1ZXMgcGFyYSBvdXRyb3MgdXN1w6FyaW9zKVxuICAgIGlmIChkYWRvc0NvbmZpZ3VyYWNhby51c3VhcmlvSWQgIT09IHNlc3Npb24udXNlci5pZCAmJiBzZXNzaW9uLnVzZXIudGlwbyAhPT0gJ0FETUlOJykge1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICB7IGVycm9yOiAnU2VtIHBlcm1pc3PDo28gcGFyYSBjcmlhciBjb25maWd1cmHDp8OjbyBwYXJhIG91dHJvIHVzdcOhcmlvJyB9LFxuICAgICAgICB7IHN0YXR1czogNDAzIH1cbiAgICAgICk7XG4gICAgfVxuXG4gICAgLy8gVmFsaWRhciBkYWRvc1xuICAgIGNvbnN0IGNvbmZpZ3VyYWNhb1ZhbGlkYWRhID0gY29uZmlndXJhY2FvU2NoZW1hLnBhcnNlKGRhZG9zQ29uZmlndXJhY2FvKTtcblxuICAgIC8vIFZlcmlmaWNhciBzZSBqw6EgZXhpc3RlIGNvbmZpZ3VyYcOnw6NvXG4gICAgY29uc3QgY29uZmlndXJhY2FvRXhpc3RlbnRlID0gYXdhaXQgYnVzY2FyQ29uZmlndXJhY2FvTm90aWZpY2FjYW8oY29uZmlndXJhY2FvVmFsaWRhZGEudXN1YXJpb0lkKTtcbiAgICBcbiAgICBpZiAoY29uZmlndXJhY2FvRXhpc3RlbnRlKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgIHsgZXJyb3I6ICdDb25maWd1cmHDp8OjbyBqw6EgZXhpc3RlIHBhcmEgZXN0ZSB1c3XDoXJpby4gVXNlIFBVVCBwYXJhIGF0dWFsaXphci4nIH0sXG4gICAgICAgIHsgc3RhdHVzOiA0MDkgfVxuICAgICAgKTtcbiAgICB9XG5cbiAgICAvLyBTaW11bGFyIGNyaWHDp8OjbyAoZW0gdW1hIGltcGxlbWVudGHDp8OjbyByZWFsLCBpc3NvIHNlcmlhIHNhbHZvIG5vIGJhbmNvKVxuICAgIGNvbnN0IG5vdmFDb25maWd1cmFjYW8gPSB7XG4gICAgICAuLi5jb25maWd1cmFjYW9WYWxpZGFkYSxcbiAgICAgIGlkOiBgY29uZmlnLSR7Y29uZmlndXJhY2FvVmFsaWRhZGEudXN1YXJpb0lkfS0ke0RhdGUubm93KCl9YFxuICAgIH07XG5cbiAgICAvLyBMb2cgZGEgY3JpYcOnw6NvXG4gICAgY29uc29sZS5sb2coYE5vdmEgY29uZmlndXJhw6fDo28gZGUgbm90aWZpY2HDp8O1ZXMgY3JpYWRhOmAsIHtcbiAgICAgIGNvbmZpZ3VyYWNhbzogbm92YUNvbmZpZ3VyYWNhbyxcbiAgICAgIGNyaWFkb1Bvcjogc2Vzc2lvbi51c2VyLmlkLFxuICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcbiAgICB9KTtcblxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XG4gICAgICBjb25maWd1cmFjYW86IG5vdmFDb25maWd1cmFjYW8sXG4gICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgICAgIG1lc3NhZ2U6ICdDb25maWd1cmHDp8OjbyBjcmlhZGEgY29tIHN1Y2Vzc28nXG4gICAgfSwgeyBzdGF0dXM6IDIwMSB9KTtcblxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm8gYW8gY3JpYXIgY29uZmlndXJhw6fDo28gZGUgbm90aWZpY2HDp8O1ZXM6JywgZXJyb3IpO1xuICAgIFxuICAgIGlmIChlcnJvciBpbnN0YW5jZW9mIHouWm9kRXJyb3IpIHtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgICAgeyBcbiAgICAgICAgICBlcnJvcjogJ0RhZG9zIGludsOhbGlkb3MnLFxuICAgICAgICAgIGRldGFpbHM6IGVycm9yLmVycm9yc1xuICAgICAgICB9LFxuICAgICAgICB7IHN0YXR1czogNDAwIH1cbiAgICAgICk7XG4gICAgfVxuXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgeyBlcnJvcjogJ0Vycm8gaW50ZXJubyBkbyBzZXJ2aWRvcicgfSxcbiAgICAgIHsgc3RhdHVzOiA1MDAgfVxuICAgICk7XG4gIH1cbn1cblxuLyoqXG4gKiBERUxFVEUgL2FwaS9ub3RpZmljYWNvZXMvY29uZmlndXJhY2FvXG4gKiBSZW1vdmUgY29uZmlndXJhw6fDo28gZGUgbm90aWZpY2HDp8OjbyAoZGVzYXRpdmEpXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBERUxFVEUocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcbiAgdHJ5IHtcbiAgICAvLyBWZXJpZmljYXIgYXV0ZW50aWNhw6fDo29cbiAgICBjb25zdCBzZXNzaW9uID0gYXdhaXQgZ2V0U2VydmVyU2Vzc2lvbihhdXRoT3B0aW9ucyk7XG4gICAgaWYgKCFzZXNzaW9uPy51c2VyKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgIHsgZXJyb3I6ICdOw6NvIGF1dG9yaXphZG8nIH0sXG4gICAgICAgIHsgc3RhdHVzOiA0MDEgfVxuICAgICAgKTtcbiAgICB9XG5cbiAgICAvLyBFeHRyYWlyIHBhcsOibWV0cm9zIGRhIFVSTFxuICAgIGNvbnN0IHsgc2VhcmNoUGFyYW1zIH0gPSBuZXcgVVJMKHJlcXVlc3QudXJsKTtcbiAgICBjb25zdCB1c3VhcmlvSWQgPSBzZWFyY2hQYXJhbXMuZ2V0KCd1c3VhcmlvSWQnKSB8fCBzZXNzaW9uLnVzZXIuaWQ7XG5cbiAgICAvLyBWZXJpZmljYXIgcGVybWlzc8O1ZXNcbiAgICBjb25zdCBpc0FkbWluID0gc2Vzc2lvbi51c2VyLnRpcG8gPT09ICdBRE1JTic7XG4gICAgY29uc3QgaXNQcm9wcmlvVXN1YXJpbyA9IHVzdWFyaW9JZCA9PT0gc2Vzc2lvbi51c2VyLmlkO1xuXG4gICAgaWYgKCFpc0FkbWluICYmICFpc1Byb3ByaW9Vc3VhcmlvKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgIHsgZXJyb3I6ICdTZW0gcGVybWlzc8OjbyBwYXJhIHJlbW92ZXIgZXNzYSBjb25maWd1cmHDp8OjbycgfSxcbiAgICAgICAgeyBzdGF0dXM6IDQwMyB9XG4gICAgICApO1xuICAgIH1cblxuICAgIC8vIEJ1c2NhciBjb25maWd1cmHDp8OjbyBhdHVhbFxuICAgIGNvbnN0IGNvbmZpZ3VyYWNhb0F0dWFsID0gYXdhaXQgYnVzY2FyQ29uZmlndXJhY2FvTm90aWZpY2FjYW8odXN1YXJpb0lkKTtcbiAgICBcbiAgICBpZiAoIWNvbmZpZ3VyYWNhb0F0dWFsKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgIHsgZXJyb3I6ICdDb25maWd1cmHDp8OjbyBuw6NvIGVuY29udHJhZGEnIH0sXG4gICAgICAgIHsgc3RhdHVzOiA0MDQgfVxuICAgICAgKTtcbiAgICB9XG5cbiAgICAvLyBFbSB2ZXogZGUgZGVsZXRhciwgZGVzYXRpdmFyIGEgY29uZmlndXJhw6fDo29cbiAgICBjb25zdCBjb25maWd1cmFjYW9EZXNhdGl2YWRhID0ge1xuICAgICAgLi4uY29uZmlndXJhY2FvQXR1YWwsXG4gICAgICBhdGl2bzogZmFsc2UsXG4gICAgICBub3RpZmljYWNvZXNFbWFpbDogZmFsc2UsXG4gICAgICBub3RpZmljYWNvZXNJbnRlcmZhY2U6IGZhbHNlXG4gICAgfTtcblxuICAgIC8vIExvZyBkYSBkZXNhdGl2YcOnw6NvXG4gICAgY29uc29sZS5sb2coYENvbmZpZ3VyYcOnw6NvIGRlIG5vdGlmaWNhw6fDtWVzIGRlc2F0aXZhZGE6YCwge1xuICAgICAgdXN1YXJpb0lkLFxuICAgICAgZGVzYXRpdmFkb1Bvcjogc2Vzc2lvbi51c2VyLmlkLFxuICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcbiAgICB9KTtcblxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XG4gICAgICBjb25maWd1cmFjYW86IGNvbmZpZ3VyYWNhb0Rlc2F0aXZhZGEsXG4gICAgICB0aW1lc3RhbXA6IG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKSxcbiAgICAgIG1lc3NhZ2U6ICdDb25maWd1cmHDp8OjbyBkZXNhdGl2YWRhIGNvbSBzdWNlc3NvJ1xuICAgIH0pO1xuXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJybyBhbyBkZXNhdGl2YXIgY29uZmlndXJhw6fDo28gZGUgbm90aWZpY2HDp8O1ZXM6JywgZXJyb3IpO1xuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgIHsgZXJyb3I6ICdFcnJvIGludGVybm8gZG8gc2Vydmlkb3InIH0sXG4gICAgICB7IHN0YXR1czogNTAwIH1cbiAgICApO1xuICB9XG59Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O01BeVFzQkEsT0FBQTtJQUFBO0lBQUFDLGFBQUEsR0FBQUMsQ0FBQTtJQUFBRCxhQUFBLEdBQUFFLENBQUE7V0FBQUgsTUFBQTs7TUEvT0FJLElBQUE7SUFBQTtJQUFBSCxhQUFBLEdBQUFD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