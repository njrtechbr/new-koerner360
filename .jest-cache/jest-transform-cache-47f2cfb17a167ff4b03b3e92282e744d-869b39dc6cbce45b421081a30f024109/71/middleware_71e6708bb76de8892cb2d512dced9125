1df9ec66d8505c9f6a9713bb84874f28
"use strict";

/* istanbul ignore next */
function cov_19g8125gyx() {
  var path = "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\middleware.ts";
  var hash = "31b4d8e9b4b8db422e33f0ddb483fe2a323d87f9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\middleware.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 22
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 24
        }
      },
      "6": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "7": {
        start: {
          line: 21,
          column: 15
        },
        end: {
          line: 21,
          column: 60
        }
      },
      "8": {
        start: {
          line: 23,
          column: 23
        },
        end: {
          line: 68,
          column: 1
        }
      },
      "9": {
        start: {
          line: 72,
          column: 4
        },
        end: {
          line: 74,
          column: 5
        }
      },
      "10": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 59
        }
      },
      "11": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 80,
          column: 5
        }
      },
      "12": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 79,
          column: 9
        }
      },
      "13": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 44
        }
      },
      "14": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 81,
          column: 16
        }
      },
      "15": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 87,
          column: 24
        }
      },
      "16": {
        start: {
          line: 89,
          column: 17
        },
        end: {
          line: 125,
          column: 2
        }
      },
      "17": {
        start: {
          line: 90,
          column: 20
        },
        end: {
          line: 90,
          column: 28
        }
      },
      "18": {
        start: {
          line: 91,
          column: 19
        },
        end: {
          line: 91,
          column: 34
        }
      },
      "19": {
        start: {
          line: 92,
          column: 23
        },
        end: {
          line: 92,
          column: 63
        }
      },
      "20": {
        start: {
          line: 93,
          column: 27
        },
        end: {
          line: 93,
          column: 71
        }
      },
      "21": {
        start: {
          line: 94,
          column: 29
        },
        end: {
          line: 94,
          column: 75
        }
      },
      "22": {
        start: {
          line: 95,
          column: 21
        },
        end: {
          line: 95,
          column: 44
        }
      },
      "23": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 99,
          column: 5
        }
      },
      "24": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 98,
          column: 43
        }
      },
      "25": {
        start: {
          line: 101,
          column: 4
        },
        end: {
          line: 103,
          column: 5
        }
      },
      "26": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 43
        }
      },
      "27": {
        start: {
          line: 105,
          column: 4
        },
        end: {
          line: 108,
          column: 5
        }
      },
      "28": {
        start: {
          line: 106,
          column: 29
        },
        end: {
          line: 106,
          column: 86
        }
      },
      "29": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 77
        }
      },
      "30": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 114,
          column: 5
        }
      },
      "31": {
        start: {
          line: 111,
          column: 25
        },
        end: {
          line: 111,
          column: 56
        }
      },
      "32": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 71
        }
      },
      "33": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 113,
          column: 55
        }
      },
      "34": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 123,
          column: 5
        }
      },
      "35": {
        start: {
          line: 117,
          column: 28
        },
        end: {
          line: 117,
          column: 75
        }
      },
      "36": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 122,
          column: 9
        }
      },
      "37": {
        start: {
          line: 120,
          column: 33
        },
        end: {
          line: 120,
          column: 64
        }
      },
      "38": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 81
        }
      },
      "39": {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 124,
          column: 39
        }
      },
      "40": {
        start: {
          line: 126,
          column: 15
        },
        end: {
          line: 136,
          column: 1
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 18
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 15
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "podeAcessarRota",
        decl: {
          start: {
            line: 70,
            column: 9
          },
          end: {
            line: 70,
            column: 24
          }
        },
        loc: {
          start: {
            line: 70,
            column: 45
          },
          end: {
            line: 82,
            column: 1
          }
        },
        line: 70
      },
      "4": {
        name: "obterDashboardPorTipo",
        decl: {
          start: {
            line: 84,
            column: 9
          },
          end: {
            line: 84,
            column: 30
          }
        },
        loc: {
          start: {
            line: 84,
            column: 41
          },
          end: {
            line: 88,
            column: 1
          }
        },
        line: 84
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 89,
            column: 34
          },
          end: {
            line: 89,
            column: 35
          }
        },
        loc: {
          start: {
            line: 89,
            column: 41
          },
          end: {
            line: 125,
            column: 1
          }
        },
        line: 89
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 72,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 72,
            column: 4
          },
          end: {
            line: 74,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 72
      },
      "1": {
        loc: {
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "2": {
        loc: {
          start: {
            line: 97,
            column: 4
          },
          end: {
            line: 99,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 4
          },
          end: {
            line: 99,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "3": {
        loc: {
          start: {
            line: 101,
            column: 4
          },
          end: {
            line: 103,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 4
          },
          end: {
            line: 103,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "4": {
        loc: {
          start: {
            line: 105,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "5": {
        loc: {
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 105,
            column: 28
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 105,
            column: 14
          }
        }, {
          start: {
            line: 105,
            column: 18
          },
          end: {
            line: 105,
            column: 28
          }
        }],
        line: 105
      },
      "6": {
        loc: {
          start: {
            line: 106,
            column: 29
          },
          end: {
            line: 106,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 106,
            column: 40
          },
          end: {
            line: 106,
            column: 71
          }
        }, {
          start: {
            line: 106,
            column: 74
          },
          end: {
            line: 106,
            column: 86
          }
        }],
        line: 106
      },
      "7": {
        loc: {
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 114,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 114,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "8": {
        loc: {
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 110,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 8
          },
          end: {
            line: 110,
            column: 15
          }
        }, {
          start: {
            line: 110,
            column: 19
          },
          end: {
            line: 110,
            column: 30
          }
        }, {
          start: {
            line: 110,
            column: 34
          },
          end: {
            line: 110,
            column: 62
          }
        }],
        line: 110
      },
      "9": {
        loc: {
          start: {
            line: 116,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "10": {
        loc: {
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 116,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 116,
            column: 14
          }
        }, {
          start: {
            line: 116,
            column: 18
          },
          end: {
            line: 116,
            column: 29
          }
        }, {
          start: {
            line: 116,
            column: 33
          },
          end: {
            line: 116,
            column: 41
          }
        }],
        line: 116
      },
      "11": {
        loc: {
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 122,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 122,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\middleware.ts"],
      sourcesContent: ["import { NextResponse } from 'next/server';\nimport { auth } from '@/app/api/auth/[...nextauth]/route';\nimport { TipoUsuario } from '@prisma/client';\n\n// Defini\xE7\xE3o de rotas protegidas por tipo de usu\xE1rio\nconst ROTAS_POR_TIPO: Record<string, TipoUsuario[]> = {\n  '/dashboard': ['ADMIN', 'GESTOR', 'ATENDENTE'],\n  '/usuarios': ['ADMIN', 'GESTOR'],\n  '/atendentes': ['ADMIN', 'GESTOR'],\n  '/relatorios': ['ADMIN', 'GESTOR'],\n  '/configuracoes': ['ADMIN'],\n  '/feedbacks': ['ADMIN', 'GESTOR', 'ATENDENTE'],\n  '/gamificacao': ['ADMIN', 'GESTOR', 'ATENDENTE'],\n  // Rotas da API\n  '/api/usuarios': ['ADMIN', 'GESTOR', 'ATENDENTE'],\n  '/api/atendentes': ['ADMIN', 'GESTOR'],\n  '/api/relatorios': ['ADMIN', 'GESTOR'],\n};\n\n// Fun\xE7\xE3o para verificar se o usu\xE1rio pode acessar uma rota\nfunction podeAcessarRota(pathname: string, userType: string): boolean {\n  // Verifica rotas exatas\n  if (ROTAS_POR_TIPO[pathname]) {\n    return ROTAS_POR_TIPO[pathname].includes(userType as TipoUsuario);\n  }\n\n  // Verifica rotas que come\xE7am com um padr\xE3o\n  for (const [rota, tipos] of Object.entries(ROTAS_POR_TIPO)) {\n    if (pathname.startsWith(rota)) {\n      return tipos.includes(userType as TipoUsuario);\n    }\n  }\n\n  return true; // Permite acesso se a rota n\xE3o est\xE1 protegida\n}\n\n// Fun\xE7\xE3o para obter a rota de dashboard baseada no tipo de usu\xE1rio\nfunction obterDashboardPorTipo(userType: string): string {\n  // Todos os tipos de usu\xE1rio v\xE3o para o dashboard principal\n  // A diferencia\xE7\xE3o de acesso \xE9 feita pelos componentes internos\n  return '/dashboard';\n}\n\n// Middleware para proteger rotas que requerem autentica\xE7\xE3o\nexport default auth(req => {\n  const session = req.auth;\n  const isAuth = !!session?.user;\n  const isAuthPage = req.nextUrl.pathname.startsWith('/auth');\n  const isApiAuthRoute = req.nextUrl.pathname.startsWith('/api/auth');\n  const isPublicApiRoute = req.nextUrl.pathname.startsWith('/api/public');\n  const userType = session?.user?.userType as string;\n\n  // Permitir acesso \xE0s rotas de API de autentica\xE7\xE3o\n  if (isApiAuthRoute) {\n    return NextResponse.next();\n  }\n\n  // Permitir acesso \xE0s rotas de API p\xFAblicas\n  if (isPublicApiRoute) {\n    return NextResponse.next();\n  }\n\n  // Se o usu\xE1rio est\xE1 autenticado e tenta acessar p\xE1ginas de auth, redireciona para dashboard apropriado\n  if (isAuth && isAuthPage) {\n    const dashboardUrl = userType\n      ? obterDashboardPorTipo(userType)\n      : '/dashboard';\n    return NextResponse.redirect(new URL(dashboardUrl, req.url));\n  }\n\n  // Se o usu\xE1rio n\xE3o est\xE1 autenticado e tenta acessar p\xE1ginas protegidas, redireciona para login\n  if (!isAuth && !isAuthPage && req.nextUrl.pathname !== '/') {\n    const loginUrl = new URL('/auth/login', req.url);\n    loginUrl.searchParams.set('callbackUrl', req.nextUrl.pathname);\n    return NextResponse.redirect(loginUrl);\n  }\n\n  // Se o usu\xE1rio est\xE1 autenticado, verifica permiss\xF5es de acesso\n  if (isAuth && !isAuthPage && userType) {\n    const podeAcessar = podeAcessarRota(req.nextUrl.pathname, userType);\n\n    if (!podeAcessar) {\n      // Redireciona para o dashboard apropriado se n\xE3o tem permiss\xE3o\n      const dashboardUrl = obterDashboardPorTipo(userType);\n      return NextResponse.redirect(new URL(dashboardUrl, req.url));\n    }\n  }\n\n  return NextResponse.next();\n});\n\n// Configura\xE7\xE3o das rotas que o middleware deve processar\nexport const config = {\n  matcher: [\n    /*\n     * Corresponde a todos os caminhos de solicita\xE7\xE3o, exceto aqueles que come\xE7am com:\n     * - _next/static (arquivos est\xE1ticos)\n     * - _next/image (otimiza\xE7\xE3o de imagem)\n     * - favicon.ico (arquivo de favicon)\n     * - arquivos p\xFAblicos (imagens, etc.)\n     */\n    '/((?!_next/static|_next/image|favicon.ico|.*\\\\.(?:svg|png|jpg|jpeg|gif|webp)$).*)',\n  ],\n};\n"],
      names: ["config", "ROTAS_POR_TIPO", "podeAcessarRota", "pathname", "userType", "includes", "rota", "tipos", "Object", "entries", "startsWith", "obterDashboardPorTipo", "auth", "req", "session", "isAuth", "user", "isAuthPage", "nextUrl", "isApiAuthRoute", "isPublicApiRoute", "NextResponse", "next", "dashboardUrl", "redirect", "URL", "url", "loginUrl", "searchParams", "set", "podeAcessar", "matcher"],
      mappings: ";;;;;;;;;;;QA4FaA;eAAAA;;QAjDb,2DAA2D;IAC3D;eAAA;;;wBA5C6B;uBACR;AAGrB,oDAAoD;AACpD,MAAMC,iBAAgD;IACpD,cAAc;QAAC;QAAS;QAAU;KAAY;IAC9C,aAAa;QAAC;QAAS;KAAS;IAChC,eAAe;QAAC;QAAS;KAAS;IAClC,eAAe;QAAC;QAAS;KAAS;IAClC,kBAAkB;QAAC;KAAQ;IAC3B,cAAc;QAAC;QAAS;QAAU;KAAY;IAC9C,gBAAgB;QAAC;QAAS;QAAU;KAAY;IAChD,eAAe;IACf,iBAAiB;QAAC;QAAS;QAAU;KAAY;IACjD,mBAAmB;QAAC;QAAS;KAAS;IACtC,mBAAmB;QAAC;QAAS;KAAS;AACxC;AAEA,2DAA2D;AAC3D,SAASC,gBAAgBC,QAAgB,EAAEC,QAAgB;IACzD,wBAAwB;IACxB,IAAIH,cAAc,CAACE,SAAS,EAAE;QAC5B,OAAOF,cAAc,CAACE,SAAS,CAACE,QAAQ,CAACD;IAC3C;IAEA,2CAA2C;IAC3C,KAAK,MAAM,CAACE,MAAMC,MAAM,IAAIC,OAAOC,OAAO,CAACR,gBAAiB;QAC1D,IAAIE,SAASO,UAAU,CAACJ,OAAO;YAC7B,OAAOC,MAAMF,QAAQ,CAACD;QACxB;IACF;IAEA,OAAO,MAAM,8CAA8C;AAC7D;AAEA,mEAAmE;AACnE,SAASO,sBAAsBP,QAAgB;IAC7C,2DAA2D;IAC3D,+DAA+D;IAC/D,OAAO;AACT;MAGA,WAAeQ,IAAAA,WAAI,EAACC,CAAAA;IAClB,MAAMC,UAAUD,IAAID,IAAI;IACxB,MAAMG,SAAS,CAAC,CAACD,SAASE;IAC1B,MAAMC,aAAaJ,IAAIK,OAAO,CAACf,QAAQ,CAACO,UAAU,CAAC;IACnD,MAAMS,iBAAiBN,IAAIK,OAAO,CAACf,QAAQ,CAACO,UAAU,CAAC;IACvD,MAAMU,mBAAmBP,IAAIK,OAAO,CAACf,QAAQ,CAACO,UAAU,CAAC;IACzD,MAAMN,WAAWU,SAASE,MAAMZ;IAEhC,kDAAkD;IAClD,IAAIe,gBAAgB;QAClB,OAAOE,oBAAY,CAACC,IAAI;IAC1B;IAEA,2CAA2C;IAC3C,IAAIF,kBAAkB;QACpB,OAAOC,oBAAY,CAACC,IAAI;IAC1B;IAEA,uGAAuG;IACvG,IAAIP,UAAUE,YAAY;QACxB,MAAMM,eAAenB,WACjBO,sBAAsBP,YACtB;QACJ,OAAOiB,oBAAY,CAACG,QAAQ,CAAC,IAAIC,IAAIF,cAAcV,IAAIa,GAAG;IAC5D;IAEA,+FAA+F;IAC/F,IAAI,CAACX,UAAU,CAACE,cAAcJ,IAAIK,OAAO,CAACf,QAAQ,KAAK,KAAK;QAC1D,MAAMwB,WAAW,IAAIF,IAAI,eAAeZ,IAAIa,GAAG;QAC/CC,SAASC,YAAY,CAACC,GAAG,CAAC,eAAehB,IAAIK,OAAO,CAACf,QAAQ;QAC7D,OAAOkB,oBAAY,CAACG,QAAQ,CAACG;IAC/B;IAEA,+DAA+D;IAC/D,IAAIZ,UAAU,CAACE,cAAcb,UAAU;QACrC,MAAM0B,cAAc5B,gBAAgBW,IAAIK,OAAO,CAACf,QAAQ,EAAEC;QAE1D,IAAI,CAAC0B,aAAa;YAChB,+DAA+D;YAC/D,MAAMP,eAAeZ,sBAAsBP;YAC3C,OAAOiB,oBAAY,CAACG,QAAQ,CAAC,IAAIC,IAAIF,cAAcV,IAAIa,GAAG;QAC5D;IACF;IAEA,OAAOL,oBAAY,CAACC,IAAI;AAC1B;AAGO,MAAMtB,SAAS;IACpB+B,SAAS;QACP;;;;;;KAMC,GACD;KACD;AACH"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "31b4d8e9b4b8db422e33f0ddb483fe2a323d87f9"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_19g8125gyx = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_19g8125gyx();
cov_19g8125gyx().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_19g8125gyx().f[0]++;
  cov_19g8125gyx().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_19g8125gyx().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_19g8125gyx().s[3]++;
_export(exports, {
  get config() {
    /* istanbul ignore next */
    cov_19g8125gyx().f[1]++;
    cov_19g8125gyx().s[4]++;
    return config;
  },
  get
  // Middleware para proteger rotas que requerem autenticação
  default() {
    /* istanbul ignore next */
    cov_19g8125gyx().f[2]++;
    cov_19g8125gyx().s[5]++;
    return _default;
  }
});
const _server =
/* istanbul ignore next */
(cov_19g8125gyx().s[6]++, require("next/server"));
const _route =
/* istanbul ignore next */
(cov_19g8125gyx().s[7]++, require("./app/api/auth/[...nextauth]/route"));
// Definição de rotas protegidas por tipo de usuário
const ROTAS_POR_TIPO =
/* istanbul ignore next */
(cov_19g8125gyx().s[8]++, {
  '/dashboard': ['ADMIN', 'GESTOR', 'ATENDENTE'],
  '/usuarios': ['ADMIN', 'GESTOR'],
  '/atendentes': ['ADMIN', 'GESTOR'],
  '/relatorios': ['ADMIN', 'GESTOR'],
  '/configuracoes': ['ADMIN'],
  '/feedbacks': ['ADMIN', 'GESTOR', 'ATENDENTE'],
  '/gamificacao': ['ADMIN', 'GESTOR', 'ATENDENTE'],
  // Rotas da API
  '/api/usuarios': ['ADMIN', 'GESTOR', 'ATENDENTE'],
  '/api/atendentes': ['ADMIN', 'GESTOR'],
  '/api/relatorios': ['ADMIN', 'GESTOR']
});
// Função para verificar se o usuário pode acessar uma rota
function podeAcessarRota(pathname, userType) {
  /* istanbul ignore next */
  cov_19g8125gyx().f[3]++;
  cov_19g8125gyx().s[9]++;
  // Verifica rotas exatas
  if (ROTAS_POR_TIPO[pathname]) {
    /* istanbul ignore next */
    cov_19g8125gyx().b[0][0]++;
    cov_19g8125gyx().s[10]++;
    return ROTAS_POR_TIPO[pathname].includes(userType);
  } else
  /* istanbul ignore next */
  {
    cov_19g8125gyx().b[0][1]++;
  }
  // Verifica rotas que começam com um padrão
  cov_19g8125gyx().s[11]++;
  for (const [rota, tipos] of Object.entries(ROTAS_POR_TIPO)) {
    /* istanbul ignore next */
    cov_19g8125gyx().s[12]++;
    if (pathname.startsWith(rota)) {
      /* istanbul ignore next */
      cov_19g8125gyx().b[1][0]++;
      cov_19g8125gyx().s[13]++;
      return tipos.includes(userType);
    } else
    /* istanbul ignore next */
    {
      cov_19g8125gyx().b[1][1]++;
    }
  }
  /* istanbul ignore next */
  cov_19g8125gyx().s[14]++;
  return true; // Permite acesso se a rota não está protegida
}
// Função para obter a rota de dashboard baseada no tipo de usuário
function obterDashboardPorTipo(userType) {
  /* istanbul ignore next */
  cov_19g8125gyx().f[4]++;
  cov_19g8125gyx().s[15]++;
  // Todos os tipos de usuário vão para o dashboard principal
  // A diferenciação de acesso é feita pelos componentes internos
  return '/dashboard';
}
const _default =
/* istanbul ignore next */
(cov_19g8125gyx().s[16]++, (0, _route.auth)(req => {
  /* istanbul ignore next */
  cov_19g8125gyx().f[5]++;
  const session =
  /* istanbul ignore next */
  (cov_19g8125gyx().s[17]++, req.auth);
  const isAuth =
  /* istanbul ignore next */
  (cov_19g8125gyx().s[18]++, !!session?.user);
  const isAuthPage =
  /* istanbul ignore next */
  (cov_19g8125gyx().s[19]++, req.nextUrl.pathname.startsWith('/auth'));
  const isApiAuthRoute =
  /* istanbul ignore next */
  (cov_19g8125gyx().s[20]++, req.nextUrl.pathname.startsWith('/api/auth'));
  const isPublicApiRoute =
  /* istanbul ignore next */
  (cov_19g8125gyx().s[21]++, req.nextUrl.pathname.startsWith('/api/public'));
  const userType =
  /* istanbul ignore next */
  (cov_19g8125gyx().s[22]++, session?.user?.userType);
  // Permitir acesso às rotas de API de autenticação
  /* istanbul ignore next */
  cov_19g8125gyx().s[23]++;
  if (isApiAuthRoute) {
    /* istanbul ignore next */
    cov_19g8125gyx().b[2][0]++;
    cov_19g8125gyx().s[24]++;
    return _server.NextResponse.next();
  } else
  /* istanbul ignore next */
  {
    cov_19g8125gyx().b[2][1]++;
  }
  // Permitir acesso às rotas de API públicas
  cov_19g8125gyx().s[25]++;
  if (isPublicApiRoute) {
    /* istanbul ignore next */
    cov_19g8125gyx().b[3][0]++;
    cov_19g8125gyx().s[26]++;
    return _server.NextResponse.next();
  } else
  /* istanbul ignore next */
  {
    cov_19g8125gyx().b[3][1]++;
  }
  // Se o usuário está autenticado e tenta acessar páginas de auth, redireciona para dashboard apropriado
  cov_19g8125gyx().s[27]++;
  if (
  /* istanbul ignore next */
  (cov_19g8125gyx().b[5][0]++, isAuth) &&
  /* istanbul ignore next */
  (cov_19g8125gyx().b[5][1]++, isAuthPage)) {
    /* istanbul ignore next */
    cov_19g8125gyx().b[4][0]++;
    const dashboardUrl =
    /* istanbul ignore next */
    (cov_19g8125gyx().s[28]++, userType ?
    /* istanbul ignore next */
    (cov_19g8125gyx().b[6][0]++, obterDashboardPorTipo(userType)) :
    /* istanbul ignore next */
    (cov_19g8125gyx().b[6][1]++, '/dashboard'));
    /* istanbul ignore next */
    cov_19g8125gyx().s[29]++;
    return _server.NextResponse.redirect(new URL(dashboardUrl, req.url));
  } else
  /* istanbul ignore next */
  {
    cov_19g8125gyx().b[4][1]++;
  }
  // Se o usuário não está autenticado e tenta acessar páginas protegidas, redireciona para login
  cov_19g8125gyx().s[30]++;
  if (
  /* istanbul ignore next */
  (cov_19g8125gyx().b[8][0]++, !isAuth) &&
  /* istanbul ignore next */
  (cov_19g8125gyx().b[8][1]++, !isAuthPage) &&
  /* istanbul ignore next */
  (cov_19g8125gyx().b[8][2]++, req.nextUrl.pathname !== '/')) {
    /* istanbul ignore next */
    cov_19g8125gyx().b[7][0]++;
    const loginUrl =
    /* istanbul ignore next */
    (cov_19g8125gyx().s[31]++, new URL('/auth/login', req.url));
    /* istanbul ignore next */
    cov_19g8125gyx().s[32]++;
    loginUrl.searchParams.set('callbackUrl', req.nextUrl.pathname);
    /* istanbul ignore next */
    cov_19g8125gyx().s[33]++;
    return _server.NextResponse.redirect(loginUrl);
  } else
  /* istanbul ignore next */
  {
    cov_19g8125gyx().b[7][1]++;
  }
  // Se o usuário está autenticado, verifica permissões de acesso
  cov_19g8125gyx().s[34]++;
  if (
  /* istanbul ignore next */
  (cov_19g8125gyx().b[10][0]++, isAuth) &&
  /* istanbul ignore next */
  (cov_19g8125gyx().b[10][1]++, !isAuthPage) &&
  /* istanbul ignore next */
  (cov_19g8125gyx().b[10][2]++, userType)) {
    /* istanbul ignore next */
    cov_19g8125gyx().b[9][0]++;
    const podeAcessar =
    /* istanbul ignore next */
    (cov_19g8125gyx().s[35]++, podeAcessarRota(req.nextUrl.pathname, userType));
    /* istanbul ignore next */
    cov_19g8125gyx().s[36]++;
    if (!podeAcessar) {
      /* istanbul ignore next */
      cov_19g8125gyx().b[11][0]++;
      // Redireciona para o dashboard apropriado se não tem permissão
      const dashboardUrl =
      /* istanbul ignore next */
      (cov_19g8125gyx().s[37]++, obterDashboardPorTipo(userType));
      /* istanbul ignore next */
      cov_19g8125gyx().s[38]++;
      return _server.NextResponse.redirect(new URL(dashboardUrl, req.url));
    } else
    /* istanbul ignore next */
    {
      cov_19g8125gyx().b[11][1]++;
    }
  } else
  /* istanbul ignore next */
  {
    cov_19g8125gyx().b[9][1]++;
  }
  cov_19g8125gyx().s[39]++;
  return _server.NextResponse.next();
}));
const config =
/* istanbul ignore next */
(cov_19g8125gyx().s[40]++, {
  matcher: [
  /*
  * Corresponde a todos os caminhos de solicitação, exceto aqueles que começam com:
  * - _next/static (arquivos estáticos)
  * - _next/image (otimização de imagem)
  * - favicon.ico (arquivo de favicon)
  * - arquivos públicos (imagens, etc.)
  */
  '/((?!_next/static|_next/image|favicon.ico|.*\\.(?:svg|png|jpg|jpeg|gif|webp)$).*)']
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,