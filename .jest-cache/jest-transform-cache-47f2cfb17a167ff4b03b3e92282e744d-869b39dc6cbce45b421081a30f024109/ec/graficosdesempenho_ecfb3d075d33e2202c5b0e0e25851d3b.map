{"version":3,"names":["cov_5eoi21ntl","actualCoverage","s","GraficosDesempenho","f","default","_default","CORES","primaria","secundaria","terciaria","quaternaria","quinaria","sexta","CORES_STATUS","ATIVO","INATIVO","SUSPENSO","CORES_PERFORMANCE","alta","media","baixa","atendenteId","dadosMetricas","dadosDashboard","carregando","b","erro","className","abaSelecionada","setAbaSelecionada","_react","useState","prepararDadosIndividuais","dadosAtividade","Object","entries","atividade","porTipo","map","tipo","quantidade","replace","toLowerCase","l","toUpperCase","porcentagem","totalAlteracoes","toFixed","dadosProdutividade","categoria","valor","documentos","total","meta","Math","min","avaliacoes","prepararDadosDashboard","dadosStatus","resumoGeral","atendentesPorStatus","status","totalAtendentes","dadosPerformance","metricas","distribuicaoPerformance","nivel","charAt","slice","dadosSetores","atendentesPorSetor","setor","renderizarTendencia","variacao","_jsxruntime","jsxs","jsx","_lucidereact","TrendingUp","TrendingDown","Minus","_utils","cn","Loader2","dadosIndividuais","dadosGerais","_tabs","Tabs","value","onValueChange","TabsList","TabsTrigger","TabsContent","Fragment","_card","Card","CardHeader","CardTitle","tendencias","CardDescription","mediaGeral","CardContent","_recharts","ResponsiveContainer","width","height","BarChart","data","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Bar","fill","totalNoPeriodo","_badge","Badge","variant","mediaPorAtendente","style","PieChart","Pie","cx","cy","labelLine","label","outerRadius","entry","index","Cell","Legend","topPerformers","length","domain","atendente","nome","cargo","resumo","produtividade","values","name"],"sources":["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\components\\metricas\\graficos-desempenho.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport {\n  LineChart,\n  Line,\n  AreaChart,\n  Area,\n  BarChart,\n  Bar,\n  PieChart,\n  Pie,\n  Cell,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from 'recharts';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Badge } from '@/components/ui/badge';\nimport { Loader2, TrendingUp, TrendingDown, Minus } from 'lucide-react';\nimport { cn } from '@/lib/utils';\n\n/**\n * Interface para dados de métricas\n */\ninterface DadosMetricas {\n  atendente?: {\n    id: string;\n    nome: string;\n    cargo: string;\n    setor: string;\n  };\n  periodo: {\n    dataInicio: string;\n    dataFim: string;\n    periodo: string;\n  };\n  avaliacoes: {\n    total: number;\n    media: number;\n    ultima?: {\n      nota: number;\n      data: string;\n    };\n  };\n  documentos: {\n    total: number;\n    ativosNoPeriodo: number;\n  };\n  atividade: {\n    totalAlteracoes: number;\n    porTipo: Record<string, number>;\n  };\n  resumo: {\n    produtividade: string;\n    statusGeral: string;\n  };\n}\n\n/**\n * Interface para dados do dashboard\n */\ninterface DadosDashboard {\n  resumoGeral: {\n    totalAtendentes: number;\n    atendentesPorStatus: Record<string, number>;\n    atendentesPorSetor: Record<string, number>;\n  };\n  metricas: {\n    avaliacoes: {\n      mediaGeral: number;\n      distribuicaoPerformance: {\n        alta: number;\n        media: number;\n        baixa: number;\n      };\n    };\n    documentos: {\n      totalNoPeriodo: number;\n      mediaPorAtendente: number;\n    };\n  };\n  tendencias: {\n    avaliacoes: {\n      atual: number;\n      anterior: number;\n      variacao: number;\n    };\n    documentos: {\n      atual: number;\n      anterior: number;\n      variacao: number;\n    };\n  };\n  topPerformers: Array<{\n    id: string;\n    nome: string;\n    cargo: string;\n    mediaAvaliacoes: number;\n  }>;\n}\n\n/**\n * Props do componente\n */\ninterface GraficosDesempenhoProps {\n  atendenteId?: string;\n  dadosMetricas?: DadosMetricas;\n  dadosDashboard?: DadosDashboard;\n  carregando?: boolean;\n  erro?: string;\n  className?: string;\n}\n\n/**\n * Cores para os gráficos\n */\nconst CORES = {\n  primaria: '#3b82f6',\n  secundaria: '#10b981',\n  terciaria: '#f59e0b',\n  quaternaria: '#ef4444',\n  quinaria: '#8b5cf6',\n  sexta: '#06b6d4',\n};\n\nconst CORES_STATUS = {\n  ATIVO: '#10b981',\n  INATIVO: '#6b7280',\n  SUSPENSO: '#ef4444',\n};\n\nconst CORES_PERFORMANCE = {\n  alta: '#10b981',\n  media: '#f59e0b',\n  baixa: '#ef4444',\n};\n\n/**\n * Componente de gráficos de desempenho\n */\nexport function GraficosDesempenho({\n  atendenteId,\n  dadosMetricas,\n  dadosDashboard,\n  carregando = false,\n  erro,\n  className,\n}: GraficosDesempenhoProps) {\n  const [abaSelecionada, setAbaSelecionada] = useState('visao-geral');\n\n  // Preparar dados para gráficos individuais\n  const prepararDadosIndividuais = () => {\n    if (!dadosMetricas) return null;\n\n    // Dados de atividade por tipo\n    const dadosAtividade = Object.entries(dadosMetricas.atividade.porTipo).map(\n      ([tipo, quantidade]) => ({\n        tipo: tipo\n          .replace('_', ' ')\n          .toLowerCase()\n          .replace(/\\b\\w/g, l => l.toUpperCase()),\n        quantidade,\n        porcentagem: (\n          (quantidade / dadosMetricas.atividade.totalAlteracoes) *\n          100\n        ).toFixed(1),\n      })\n    );\n\n    // Dados de produtividade\n    const dadosProdutividade = [\n      {\n        categoria: 'Documentos',\n        valor: dadosMetricas.documentos.total,\n        meta: 10, // Meta exemplo\n        porcentagem: Math.min((dadosMetricas.documentos.total / 10) * 100, 100),\n      },\n      {\n        categoria: 'Avaliações',\n        valor: dadosMetricas.avaliacoes.media,\n        meta: 10,\n        porcentagem: (dadosMetricas.avaliacoes.media / 10) * 100,\n      },\n      {\n        categoria: 'Atividade',\n        valor: dadosMetricas.atividade.totalAlteracoes,\n        meta: 20,\n        porcentagem: Math.min(\n          (dadosMetricas.atividade.totalAlteracoes / 20) * 100,\n          100\n        ),\n      },\n    ];\n\n    return { dadosAtividade, dadosProdutividade };\n  };\n\n  // Preparar dados para dashboard geral\n  const prepararDadosDashboard = () => {\n    if (!dadosDashboard) return null;\n\n    // Dados de status dos atendentes\n    const dadosStatus = Object.entries(\n      dadosDashboard.resumoGeral.atendentesPorStatus\n    ).map(([status, quantidade]) => ({\n      status,\n      quantidade,\n      porcentagem: (\n        (quantidade / dadosDashboard.resumoGeral.totalAtendentes) *\n        100\n      ).toFixed(1),\n    }));\n\n    // Dados de performance\n    const dadosPerformance = Object.entries(\n      dadosDashboard.metricas.avaliacoes.distribuicaoPerformance\n    ).map(([nivel, quantidade]) => ({\n      nivel: nivel.charAt(0).toUpperCase() + nivel.slice(1),\n      quantidade,\n      porcentagem: (\n        (quantidade /\n          (dadosDashboard.metricas.avaliacoes.distribuicaoPerformance.alta +\n            dadosDashboard.metricas.avaliacoes.distribuicaoPerformance.media +\n            dadosDashboard.metricas.avaliacoes.distribuicaoPerformance.baixa)) *\n        100\n      ).toFixed(1),\n    }));\n\n    // Dados de setores\n    const dadosSetores = Object.entries(\n      dadosDashboard.resumoGeral.atendentesPorSetor\n    ).map(([setor, quantidade]) => ({\n      setor,\n      quantidade,\n      porcentagem: (\n        (quantidade / dadosDashboard.resumoGeral.totalAtendentes) *\n        100\n      ).toFixed(1),\n    }));\n\n    return { dadosStatus, dadosPerformance, dadosSetores };\n  };\n\n  // Renderizar indicador de tendência\n  const renderizarTendencia = (variacao: number) => {\n    if (variacao > 0) {\n      return (\n        <div className=\"flex items-center text-green-600\">\n          <TrendingUp className=\"h-4 w-4 mr-1\" />\n          <span className=\"text-sm font-medium\">+{variacao.toFixed(1)}%</span>\n        </div>\n      );\n    } else if (variacao < 0) {\n      return (\n        <div className=\"flex items-center text-red-600\">\n          <TrendingDown className=\"h-4 w-4 mr-1\" />\n          <span className=\"text-sm font-medium\">{variacao.toFixed(1)}%</span>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"flex items-center text-gray-500\">\n          <Minus className=\"h-4 w-4 mr-1\" />\n          <span className=\"text-sm font-medium\">0%</span>\n        </div>\n      );\n    }\n  };\n\n  if (carregando) {\n    return (\n      <div className={cn('flex items-center justify-center p-8', className)}>\n        <Loader2 className=\"h-8 w-8 animate-spin\" />\n        <span className=\"ml-2\">Carregando gráficos...</span>\n      </div>\n    );\n  }\n\n  if (erro) {\n    return (\n      <div className={cn('p-8 text-center', className)}>\n        <p className=\"text-red-600\">Erro ao carregar gráficos: {erro}</p>\n      </div>\n    );\n  }\n\n  const dadosIndividuais = prepararDadosIndividuais();\n  const dadosGerais = prepararDadosDashboard();\n\n  return (\n    <div className={cn('space-y-6', className)}>\n      <Tabs value={abaSelecionada} onValueChange={setAbaSelecionada}>\n        <TabsList className=\"grid w-full grid-cols-3\">\n          <TabsTrigger value=\"visao-geral\">Visão Geral</TabsTrigger>\n          {atendenteId && (\n            <TabsTrigger value=\"individual\">Individual</TabsTrigger>\n          )}\n          <TabsTrigger value=\"comparativo\">Comparativo</TabsTrigger>\n        </TabsList>\n\n        {/* Visão Geral */}\n        <TabsContent value=\"visao-geral\" className=\"space-y-6\">\n          {dadosDashboard && dadosGerais && (\n            <>\n              {/* Métricas de Tendência */}\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center justify-between\">\n                      Avaliações\n                      {renderizarTendencia(\n                        dadosDashboard.tendencias.avaliacoes.variacao\n                      )}\n                    </CardTitle>\n                    <CardDescription>\n                      Média geral:{' '}\n                      {dadosDashboard.metricas.avaliacoes.mediaGeral.toFixed(1)}\n                    </CardDescription>\n                  </CardHeader>\n                  <CardContent>\n                    <ResponsiveContainer width=\"100%\" height={200}>\n                      <BarChart data={dadosGerais.dadosPerformance}>\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"nivel\" />\n                        <YAxis />\n                        <Tooltip />\n                        <Bar dataKey=\"quantidade\" fill={CORES.primaria} />\n                      </BarChart>\n                    </ResponsiveContainer>\n                  </CardContent>\n                </Card>\n\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center justify-between\">\n                      Documentos\n                      {renderizarTendencia(\n                        dadosDashboard.tendencias.documentos.variacao\n                      )}\n                    </CardTitle>\n                    <CardDescription>\n                      Total no período:{' '}\n                      {dadosDashboard.metricas.documentos.totalNoPeriodo}\n                    </CardDescription>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"space-y-4\">\n                      <div className=\"flex justify-between items-center\">\n                        <span>Média por atendente</span>\n                        <Badge variant=\"secondary\">\n                          {dadosDashboard.metricas.documentos.mediaPorAtendente}\n                        </Badge>\n                      </div>\n                      <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                        <div\n                          className=\"bg-blue-600 h-2 rounded-full\"\n                          style={{\n                            width: `${Math.min((dadosDashboard.metricas.documentos.mediaPorAtendente / 10) * 100, 100)}%`,\n                          }}\n                        />\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </div>\n\n              {/* Status dos Atendentes */}\n              <Card>\n                <CardHeader>\n                  <CardTitle>Distribuição por Status</CardTitle>\n                  <CardDescription>\n                    Total de {dadosDashboard.resumoGeral.totalAtendentes}{' '}\n                    atendentes\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <ResponsiveContainer width=\"100%\" height={300}>\n                    <PieChart>\n                      <Pie\n                        data={dadosGerais.dadosStatus}\n                        cx=\"50%\"\n                        cy=\"50%\"\n                        labelLine={false}\n                        label={({ status, porcentagem }) =>\n                          `${status} (${porcentagem}%)`\n                        }\n                        outerRadius={80}\n                        fill=\"#8884d8\"\n                        dataKey=\"quantidade\"\n                      >\n                        {dadosGerais.dadosStatus.map((entry, index) => (\n                          <Cell\n                            key={`cell-${index}`}\n                            fill={\n                              CORES_STATUS[\n                                entry.status as keyof typeof CORES_STATUS\n                              ] || CORES.primaria\n                            }\n                          />\n                        ))}\n                      </Pie>\n                      <Tooltip />\n                      <Legend />\n                    </PieChart>\n                  </ResponsiveContainer>\n                </CardContent>\n              </Card>\n\n              {/* Top Performers */}\n              {dadosDashboard.topPerformers.length > 0 && (\n                <Card>\n                  <CardHeader>\n                    <CardTitle>Top Performers</CardTitle>\n                    <CardDescription>\n                      Atendentes com melhor desempenho\n                    </CardDescription>\n                  </CardHeader>\n                  <CardContent>\n                    <ResponsiveContainer width=\"100%\" height={300}>\n                      <BarChart data={dadosDashboard.topPerformers.slice(0, 5)}>\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"nome\" />\n                        <YAxis domain={[0, 10]} />\n                        <Tooltip />\n                        <Bar\n                          dataKey=\"mediaAvaliacoes\"\n                          fill={CORES.secundaria}\n                        />\n                      </BarChart>\n                    </ResponsiveContainer>\n                  </CardContent>\n                </Card>\n              )}\n            </>\n          )}\n        </TabsContent>\n\n        {/* Individual */}\n        {atendenteId && (\n          <TabsContent value=\"individual\" className=\"space-y-6\">\n            {dadosMetricas && dadosIndividuais && (\n              <>\n                {/* Informações do Atendente */}\n                {dadosMetricas.atendente && (\n                  <Card>\n                    <CardHeader>\n                      <CardTitle>{dadosMetricas.atendente.nome}</CardTitle>\n                      <CardDescription>\n                        {dadosMetricas.atendente.cargo} -{' '}\n                        {dadosMetricas.atendente.setor}\n                      </CardDescription>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                        <div className=\"text-center\">\n                          <div className=\"text-2xl font-bold text-blue-600\">\n                            {dadosMetricas.avaliacoes.media.toFixed(1)}\n                          </div>\n                          <div className=\"text-sm text-gray-500\">\n                            Média Avaliações\n                          </div>\n                        </div>\n                        <div className=\"text-center\">\n                          <div className=\"text-2xl font-bold text-green-600\">\n                            {dadosMetricas.documentos.total}\n                          </div>\n                          <div className=\"text-sm text-gray-500\">\n                            Documentos\n                          </div>\n                        </div>\n                        <div className=\"text-center\">\n                          <div className=\"text-2xl font-bold text-purple-600\">\n                            {dadosMetricas.atividade.totalAlteracoes}\n                          </div>\n                          <div className=\"text-sm text-gray-500\">\n                            Atividades\n                          </div>\n                        </div>\n                        <div className=\"text-center\">\n                          <Badge\n                            variant={\n                              dadosMetricas.resumo.produtividade === 'Alta'\n                                ? 'default'\n                                : dadosMetricas.resumo.produtividade === 'Média'\n                                  ? 'secondary'\n                                  : 'destructive'\n                            }\n                          >\n                            {dadosMetricas.resumo.produtividade}\n                          </Badge>\n                          <div className=\"text-sm text-gray-500 mt-1\">\n                            Produtividade\n                          </div>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                )}\n\n                {/* Gráfico de Atividades */}\n                <Card>\n                  <CardHeader>\n                    <CardTitle>Atividades por Tipo</CardTitle>\n                    <CardDescription>\n                      Distribuição das atividades realizadas\n                    </CardDescription>\n                  </CardHeader>\n                  <CardContent>\n                    <ResponsiveContainer width=\"100%\" height={300}>\n                      <PieChart>\n                        <Pie\n                          data={dadosIndividuais.dadosAtividade}\n                          cx=\"50%\"\n                          cy=\"50%\"\n                          labelLine={false}\n                          label={({ tipo, porcentagem }) =>\n                            `${tipo} (${porcentagem}%)`\n                          }\n                          outerRadius={80}\n                          fill=\"#8884d8\"\n                          dataKey=\"quantidade\"\n                        >\n                          {dadosIndividuais.dadosAtividade.map(\n                            (entry, index) => (\n                              <Cell\n                                key={`cell-${index}`}\n                                fill={\n                                  Object.values(CORES)[\n                                    index % Object.values(CORES).length\n                                  ]\n                                }\n                              />\n                            )\n                          )}\n                        </Pie>\n                        <Tooltip />\n                        <Legend />\n                      </PieChart>\n                    </ResponsiveContainer>\n                  </CardContent>\n                </Card>\n\n                {/* Gráfico de Produtividade */}\n                <Card>\n                  <CardHeader>\n                    <CardTitle>Indicadores de Produtividade</CardTitle>\n                    <CardDescription>\n                      Performance em relação às metas\n                    </CardDescription>\n                  </CardHeader>\n                  <CardContent>\n                    <ResponsiveContainer width=\"100%\" height={300}>\n                      <BarChart data={dadosIndividuais.dadosProdutividade}>\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"categoria\" />\n                        <YAxis />\n                        <Tooltip />\n                        <Legend />\n                        <Bar\n                          dataKey=\"valor\"\n                          fill={CORES.primaria}\n                          name=\"Atual\"\n                        />\n                        <Bar\n                          dataKey=\"meta\"\n                          fill={CORES.secundaria}\n                          name=\"Meta\"\n                        />\n                      </BarChart>\n                    </ResponsiveContainer>\n                  </CardContent>\n                </Card>\n              </>\n            )}\n          </TabsContent>\n        )}\n\n        {/* Comparativo */}\n        <TabsContent value=\"comparativo\" className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Análise Comparativa</CardTitle>\n              <CardDescription>\n                Em desenvolvimento - Comparação entre atendentes\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-center py-8 text-gray-500\">\n                <p>Funcionalidade de comparação será implementada em breve</p>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}\n\nexport default GraficosDesempenho;\n"],"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","ignoreList":[]}