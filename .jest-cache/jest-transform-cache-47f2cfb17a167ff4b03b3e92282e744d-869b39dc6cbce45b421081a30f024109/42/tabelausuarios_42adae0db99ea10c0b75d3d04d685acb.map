{"version":3,"names":["TabelaUsuarios","usuarios","carregando","cov_1hzkwvhv62","b","paginaAtual","totalPaginas","totalUsuarios","itensPorPagina","filtros","onFiltroChange","onPaginaChange","onItensPorPaginaChange","onEditar","onExcluir","onAlterarStatus","onRedefinirSenha","onVisualizarDetalhes","onNovoUsuario","onExportar","onImportar","onAtualizar","f","usuariosSelecionados","setUsuariosSelecionados","s","_react","useState","obterIniciais","nome","split","map","parte","charAt","join","toUpperCase","slice","obterCorPerfil","perfil","manipularSelecaoUsuario","usuarioId","selecionado","prev","filter","id","manipularSelecaoTodos","u","manipularOrdenacao","campo","novaOrdem","ordenarPor","ordem","renderizarIconeOrdenacao","_jsxruntime","jsx","_lucidereact","ArrowUpDown","className","ArrowUp","ArrowDown","manipularAcaoLote","acao","length","_sonner","toast","error","confirmacao","window","confirm","success","console","estatisticas","useMemo","ativos","ativo","inativos","admins","gestores","operadores","jsxs","_card","Card","CardContent","CardHeader","CardTitle","CardDescription","_auth","PermissionGuard","requiredPermissions","_button","Button","onClick","size","Plus","variant","Upload","Download","RefreshCw","Search","_input","Input","placeholder","value","busca","onChange","e","target","_select","Select","onValueChange","SelectTrigger","SelectValue","SelectContent","SelectItem","status","podeGerenciarUsuarios","Fragment","UserCheck","UserX","podeExcluirUsuarios","Trash2","_table","Table","TableHeader","TableRow","TableHead","_checkbox","Checkbox","checked","onCheckedChange","TableBody","TableCell","colSpan","usuario","includes","_avatar","Avatar","AvatarImage","src","avatar","alt","AvatarFallback","email","_badge","Badge","_utils","formatarData","criadoEm","ultimoLogin","_dropdownmenu","DropdownMenu","DropdownMenuTrigger","asChild","MoreHorizontal","DropdownMenuContent","align","DropdownMenuLabel","DropdownMenuItem","Eye","Edit","Key","DropdownMenuSeparator","toString","parseInt","disabled","Array","from","Math","min","_","i","pagina"],"sources":["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\components\\usuarios\\tabela-usuarios.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useMemo } from 'react';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from '@/components/ui/table';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Badge } from '@/components/ui/badge';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from '@/components/ui/dropdown-menu';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport { toast } from 'sonner';\nimport {\n  MoreHorizontal,\n  Edit,\n  Trash2,\n  UserCheck,\n  UserX,\n  Key,\n  Eye,\n  ArrowUpDown,\n  ArrowUp,\n  ArrowDown,\n  Search,\n  Filter,\n  Download,\n  Upload,\n  Plus,\n  RefreshCw,\n} from 'lucide-react';\nimport { usePermissions } from '@/hooks/use-permissions';\nimport { PermissionGuard } from '@/components/auth';\nimport { formatarData } from '@/lib/utils';\n\ninterface Usuario {\n  id: string;\n  nome: string;\n  email: string;\n  perfil: 'ADMIN' | 'GESTOR' | 'OPERADOR';\n  ativo: boolean;\n  criadoEm: string;\n  atualizadoEm: string;\n  ultimoLogin?: string;\n  avatar?: string;\n}\n\ninterface FiltrosTabela {\n  busca: string;\n  perfil: string;\n  status: string;\n  ordenarPor: 'nome' | 'email' | 'perfil' | 'criadoEm' | 'ultimoLogin';\n  ordem: 'asc' | 'desc';\n}\n\ninterface TabelaUsuariosProps {\n  usuarios: Usuario[];\n  carregando?: boolean;\n  paginaAtual: number;\n  totalPaginas: number;\n  totalUsuarios: number;\n  itensPorPagina: number;\n  filtros: FiltrosTabela;\n  onFiltroChange: (filtros: Partial<FiltrosTabela>) => void;\n  onPaginaChange: (pagina: number) => void;\n  onItensPorPaginaChange: (itens: number) => void;\n  onEditar: (usuario: Usuario) => void;\n  onExcluir: (usuarioId: string) => void;\n  onAlterarStatus: (usuarioId: string, ativo: boolean) => void;\n  onRedefinirSenha: (usuarioId: string) => void;\n  onVisualizarDetalhes: (usuarioId: string) => void;\n  onNovoUsuario: () => void;\n  onExportar: () => void;\n  onImportar: () => void;\n  onAtualizar: () => void;\n}\n\nexport function TabelaUsuarios({\n  usuarios,\n  carregando = false,\n  paginaAtual,\n  totalPaginas,\n  totalUsuarios,\n  itensPorPagina,\n  filtros,\n  onFiltroChange,\n  onPaginaChange,\n  onItensPorPaginaChange,\n  onEditar,\n  onExcluir,\n  onAlterarStatus,\n  onRedefinirSenha,\n  onVisualizarDetalhes,\n  onNovoUsuario,\n  onExportar,\n  onImportar,\n  onAtualizar,\n}: TabelaUsuariosProps) {\n  const [usuariosSelecionados, setUsuariosSelecionados] = useState<string[]>(\n    []\n  );\n  // Permissões são agora gerenciadas pelo PermissionGuard\n\n  // Obter iniciais do nome\n  const obterIniciais = (nome: string) => {\n    return nome\n      .split(' ')\n      .map(parte => parte.charAt(0))\n      .join('')\n      .toUpperCase()\n      .slice(0, 2);\n  };\n\n  // Obter cor do badge do perfil\n  const obterCorPerfil = (perfil: string) => {\n    switch (perfil) {\n      case 'ADMIN':\n        return 'destructive';\n      case 'GESTOR':\n        return 'default';\n      case 'OPERADOR':\n        return 'secondary';\n      default:\n        return 'outline';\n    }\n  };\n\n  // Manipular seleção de usuário\n  const manipularSelecaoUsuario = (usuarioId: string, selecionado: boolean) => {\n    if (selecionado) {\n      setUsuariosSelecionados(prev => [...prev, usuarioId]);\n    } else {\n      setUsuariosSelecionados(prev => prev.filter(id => id !== usuarioId));\n    }\n  };\n\n  // Manipular seleção de todos os usuários\n  const manipularSelecaoTodos = (selecionado: boolean) => {\n    if (selecionado) {\n      setUsuariosSelecionados(usuarios.map(u => u.id));\n    } else {\n      setUsuariosSelecionados([]);\n    }\n  };\n\n  // Manipular ordenação\n  const manipularOrdenacao = (campo: FiltrosTabela['ordenarPor']) => {\n    const novaOrdem =\n      filtros.ordenarPor === campo && filtros.ordem === 'asc' ? 'desc' : 'asc';\n    onFiltroChange({ ordenarPor: campo, ordem: novaOrdem });\n  };\n\n  // Renderizar ícone de ordenação\n  const renderizarIconeOrdenacao = (campo: string) => {\n    if (filtros.ordenarPor !== campo) {\n      return <ArrowUpDown className=\"ml-2 h-4 w-4\" />;\n    }\n    return filtros.ordem === 'asc' ? (\n      <ArrowUp className=\"ml-2 h-4 w-4\" />\n    ) : (\n      <ArrowDown className=\"ml-2 h-4 w-4\" />\n    );\n  };\n\n  // Manipular ações em lote\n  const manipularAcaoLote = async (\n    acao: 'ativar' | 'desativar' | 'excluir'\n  ) => {\n    if (usuariosSelecionados.length === 0) {\n      toast.error('Selecione pelo menos um usuário');\n      return;\n    }\n\n    const confirmacao = window.confirm(\n      `Tem certeza que deseja ${acao} ${usuariosSelecionados.length} usuário(s) selecionado(s)?`\n    );\n\n    if (!confirmacao) return;\n\n    try {\n      // Aqui você implementaria a lógica para ações em lote\n      // Por exemplo, fazer requisições para a API\n\n      toast.success(\n        `${usuariosSelecionados.length} usuário(s) ${acao === 'ativar' ? 'ativado(s)' : acao === 'desativar' ? 'desativado(s)' : 'excluído(s)'} com sucesso`\n      );\n      setUsuariosSelecionados([]);\n      onAtualizar();\n    } catch (error) {\n      console.error(`Erro ao ${acao} usuários:`, error);\n      toast.error(`Erro ao ${acao} usuários selecionados`);\n    }\n  };\n\n  // Calcular estatísticas\n  const estatisticas = useMemo(() => {\n    const ativos = usuarios.filter(u => u.ativo).length;\n    const inativos = usuarios.filter(u => !u.ativo).length;\n    const admins = usuarios.filter(u => u.perfil === 'ADMIN').length;\n    const gestores = usuarios.filter(u => u.perfil === 'GESTOR').length;\n    const operadores = usuarios.filter(u => u.perfil === 'OPERADOR').length;\n\n    return { ativos, inativos, admins, gestores, operadores };\n  }, [usuarios]);\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Cabeçalho com estatísticas */}\n      <div className=\"grid grid-cols-2 md:grid-cols-5 gap-4\">\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"text-2xl font-bold\">{totalUsuarios}</div>\n            <div className=\"text-sm text-muted-foreground\">Total</div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"text-2xl font-bold text-green-600\">\n              {estatisticas.ativos}\n            </div>\n            <div className=\"text-sm text-muted-foreground\">Ativos</div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"text-2xl font-bold text-gray-600\">\n              {estatisticas.inativos}\n            </div>\n            <div className=\"text-sm text-muted-foreground\">Inativos</div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"text-2xl font-bold text-red-600\">\n              {estatisticas.admins}\n            </div>\n            <div className=\"text-sm text-muted-foreground\">Admins</div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"text-2xl font-bold text-blue-600\">\n              {estatisticas.gestores}\n            </div>\n            <div className=\"text-sm text-muted-foreground\">Gestores</div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Barra de ferramentas */}\n      <Card>\n        <CardHeader>\n          <div className=\"flex flex-col sm:flex-row gap-4 items-start sm:items-center justify-between\">\n            <div>\n              <CardTitle>Usuários do Sistema</CardTitle>\n              <CardDescription>\n                Gerencie os usuários e suas permissões\n              </CardDescription>\n            </div>\n\n            <div className=\"flex flex-wrap gap-2\">\n              <PermissionGuard requiredPermissions={['criar_usuarios']}>\n                <Button onClick={onNovoUsuario} size=\"sm\">\n                  <Plus className=\"mr-2 h-4 w-4\" />\n                  Novo Usuário\n                </Button>\n              </PermissionGuard>\n\n              <PermissionGuard requiredPermissions={['importar_usuarios']}>\n                <Button onClick={onImportar} variant=\"outline\" size=\"sm\">\n                  <Upload className=\"mr-2 h-4 w-4\" />\n                  Importar\n                </Button>\n              </PermissionGuard>\n\n              <PermissionGuard requiredPermissions={['exportar_usuarios']}>\n                <Button onClick={onExportar} variant=\"outline\" size=\"sm\">\n                  <Download className=\"mr-2 h-4 w-4\" />\n                  Exportar\n                </Button>\n              </PermissionGuard>\n\n              <Button onClick={onAtualizar} variant=\"outline\" size=\"sm\">\n                <RefreshCw className=\"mr-2 h-4 w-4\" />\n                Atualizar\n              </Button>\n            </div>\n          </div>\n        </CardHeader>\n\n        <CardContent>\n          {/* Filtros */}\n          <div className=\"flex flex-col sm:flex-row gap-4 mb-6\">\n            <div className=\"flex-1\">\n              <div className=\"relative\">\n                <Search className=\"absolute left-2 top-2.5 h-4 w-4 text-muted-foreground\" />\n                <Input\n                  placeholder=\"Buscar por nome ou email...\"\n                  value={filtros.busca}\n                  onChange={e => onFiltroChange({ busca: e.target.value })}\n                  className=\"pl-8\"\n                />\n              </div>\n            </div>\n\n            <Select\n              value={filtros.perfil}\n              onValueChange={value => onFiltroChange({ perfil: value })}\n            >\n              <SelectTrigger className=\"w-full sm:w-[180px]\">\n                <SelectValue placeholder=\"Filtrar por perfil\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"todos\">Todos os perfis</SelectItem>\n                <SelectItem value=\"ADMIN\">Administrador</SelectItem>\n                <SelectItem value=\"GESTOR\">Gestor</SelectItem>\n                <SelectItem value=\"OPERADOR\">Operador</SelectItem>\n              </SelectContent>\n            </Select>\n\n            <Select\n              value={filtros.status}\n              onValueChange={value => onFiltroChange({ status: value })}\n            >\n              <SelectTrigger className=\"w-full sm:w-[180px]\">\n                <SelectValue placeholder=\"Filtrar por status\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"todos\">Todos os status</SelectItem>\n                <SelectItem value=\"ativo\">Ativos</SelectItem>\n                <SelectItem value=\"inativo\">Inativos</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n\n          {/* Ações em lote */}\n          {usuariosSelecionados.length > 0 && (\n            <div className=\"flex items-center gap-2 mb-4 p-3 bg-muted rounded-lg\">\n              <span className=\"text-sm font-medium\">\n                {usuariosSelecionados.length} usuário(s) selecionado(s)\n              </span>\n\n              <div className=\"flex gap-2 ml-auto\">\n                {podeGerenciarUsuarios && (\n                  <>\n                    <Button\n                      size=\"sm\"\n                      variant=\"outline\"\n                      onClick={() => manipularAcaoLote('ativar')}\n                    >\n                      <UserCheck className=\"mr-1 h-3 w-3\" />\n                      Ativar\n                    </Button>\n\n                    <Button\n                      size=\"sm\"\n                      variant=\"outline\"\n                      onClick={() => manipularAcaoLote('desativar')}\n                    >\n                      <UserX className=\"mr-1 h-3 w-3\" />\n                      Desativar\n                    </Button>\n                  </>\n                )}\n\n                {podeExcluirUsuarios && (\n                  <Button\n                    size=\"sm\"\n                    variant=\"destructive\"\n                    onClick={() => manipularAcaoLote('excluir')}\n                  >\n                    <Trash2 className=\"mr-1 h-3 w-3\" />\n                    Excluir\n                  </Button>\n                )}\n              </div>\n            </div>\n          )}\n\n          {/* Tabela */}\n          <div className=\"rounded-md border\">\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead className=\"w-[50px]\">\n                    <Checkbox\n                      checked={\n                        usuariosSelecionados.length === usuarios.length &&\n                        usuarios.length > 0\n                      }\n                      onCheckedChange={manipularSelecaoTodos}\n                    />\n                  </TableHead>\n\n                  <TableHead className=\"w-[80px]\">Avatar</TableHead>\n\n                  <TableHead>\n                    <Button\n                      variant=\"ghost\"\n                      onClick={() => manipularOrdenacao('nome')}\n                      className=\"h-auto p-0 font-semibold\"\n                    >\n                      Nome\n                      {renderizarIconeOrdenacao('nome')}\n                    </Button>\n                  </TableHead>\n\n                  <TableHead>\n                    <Button\n                      variant=\"ghost\"\n                      onClick={() => manipularOrdenacao('email')}\n                      className=\"h-auto p-0 font-semibold\"\n                    >\n                      Email\n                      {renderizarIconeOrdenacao('email')}\n                    </Button>\n                  </TableHead>\n\n                  <TableHead>\n                    <Button\n                      variant=\"ghost\"\n                      onClick={() => manipularOrdenacao('perfil')}\n                      className=\"h-auto p-0 font-semibold\"\n                    >\n                      Perfil\n                      {renderizarIconeOrdenacao('perfil')}\n                    </Button>\n                  </TableHead>\n\n                  <TableHead>Status</TableHead>\n\n                  <TableHead>\n                    <Button\n                      variant=\"ghost\"\n                      onClick={() => manipularOrdenacao('criadoEm')}\n                      className=\"h-auto p-0 font-semibold\"\n                    >\n                      Criado em\n                      {renderizarIconeOrdenacao('criadoEm')}\n                    </Button>\n                  </TableHead>\n\n                  <TableHead>\n                    <Button\n                      variant=\"ghost\"\n                      onClick={() => manipularOrdenacao('ultimoLogin')}\n                      className=\"h-auto p-0 font-semibold\"\n                    >\n                      Último Login\n                      {renderizarIconeOrdenacao('ultimoLogin')}\n                    </Button>\n                  </TableHead>\n\n                  <TableHead className=\"w-[70px]\">Ações</TableHead>\n                </TableRow>\n              </TableHeader>\n\n              <TableBody>\n                {carregando ? (\n                  <TableRow>\n                    <TableCell colSpan={9} className=\"text-center py-8\">\n                      <div className=\"flex items-center justify-center gap-2\">\n                        <RefreshCw className=\"h-4 w-4 animate-spin\" />\n                        Carregando usuários...\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                ) : usuarios.length === 0 ? (\n                  <TableRow>\n                    <TableCell colSpan={9} className=\"text-center py-8\">\n                      <div className=\"text-muted-foreground\">\n                        Nenhum usuário encontrado\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                ) : (\n                  usuarios.map(usuario => (\n                    <TableRow key={usuario.id}>\n                      <TableCell>\n                        <Checkbox\n                          checked={usuariosSelecionados.includes(usuario.id)}\n                          onCheckedChange={checked =>\n                            manipularSelecaoUsuario(\n                              usuario.id,\n                              checked as boolean\n                            )\n                          }\n                        />\n                      </TableCell>\n\n                      <TableCell>\n                        <Avatar className=\"h-8 w-8\">\n                          <AvatarImage\n                            src={usuario.avatar}\n                            alt={usuario.nome}\n                          />\n                          <AvatarFallback className=\"text-xs\">\n                            {obterIniciais(usuario.nome)}\n                          </AvatarFallback>\n                        </Avatar>\n                      </TableCell>\n\n                      <TableCell className=\"font-medium\">\n                        {usuario.nome}\n                      </TableCell>\n\n                      <TableCell className=\"text-muted-foreground\">\n                        {usuario.email}\n                      </TableCell>\n\n                      <TableCell>\n                        <Badge variant={obterCorPerfil(usuario.perfil)}>\n                          {usuario.perfil}\n                        </Badge>\n                      </TableCell>\n\n                      <TableCell>\n                        <Badge\n                          variant={usuario.ativo ? 'default' : 'secondary'}\n                          className={\n                            usuario.ativo ? 'bg-green-500' : 'bg-gray-500'\n                          }\n                        >\n                          {usuario.ativo ? 'Ativo' : 'Inativo'}\n                        </Badge>\n                      </TableCell>\n\n                      <TableCell className=\"text-muted-foreground\">\n                        {formatarData(usuario.criadoEm)}\n                      </TableCell>\n\n                      <TableCell className=\"text-muted-foreground\">\n                        {usuario.ultimoLogin\n                          ? formatarData(usuario.ultimoLogin)\n                          : 'Nunca'}\n                      </TableCell>\n\n                      <TableCell>\n                        <DropdownMenu>\n                          <DropdownMenuTrigger asChild>\n                            <Button variant=\"ghost\" className=\"h-8 w-8 p-0\">\n                              <span className=\"sr-only\">Abrir menu</span>\n                              <MoreHorizontal className=\"h-4 w-4\" />\n                            </Button>\n                          </DropdownMenuTrigger>\n\n                          <DropdownMenuContent align=\"end\">\n                            <DropdownMenuLabel>Ações</DropdownMenuLabel>\n\n                            <DropdownMenuItem\n                              onClick={() => onVisualizarDetalhes(usuario.id)}\n                            >\n                              <Eye className=\"mr-2 h-4 w-4\" />\n                              Ver detalhes\n                            </DropdownMenuItem>\n\n                            <PermissionGuard\n                              requiredPermissions={['editar_usuarios']}\n                            >\n                              <DropdownMenuItem\n                                onClick={() => onEditar(usuario)}\n                              >\n                                <Edit className=\"mr-2 h-4 w-4\" />\n                                Editar\n                              </DropdownMenuItem>\n                            </PermissionGuard>\n\n                            <PermissionGuard\n                              requiredPermissions={\n                                usuario.ativo\n                                  ? ['desativar_usuarios']\n                                  : ['ativar_usuarios']\n                              }\n                            >\n                              <DropdownMenuItem\n                                onClick={() =>\n                                  onAlterarStatus(usuario.id, !usuario.ativo)\n                                }\n                              >\n                                {usuario.ativo ? (\n                                  <>\n                                    <UserX className=\"mr-2 h-4 w-4\" />\n                                    Desativar\n                                  </>\n                                ) : (\n                                  <>\n                                    <UserCheck className=\"mr-2 h-4 w-4\" />\n                                    Ativar\n                                  </>\n                                )}\n                              </DropdownMenuItem>\n                            </PermissionGuard>\n\n                            <PermissionGuard\n                              requiredPermissions={['redefinir_senha_usuarios']}\n                            >\n                              <DropdownMenuItem\n                                onClick={() => onRedefinirSenha(usuario.id)}\n                              >\n                                <Key className=\"mr-2 h-4 w-4\" />\n                                Redefinir senha\n                              </DropdownMenuItem>\n                            </PermissionGuard>\n\n                            <PermissionGuard\n                              requiredPermissions={['excluir_usuarios']}\n                            >\n                              <DropdownMenuSeparator />\n                              <DropdownMenuItem\n                                onClick={() => onExcluir(usuario.id)}\n                                className=\"text-destructive\"\n                              >\n                                <Trash2 className=\"mr-2 h-4 w-4\" />\n                                Excluir\n                              </DropdownMenuItem>\n                            </PermissionGuard>\n                          </DropdownMenuContent>\n                        </DropdownMenu>\n                      </TableCell>\n                    </TableRow>\n                  ))\n                )}\n              </TableBody>\n            </Table>\n          </div>\n\n          {/* Paginação */}\n          <div className=\"flex flex-col sm:flex-row items-center justify-between gap-4 mt-6\">\n            <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n              <span>Mostrando</span>\n              <Select\n                value={itensPorPagina.toString()}\n                onValueChange={value => onItensPorPaginaChange(parseInt(value))}\n              >\n                <SelectTrigger className=\"w-[70px]\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"10\">10</SelectItem>\n                  <SelectItem value=\"20\">20</SelectItem>\n                  <SelectItem value=\"50\">50</SelectItem>\n                  <SelectItem value=\"100\">100</SelectItem>\n                </SelectContent>\n              </Select>\n              <span>de {totalUsuarios} usuários</span>\n            </div>\n\n            <div className=\"flex items-center gap-2\">\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => onPaginaChange(paginaAtual - 1)}\n                disabled={paginaAtual <= 1}\n              >\n                Anterior\n              </Button>\n\n              <div className=\"flex items-center gap-1\">\n                {Array.from({ length: Math.min(5, totalPaginas) }, (_, i) => {\n                  const pagina = i + 1;\n                  return (\n                    <Button\n                      key={pagina}\n                      variant={paginaAtual === pagina ? 'default' : 'outline'}\n                      size=\"sm\"\n                      onClick={() => onPaginaChange(pagina)}\n                      className=\"w-8 h-8 p-0\"\n                    >\n                      {pagina}\n                    </Button>\n                  );\n                })}\n\n                {totalPaginas > 5 && (\n                  <>\n                    <span className=\"px-2\">...</span>\n                    <Button\n                      variant={\n                        paginaAtual === totalPaginas ? 'default' : 'outline'\n                      }\n                      size=\"sm\"\n                      onClick={() => onPaginaChange(totalPaginas)}\n                      className=\"w-8 h-8 p-0\"\n                    >\n                      {totalPaginas}\n                    </Button>\n                  </>\n                )}\n              </div>\n\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => onPaginaChange(paginaAtual + 1)}\n                disabled={paginaAtual >= totalPaginas}\n              >\n                Próxima\n              </Button>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"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","ignoreList":[]}