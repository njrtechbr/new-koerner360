{"version":3,"sources":["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\components\\lembretes\\lista-lembretes.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Badge } from '@/components/ui/badge';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';\nimport { useLembretes } from '@/hooks/use-lembretes';\nimport { \n  Search, \n  Filter, \n  Mail, \n  Clock, \n  AlertTriangle, \n  CheckCircle, \n  XCircle, \n  RefreshCw, \n  Send, \n  Edit, \n  Trash2,\n  Calendar,\n  User,\n  FileText\n} from 'lucide-react';\nimport { format } from 'date-fns';\nimport { ptBR } from 'date-fns/locale';\nimport type { Lembrete, FiltrosLembretes } from '@/hooks/use-lembretes';\n\ninterface ListaLembretesProps {\n  className?: string;\n  filtrosIniciais?: FiltrosLembretes;\n}\n\nexport function ListaLembretes({ className, filtrosIniciais = {} }: ListaLembretesProps) {\n  const [filtros, setFiltros] = useState<FiltrosLembretes>({\n    limite: 50,\n    pagina: 1,\n    ...filtrosIniciais,\n  });\n  const [busca, setBusca] = useState('');\n  const [lembreteDetalhes, setLembreteDetalhes] = useState<Lembrete | null>(null);\n  const [mostrarDetalhes, setMostrarDetalhes] = useState(false);\n\n  const {\n    lembretes,\n    paginacao,\n    carregando,\n    erro,\n    buscarLembretes,\n    executarAcaoLembrete,\n    removerLembrete,\n  } = useLembretes(filtros);\n\n  const handleBuscar = () => {\n    const novosFiltros = { ...filtros, pagina: 1 };\n    if (busca.trim()) {\n      // Implementar busca por nome do usuário ou avaliado\n      // Por enquanto, apenas recarrega os dados\n    }\n    setFiltros(novosFiltros);\n    buscarLembretes(novosFiltros);\n  };\n\n  const handleFiltroChange = (campo: keyof FiltrosLembretes, valor: any) => {\n    const novosFiltros = { ...filtros, [campo]: valor, pagina: 1 };\n    setFiltros(novosFiltros);\n    buscarLembretes(novosFiltros);\n  };\n\n  const handlePaginacao = (novaPagina: number) => {\n    const novosFiltros = { ...filtros, pagina: novaPagina };\n    setFiltros(novosFiltros);\n    buscarLembretes(novosFiltros);\n  };\n\n  const handleVerDetalhes = (lembrete: Lembrete) => {\n    setLembreteDetalhes(lembrete);\n    setMostrarDetalhes(true);\n  };\n\n  const handleReenviar = async (lembrete: Lembrete) => {\n    await executarAcaoLembrete(lembrete.id, 'reenviar');\n  };\n\n  const handleMarcarEnviado = async (lembrete: Lembrete) => {\n    await executarAcaoLembrete(lembrete.id, 'marcar_enviado');\n  };\n\n  const handleReagendar = async (lembrete: Lembrete) => {\n    const novaData = prompt('Digite a nova data/hora (YYYY-MM-DD HH:MM):');\n    if (novaData) {\n      await executarAcaoLembrete(lembrete.id, 'reagendar', { dataEnvio: novaData });\n    }\n  };\n\n  const handleRemover = async (lembrete: Lembrete) => {\n    if (confirm(`Tem certeza que deseja remover o lembrete para ${lembrete.usuario.nome}?`)) {\n      try {\n        await removerLembrete(lembrete.id);\n        toast({\n          title: 'Sucesso',\n          description: 'Lembrete removido com sucesso.',\n        });\n      } catch (error) {\n        toast({\n          title: 'Erro',\n          description: 'Erro ao remover lembrete.',\n          variant: 'destructive',\n        });\n      }\n    }\n  };\n\n  const getStatusIcon = (lembrete: Lembrete) => {\n    if (lembrete.enviado) {\n      return <CheckCircle className=\"h-4 w-4 text-green-500\" />;\n    }\n    if (lembrete.erro) {\n      return <XCircle className=\"h-4 w-4 text-red-500\" />;\n    }\n    if (new Date(lembrete.dataEnvio) < new Date()) {\n      return <AlertTriangle className=\"h-4 w-4 text-yellow-500\" />;\n    }\n    return <Clock className=\"h-4 w-4 text-blue-500\" />;\n  };\n\n  const getStatusText = (lembrete: Lembrete) => {\n    if (lembrete.enviado) return 'Enviado';\n    if (lembrete.erro) return 'Falha';\n    if (new Date(lembrete.dataEnvio) < new Date()) return 'Atrasado';\n    return 'Agendado';\n  };\n\n  const getStatusVariant = (lembrete: Lembrete): 'default' | 'secondary' | 'destructive' => {\n    if (lembrete.enviado) return 'default';\n    if (lembrete.erro) return 'destructive';\n    if (new Date(lembrete.dataEnvio) < new Date()) return 'destructive';\n    return 'secondary';\n  };\n\n  const getTipoIcon = (tipo: string) => {\n    switch (tipo) {\n      case 'lembrete':\n        return <Mail className=\"h-4 w-4 text-blue-500\" />;\n      case 'vencimento':\n        return <AlertTriangle className=\"h-4 w-4 text-red-500\" />;\n      default:\n        return <Clock className=\"h-4 w-4 text-gray-500\" />;\n    }\n  };\n\n  return (\n    <div className={className}>\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Mail className=\"h-5 w-5\" />\n            Lembretes\n          </CardTitle>\n          <CardDescription>\n            Gerencie todos os lembretes de avaliação do sistema\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          {/* Filtros */}\n          <div className=\"space-y-4 mb-6\">\n            <div className=\"flex gap-4 items-end\">\n              <div className=\"flex-1\">\n                <Label htmlFor=\"busca\">Buscar</Label>\n                <div className=\"flex gap-2\">\n                  <Input\n                    id=\"busca\"\n                    placeholder=\"Buscar por usuário ou avaliado...\"\n                    value={busca}\n                    onChange={(e) => setBusca(e.target.value)}\n                    onKeyPress={(e) => e.key === 'Enter' && handleBuscar()}\n                  />\n                  <Button onClick={handleBuscar} size=\"icon\">\n                    <Search className=\"h-4 w-4\" />\n                  </Button>\n                </div>\n              </div>\n              <Button\n                onClick={() => buscarLembretes()}\n                variant=\"outline\"\n                size=\"icon\"\n                disabled={carregando}\n              >\n                <RefreshCw className={`h-4 w-4 ${carregando ? 'animate-spin' : ''}`} />\n              </Button>\n            </div>\n\n            <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n              <div>\n                <Label>Tipo</Label>\n                <Select\n                  value={filtros.tipo || 'todos'}\n                  onValueChange={(value) => \n                    handleFiltroChange('tipo', value === 'todos' ? undefined : value)\n                  }\n                >\n                  <SelectTrigger>\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"todos\">Todos</SelectItem>\n                    <SelectItem value=\"lembrete\">Lembrete</SelectItem>\n                    <SelectItem value=\"vencimento\">Vencimento</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n\n              <div>\n                <Label>Status</Label>\n                <Select\n                  value={filtros.enviado === undefined ? 'todos' : filtros.enviado ? 'enviado' : 'pendente'}\n                  onValueChange={(value) => {\n                    let enviado: boolean | undefined;\n                    if (value === 'enviado') enviado = true;\n                    else if (value === 'pendente') enviado = false;\n                    else enviado = undefined;\n                    handleFiltroChange('enviado', enviado);\n                  }}\n                >\n                  <SelectTrigger>\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"todos\">Todos</SelectItem>\n                    <SelectItem value=\"pendente\">Pendente</SelectItem>\n                    <SelectItem value=\"enviado\">Enviado</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n\n              <div>\n                <Label>Data Início</Label>\n                <Input\n                  type=\"date\"\n                  value={filtros.dataInicio || ''}\n                  onChange={(e) => handleFiltroChange('dataInicio', e.target.value || undefined)}\n                />\n              </div>\n\n              <div>\n                <Label>Data Fim</Label>\n                <Input\n                  type=\"date\"\n                  value={filtros.dataFim || ''}\n                  onChange={(e) => handleFiltroChange('dataFim', e.target.value || undefined)}\n                />\n              </div>\n            </div>\n          </div>\n\n          {erro && (\n            <Alert className=\"mb-4\">\n              <AlertTriangle className=\"h-4 w-4\" />\n              <AlertDescription>{erro}</AlertDescription>\n            </Alert>\n          )}\n\n          {/* Lista de Lembretes */}\n          <div className=\"space-y-2\">\n            {carregando && lembretes.length === 0 ? (\n              <div className=\"text-center py-8\">\n                <RefreshCw className=\"h-8 w-8 animate-spin mx-auto mb-2\" />\n                <p>Carregando lembretes...</p>\n              </div>\n            ) : lembretes.length === 0 ? (\n              <div className=\"text-center py-8\">\n                <Mail className=\"h-8 w-8 mx-auto mb-2 text-gray-400\" />\n                <p className=\"text-gray-500\">Nenhum lembrete encontrado</p>\n              </div>\n            ) : (\n              lembretes.map((lembrete) => (\n                <Card key={lembrete.id} className=\"hover:shadow-md transition-shadow\">\n                  <CardContent className=\"p-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center space-x-4 flex-1\">\n                        <div className=\"flex items-center space-x-2\">\n                          {getTipoIcon(lembrete.tipo)}\n                          {getStatusIcon(lembrete)}\n                        </div>\n                        \n                        <div className=\"flex-1\">\n                          <div className=\"flex items-center gap-2 mb-1\">\n                            <h4 className=\"font-medium\">{lembrete.usuario.nome}</h4>\n                            <Badge variant={lembrete.tipo === 'vencimento' ? 'destructive' : 'default'}>\n                              {lembrete.tipo}\n                            </Badge>\n                            <Badge variant={getStatusVariant(lembrete)}>\n                              {getStatusText(lembrete)}\n                            </Badge>\n                          </div>\n                          \n                          <p className=\"text-sm text-muted-foreground mb-1\">\n                            <User className=\"h-3 w-3 inline mr-1\" />\n                            Avaliado: {lembrete.avaliacao.avaliado.nome}\n                          </p>\n                          \n                          <p className=\"text-sm text-muted-foreground\">\n                            <Calendar className=\"h-3 w-3 inline mr-1\" />\n                            Agendado: {format(new Date(lembrete.dataEnvio), 'dd/MM/yyyy HH:mm', { locale: ptBR })}\n                          </p>\n                          \n                          {lembrete.dataEnvioReal && (\n                            <p className=\"text-sm text-muted-foreground\">\n                              <CheckCircle className=\"h-3 w-3 inline mr-1\" />\n                              Enviado: {format(new Date(lembrete.dataEnvioReal), 'dd/MM/yyyy HH:mm', { locale: ptBR })}\n                            </p>\n                          )}\n                          \n                          {lembrete.erro && (\n                            <p className=\"text-sm text-red-600\">\n                              <XCircle className=\"h-3 w-3 inline mr-1\" />\n                              Erro: {lembrete.erro}\n                            </p>\n                          )}\n                        </div>\n                      </div>\n                      \n                      <div className=\"flex items-center space-x-2\">\n                        <Button\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={() => handleVerDetalhes(lembrete)}\n                        >\n                          <FileText className=\"h-4 w-4\" />\n                        </Button>\n                        \n                        {!lembrete.enviado && (\n                          <>\n                            <Button\n                              variant=\"outline\"\n                              size=\"sm\"\n                              onClick={() => handleReenviar(lembrete)}\n                            >\n                              <Send className=\"h-4 w-4\" />\n                            </Button>\n                            \n                            <Button\n                              variant=\"outline\"\n                              size=\"sm\"\n                              onClick={() => handleReagendar(lembrete)}\n                            >\n                              <Edit className=\"h-4 w-4\" />\n                            </Button>\n                            \n                            <Button\n                              variant=\"outline\"\n                              size=\"sm\"\n                              onClick={() => handleMarcarEnviado(lembrete)}\n                            >\n                              <CheckCircle className=\"h-4 w-4\" />\n                            </Button>\n                          </>\n                        )}\n                        \n                        <Button\n                          variant=\"outline\"\n                          size=\"sm\"\n                          onClick={() => handleRemover(lembrete)}\n                          className=\"text-red-600 hover:text-red-700\"\n                        >\n                          <Trash2 className=\"h-4 w-4\" />\n                        </Button>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))\n            )}\n          </div>\n\n          {/* Paginação */}\n          {paginacao.totalPaginas > 1 && (\n            <div className=\"flex items-center justify-between mt-6\">\n              <p className=\"text-sm text-muted-foreground\">\n                Mostrando {((paginacao.paginaAtual - 1) * paginacao.itensPorPagina) + 1} a{' '}\n                {Math.min(paginacao.paginaAtual * paginacao.itensPorPagina, paginacao.totalItens)} de{' '}\n                {paginacao.totalItens} lembretes\n              </p>\n              \n              <div className=\"flex items-center space-x-2\">\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => handlePaginacao(paginacao.paginaAtual - 1)}\n                  disabled={!paginacao.temPaginaAnterior || carregando}\n                >\n                  Anterior\n                </Button>\n                \n                <span className=\"text-sm\">\n                  Página {paginacao.paginaAtual} de {paginacao.totalPaginas}\n                </span>\n                \n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => handlePaginacao(paginacao.paginaAtual + 1)}\n                  disabled={!paginacao.temProximaPagina || carregando}\n                >\n                  Próxima\n                </Button>\n              </div>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Dialog de Detalhes */}\n      <Dialog open={mostrarDetalhes} onOpenChange={setMostrarDetalhes}>\n        <DialogContent className=\"max-w-2xl\">\n          <DialogHeader>\n            <DialogTitle>Detalhes do Lembrete</DialogTitle>\n            <DialogDescription>\n              Informações completas sobre o lembrete selecionado\n            </DialogDescription>\n          </DialogHeader>\n          \n          {lembreteDetalhes && (\n            <div className=\"space-y-4\">\n              <div className=\"grid gap-4 md:grid-cols-2\">\n                <div>\n                  <Label>Usuário</Label>\n                  <p className=\"font-medium\">{lembreteDetalhes.usuario.nome}</p>\n                  <p className=\"text-sm text-muted-foreground\">{lembreteDetalhes.usuario.email}</p>\n                </div>\n                \n                <div>\n                  <Label>Avaliado</Label>\n                  <p className=\"font-medium\">{lembreteDetalhes.avaliacao.avaliado.nome}</p>\n                  <p className=\"text-sm text-muted-foreground\">{lembreteDetalhes.avaliacao.avaliado.email}</p>\n                </div>\n                \n                <div>\n                  <Label>Tipo</Label>\n                  <Badge variant={lembreteDetalhes.tipo === 'vencimento' ? 'destructive' : 'default'}>\n                    {lembreteDetalhes.tipo}\n                  </Badge>\n                </div>\n                \n                <div>\n                  <Label>Status</Label>\n                  <Badge variant={getStatusVariant(lembreteDetalhes)}>\n                    {getStatusText(lembreteDetalhes)}\n                  </Badge>\n                </div>\n                \n                <div>\n                  <Label>Data Agendada</Label>\n                  <p>{format(new Date(lembreteDetalhes.dataEnvio), 'dd/MM/yyyy HH:mm', { locale: ptBR })}</p>\n                </div>\n                \n                {lembreteDetalhes.dataEnvioReal && (\n                  <div>\n                    <Label>Data de Envio</Label>\n                    <p>{format(new Date(lembreteDetalhes.dataEnvioReal), 'dd/MM/yyyy HH:mm', { locale: ptBR })}</p>\n                  </div>\n                )}\n                \n                <div>\n                  <Label>Tentativas</Label>\n                  <p>{lembreteDetalhes.tentativas}</p>\n                </div>\n                \n                <div>\n                  <Label>Prazo da Avaliação</Label>\n                  <p>{format(new Date(lembreteDetalhes.avaliacao.prazo), 'dd/MM/yyyy', { locale: ptBR })}</p>\n                </div>\n              </div>\n              \n              {lembreteDetalhes.observacoes && (\n                <div>\n                  <Label>Observações</Label>\n                  <p className=\"text-sm bg-gray-50 p-2 rounded\">{lembreteDetalhes.observacoes}</p>\n                </div>\n              )}\n              \n              {lembreteDetalhes.erro && (\n                <div>\n                  <Label>Erro</Label>\n                  <p className=\"text-sm bg-red-50 text-red-700 p-2 rounded\">{lembreteDetalhes.erro}</p>\n                </div>\n              )}\n              \n              <div>\n                <Label>Período da Avaliação</Label>\n                <p className=\"font-medium\">{lembreteDetalhes.avaliacao.periodo.nome}</p>\n                <p className=\"text-sm text-muted-foreground\">\n                  {format(new Date(lembreteDetalhes.avaliacao.periodo.dataInicio), 'dd/MM/yyyy', { locale: ptBR })} a{' '}\n                  {format(new Date(lembreteDetalhes.avaliacao.periodo.dataFim), 'dd/MM/yyyy', { locale: ptBR })}\n                </p>\n              </div>\n            </div>\n          )}\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default ListaLembretes;"],"names":["ListaLembretes","className","filtrosIniciais","filtros","setFiltros","useState","limite","pagina","busca","setBusca","lembreteDetalhes","setLembreteDetalhes","mostrarDetalhes","setMostrarDetalhes","lembretes","paginacao","carregando","erro","buscarLembretes","executarAcaoLembrete","removerLembrete","useLembretes","handleBuscar","novosFiltros","trim","handleFiltroChange","campo","valor","handlePaginacao","novaPagina","handleVerDetalhes","lembrete","handleReenviar","id","handleMarcarEnviado","handleReagendar","novaData","prompt","dataEnvio","handleRemover","confirm","usuario","nome","toast","title","description","error","variant","getStatusIcon","enviado","CheckCircle","XCircle","Date","AlertTriangle","Clock","getStatusText","getStatusVariant","getTipoIcon","tipo","Mail","div","Card","CardHeader","CardTitle","CardDescription","CardContent","Label","htmlFor","Input","placeholder","value","onChange","e","target","onKeyPress","key","Button","onClick","size","Search","disabled","RefreshCw","Select","onValueChange","undefined","SelectTrigger","SelectValue","SelectContent","SelectItem","type","dataInicio","dataFim","Alert","AlertDescription","length","p","map","h4","Badge","User","avaliacao","avaliado","Calendar","format","locale","ptBR","dataEnvioReal","FileText","Send","Edit","Trash2","totalPaginas","paginaAtual","itensPorPagina","Math","min","totalItens","temPaginaAnterior","span","temProximaPagina","Dialog","open","onOpenChange","DialogContent","DialogHeader","DialogTitle","DialogDescription","email","tentativas","prazo","observacoes","periodo"],"mappings":"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"}