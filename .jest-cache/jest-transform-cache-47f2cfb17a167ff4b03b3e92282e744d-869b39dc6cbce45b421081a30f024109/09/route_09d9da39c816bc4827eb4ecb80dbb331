ebaf24b3546c540bc6be8519c56741cd
"use strict";

/* istanbul ignore next */
function cov_1qcwcqhmnc() {
  var path = "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\lembretes\\agendamento\\route.ts";
  var hash = "10caf7545fdc170210dafd53d9cbcd15a8a92d42";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\lembretes\\agendamento\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 24,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 22
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 19
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 20
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 19
        }
      },
      "8": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 38
        }
      },
      "9": {
        start: {
          line: 26,
          column: 18
        },
        end: {
          line: 26,
          column: 38
        }
      },
      "10": {
        start: {
          line: 27,
          column: 14
        },
        end: {
          line: 27,
          column: 45
        }
      },
      "11": {
        start: {
          line: 28,
          column: 28
        },
        end: {
          line: 28,
          column: 83
        }
      },
      "12": {
        start: {
          line: 29,
          column: 13
        },
        end: {
          line: 29,
          column: 27
        }
      },
      "13": {
        start: {
          line: 31,
          column: 36
        },
        end: {
          line: 37,
          column: 2
        }
      },
      "14": {
        start: {
          line: 39,
          column: 28
        },
        end: {
          line: 47,
          column: 2
        }
      },
      "15": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 89,
          column: 5
        }
      },
      "16": {
        start: {
          line: 51,
          column: 24
        },
        end: {
          line: 51,
          column: 80
        }
      },
      "17": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 58,
          column: 9
        }
      },
      "18": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 57,
          column: 15
        }
      },
      "19": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 69,
          column: 9
        }
      },
      "20": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 68,
          column: 15
        }
      },
      "21": {
        start: {
          line: 70,
          column: 26
        },
        end: {
          line: 70,
          column: 76
        }
      },
      "22": {
        start: {
          line: 72,
          column: 23
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "23": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 80,
          column: 11
        }
      },
      "24": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 82,
          column: 67
        }
      },
      "25": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 88,
          column: 11
        }
      },
      "26": {
        start: {
          line: 92,
          column: 4
        },
        end: {
          line: 152,
          column: 5
        }
      },
      "27": {
        start: {
          line: 94,
          column: 24
        },
        end: {
          line: 94,
          column: 80
        }
      },
      "28": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 101,
          column: 9
        }
      },
      "29": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 100,
          column: 15
        }
      },
      "30": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 112,
          column: 9
        }
      },
      "31": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 111,
          column: 15
        }
      },
      "32": {
        start: {
          line: 114,
          column: 21
        },
        end: {
          line: 114,
          column: 41
        }
      },
      "33": {
        start: {
          line: 115,
          column: 31
        },
        end: {
          line: 115,
          column: 70
        }
      },
      "34": {
        start: {
          line: 116,
          column: 26
        },
        end: {
          line: 116,
          column: 76
        }
      },
      "35": {
        start: {
          line: 117,
          column: 28
        },
        end: {
          line: 117,
          column: 49
        }
      },
      "36": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 121,
          column: 9
        }
      },
      "37": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 120,
          column: 30
        }
      },
      "38": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 123,
          column: 62
        }
      },
      "39": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 127,
          column: 9
        }
      },
      "40": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 38
        }
      },
      "41": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 135,
          column: 11
        }
      },
      "42": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 77
        }
      },
      "43": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 145,
          column: 9
        }
      },
      "44": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 144,
          column: 15
        }
      },
      "45": {
        start: {
          line: 141,
          column: 48
        },
        end: {
          line: 141,
          column: 83
        }
      },
      "46": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 151,
          column: 11
        }
      },
      "47": {
        start: {
          line: 155,
          column: 4
        },
        end: {
          line: 266,
          column: 5
        }
      },
      "48": {
        start: {
          line: 157,
          column: 24
        },
        end: {
          line: 157,
          column: 80
        }
      },
      "49": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 164,
          column: 9
        }
      },
      "50": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 163,
          column: 15
        }
      },
      "51": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 175,
          column: 9
        }
      },
      "52": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 174,
          column: 15
        }
      },
      "53": {
        start: {
          line: 177,
          column: 21
        },
        end: {
          line: 177,
          column: 41
        }
      },
      "54": {
        start: {
          line: 178,
          column: 31
        },
        end: {
          line: 178,
          column: 62
        }
      },
      "55": {
        start: {
          line: 179,
          column: 26
        },
        end: {
          line: 179,
          column: 76
        }
      },
      "56": {
        start: {
          line: 180,
          column: 24
        },
        end: {
          line: 180,
          column: 26
        }
      },
      "57": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 241,
          column: 9
        }
      },
      "58": {
        start: {
          line: 183,
          column: 16
        },
        end: {
          line: 189,
          column: 17
        }
      },
      "59": {
        start: {
          line: 184,
          column: 20
        },
        end: {
          line: 188,
          column: 23
        }
      },
      "60": {
        start: {
          line: 190,
          column: 16
        },
        end: {
          line: 190,
          column: 42
        }
      },
      "61": {
        start: {
          line: 191,
          column: 16
        },
        end: {
          line: 193,
          column: 18
        }
      },
      "62": {
        start: {
          line: 194,
          column: 16
        },
        end: {
          line: 194,
          column: 22
        }
      },
      "63": {
        start: {
          line: 196,
          column: 16
        },
        end: {
          line: 202,
          column: 17
        }
      },
      "64": {
        start: {
          line: 197,
          column: 20
        },
        end: {
          line: 201,
          column: 23
        }
      },
      "65": {
        start: {
          line: 203,
          column: 16
        },
        end: {
          line: 203,
          column: 34
        }
      },
      "66": {
        start: {
          line: 204,
          column: 16
        },
        end: {
          line: 206,
          column: 18
        }
      },
      "67": {
        start: {
          line: 207,
          column: 16
        },
        end: {
          line: 207,
          column: 22
        }
      },
      "68": {
        start: {
          line: 209,
          column: 16
        },
        end: {
          line: 215,
          column: 17
        }
      },
      "69": {
        start: {
          line: 210,
          column: 20
        },
        end: {
          line: 214,
          column: 23
        }
      },
      "70": {
        start: {
          line: 216,
          column: 16
        },
        end: {
          line: 216,
          column: 52
        }
      },
      "71": {
        start: {
          line: 217,
          column: 16
        },
        end: {
          line: 219,
          column: 18
        }
      },
      "72": {
        start: {
          line: 220,
          column: 16
        },
        end: {
          line: 220,
          column: 22
        }
      },
      "73": {
        start: {
          line: 222,
          column: 16
        },
        end: {
          line: 228,
          column: 17
        }
      },
      "74": {
        start: {
          line: 223,
          column: 20
        },
        end: {
          line: 227,
          column: 23
        }
      },
      "75": {
        start: {
          line: 229,
          column: 16
        },
        end: {
          line: 229,
          column: 79
        }
      },
      "76": {
        start: {
          line: 230,
          column: 16
        },
        end: {
          line: 233,
          column: 18
        }
      },
      "77": {
        start: {
          line: 234,
          column: 16
        },
        end: {
          line: 234,
          column: 22
        }
      },
      "78": {
        start: {
          line: 236,
          column: 16
        },
        end: {
          line: 240,
          column: 19
        }
      },
      "79": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 249,
          column: 11
        }
      },
      "80": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 251,
          column: 68
        }
      },
      "81": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 259,
          column: 9
        }
      },
      "82": {
        start: {
          line: 253,
          column: 12
        },
        end: {
          line: 258,
          column: 15
        }
      },
      "83": {
        start: {
          line: 255,
          column: 48
        },
        end: {
          line: 255,
          column: 83
        }
      },
      "84": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 265,
          column: 11
        }
      },
      "85": {
        start: {
          line: 269,
          column: 4
        },
        end: {
          line: 342,
          column: 5
        }
      },
      "86": {
        start: {
          line: 271,
          column: 24
        },
        end: {
          line: 271,
          column: 80
        }
      },
      "87": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 278,
          column: 9
        }
      },
      "88": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 277,
          column: 15
        }
      },
      "89": {
        start: {
          line: 280,
          column: 8
        },
        end: {
          line: 286,
          column: 9
        }
      },
      "90": {
        start: {
          line: 281,
          column: 12
        },
        end: {
          line: 285,
          column: 15
        }
      },
      "91": {
        start: {
          line: 287,
          column: 33
        },
        end: {
          line: 287,
          column: 53
        }
      },
      "92": {
        start: {
          line: 288,
          column: 21
        },
        end: {
          line: 288,
          column: 67
        }
      },
      "93": {
        start: {
          line: 289,
          column: 26
        },
        end: {
          line: 289,
          column: 76
        }
      },
      "94": {
        start: {
          line: 290,
          column: 24
        },
        end: {
          line: 290,
          column: 26
        }
      },
      "95": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 325,
          column: 9
        }
      },
      "96": {
        start: {
          line: 294,
          column: 16
        },
        end: {
          line: 296,
          column: 18
        }
      },
      "97": {
        start: {
          line: 297,
          column: 16
        },
        end: {
          line: 297,
          column: 22
        }
      },
      "98": {
        start: {
          line: 300,
          column: 16
        },
        end: {
          line: 302,
          column: 17
        }
      },
      "99": {
        start: {
          line: 301,
          column: 20
        },
        end: {
          line: 301,
          column: 38
        }
      },
      "100": {
        start: {
          line: 304,
          column: 16
        },
        end: {
          line: 314,
          column: 19
        }
      },
      "101": {
        start: {
          line: 315,
          column: 16
        },
        end: {
          line: 317,
          column: 18
        }
      },
      "102": {
        start: {
          line: 318,
          column: 16
        },
        end: {
          line: 318,
          column: 22
        }
      },
      "103": {
        start: {
          line: 320,
          column: 16
        },
        end: {
          line: 324,
          column: 19
        }
      },
      "104": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 333,
          column: 11
        }
      },
      "105": {
        start: {
          line: 335,
          column: 8
        },
        end: {
          line: 335,
          column: 58
        }
      },
      "106": {
        start: {
          line: 336,
          column: 8
        },
        end: {
          line: 341,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 18
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 15
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 16
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 15
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "GET",
        decl: {
          start: {
            line: 48,
            column: 15
          },
          end: {
            line: 48,
            column: 18
          }
        },
        loc: {
          start: {
            line: 48,
            column: 28
          },
          end: {
            line: 90,
            column: 1
          }
        },
        line: 48
      },
      "6": {
        name: "PUT",
        decl: {
          start: {
            line: 91,
            column: 15
          },
          end: {
            line: 91,
            column: 18
          }
        },
        loc: {
          start: {
            line: 91,
            column: 28
          },
          end: {
            line: 153,
            column: 1
          }
        },
        line: 91
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 141,
            column: 43
          },
          end: {
            line: 141,
            column: 44
          }
        },
        loc: {
          start: {
            line: 141,
            column: 48
          },
          end: {
            line: 141,
            column: 83
          }
        },
        line: 141
      },
      "8": {
        name: "POST",
        decl: {
          start: {
            line: 154,
            column: 15
          },
          end: {
            line: 154,
            column: 19
          }
        },
        loc: {
          start: {
            line: 154,
            column: 29
          },
          end: {
            line: 267,
            column: 1
          }
        },
        line: 154
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 255,
            column: 43
          },
          end: {
            line: 255,
            column: 44
          }
        },
        loc: {
          start: {
            line: 255,
            column: 48
          },
          end: {
            line: 255,
            column: 83
          }
        },
        line: 255
      },
      "10": {
        name: "DELETE",
        decl: {
          start: {
            line: 268,
            column: 15
          },
          end: {
            line: 268,
            column: 21
          }
        },
        loc: {
          start: {
            line: 268,
            column: 31
          },
          end: {
            line: 343,
            column: 1
          }
        },
        line: 268
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "1": {
        loc: {
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 69,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 69,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "2": {
        loc: {
          start: {
            line: 85,
            column: 22
          },
          end: {
            line: 85,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 85,
            column: 47
          },
          end: {
            line: 85,
            column: 60
          }
        }, {
          start: {
            line: 85,
            column: 63
          },
          end: {
            line: 85,
            column: 82
          }
        }],
        line: 85
      },
      "3": {
        loc: {
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "4": {
        loc: {
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 112,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "5": {
        loc: {
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 121,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 121,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "6": {
        loc: {
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "7": {
        loc: {
          start: {
            line: 125,
            column: 12
          },
          end: {
            line: 125,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 125,
            column: 12
          },
          end: {
            line: 125,
            column: 23
          }
        }, {
          start: {
            line: 125,
            column: 27
          },
          end: {
            line: 125,
            column: 47
          }
        }],
        line: 125
      },
      "8": {
        loc: {
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 145,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 145,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 138
      },
      "9": {
        loc: {
          start: {
            line: 148,
            column: 22
          },
          end: {
            line: 148,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 148,
            column: 47
          },
          end: {
            line: 148,
            column: 60
          }
        }, {
          start: {
            line: 148,
            column: 63
          },
          end: {
            line: 148,
            column: 82
          }
        }],
        line: 148
      },
      "10": {
        loc: {
          start: {
            line: 158,
            column: 8
          },
          end: {
            line: 164,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 158,
            column: 8
          },
          end: {
            line: 164,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 158
      },
      "11": {
        loc: {
          start: {
            line: 166,
            column: 8
          },
          end: {
            line: 175,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 166,
            column: 8
          },
          end: {
            line: 175,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 166
      },
      "12": {
        loc: {
          start: {
            line: 181,
            column: 8
          },
          end: {
            line: 241,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 182,
            column: 12
          },
          end: {
            line: 194,
            column: 22
          }
        }, {
          start: {
            line: 195,
            column: 12
          },
          end: {
            line: 207,
            column: 22
          }
        }, {
          start: {
            line: 208,
            column: 12
          },
          end: {
            line: 220,
            column: 22
          }
        }, {
          start: {
            line: 221,
            column: 12
          },
          end: {
            line: 234,
            column: 22
          }
        }, {
          start: {
            line: 235,
            column: 12
          },
          end: {
            line: 240,
            column: 19
          }
        }],
        line: 181
      },
      "13": {
        loc: {
          start: {
            line: 183,
            column: 16
          },
          end: {
            line: 189,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 16
          },
          end: {
            line: 189,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 183
      },
      "14": {
        loc: {
          start: {
            line: 196,
            column: 16
          },
          end: {
            line: 202,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 196,
            column: 16
          },
          end: {
            line: 202,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 196
      },
      "15": {
        loc: {
          start: {
            line: 209,
            column: 16
          },
          end: {
            line: 215,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 209,
            column: 16
          },
          end: {
            line: 215,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 209
      },
      "16": {
        loc: {
          start: {
            line: 222,
            column: 16
          },
          end: {
            line: 228,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 222,
            column: 16
          },
          end: {
            line: 228,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 222
      },
      "17": {
        loc: {
          start: {
            line: 252,
            column: 8
          },
          end: {
            line: 259,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 252,
            column: 8
          },
          end: {
            line: 259,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 252
      },
      "18": {
        loc: {
          start: {
            line: 262,
            column: 22
          },
          end: {
            line: 262,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 262,
            column: 47
          },
          end: {
            line: 262,
            column: 60
          }
        }, {
          start: {
            line: 262,
            column: 63
          },
          end: {
            line: 262,
            column: 82
          }
        }],
        line: 262
      },
      "19": {
        loc: {
          start: {
            line: 272,
            column: 8
          },
          end: {
            line: 278,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 272,
            column: 8
          },
          end: {
            line: 278,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 272
      },
      "20": {
        loc: {
          start: {
            line: 280,
            column: 8
          },
          end: {
            line: 286,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 280,
            column: 8
          },
          end: {
            line: 286,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 280
      },
      "21": {
        loc: {
          start: {
            line: 288,
            column: 21
          },
          end: {
            line: 288,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 288,
            column: 21
          },
          end: {
            line: 288,
            column: 45
          }
        }, {
          start: {
            line: 288,
            column: 49
          },
          end: {
            line: 288,
            column: 67
          }
        }],
        line: 288
      },
      "22": {
        loc: {
          start: {
            line: 291,
            column: 8
          },
          end: {
            line: 325,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 292,
            column: 12
          },
          end: {
            line: 297,
            column: 22
          }
        }, {
          start: {
            line: 298,
            column: 12
          },
          end: {
            line: 318,
            column: 22
          }
        }, {
          start: {
            line: 319,
            column: 12
          },
          end: {
            line: 324,
            column: 19
          }
        }],
        line: 291
      },
      "23": {
        loc: {
          start: {
            line: 300,
            column: 16
          },
          end: {
            line: 302,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 300,
            column: 16
          },
          end: {
            line: 302,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 300
      },
      "24": {
        loc: {
          start: {
            line: 338,
            column: 22
          },
          end: {
            line: 338,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 338,
            column: 47
          },
          end: {
            line: 338,
            column: 60
          }
        }, {
          start: {
            line: 338,
            column: 63
          },
          end: {
            line: 338,
            column: 82
          }
        }],
        line: 338
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0, 0, 0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0, 0],
      "23": [0, 0],
      "24": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\lembretes\\agendamento\\route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { getServerSession } from 'next-auth';\nimport { authOptions } from '@/lib/auth';\nimport { obterAgendadorLembretes } from '@/lib/services/agendador-lembretes';\nimport { z } from 'zod';\n\n// Schema de valida\xE7\xE3o para configura\xE7\xE3o de lembretes\nconst configuracaoLembretesSchema = z.object({\n  diasAntecedencia: z.array(z.number().min(1).max(30)).min(1).max(10),\n  horarioEnvio: z.string().regex(/^([01]?[0-9]|2[0-3]):[0-5][0-9]$/, 'Formato de hor\xE1rio inv\xE1lido (HH:mm)'),\n  ativo: z.boolean(),\n  incluirFimDeSemana: z.boolean(),\n  incluirFeriados: z.boolean(),\n});\n\n// Schema para a\xE7\xF5es do agendador\nconst acaoAgendadorSchema = z.object({\n  acao: z.enum(['iniciar', 'parar', 'forcar_verificacao', 'reagendar_avaliacao']),\n  avaliacaoId: z.string().optional(),\n});\n\n/**\n * GET /api/lembretes/agendamento\n * Obt\xE9m o status e configura\xE7\xE3o do agendador de lembretes\n */\nexport async function GET(request: NextRequest) {\n  try {\n    // Verificar autentica\xE7\xE3o\n    const session = await getServerSession(authOptions);\n    if (!session?.user) {\n      return NextResponse.json(\n        { erro: 'N\xE3o autorizado' },\n        { status: 401 }\n      );\n    }\n\n    // Verificar permiss\xF5es (apenas ADMIN e GESTOR)\n    if (!['ADMIN', 'GESTOR'].includes(session.user.papel)) {\n      return NextResponse.json(\n        { erro: 'Acesso negado. Apenas administradores e gestores podem acessar.' },\n        { status: 403 }\n      );\n    }\n\n    const agendador = obterAgendadorLembretes();\n\n    // Obter status e configura\xE7\xE3o\n    const status = {\n      ativo: agendador.estaAtivo(),\n      configuracao: agendador.obterConfiguracao(),\n      estatisticas: await agendador.obterEstatisticas(),\n    };\n\n    return NextResponse.json({\n      sucesso: true,\n      dados: status,\n    });\n\n  } catch (error) {\n    console.error('Erro ao obter status do agendador:', error);\n    return NextResponse.json(\n      { \n        erro: 'Erro interno do servidor',\n        detalhes: error instanceof Error ? error.message : 'Erro desconhecido'\n      },\n      { status: 500 }\n    );\n  }\n}\n\n/**\n * PUT /api/lembretes/agendamento\n * Atualiza a configura\xE7\xE3o do agendador de lembretes\n */\nexport async function PUT(request: NextRequest) {\n  try {\n    // Verificar autentica\xE7\xE3o\n    const session = await getServerSession(authOptions);\n    if (!session?.user) {\n      return NextResponse.json(\n        { erro: 'N\xE3o autorizado' },\n        { status: 401 }\n      );\n    }\n\n    // Verificar permiss\xF5es (apenas ADMIN e GESTOR)\n    if (!['ADMIN', 'GESTOR'].includes(session.user.papel)) {\n      return NextResponse.json(\n        { erro: 'Acesso negado. Apenas administradores e gestores podem configurar.' },\n        { status: 403 }\n      );\n    }\n\n    // Validar dados da requisi\xE7\xE3o\n    const body = await request.json();\n    const dadosValidados = configuracaoLembretesSchema.parse(body);\n\n    const agendador = obterAgendadorLembretes();\n    const estavoAtivo = agendador.estaAtivo();\n\n    // Parar agendador se estiver ativo\n    if (estavoAtivo) {\n      agendador.parar();\n    }\n\n    // Atualizar configura\xE7\xE3o\n    await agendador.atualizarConfiguracao(dadosValidados);\n\n    // Reiniciar agendador se estava ativo\n    if (estavoAtivo && dadosValidados.ativo) {\n      await agendador.iniciar();\n    }\n\n    return NextResponse.json({\n      sucesso: true,\n      mensagem: 'Configura\xE7\xE3o do agendador atualizada com sucesso',\n      dados: {\n        configuracao: agendador.obterConfiguracao(),\n        ativo: agendador.estaAtivo(),\n      },\n    });\n\n  } catch (error) {\n    console.error('Erro ao atualizar configura\xE7\xE3o do agendador:', error);\n    \n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        { \n          erro: 'Dados inv\xE1lidos',\n          detalhes: error.errors.map(e => `${e.path.join('.')}: ${e.message}`)\n        },\n        { status: 400 }\n      );\n    }\n\n    return NextResponse.json(\n      { \n        erro: 'Erro interno do servidor',\n        detalhes: error instanceof Error ? error.message : 'Erro desconhecido'\n      },\n      { status: 500 }\n    );\n  }\n}\n\n/**\n * POST /api/lembretes/agendamento\n * Executa a\xE7\xF5es no agendador (iniciar, parar, for\xE7ar verifica\xE7\xE3o, etc.)\n */\nexport async function POST(request: NextRequest) {\n  try {\n    // Verificar autentica\xE7\xE3o\n    const session = await getServerSession(authOptions);\n    if (!session?.user) {\n      return NextResponse.json(\n        { erro: 'N\xE3o autorizado' },\n        { status: 401 }\n      );\n    }\n\n    // Verificar permiss\xF5es (apenas ADMIN e GESTOR)\n    if (!['ADMIN', 'GESTOR'].includes(session.user.papel)) {\n      return NextResponse.json(\n        { erro: 'Acesso negado. Apenas administradores e gestores podem executar a\xE7\xF5es.' },\n        { status: 403 }\n      );\n    }\n\n    // Validar dados da requisi\xE7\xE3o\n    const body = await request.json();\n    const dadosValidados = acaoAgendadorSchema.parse(body);\n\n    const agendador = obterAgendadorLembretes();\n    let resultado: any = {};\n\n    switch (dadosValidados.acao) {\n      case 'iniciar':\n        if (agendador.estaAtivo()) {\n          return NextResponse.json(\n            { erro: 'Agendador j\xE1 est\xE1 ativo' },\n            { status: 400 }\n          );\n        }\n        await agendador.iniciar();\n        resultado = { mensagem: 'Agendador iniciado com sucesso' };\n        break;\n\n      case 'parar':\n        if (!agendador.estaAtivo()) {\n          return NextResponse.json(\n            { erro: 'Agendador j\xE1 est\xE1 parado' },\n            { status: 400 }\n          );\n        }\n        agendador.parar();\n        resultado = { mensagem: 'Agendador parado com sucesso' };\n        break;\n\n      case 'forcar_verificacao':\n        if (!agendador.estaAtivo()) {\n          return NextResponse.json(\n            { erro: 'Agendador deve estar ativo para for\xE7ar verifica\xE7\xE3o' },\n            { status: 400 }\n          );\n        }\n        await agendador.forcarVerificacao();\n        resultado = { mensagem: 'Verifica\xE7\xE3o de lembretes executada com sucesso' };\n        break;\n\n      case 'reagendar_avaliacao':\n        if (!dadosValidados.avaliacaoId) {\n          return NextResponse.json(\n            { erro: 'ID da avalia\xE7\xE3o \xE9 obrigat\xF3rio para reagendamento' },\n            { status: 400 }\n          );\n        }\n        await agendador.reagendarAvaliacao(dadosValidados.avaliacaoId);\n        resultado = { \n          mensagem: 'Lembretes da avalia\xE7\xE3o reagendados com sucesso',\n          avaliacaoId: dadosValidados.avaliacaoId\n        };\n        break;\n\n      default:\n        return NextResponse.json(\n          { erro: 'A\xE7\xE3o n\xE3o reconhecida' },\n          { status: 400 }\n        );\n    }\n\n    return NextResponse.json({\n      sucesso: true,\n      ...resultado,\n      status: {\n        ativo: agendador.estaAtivo(),\n        configuracao: agendador.obterConfiguracao(),\n      },\n    });\n\n  } catch (error) {\n    console.error('Erro ao executar a\xE7\xE3o no agendador:', error);\n    \n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        { \n          erro: 'Dados inv\xE1lidos',\n          detalhes: error.errors.map(e => `${e.path.join('.')}: ${e.message}`)\n        },\n        { status: 400 }\n      );\n    }\n\n    return NextResponse.json(\n      { \n        erro: 'Erro interno do servidor',\n        detalhes: error instanceof Error ? error.message : 'Erro desconhecido'\n      },\n      { status: 500 }\n    );\n  }\n}\n\n/**\n * DELETE /api/lembretes/agendamento\n * Limpa lembretes agendados ou reseta configura\xE7\xF5es\n */\nexport async function DELETE(request: NextRequest) {\n  try {\n    // Verificar autentica\xE7\xE3o\n    const session = await getServerSession(authOptions);\n    if (!session?.user) {\n      return NextResponse.json(\n        { erro: 'N\xE3o autorizado' },\n        { status: 401 }\n      );\n    }\n\n    // Verificar permiss\xF5es (apenas ADMIN)\n    if (session.user.papel !== 'ADMIN') {\n      return NextResponse.json(\n        { erro: 'Acesso negado. Apenas administradores podem limpar lembretes.' },\n        { status: 403 }\n      );\n    }\n\n    const { searchParams } = new URL(request.url);\n    const acao = searchParams.get('acao') || 'limpar_pendentes';\n\n    const agendador = obterAgendadorLembretes();\n    let resultado: any = {};\n\n    switch (acao) {\n      case 'limpar_pendentes':\n        // Implementar limpeza de lembretes pendentes\n        resultado = { mensagem: 'Lembretes pendentes limpos com sucesso' };\n        break;\n\n      case 'resetar_configuracao':\n        // Parar agendador\n        if (agendador.estaAtivo()) {\n          agendador.parar();\n        }\n        \n        // Resetar para configura\xE7\xE3o padr\xE3o\n        await agendador.atualizarConfiguracao({\n          diasAntecedencia: [7, 3, 1],\n          horarioEnvio: '09:00',\n          ativo: true,\n          incluirFimDeSemana: false,\n          incluirFeriados: false,\n        });\n        \n        resultado = { mensagem: 'Configura\xE7\xE3o resetada para padr\xE3o' };\n        break;\n\n      default:\n        return NextResponse.json(\n          { erro: 'A\xE7\xE3o de limpeza n\xE3o reconhecida' },\n          { status: 400 }\n        );\n    }\n\n    return NextResponse.json({\n      sucesso: true,\n      ...resultado,\n      status: {\n        ativo: agendador.estaAtivo(),\n        configuracao: agendador.obterConfiguracao(),\n      },\n    });\n\n  } catch (error) {\n    console.error('Erro ao limpar lembretes:', error);\n    return NextResponse.json(\n      { \n        erro: 'Erro interno do servidor',\n        detalhes: error instanceof Error ? error.message : 'Erro desconhecido'\n      },\n      { status: 500 }\n    );\n  }\n}"],
      names: ["DELETE", "GET", "POST", "PUT", "configuracaoLembretesSchema", "z", "object", "diasAntecedencia", "array", "number", "min", "max", "horarioEnvio", "string", "regex", "ativo", "boolean", "incluirFimDeSemana", "incluirFeriados", "acaoAgendadorSchema", "acao", "enum", "avaliacaoId", "optional", "request", "session", "getServerSession", "authOptions", "user", "NextResponse", "json", "erro", "status", "includes", "papel", "agendador", "obterAgendadorLembretes", "estaAtivo", "configuracao", "obterConfiguracao", "estatisticas", "obterEstatisticas", "sucesso", "dados", "error", "console", "detalhes", "Error", "message", "body", "dadosValidados", "parse", "estavoAtivo", "parar", "atualizarConfiguracao", "iniciar", "mensagem", "ZodError", "errors", "map", "e", "path", "join", "resultado", "forcarVerificacao", "reagendarAvaliacao", "searchParams", "URL", "url", "get"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "10caf7545fdc170210dafd53d9cbcd15a8a92d42"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1qcwcqhmnc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1qcwcqhmnc();
cov_1qcwcqhmnc().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1qcwcqhmnc().f[0]++;
  cov_1qcwcqhmnc().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1qcwcqhmnc().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1qcwcqhmnc().s[3]++;
_export(exports, {
  get DELETE() {
    /* istanbul ignore next */
    cov_1qcwcqhmnc().f[1]++;
    cov_1qcwcqhmnc().s[4]++;
    return DELETE;
  },
  get GET() {
    /* istanbul ignore next */
    cov_1qcwcqhmnc().f[2]++;
    cov_1qcwcqhmnc().s[5]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_1qcwcqhmnc().f[3]++;
    cov_1qcwcqhmnc().s[6]++;
    return POST;
  },
  get PUT() {
    /* istanbul ignore next */
    cov_1qcwcqhmnc().f[4]++;
    cov_1qcwcqhmnc().s[7]++;
    return PUT;
  }
});
const _server =
/* istanbul ignore next */
(cov_1qcwcqhmnc().s[8]++, require("next/server"));
const _nextauth =
/* istanbul ignore next */
(cov_1qcwcqhmnc().s[9]++, require("next-auth"));
const _auth =
/* istanbul ignore next */
(cov_1qcwcqhmnc().s[10]++, require("../../../../lib/auth"));
const _agendadorlembretes =
/* istanbul ignore next */
(cov_1qcwcqhmnc().s[11]++, require("../../../../lib/services/agendador-lembretes"));
const _zod =
/* istanbul ignore next */
(cov_1qcwcqhmnc().s[12]++, require("zod"));
// Schema de validação para configuração de lembretes
const configuracaoLembretesSchema =
/* istanbul ignore next */
(cov_1qcwcqhmnc().s[13]++, _zod.z.object({
  diasAntecedencia: _zod.z.array(_zod.z.number().min(1).max(30)).min(1).max(10),
  horarioEnvio: _zod.z.string().regex(/^([01]?[0-9]|2[0-3]):[0-5][0-9]$/, 'Formato de horário inválido (HH:mm)'),
  ativo: _zod.z.boolean(),
  incluirFimDeSemana: _zod.z.boolean(),
  incluirFeriados: _zod.z.boolean()
}));
// Schema para ações do agendador
const acaoAgendadorSchema =
/* istanbul ignore next */
(cov_1qcwcqhmnc().s[14]++, _zod.z.object({
  acao: _zod.z.enum(['iniciar', 'parar', 'forcar_verificacao', 'reagendar_avaliacao']),
  avaliacaoId: _zod.z.string().optional()
}));
async function GET(request) {
  /* istanbul ignore next */
  cov_1qcwcqhmnc().f[5]++;
  cov_1qcwcqhmnc().s[15]++;
  try {
    // Verificar autenticação
    const session =
    /* istanbul ignore next */
    (cov_1qcwcqhmnc().s[16]++, await (0, _nextauth.getServerSession)(_auth.authOptions));
    /* istanbul ignore next */
    cov_1qcwcqhmnc().s[17]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_1qcwcqhmnc().b[0][0]++;
      cov_1qcwcqhmnc().s[18]++;
      return _server.NextResponse.json({
        erro: 'Não autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_1qcwcqhmnc().b[0][1]++;
    }
    // Verificar permissões (apenas ADMIN e GESTOR)
    cov_1qcwcqhmnc().s[19]++;
    if (!['ADMIN', 'GESTOR'].includes(session.user.papel)) {
      /* istanbul ignore next */
      cov_1qcwcqhmnc().b[1][0]++;
      cov_1qcwcqhmnc().s[20]++;
      return _server.NextResponse.json({
        erro: 'Acesso negado. Apenas administradores e gestores podem acessar.'
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_1qcwcqhmnc().b[1][1]++;
    }
    const agendador =
    /* istanbul ignore next */
    (cov_1qcwcqhmnc().s[21]++, (0, _agendadorlembretes.obterAgendadorLembretes)());
    // Obter status e configuração
    const status =
    /* istanbul ignore next */
    (cov_1qcwcqhmnc().s[22]++, {
      ativo: agendador.estaAtivo(),
      configuracao: agendador.obterConfiguracao(),
      estatisticas: await agendador.obterEstatisticas()
    });
    /* istanbul ignore next */
    cov_1qcwcqhmnc().s[23]++;
    return _server.NextResponse.json({
      sucesso: true,
      dados: status
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1qcwcqhmnc().s[24]++;
    console.error('Erro ao obter status do agendador:', error);
    /* istanbul ignore next */
    cov_1qcwcqhmnc().s[25]++;
    return _server.NextResponse.json({
      erro: 'Erro interno do servidor',
      detalhes: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1qcwcqhmnc().b[2][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1qcwcqhmnc().b[2][1]++, 'Erro desconhecido')
    }, {
      status: 500
    });
  }
}
async function PUT(request) {
  /* istanbul ignore next */
  cov_1qcwcqhmnc().f[6]++;
  cov_1qcwcqhmnc().s[26]++;
  try {
    // Verificar autenticação
    const session =
    /* istanbul ignore next */
    (cov_1qcwcqhmnc().s[27]++, await (0, _nextauth.getServerSession)(_auth.authOptions));
    /* istanbul ignore next */
    cov_1qcwcqhmnc().s[28]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_1qcwcqhmnc().b[3][0]++;
      cov_1qcwcqhmnc().s[29]++;
      return _server.NextResponse.json({
        erro: 'Não autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_1qcwcqhmnc().b[3][1]++;
    }
    // Verificar permissões (apenas ADMIN e GESTOR)
    cov_1qcwcqhmnc().s[30]++;
    if (!['ADMIN', 'GESTOR'].includes(session.user.papel)) {
      /* istanbul ignore next */
      cov_1qcwcqhmnc().b[4][0]++;
      cov_1qcwcqhmnc().s[31]++;
      return _server.NextResponse.json({
        erro: 'Acesso negado. Apenas administradores e gestores podem configurar.'
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_1qcwcqhmnc().b[4][1]++;
    }
    // Validar dados da requisição
    const body =
    /* istanbul ignore next */
    (cov_1qcwcqhmnc().s[32]++, await request.json());
    const dadosValidados =
    /* istanbul ignore next */
    (cov_1qcwcqhmnc().s[33]++, configuracaoLembretesSchema.parse(body));
    const agendador =
    /* istanbul ignore next */
    (cov_1qcwcqhmnc().s[34]++, (0, _agendadorlembretes.obterAgendadorLembretes)());
    const estavoAtivo =
    /* istanbul ignore next */
    (cov_1qcwcqhmnc().s[35]++, agendador.estaAtivo());
    // Parar agendador se estiver ativo
    /* istanbul ignore next */
    cov_1qcwcqhmnc().s[36]++;
    if (estavoAtivo) {
      /* istanbul ignore next */
      cov_1qcwcqhmnc().b[5][0]++;
      cov_1qcwcqhmnc().s[37]++;
      agendador.parar();
    } else
    /* istanbul ignore next */
    {
      cov_1qcwcqhmnc().b[5][1]++;
    }
    // Atualizar configuração
    cov_1qcwcqhmnc().s[38]++;
    await agendador.atualizarConfiguracao(dadosValidados);
    // Reiniciar agendador se estava ativo
    /* istanbul ignore next */
    cov_1qcwcqhmnc().s[39]++;
    if (
    /* istanbul ignore next */
    (cov_1qcwcqhmnc().b[7][0]++, estavoAtivo) &&
    /* istanbul ignore next */
    (cov_1qcwcqhmnc().b[7][1]++, dadosValidados.ativo)) {
      /* istanbul ignore next */
      cov_1qcwcqhmnc().b[6][0]++;
      cov_1qcwcqhmnc().s[40]++;
      await agendador.iniciar();
    } else
    /* istanbul ignore next */
    {
      cov_1qcwcqhmnc().b[6][1]++;
    }
    cov_1qcwcqhmnc().s[41]++;
    return _server.NextResponse.json({
      sucesso: true,
      mensagem: 'Configuração do agendador atualizada com sucesso',
      dados: {
        configuracao: agendador.obterConfiguracao(),
        ativo: agendador.estaAtivo()
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1qcwcqhmnc().s[42]++;
    console.error('Erro ao atualizar configuração do agendador:', error);
    /* istanbul ignore next */
    cov_1qcwcqhmnc().s[43]++;
    if (error instanceof _zod.z.ZodError) {
      /* istanbul ignore next */
      cov_1qcwcqhmnc().b[8][0]++;
      cov_1qcwcqhmnc().s[44]++;
      return _server.NextResponse.json({
        erro: 'Dados inválidos',
        detalhes: error.errors.map(e => {
          /* istanbul ignore next */
          cov_1qcwcqhmnc().f[7]++;
          cov_1qcwcqhmnc().s[45]++;
          return `${e.path.join('.')}: ${e.message}`;
        })
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_1qcwcqhmnc().b[8][1]++;
    }
    cov_1qcwcqhmnc().s[46]++;
    return _server.NextResponse.json({
      erro: 'Erro interno do servidor',
      detalhes: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1qcwcqhmnc().b[9][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1qcwcqhmnc().b[9][1]++, 'Erro desconhecido')
    }, {
      status: 500
    });
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_1qcwcqhmnc().f[8]++;
  cov_1qcwcqhmnc().s[47]++;
  try {
    // Verificar autenticação
    const session =
    /* istanbul ignore next */
    (cov_1qcwcqhmnc().s[48]++, await (0, _nextauth.getServerSession)(_auth.authOptions));
    /* istanbul ignore next */
    cov_1qcwcqhmnc().s[49]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_1qcwcqhmnc().b[10][0]++;
      cov_1qcwcqhmnc().s[50]++;
      return _server.NextResponse.json({
        erro: 'Não autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_1qcwcqhmnc().b[10][1]++;
    }
    // Verificar permissões (apenas ADMIN e GESTOR)
    cov_1qcwcqhmnc().s[51]++;
    if (!['ADMIN', 'GESTOR'].includes(session.user.papel)) {
      /* istanbul ignore next */
      cov_1qcwcqhmnc().b[11][0]++;
      cov_1qcwcqhmnc().s[52]++;
      return _server.NextResponse.json({
        erro: 'Acesso negado. Apenas administradores e gestores podem executar ações.'
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_1qcwcqhmnc().b[11][1]++;
    }
    // Validar dados da requisição
    const body =
    /* istanbul ignore next */
    (cov_1qcwcqhmnc().s[53]++, await request.json());
    const dadosValidados =
    /* istanbul ignore next */
    (cov_1qcwcqhmnc().s[54]++, acaoAgendadorSchema.parse(body));
    const agendador =
    /* istanbul ignore next */
    (cov_1qcwcqhmnc().s[55]++, (0, _agendadorlembretes.obterAgendadorLembretes)());
    let resultado =
    /* istanbul ignore next */
    (cov_1qcwcqhmnc().s[56]++, {});
    /* istanbul ignore next */
    cov_1qcwcqhmnc().s[57]++;
    switch (dadosValidados.acao) {
      case 'iniciar':
        /* istanbul ignore next */
        cov_1qcwcqhmnc().b[12][0]++;
        cov_1qcwcqhmnc().s[58]++;
        if (agendador.estaAtivo()) {
          /* istanbul ignore next */
          cov_1qcwcqhmnc().b[13][0]++;
          cov_1qcwcqhmnc().s[59]++;
          return _server.NextResponse.json({
            erro: 'Agendador já está ativo'
          }, {
            status: 400
          });
        } else
        /* istanbul ignore next */
        {
          cov_1qcwcqhmnc().b[13][1]++;
        }
        cov_1qcwcqhmnc().s[60]++;
        await agendador.iniciar();
        /* istanbul ignore next */
        cov_1qcwcqhmnc().s[61]++;
        resultado = {
          mensagem: 'Agendador iniciado com sucesso'
        };
        /* istanbul ignore next */
        cov_1qcwcqhmnc().s[62]++;
        break;
      case 'parar':
        /* istanbul ignore next */
        cov_1qcwcqhmnc().b[12][1]++;
        cov_1qcwcqhmnc().s[63]++;
        if (!agendador.estaAtivo()) {
          /* istanbul ignore next */
          cov_1qcwcqhmnc().b[14][0]++;
          cov_1qcwcqhmnc().s[64]++;
          return _server.NextResponse.json({
            erro: 'Agendador já está parado'
          }, {
            status: 400
          });
        } else
        /* istanbul ignore next */
        {
          cov_1qcwcqhmnc().b[14][1]++;
        }
        cov_1qcwcqhmnc().s[65]++;
        agendador.parar();
        /* istanbul ignore next */
        cov_1qcwcqhmnc().s[66]++;
        resultado = {
          mensagem: 'Agendador parado com sucesso'
        };
        /* istanbul ignore next */
        cov_1qcwcqhmnc().s[67]++;
        break;
      case 'forcar_verificacao':
        /* istanbul ignore next */
        cov_1qcwcqhmnc().b[12][2]++;
        cov_1qcwcqhmnc().s[68]++;
        if (!agendador.estaAtivo()) {
          /* istanbul ignore next */
          cov_1qcwcqhmnc().b[15][0]++;
          cov_1qcwcqhmnc().s[69]++;
          return _server.NextResponse.json({
            erro: 'Agendador deve estar ativo para forçar verificação'
          }, {
            status: 400
          });
        } else
        /* istanbul ignore next */
        {
          cov_1qcwcqhmnc().b[15][1]++;
        }
        cov_1qcwcqhmnc().s[70]++;
        await agendador.forcarVerificacao();
        /* istanbul ignore next */
        cov_1qcwcqhmnc().s[71]++;
        resultado = {
          mensagem: 'Verificação de lembretes executada com sucesso'
        };
        /* istanbul ignore next */
        cov_1qcwcqhmnc().s[72]++;
        break;
      case 'reagendar_avaliacao':
        /* istanbul ignore next */
        cov_1qcwcqhmnc().b[12][3]++;
        cov_1qcwcqhmnc().s[73]++;
        if (!dadosValidados.avaliacaoId) {
          /* istanbul ignore next */
          cov_1qcwcqhmnc().b[16][0]++;
          cov_1qcwcqhmnc().s[74]++;
          return _server.NextResponse.json({
            erro: 'ID da avaliação é obrigatório para reagendamento'
          }, {
            status: 400
          });
        } else
        /* istanbul ignore next */
        {
          cov_1qcwcqhmnc().b[16][1]++;
        }
        cov_1qcwcqhmnc().s[75]++;
        await agendador.reagendarAvaliacao(dadosValidados.avaliacaoId);
        /* istanbul ignore next */
        cov_1qcwcqhmnc().s[76]++;
        resultado = {
          mensagem: 'Lembretes da avaliação reagendados com sucesso',
          avaliacaoId: dadosValidados.avaliacaoId
        };
        /* istanbul ignore next */
        cov_1qcwcqhmnc().s[77]++;
        break;
      default:
        /* istanbul ignore next */
        cov_1qcwcqhmnc().b[12][4]++;
        cov_1qcwcqhmnc().s[78]++;
        return _server.NextResponse.json({
          erro: 'Ação não reconhecida'
        }, {
          status: 400
        });
    }
    /* istanbul ignore next */
    cov_1qcwcqhmnc().s[79]++;
    return _server.NextResponse.json({
      sucesso: true,
      ...resultado,
      status: {
        ativo: agendador.estaAtivo(),
        configuracao: agendador.obterConfiguracao()
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1qcwcqhmnc().s[80]++;
    console.error('Erro ao executar ação no agendador:', error);
    /* istanbul ignore next */
    cov_1qcwcqhmnc().s[81]++;
    if (error instanceof _zod.z.ZodError) {
      /* istanbul ignore next */
      cov_1qcwcqhmnc().b[17][0]++;
      cov_1qcwcqhmnc().s[82]++;
      return _server.NextResponse.json({
        erro: 'Dados inválidos',
        detalhes: error.errors.map(e => {
          /* istanbul ignore next */
          cov_1qcwcqhmnc().f[9]++;
          cov_1qcwcqhmnc().s[83]++;
          return `${e.path.join('.')}: ${e.message}`;
        })
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_1qcwcqhmnc().b[17][1]++;
    }
    cov_1qcwcqhmnc().s[84]++;
    return _server.NextResponse.json({
      erro: 'Erro interno do servidor',
      detalhes: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1qcwcqhmnc().b[18][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1qcwcqhmnc().b[18][1]++, 'Erro desconhecido')
    }, {
      status: 500
    });
  }
}
async function DELETE(request) {
  /* istanbul ignore next */
  cov_1qcwcqhmnc().f[10]++;
  cov_1qcwcqhmnc().s[85]++;
  try {
    // Verificar autenticação
    const session =
    /* istanbul ignore next */
    (cov_1qcwcqhmnc().s[86]++, await (0, _nextauth.getServerSession)(_auth.authOptions));
    /* istanbul ignore next */
    cov_1qcwcqhmnc().s[87]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_1qcwcqhmnc().b[19][0]++;
      cov_1qcwcqhmnc().s[88]++;
      return _server.NextResponse.json({
        erro: 'Não autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_1qcwcqhmnc().b[19][1]++;
    }
    // Verificar permissões (apenas ADMIN)
    cov_1qcwcqhmnc().s[89]++;
    if (session.user.papel !== 'ADMIN') {
      /* istanbul ignore next */
      cov_1qcwcqhmnc().b[20][0]++;
      cov_1qcwcqhmnc().s[90]++;
      return _server.NextResponse.json({
        erro: 'Acesso negado. Apenas administradores podem limpar lembretes.'
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_1qcwcqhmnc().b[20][1]++;
    }
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_1qcwcqhmnc().s[91]++, new URL(request.url));
    const acao =
    /* istanbul ignore next */
    (cov_1qcwcqhmnc().s[92]++,
    /* istanbul ignore next */
    (cov_1qcwcqhmnc().b[21][0]++, searchParams.get('acao')) ||
    /* istanbul ignore next */
    (cov_1qcwcqhmnc().b[21][1]++, 'limpar_pendentes'));
    const agendador =
    /* istanbul ignore next */
    (cov_1qcwcqhmnc().s[93]++, (0, _agendadorlembretes.obterAgendadorLembretes)());
    let resultado =
    /* istanbul ignore next */
    (cov_1qcwcqhmnc().s[94]++, {});
    /* istanbul ignore next */
    cov_1qcwcqhmnc().s[95]++;
    switch (acao) {
      case 'limpar_pendentes':
        /* istanbul ignore next */
        cov_1qcwcqhmnc().b[22][0]++;
        cov_1qcwcqhmnc().s[96]++;
        // Implementar limpeza de lembretes pendentes
        resultado = {
          mensagem: 'Lembretes pendentes limpos com sucesso'
        };
        /* istanbul ignore next */
        cov_1qcwcqhmnc().s[97]++;
        break;
      case 'resetar_configuracao':
        /* istanbul ignore next */
        cov_1qcwcqhmnc().b[22][1]++;
        cov_1qcwcqhmnc().s[98]++;
        // Parar agendador
        if (agendador.estaAtivo()) {
          /* istanbul ignore next */
          cov_1qcwcqhmnc().b[23][0]++;
          cov_1qcwcqhmnc().s[99]++;
          agendador.parar();
        } else
        /* istanbul ignore next */
        {
          cov_1qcwcqhmnc().b[23][1]++;
        }
        // Resetar para configuração padrão
        cov_1qcwcqhmnc().s[100]++;
        await agendador.atualizarConfiguracao({
          diasAntecedencia: [7, 3, 1],
          horarioEnvio: '09:00',
          ativo: true,
          incluirFimDeSemana: false,
          incluirFeriados: false
        });
        /* istanbul ignore next */
        cov_1qcwcqhmnc().s[101]++;
        resultado = {
          mensagem: 'Configuração resetada para padrão'
        };
        /* istanbul ignore next */
        cov_1qcwcqhmnc().s[102]++;
        break;
      default:
        /* istanbul ignore next */
        cov_1qcwcqhmnc().b[22][2]++;
        cov_1qcwcqhmnc().s[103]++;
        return _server.NextResponse.json({
          erro: 'Ação de limpeza não reconhecida'
        }, {
          status: 400
        });
    }
    /* istanbul ignore next */
    cov_1qcwcqhmnc().s[104]++;
    return _server.NextResponse.json({
      sucesso: true,
      ...resultado,
      status: {
        ativo: agendador.estaAtivo(),
        configuracao: agendador.obterConfiguracao()
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1qcwcqhmnc().s[105]++;
    console.error('Erro ao limpar lembretes:', error);
    /* istanbul ignore next */
    cov_1qcwcqhmnc().s[106]++;
    return _server.NextResponse.json({
      erro: 'Erro interno do servidor',
      detalhes: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1qcwcqhmnc().b[24][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1qcwcqhmnc().b[24][1]++, 'Erro desconhecido')
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,