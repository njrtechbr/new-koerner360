{"version":3,"names":["cov_5lfat9ctm","actualCoverage","s","RouteGuard","f","useRouteGuard","ComponenteCarregamento","_jsxruntime","jsx","className","jsxs","_lucidereact","Loader2","ComponenteAcessoNegado","onClick","window","history","back","children","permissoesNecessarias","b","tiposPermitidos","rotaRedirecionamento","mostrarCarregamento","mostrarAcessoNegado","status","_react1","useSession","router","_navigation","useRouter","temAlgumaPermissao","ehTipoUsuario","carregando","autenticado","obterTipoUsuario","_usepermissions","usePermissions","_react","useEffect","push","temAcesso","length","tipoAtual","includes","Fragment"],"sources":["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\components\\auth\\route-guard.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { useSession } from 'next-auth/react';\nimport { usePermissions } from '@/hooks/use-permissions';\nimport { TipoUsuario } from '@/generated/prisma';\nimport { Loader2 } from 'lucide-react';\n\ninterface RouteGuardProps {\n  children: React.ReactNode;\n  permissoesNecessarias?: string[];\n  tiposPermitidos?: TipoUsuario[];\n  rotaRedirecionamento?: string;\n  mostrarCarregamento?: boolean;\n  mostrarAcessoNegado?: boolean;\n}\n\n// Componente de carregamento padrão\nfunction ComponenteCarregamento() {\n  return (\n    <div className=\"min-h-screen flex items-center justify-center\">\n      <div className=\"flex items-center space-x-2\">\n        <Loader2 className=\"h-6 w-6 animate-spin\" />\n        <span>Verificando permissões...</span>\n      </div>\n    </div>\n  );\n}\n\n// Componente de acesso negado padrão\nfunction ComponenteAcessoNegado() {\n  return (\n    <div className=\"min-h-screen flex items-center justify-center\">\n      <div className=\"text-center space-y-4\">\n        <h1 className=\"text-2xl font-bold text-destructive\">Acesso Negado</h1>\n        <p className=\"text-muted-foreground\">\n          Você não tem permissão para acessar esta página.\n        </p>\n        <button\n          onClick={() => window.history.back()}\n          className=\"text-primary hover:underline\"\n        >\n          Voltar\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport function RouteGuard({\n  children,\n  permissoesNecessarias = [],\n  tiposPermitidos = [],\n  rotaRedirecionamento,\n  mostrarCarregamento = true,\n  mostrarAcessoNegado = true,\n}: RouteGuardProps) {\n  const { status } = useSession();\n  const router = useRouter();\n  const {\n    temAlgumaPermissao,\n    ehTipoUsuario,\n    carregando,\n    autenticado,\n    obterTipoUsuario,\n  } = usePermissions();\n\n  useEffect(() => {\n    // Se não está autenticado, redireciona para login\n    if (status === 'unauthenticated') {\n      router.push('/auth/login');\n      return;\n    }\n\n    // Se está carregando, aguarda\n    if (carregando || status === 'loading') {\n      return;\n    }\n\n    // Se está autenticado, verifica permissões\n    if (autenticado) {\n      let temAcesso = true;\n\n      // Verifica permissões específicas\n      if (permissoesNecessarias.length > 0) {\n        temAcesso = temAlgumaPermissao(permissoesNecessarias);\n      }\n\n      // Verifica tipos de usuário permitidos\n      if (tiposPermitidos.length > 0 && temAcesso) {\n        const tipoAtual = obterTipoUsuario();\n        temAcesso = tipoAtual ? tiposPermitidos.includes(tipoAtual) : false;\n      }\n\n      // Se não tem acesso e há rota de redirecionamento, redireciona\n      if (!temAcesso && rotaRedirecionamento) {\n        router.push(rotaRedirecionamento);\n        return;\n      }\n    }\n  }, [\n    status,\n    carregando,\n    autenticado,\n    permissoesNecessarias,\n    tiposPermitidos,\n    rotaRedirecionamento,\n    router,\n    temAlgumaPermissao,\n    obterTipoUsuario,\n  ]);\n\n  // Mostra carregamento enquanto verifica autenticação e permissões\n  if (status === 'loading' || carregando) {\n    return mostrarCarregamento ? <ComponenteCarregamento /> : null;\n  }\n\n  // Se não está autenticado, não mostra nada (será redirecionado)\n  if (status === 'unauthenticated') {\n    return null;\n  }\n\n  // Verifica permissões\n  let temAcesso = true;\n\n  if (permissoesNecessarias.length > 0) {\n    temAcesso = temAlgumaPermissao(permissoesNecessarias);\n  }\n\n  if (tiposPermitidos.length > 0 && temAcesso) {\n    const tipoAtual = obterTipoUsuario();\n    temAcesso = tipoAtual ? tiposPermitidos.includes(tipoAtual) : false;\n  }\n\n  // Se não tem acesso e não há rota de redirecionamento, mostra componente de acesso negado\n  if (!temAcesso && !rotaRedirecionamento) {\n    return mostrarAcessoNegado ? <ComponenteAcessoNegado /> : null;\n  }\n\n  // Se não tem acesso mas há rota de redirecionamento, não mostra nada (será redirecionado)\n  if (!temAcesso && rotaRedirecionamento) {\n    return null;\n  }\n\n  // Se tem acesso, renderiza os filhos\n  return <>{children}</>;\n}\n\n// Hook para usar o RouteGuard de forma mais simples\nexport function useRouteGuard({\n  permissoesNecessarias = [],\n  tiposPermitidos = [],\n}: {\n  permissoesNecessarias?: string[];\n  tiposPermitidos?: TipoUsuario[];\n}) {\n  const { temAlgumaPermissao, obterTipoUsuario, carregando, autenticado } =\n    usePermissions();\n\n  let temAcesso = autenticado;\n\n  if (permissoesNecessarias.length > 0 && temAcesso) {\n    temAcesso = temAlgumaPermissao(permissoesNecessarias);\n  }\n\n  if (tiposPermitidos.length > 0 && temAcesso) {\n    const tipoAtual = obterTipoUsuario();\n    temAcesso = tipoAtual ? tiposPermitidos.includes(tipoAtual) : false;\n  }\n\n  return {\n    temAcesso,\n    carregando,\n    autenticado,\n  };\n}\n"],"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","ignoreList":[]}