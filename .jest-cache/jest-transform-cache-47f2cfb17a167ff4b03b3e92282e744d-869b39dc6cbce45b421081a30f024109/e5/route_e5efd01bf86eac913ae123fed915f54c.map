{"version":3,"names":["DELETE","cov_rlokhply9","f","s","GET","POST","request","session","_nextauth","getServerSession","_auth","authOptions","b","_server","NextResponse","json","erro","status","formData","file","get","tipo","subdiretorio","resultado","_uploadserver","saveFile","undefined","sucesso","arquivo","error","console","caminho","deleteFile","searchParams","URL","url","diretorio","listFiles","Promise","resolve","then","_interop_require_wildcard","require","getFileInfo","info"],"sources":["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\upload\\route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { getServerSession } from 'next-auth';\nimport { authOptions } from '@/lib/auth';\nimport {\n  saveFile,\n  deleteFile,\n  validateFile,\n  type TipoArquivo,\n} from '@/lib/upload-server';\n\n/**\n * POST /api/upload\n * Faz upload de um arquivo\n */\nexport async function POST(request: NextRequest) {\n  try {\n    // Verificar autenticação\n    const session = await getServerSession(authOptions);\n    if (!session) {\n      return NextResponse.json({ erro: 'Não autorizado' }, { status: 401 });\n    }\n\n    // Obter dados do FormData\n    const formData = await request.formData();\n    const file = formData.get('file') as File;\n    const tipo = formData.get('tipo') as TipoArquivo;\n    const subdiretorio = formData.get('subdiretorio') as string | null;\n\n    if (!file) {\n      return NextResponse.json(\n        { erro: 'Nenhum arquivo fornecido' },\n        { status: 400 }\n      );\n    }\n\n    if (!tipo) {\n      return NextResponse.json(\n        { erro: 'Tipo de arquivo não especificado' },\n        { status: 400 }\n      );\n    }\n\n    // Fazer upload do arquivo\n    const resultado = await saveFile(file, tipo, subdiretorio || undefined);\n\n    if (!resultado.sucesso) {\n      return NextResponse.json({ erro: resultado.erro }, { status: 400 });\n    }\n\n    return NextResponse.json({\n      sucesso: true,\n      arquivo: resultado.arquivo,\n    });\n  } catch (error) {\n    console.error('Erro no upload:', error);\n    return NextResponse.json(\n      { erro: 'Erro interno do servidor' },\n      { status: 500 }\n    );\n  }\n}\n\n/**\n * DELETE /api/upload\n * Remove um arquivo\n */\nexport async function DELETE(request: NextRequest) {\n  try {\n    // Verificar autenticação\n    const session = await getServerSession(authOptions);\n    if (!session) {\n      return NextResponse.json({ erro: 'Não autorizado' }, { status: 401 });\n    }\n\n    // Obter dados do corpo da requisição\n    const { caminho } = await request.json();\n\n    if (!caminho) {\n      return NextResponse.json(\n        { erro: 'Caminho do arquivo não fornecido' },\n        { status: 400 }\n      );\n    }\n\n    // Remover arquivo\n    const resultado = await deleteFile(caminho);\n\n    if (!resultado.sucesso) {\n      return NextResponse.json({ erro: resultado.erro }, { status: 400 });\n    }\n\n    return NextResponse.json({\n      sucesso: true,\n    });\n  } catch (error) {\n    console.error('Erro ao remover arquivo:', error);\n    return NextResponse.json(\n      { erro: 'Erro interno do servidor' },\n      { status: 500 }\n    );\n  }\n}\n\n/**\n * GET /api/upload\n * Lista arquivos ou obtém informações de um arquivo\n */\nexport async function GET(request: NextRequest) {\n  try {\n    // Verificar autenticação\n    const session = await getServerSession(authOptions);\n    if (!session) {\n      return NextResponse.json({ erro: 'Não autorizado' }, { status: 401 });\n    }\n\n    const { searchParams } = new URL(request.url);\n    const diretorio = searchParams.get('diretorio');\n    const caminho = searchParams.get('caminho');\n\n    if (diretorio) {\n      // Listar arquivos em um diretório\n      const { listFiles } = await import('@/lib/upload-server');\n      const resultado = await listFiles(diretorio);\n\n      return NextResponse.json(resultado);\n    }\n\n    if (caminho) {\n      // Obter informações de um arquivo específico\n      const { getFileInfo } = await import('@/lib/upload-server');\n      const info = await getFileInfo(caminho);\n\n      return NextResponse.json(info);\n    }\n\n    return NextResponse.json(\n      { erro: 'Parâmetros insuficientes' },\n      { status: 400 }\n    );\n  } catch (error) {\n    console.error('Erro ao obter informações:', error);\n    return NextResponse.json(\n      { erro: 'Erro interno do servidor' },\n      { status: 500 }\n    );\n  }\n}\n"],"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","ignoreList":[]}