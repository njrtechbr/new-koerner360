{"version":3,"names":["cov_1w4tjt31f3","actualCoverage","s","reducer","f","toast","useToast","TOAST_LIMIT","TOAST_REMOVE_DELAY","actionTypes","ADD_TOAST","UPDATE_TOAST","DISMISS_TOAST","REMOVE_TOAST","count","genId","Number","MAX_SAFE_INTEGER","toString","toastTimeouts","Map","addToRemoveQueue","toastId","has","b","timeout","setTimeout","delete","dispatch","type","set","state","action","toasts","slice","map","t","id","forEach","undefined","open","filter","listeners","memoryState","listener","props","update","dismiss","onOpenChange","setState","_react","useState","useEffect","push","index","indexOf","splice"],"sources":["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\hooks\\use-toast.ts"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from '@/components/ui/toast';\n\nconst TOAST_LIMIT = 1;\nconst TOAST_REMOVE_DELAY = 1000000;\n\ntype ToasterToast = ToastProps & {\n  id: string;\n  title?: React.ReactNode;\n  description?: React.ReactNode;\n  action?: ToastActionElement;\n};\n\nconst actionTypes = {\n  ADD_TOAST: 'ADD_TOAST',\n  UPDATE_TOAST: 'UPDATE_TOAST',\n  DISMISS_TOAST: 'DISMISS_TOAST',\n  REMOVE_TOAST: 'REMOVE_TOAST',\n} as const;\n\nlet count = 0;\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER;\n  return count.toString();\n}\n\ntype ActionType = typeof actionTypes;\n\ntype Action =\n  | {\n      type: ActionType['ADD_TOAST'];\n      toast: ToasterToast;\n    }\n  | {\n      type: ActionType['UPDATE_TOAST'];\n      toast: Partial<ToasterToast>;\n    }\n  | {\n      type: ActionType['DISMISS_TOAST'];\n      toastId?: ToasterToast['id'];\n    }\n  | {\n      type: ActionType['REMOVE_TOAST'];\n      toastId?: ToasterToast['id'];\n    };\n\ninterface State {\n  toasts: ToasterToast[];\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>();\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return;\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId);\n    dispatch({\n      type: 'REMOVE_TOAST',\n      toastId: toastId,\n    });\n  }, TOAST_REMOVE_DELAY);\n\n  toastTimeouts.set(toastId, timeout);\n};\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case 'ADD_TOAST':\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      };\n\n    case 'UPDATE_TOAST':\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      };\n\n    case 'DISMISS_TOAST': {\n      const { toastId } = action;\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId);\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id);\n        });\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      };\n    }\n    case 'REMOVE_TOAST':\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        };\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      };\n  }\n};\n\nconst listeners: Array<(state: State) => void> = [];\n\nlet memoryState: State = { toasts: [] };\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action);\n  listeners.forEach((listener) => {\n    listener(memoryState);\n  });\n}\n\ntype Toast = Omit<ToasterToast, 'id'>;\n\nfunction toast({ ...props }: Toast) {\n  const id = genId();\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: 'UPDATE_TOAST',\n      toast: { ...props, id },\n    });\n  const dismiss = () => dispatch({ type: 'DISMISS_TOAST', toastId: id });\n\n  dispatch({\n    type: 'ADD_TOAST',\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss();\n      },\n    },\n  });\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  };\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState);\n\n  React.useEffect(() => {\n    listeners.push(setState);\n    return () => {\n      const index = listeners.indexOf(setState);\n      if (index > -1) {\n        listeners.splice(index, 1);\n      }\n    };\n  }, [state]);\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: 'DISMISS_TOAST', toastId }),\n  };\n}\n\nexport { useToast, toast };"],"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","ignoreList":[]}