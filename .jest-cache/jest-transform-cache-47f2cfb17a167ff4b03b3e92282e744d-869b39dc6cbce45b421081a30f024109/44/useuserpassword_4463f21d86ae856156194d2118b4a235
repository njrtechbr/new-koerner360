12af392025a830f3d1d2bac1fc54855f
'use client';
"use strict";

/* istanbul ignore next */
function cov_14518uwgi9() {
  var path = "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\hooks\\use-user-password.ts";
  var hash = "491b4424e867c3c1786feab6f191f818bfcc2774";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\hooks\\use-user-password.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 24
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 31
        }
      },
      "6": {
        start: {
          line: 20,
          column: 15
        },
        end: {
          line: 20,
          column: 31
        }
      },
      "7": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 21,
          column: 33
        }
      },
      "8": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 42
        }
      },
      "9": {
        start: {
          line: 23,
          column: 13
        },
        end: {
          line: 23,
          column: 27
        }
      },
      "10": {
        start: {
          line: 25,
          column: 27
        },
        end: {
          line: 34,
          column: 2
        }
      },
      "11": {
        start: {
          line: 29,
          column: 18
        },
        end: {
          line: 29,
          column: 56
        }
      },
      "12": {
        start: {
          line: 36,
          column: 29
        },
        end: {
          line: 44,
          column: 2
        }
      },
      "13": {
        start: {
          line: 39,
          column: 18
        },
        end: {
          line: 39,
          column: 56
        }
      },
      "14": {
        start: {
          line: 46,
          column: 30
        },
        end: {
          line: 46,
          column: 55
        }
      },
      "15": {
        start: {
          line: 47,
          column: 40
        },
        end: {
          line: 47,
          column: 67
        }
      },
      "16": {
        start: {
          line: 48,
          column: 30
        },
        end: {
          line: 48,
          column: 54
        }
      },
      "17": {
        start: {
          line: 49,
          column: 24
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "18": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 21
        }
      },
      "19": {
        start: {
          line: 52,
          column: 34
        },
        end: {
          line: 69,
          column: 5
        }
      },
      "20": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "21": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 44
        }
      },
      "22": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 26
        }
      },
      "23": {
        start: {
          line: 56,
          column: 12
        },
        end: {
          line: 56,
          column: 24
        }
      },
      "24": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 66,
          column: 13
        }
      },
      "25": {
        start: {
          line: 59,
          column: 35
        },
        end: {
          line: 59,
          column: 37
        }
      },
      "26": {
        start: {
          line: 60,
          column: 16
        },
        end: {
          line: 64,
          column: 19
        }
      },
      "27": {
        start: {
          line: 61,
          column: 20
        },
        end: {
          line: 63,
          column: 21
        }
      },
      "28": {
        start: {
          line: 62,
          column: 24
        },
        end: {
          line: 62,
          column: 62
        }
      },
      "29": {
        start: {
          line: 65,
          column: 16
        },
        end: {
          line: 65,
          column: 37
        }
      },
      "30": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 25
        }
      },
      "31": {
        start: {
          line: 70,
          column: 36
        },
        end: {
          line: 87,
          column: 5
        }
      },
      "32": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 86,
          column: 9
        }
      },
      "33": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 72,
          column: 46
        }
      },
      "34": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 26
        }
      },
      "35": {
        start: {
          line: 74,
          column: 12
        },
        end: {
          line: 74,
          column: 24
        }
      },
      "36": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 84,
          column: 13
        }
      },
      "37": {
        start: {
          line: 77,
          column: 35
        },
        end: {
          line: 77,
          column: 37
        }
      },
      "38": {
        start: {
          line: 78,
          column: 16
        },
        end: {
          line: 82,
          column: 19
        }
      },
      "39": {
        start: {
          line: 79,
          column: 20
        },
        end: {
          line: 81,
          column: 21
        }
      },
      "40": {
        start: {
          line: 80,
          column: 24
        },
        end: {
          line: 80,
          column: 62
        }
      },
      "41": {
        start: {
          line: 83,
          column: 16
        },
        end: {
          line: 83,
          column: 37
        }
      },
      "42": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 25
        }
      },
      "43": {
        start: {
          line: 88,
          column: 25
        },
        end: {
          line: 138,
          column: 5
        }
      },
      "44": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 91,
          column: 9
        }
      },
      "45": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 25
        }
      },
      "46": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 95,
          column: 9
        }
      },
      "47": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 59
        }
      },
      "48": {
        start: {
          line: 94,
          column: 12
        },
        end: {
          line: 94,
          column: 25
        }
      },
      "49": {
        start: {
          line: 97,
          column: 28
        },
        end: {
          line: 97,
          column: 90
        }
      },
      "50": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 101,
          column: 9
        }
      },
      "51": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 82
        }
      },
      "52": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 100,
          column: 25
        }
      },
      "53": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 137,
          column: 9
        }
      },
      "54": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 103,
          column: 32
        }
      },
      "55": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 104,
          column: 26
        }
      },
      "56": {
        start: {
          line: 105,
          column: 29
        },
        end: {
          line: 114,
          column: 14
        }
      },
      "57": {
        start: {
          line: 115,
          column: 30
        },
        end: {
          line: 115,
          column: 51
        }
      },
      "58": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 128,
          column: 13
        }
      },
      "59": {
        start: {
          line: 117,
          column: 16
        },
        end: {
          line: 126,
          column: 17
        }
      },
      "60": {
        start: {
          line: 118,
          column: 20
        },
        end: {
          line: 118,
          column: 56
        }
      },
      "61": {
        start: {
          line: 119,
          column: 20
        },
        end: {
          line: 123,
          column: 21
        }
      },
      "62": {
        start: {
          line: 120,
          column: 24
        },
        end: {
          line: 122,
          column: 27
        }
      },
      "63": {
        start: {
          line: 125,
          column: 20
        },
        end: {
          line: 125,
          column: 65
        }
      },
      "64": {
        start: {
          line: 127,
          column: 16
        },
        end: {
          line: 127,
          column: 29
        }
      },
      "65": {
        start: {
          line: 129,
          column: 12
        },
        end: {
          line: 129,
          column: 64
        }
      },
      "66": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 24
        }
      },
      "67": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 132,
          column: 59
        }
      },
      "68": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 60
        }
      },
      "69": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 134,
          column: 25
        }
      },
      "70": {
        start: {
          line: 136,
          column: 12
        },
        end: {
          line: 136,
          column: 33
        }
      },
      "71": {
        start: {
          line: 139,
          column: 27
        },
        end: {
          line: 174,
          column: 5
        }
      },
      "72": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 142,
          column: 9
        }
      },
      "73": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 25
        }
      },
      "74": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 146,
          column: 9
        }
      },
      "75": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 144,
          column: 81
        }
      },
      "76": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 25
        }
      },
      "77": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 173,
          column: 9
        }
      },
      "78": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 32
        }
      },
      "79": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 26
        }
      },
      "80": {
        start: {
          line: 150,
          column: 29
        },
        end: {
          line: 159,
          column: 14
        }
      },
      "81": {
        start: {
          line: 160,
          column: 30
        },
        end: {
          line: 160,
          column: 51
        }
      },
      "82": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 164,
          column: 13
        }
      },
      "83": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 162,
          column: 81
        }
      },
      "84": {
        start: {
          line: 163,
          column: 16
        },
        end: {
          line: 163,
          column: 29
        }
      },
      "85": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 165,
          column: 66
        }
      },
      "86": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 24
        }
      },
      "87": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 168,
          column: 61
        }
      },
      "88": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 169,
          column: 60
        }
      },
      "89": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 170,
          column: 25
        }
      },
      "90": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 172,
          column: 33
        }
      },
      "91": {
        start: {
          line: 175,
          column: 33
        },
        end: {
          line: 202,
          column: 5
        }
      },
      "92": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 179,
          column: 9
        }
      },
      "93": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 89
        }
      },
      "94": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 178,
          column: 24
        }
      },
      "95": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 201,
          column: 9
        }
      },
      "96": {
        start: {
          line: 181,
          column: 12
        },
        end: {
          line: 181,
          column: 32
        }
      },
      "97": {
        start: {
          line: 182,
          column: 29
        },
        end: {
          line: 187,
          column: 14
        }
      },
      "98": {
        start: {
          line: 188,
          column: 30
        },
        end: {
          line: 188,
          column: 51
        }
      },
      "99": {
        start: {
          line: 189,
          column: 12
        },
        end: {
          line: 192,
          column: 13
        }
      },
      "100": {
        start: {
          line: 190,
          column: 16
        },
        end: {
          line: 190,
          column: 88
        }
      },
      "101": {
        start: {
          line: 191,
          column: 16
        },
        end: {
          line: 191,
          column: 28
        }
      },
      "102": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 193,
          column: 73
        }
      },
      "103": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 194,
          column: 45
        }
      },
      "104": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 68
        }
      },
      "105": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 197,
          column: 60
        }
      },
      "106": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 198,
          column: 24
        }
      },
      "107": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 200,
          column: 33
        }
      },
      "108": {
        start: {
          line: 203,
          column: 29
        },
        end: {
          line: 221,
          column: 5
        }
      },
      "109": {
        start: {
          line: 204,
          column: 27
        },
        end: {
          line: 204,
          column: 55
        }
      },
      "110": {
        start: {
          line: 205,
          column: 27
        },
        end: {
          line: 205,
          column: 55
        }
      },
      "111": {
        start: {
          line: 206,
          column: 24
        },
        end: {
          line: 206,
          column: 36
        }
      },
      "112": {
        start: {
          line: 207,
          column: 26
        },
        end: {
          line: 207,
          column: 35
        }
      },
      "113": {
        start: {
          line: 208,
          column: 32
        },
        end: {
          line: 208,
          column: 77
        }
      },
      "114": {
        start: {
          line: 209,
          column: 20
        },
        end: {
          line: 209,
          column: 22
        }
      },
      "115": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 211,
          column: 75
        }
      },
      "116": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 212,
          column: 75
        }
      },
      "117": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 213,
          column: 69
        }
      },
      "118": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 214,
          column: 73
        }
      },
      "119": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 218,
          column: 9
        }
      },
      "120": {
        start: {
          line: 216,
          column: 20
        },
        end: {
          line: 216,
          column: 21
        }
      },
      "121": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 217,
          column: 89
        }
      },
      "122": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 220,
          column: 70
        }
      },
      "123": {
        start: {
          line: 220,
          column: 40
        },
        end: {
          line: 220,
          column: 59
        }
      },
      "124": {
        start: {
          line: 222,
          column: 32
        },
        end: {
          line: 296,
          column: 5
        }
      },
      "125": {
        start: {
          line: 223,
          column: 24
        },
        end: {
          line: 223,
          column: 25
        }
      },
      "126": {
        start: {
          line: 224,
          column: 26
        },
        end: {
          line: 224,
          column: 28
        }
      },
      "127": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 230,
          column: 9
        }
      },
      "128": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 227,
          column: 27
        }
      },
      "129": {
        start: {
          line: 229,
          column: 12
        },
        end: {
          line: 229,
          column: 58
        }
      },
      "130": {
        start: {
          line: 231,
          column: 8
        },
        end: {
          line: 235,
          column: 9
        }
      },
      "131": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 232,
          column: 27
        }
      },
      "132": {
        start: {
          line: 233,
          column: 15
        },
        end: {
          line: 235,
          column: 9
        }
      },
      "133": {
        start: {
          line: 234,
          column: 12
        },
        end: {
          line: 234,
          column: 77
        }
      },
      "134": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 241,
          column: 9
        }
      },
      "135": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 238,
          column: 27
        }
      },
      "136": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 240,
          column: 55
        }
      },
      "137": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 247,
          column: 9
        }
      },
      "138": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 244,
          column: 27
        }
      },
      "139": {
        start: {
          line: 246,
          column: 12
        },
        end: {
          line: 246,
          column: 55
        }
      },
      "140": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 253,
          column: 9
        }
      },
      "141": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 250,
          column: 27
        }
      },
      "142": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 252,
          column: 45
        }
      },
      "143": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 259,
          column: 9
        }
      },
      "144": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 256,
          column: 27
        }
      },
      "145": {
        start: {
          line: 258,
          column: 12
        },
        end: {
          line: 258,
          column: 68
        }
      },
      "146": {
        start: {
          line: 261,
          column: 33
        },
        end: {
          line: 261,
          column: 52
        }
      },
      "147": {
        start: {
          line: 262,
          column: 8
        },
        end: {
          line: 266,
          column: 9
        }
      },
      "148": {
        start: {
          line: 263,
          column: 12
        },
        end: {
          line: 263,
          column: 27
        }
      },
      "149": {
        start: {
          line: 265,
          column: 12
        },
        end: {
          line: 265,
          column: 62
        }
      },
      "150": {
        start: {
          line: 268,
          column: 30
        },
        end: {
          line: 273,
          column: 9
        }
      },
      "151": {
        start: {
          line: 274,
          column: 31
        },
        end: {
          line: 274,
          column: 93
        }
      },
      "152": {
        start: {
          line: 274,
          column: 60
        },
        end: {
          line: 274,
          column: 92
        }
      },
      "153": {
        start: {
          line: 275,
          column: 8
        },
        end: {
          line: 279,
          column: 9
        }
      },
      "154": {
        start: {
          line: 276,
          column: 12
        },
        end: {
          line: 276,
          column: 27
        }
      },
      "155": {
        start: {
          line: 278,
          column: 12
        },
        end: {
          line: 278,
          column: 64
        }
      },
      "156": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 290,
          column: 9
        }
      },
      "157": {
        start: {
          line: 283,
          column: 12
        },
        end: {
          line: 283,
          column: 28
        }
      },
      "158": {
        start: {
          line: 284,
          column: 15
        },
        end: {
          line: 290,
          column: 9
        }
      },
      "159": {
        start: {
          line: 285,
          column: 12
        },
        end: {
          line: 285,
          column: 28
        }
      },
      "160": {
        start: {
          line: 286,
          column: 15
        },
        end: {
          line: 290,
          column: 9
        }
      },
      "161": {
        start: {
          line: 287,
          column: 12
        },
        end: {
          line: 287,
          column: 28
        }
      },
      "162": {
        start: {
          line: 289,
          column: 12
        },
        end: {
          line: 289,
          column: 34
        }
      },
      "163": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 295,
          column: 10
        }
      },
      "164": {
        start: {
          line: 297,
          column: 4
        },
        end: {
          line: 308,
          column: 6
        }
      },
      "165": {
        start: {
          line: 310,
          column: 17
        },
        end: {
          line: 310,
          column: 32
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 19
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 27
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 29,
            column: 10
          },
          end: {
            line: 29,
            column: 11
          }
        },
        loc: {
          start: {
            line: 29,
            column: 18
          },
          end: {
            line: 29,
            column: 56
          }
        },
        line: 29
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 39,
            column: 10
          },
          end: {
            line: 39,
            column: 11
          }
        },
        loc: {
          start: {
            line: 39,
            column: 18
          },
          end: {
            line: 39,
            column: 56
          }
        },
        line: 39
      },
      "5": {
        name: "useUserPassword",
        decl: {
          start: {
            line: 45,
            column: 9
          },
          end: {
            line: 45,
            column: 24
          }
        },
        loc: {
          start: {
            line: 45,
            column: 27
          },
          end: {
            line: 309,
            column: 1
          }
        },
        line: 45
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 49,
            column: 24
          },
          end: {
            line: 49,
            column: 25
          }
        },
        loc: {
          start: {
            line: 49,
            column: 28
          },
          end: {
            line: 51,
            column: 5
          }
        },
        line: 49
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 52,
            column: 34
          },
          end: {
            line: 52,
            column: 35
          }
        },
        loc: {
          start: {
            line: 52,
            column: 43
          },
          end: {
            line: 69,
            column: 5
          }
        },
        line: 52
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 60,
            column: 37
          },
          end: {
            line: 60,
            column: 38
          }
        },
        loc: {
          start: {
            line: 60,
            column: 44
          },
          end: {
            line: 64,
            column: 17
          }
        },
        line: 60
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 70,
            column: 36
          },
          end: {
            line: 70,
            column: 37
          }
        },
        loc: {
          start: {
            line: 70,
            column: 45
          },
          end: {
            line: 87,
            column: 5
          }
        },
        line: 70
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 78,
            column: 37
          },
          end: {
            line: 78,
            column: 38
          }
        },
        loc: {
          start: {
            line: 78,
            column: 44
          },
          end: {
            line: 82,
            column: 17
          }
        },
        line: 78
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 88,
            column: 25
          },
          end: {
            line: 88,
            column: 26
          }
        },
        loc: {
          start: {
            line: 88,
            column: 51
          },
          end: {
            line: 138,
            column: 5
          }
        },
        line: 88
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 139,
            column: 27
          },
          end: {
            line: 139,
            column: 28
          }
        },
        loc: {
          start: {
            line: 139,
            column: 53
          },
          end: {
            line: 174,
            column: 5
          }
        },
        line: 139
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 175,
            column: 33
          },
          end: {
            line: 175,
            column: 34
          }
        },
        loc: {
          start: {
            line: 175,
            column: 52
          },
          end: {
            line: 202,
            column: 5
          }
        },
        line: 175
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 203,
            column: 29
          },
          end: {
            line: 203,
            column: 30
          }
        },
        loc: {
          start: {
            line: 203,
            column: 33
          },
          end: {
            line: 221,
            column: 5
          }
        },
        line: 203
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 220,
            column: 36
          },
          end: {
            line: 220,
            column: 37
          }
        },
        loc: {
          start: {
            line: 220,
            column: 40
          },
          end: {
            line: 220,
            column: 59
          }
        },
        line: 220
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 222,
            column: 32
          },
          end: {
            line: 222,
            column: 33
          }
        },
        loc: {
          start: {
            line: 222,
            column: 41
          },
          end: {
            line: 296,
            column: 5
          }
        },
        line: 222
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 274,
            column: 50
          },
          end: {
            line: 274,
            column: 51
          }
        },
        loc: {
          start: {
            line: 274,
            column: 60
          },
          end: {
            line: 274,
            column: 92
          }
        },
        line: 274
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 66,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 66,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "1": {
        loc: {
          start: {
            line: 61,
            column: 20
          },
          end: {
            line: 63,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 20
          },
          end: {
            line: 63,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "2": {
        loc: {
          start: {
            line: 76,
            column: 12
          },
          end: {
            line: 84,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 12
          },
          end: {
            line: 84,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 76
      },
      "3": {
        loc: {
          start: {
            line: 79,
            column: 20
          },
          end: {
            line: 81,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 20
          },
          end: {
            line: 81,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      },
      "4": {
        loc: {
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "5": {
        loc: {
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 95,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "6": {
        loc: {
          start: {
            line: 97,
            column: 28
          },
          end: {
            line: 97,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 97,
            column: 28
          },
          end: {
            line: 97,
            column: 57
          }
        }, {
          start: {
            line: 97,
            column: 61
          },
          end: {
            line: 97,
            column: 90
          }
        }],
        line: 97
      },
      "7": {
        loc: {
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 101,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "8": {
        loc: {
          start: {
            line: 116,
            column: 12
          },
          end: {
            line: 128,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 12
          },
          end: {
            line: 128,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      },
      "9": {
        loc: {
          start: {
            line: 117,
            column: 16
          },
          end: {
            line: 126,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 16
          },
          end: {
            line: 126,
            column: 17
          }
        }, {
          start: {
            line: 124,
            column: 23
          },
          end: {
            line: 126,
            column: 17
          }
        }],
        line: 117
      },
      "10": {
        loc: {
          start: {
            line: 117,
            column: 20
          },
          end: {
            line: 117,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 117,
            column: 20
          },
          end: {
            line: 117,
            column: 43
          }
        }, {
          start: {
            line: 117,
            column: 47
          },
          end: {
            line: 117,
            column: 61
          }
        }],
        line: 117
      },
      "11": {
        loc: {
          start: {
            line: 119,
            column: 20
          },
          end: {
            line: 123,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 20
          },
          end: {
            line: 123,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "12": {
        loc: {
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 142,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 142,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "13": {
        loc: {
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 146,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 143,
            column: 8
          },
          end: {
            line: 146,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 143
      },
      "14": {
        loc: {
          start: {
            line: 143,
            column: 12
          },
          end: {
            line: 143,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 143,
            column: 12
          },
          end: {
            line: 143,
            column: 26
          }
        }, {
          start: {
            line: 143,
            column: 30
          },
          end: {
            line: 143,
            column: 59
          }
        }],
        line: 143
      },
      "15": {
        loc: {
          start: {
            line: 161,
            column: 12
          },
          end: {
            line: 164,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 12
          },
          end: {
            line: 164,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      },
      "16": {
        loc: {
          start: {
            line: 162,
            column: 36
          },
          end: {
            line: 162,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 162,
            column: 36
          },
          end: {
            line: 162,
            column: 50
          }
        }, {
          start: {
            line: 162,
            column: 54
          },
          end: {
            line: 162,
            column: 79
          }
        }],
        line: 162
      },
      "17": {
        loc: {
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 179,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 179,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "18": {
        loc: {
          start: {
            line: 176,
            column: 12
          },
          end: {
            line: 176,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 176,
            column: 12
          },
          end: {
            line: 176,
            column: 26
          }
        }, {
          start: {
            line: 176,
            column: 30
          },
          end: {
            line: 176,
            column: 59
          }
        }],
        line: 176
      },
      "19": {
        loc: {
          start: {
            line: 189,
            column: 12
          },
          end: {
            line: 192,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 189,
            column: 12
          },
          end: {
            line: 192,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 189
      },
      "20": {
        loc: {
          start: {
            line: 190,
            column: 36
          },
          end: {
            line: 190,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 190,
            column: 36
          },
          end: {
            line: 190,
            column: 50
          }
        }, {
          start: {
            line: 190,
            column: 54
          },
          end: {
            line: 190,
            column: 86
          }
        }],
        line: 190
      },
      "21": {
        loc: {
          start: {
            line: 226,
            column: 8
          },
          end: {
            line: 230,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 8
          },
          end: {
            line: 230,
            column: 9
          }
        }, {
          start: {
            line: 228,
            column: 15
          },
          end: {
            line: 230,
            column: 9
          }
        }],
        line: 226
      },
      "22": {
        loc: {
          start: {
            line: 231,
            column: 8
          },
          end: {
            line: 235,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 231,
            column: 8
          },
          end: {
            line: 235,
            column: 9
          }
        }, {
          start: {
            line: 233,
            column: 15
          },
          end: {
            line: 235,
            column: 9
          }
        }],
        line: 231
      },
      "23": {
        loc: {
          start: {
            line: 233,
            column: 15
          },
          end: {
            line: 235,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 233,
            column: 15
          },
          end: {
            line: 235,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 233
      },
      "24": {
        loc: {
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 241,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 241,
            column: 9
          }
        }, {
          start: {
            line: 239,
            column: 15
          },
          end: {
            line: 241,
            column: 9
          }
        }],
        line: 237
      },
      "25": {
        loc: {
          start: {
            line: 243,
            column: 8
          },
          end: {
            line: 247,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 243,
            column: 8
          },
          end: {
            line: 247,
            column: 9
          }
        }, {
          start: {
            line: 245,
            column: 15
          },
          end: {
            line: 247,
            column: 9
          }
        }],
        line: 243
      },
      "26": {
        loc: {
          start: {
            line: 249,
            column: 8
          },
          end: {
            line: 253,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 249,
            column: 8
          },
          end: {
            line: 253,
            column: 9
          }
        }, {
          start: {
            line: 251,
            column: 15
          },
          end: {
            line: 253,
            column: 9
          }
        }],
        line: 249
      },
      "27": {
        loc: {
          start: {
            line: 255,
            column: 8
          },
          end: {
            line: 259,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 255,
            column: 8
          },
          end: {
            line: 259,
            column: 9
          }
        }, {
          start: {
            line: 257,
            column: 15
          },
          end: {
            line: 259,
            column: 9
          }
        }],
        line: 255
      },
      "28": {
        loc: {
          start: {
            line: 262,
            column: 8
          },
          end: {
            line: 266,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 262,
            column: 8
          },
          end: {
            line: 266,
            column: 9
          }
        }, {
          start: {
            line: 264,
            column: 15
          },
          end: {
            line: 266,
            column: 9
          }
        }],
        line: 262
      },
      "29": {
        loc: {
          start: {
            line: 275,
            column: 8
          },
          end: {
            line: 279,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 275,
            column: 8
          },
          end: {
            line: 279,
            column: 9
          }
        }, {
          start: {
            line: 277,
            column: 15
          },
          end: {
            line: 279,
            column: 9
          }
        }],
        line: 275
      },
      "30": {
        loc: {
          start: {
            line: 282,
            column: 8
          },
          end: {
            line: 290,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 282,
            column: 8
          },
          end: {
            line: 290,
            column: 9
          }
        }, {
          start: {
            line: 284,
            column: 15
          },
          end: {
            line: 290,
            column: 9
          }
        }],
        line: 282
      },
      "31": {
        loc: {
          start: {
            line: 284,
            column: 15
          },
          end: {
            line: 290,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 284,
            column: 15
          },
          end: {
            line: 290,
            column: 9
          }
        }, {
          start: {
            line: 286,
            column: 15
          },
          end: {
            line: 290,
            column: 9
          }
        }],
        line: 284
      },
      "32": {
        loc: {
          start: {
            line: 286,
            column: 15
          },
          end: {
            line: 290,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 286,
            column: 15
          },
          end: {
            line: 290,
            column: 9
          }
        }, {
          start: {
            line: 288,
            column: 15
          },
          end: {
            line: 290,
            column: 9
          }
        }],
        line: 286
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\hooks\\use-user-password.ts"],
      sourcesContent: ["'use client';\n\nimport { useState } from 'react';\nimport { toast } from 'sonner';\nimport { useSession } from 'next-auth/react';\nimport { z } from 'zod';\n\n// Schema de valida\xE7\xE3o para altera\xE7\xE3o de senha\nconst alterarSenhaSchema = z\n  .object({\n    senhaAtual: z.string().min(1, 'Senha atual \xE9 obrigat\xF3ria'),\n    novaSenha: z\n      .string()\n      .min(8, 'Nova senha deve ter pelo menos 8 caracteres')\n      .regex(\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]/,\n        'Nova senha deve conter pelo menos: 1 letra min\xFAscula, 1 mai\xFAscula, 1 n\xFAmero e 1 caractere especial'\n      ),\n    confirmarSenha: z.string().min(1, 'Confirma\xE7\xE3o de senha \xE9 obrigat\xF3ria'),\n  })\n  .refine(data => data.novaSenha === data.confirmarSenha, {\n    message: 'Senhas n\xE3o coincidem',\n    path: ['confirmarSenha'],\n  });\n\n// Schema para redefini\xE7\xE3o de senha (admin)\nconst redefinirSenhaSchema = z\n  .object({\n    novaSenha: z\n      .string()\n      .min(8, 'Nova senha deve ter pelo menos 8 caracteres')\n      .regex(\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]/,\n        'Nova senha deve conter pelo menos: 1 letra min\xFAscula, 1 mai\xFAscula, 1 n\xFAmero e 1 caractere especial'\n      ),\n    confirmarSenha: z.string().min(1, 'Confirma\xE7\xE3o de senha \xE9 obrigat\xF3ria'),\n  })\n  .refine(data => data.novaSenha === data.confirmarSenha, {\n    message: 'Senhas n\xE3o coincidem',\n    path: ['confirmarSenha'],\n  });\n\nexport type AlterarSenhaData = z.infer<typeof alterarSenhaSchema>;\nexport type RedefinirSenhaData = z.infer<typeof redefinirSenhaSchema>;\n\nexport interface UseUserPasswordReturn {\n  // Estados\n  carregando: boolean;\n  erros: Record<string, string>;\n\n  // Fun\xE7\xF5es para altera\xE7\xE3o de senha (usu\xE1rio logado)\n  alterarSenha: (\n    usuarioId: string,\n    dados: AlterarSenhaData\n  ) => Promise<boolean>;\n  validarAlteracaoSenha: (dados: AlterarSenhaData) => boolean;\n\n  // Fun\xE7\xF5es para redefini\xE7\xE3o de senha (admin)\n  redefinirSenha: (\n    usuarioId: string,\n    dados: RedefinirSenhaData\n  ) => Promise<boolean>;\n  gerarSenhaTemporaria: (usuarioId: string) => Promise<string | null>;\n  validarRedefinicaoSenha: (dados: RedefinirSenhaData) => boolean;\n\n  // Utilit\xE1rios\n  gerarSenhaSegura: () => string;\n  verificarForcaSenha: (senha: string) => {\n    pontuacao: number;\n    nivel: 'fraca' | 'media' | 'forte' | 'muito-forte';\n    sugestoes: string[];\n  };\n  limparErros: () => void;\n}\n\nexport function useUserPassword(): UseUserPasswordReturn {\n  const { data: session } = useSession();\n  const [carregando, setCarregando] = useState(false);\n  const [erros, setErros] = useState<Record<string, string>>({});\n\n  const limparErros = () => {\n    setErros({});\n  };\n\n  const validarAlteracaoSenha = (dados: AlterarSenhaData): boolean => {\n    try {\n      alterarSenhaSchema.parse(dados);\n      limparErros();\n      return true;\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        const novosErros: Record<string, string> = {};\n        error.errors.forEach(err => {\n          if (err.path) {\n            novosErros[err.path[0]] = err.message;\n          }\n        });\n        setErros(novosErros);\n      }\n      return false;\n    }\n  };\n\n  const validarRedefinicaoSenha = (dados: RedefinirSenhaData): boolean => {\n    try {\n      redefinirSenhaSchema.parse(dados);\n      limparErros();\n      return true;\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        const novosErros: Record<string, string> = {};\n        error.errors.forEach(err => {\n          if (err.path) {\n            novosErros[err.path[0]] = err.message;\n          }\n        });\n        setErros(novosErros);\n      }\n      return false;\n    }\n  };\n\n  const alterarSenha = async (\n    usuarioId: string,\n    dados: AlterarSenhaData\n  ): Promise<boolean> => {\n    if (!validarAlteracaoSenha(dados)) {\n      return false;\n    }\n\n    if (!session?.user) {\n      toast.error('Usu\xE1rio n\xE3o autenticado');\n      return false;\n    }\n\n    // Verificar se o usu\xE1rio pode alterar a senha (pr\xF3prio usu\xE1rio ou admin)\n    const podeAlterar =\n      session.user.id === usuarioId || session.user.tipo === 'ADMIN';\n    if (!podeAlterar) {\n      toast.error('Voc\xEA n\xE3o tem permiss\xE3o para alterar esta senha');\n      return false;\n    }\n\n    try {\n      setCarregando(true);\n      limparErros();\n\n      const response = await fetch(`/api/usuarios/${usuarioId}/senha`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          senhaAtual: dados.senhaAtual,\n          novaSenha: dados.novaSenha,\n        }),\n      });\n\n      const resultado = await response.json();\n\n      if (!response.ok) {\n        if (response.status === 400 && resultado.erro) {\n          toast.error(resultado.erro);\n          if (resultado.erro.includes('senha atual')) {\n            setErros({ senhaAtual: 'Senha atual incorreta' });\n          }\n        } else {\n          toast.error('Erro ao alterar senha');\n        }\n        return false;\n      }\n\n      toast.success('Senha alterada com sucesso');\n      return true;\n    } catch (error) {\n      console.error('Erro ao alterar senha:', error);\n      toast.error('Erro interno do servidor');\n      return false;\n    } finally {\n      setCarregando(false);\n    }\n  };\n\n  const redefinirSenha = async (\n    usuarioId: string,\n    dados: RedefinirSenhaData\n  ): Promise<boolean> => {\n    if (!validarRedefinicaoSenha(dados)) {\n      return false;\n    }\n\n    if (!session?.user || session.user.tipo !== 'ADMIN') {\n      toast.error('Apenas administradores podem redefinir senhas');\n      return false;\n    }\n\n    try {\n      setCarregando(true);\n      limparErros();\n\n      const response = await fetch(`/api/usuarios/${usuarioId}/senha`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          novaSenha: dados.novaSenha,\n          redefinicaoAdmin: true,\n        }),\n      });\n\n      const resultado = await response.json();\n\n      if (!response.ok) {\n        toast.error(resultado.erro || 'Erro ao redefinir senha');\n        return false;\n      }\n\n      toast.success('Senha redefinida com sucesso');\n      return true;\n    } catch (error) {\n      console.error('Erro ao redefinir senha:', error);\n      toast.error('Erro interno do servidor');\n      return false;\n    } finally {\n      setCarregando(false);\n    }\n  };\n\n  const gerarSenhaTemporaria = async (\n    usuarioId: string\n  ): Promise<string | null> => {\n    if (!session?.user || session.user.tipo !== 'ADMIN') {\n      toast.error('Apenas administradores podem gerar senhas tempor\xE1rias');\n      return null;\n    }\n\n    try {\n      setCarregando(true);\n\n      const response = await fetch(`/api/usuarios/${usuarioId}/senha`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n\n      const resultado = await response.json();\n\n      if (!response.ok) {\n        toast.error(resultado.erro || 'Erro ao gerar senha tempor\xE1ria');\n        return null;\n      }\n\n      toast.success('Senha tempor\xE1ria gerada com sucesso');\n      return resultado.senhaTemporaria;\n    } catch (error) {\n      console.error('Erro ao gerar senha tempor\xE1ria:', error);\n      toast.error('Erro interno do servidor');\n      return null;\n    } finally {\n      setCarregando(false);\n    }\n  };\n\n  const gerarSenhaSegura = (): string => {\n    const minusculas = 'abcdefghijklmnopqrstuvwxyz';\n    const maiusculas = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    const numeros = '0123456789';\n    const especiais = '@$!%*?&';\n\n    const todosCaracteres = minusculas + maiusculas + numeros + especiais;\n\n    let senha = '';\n\n    // Garantir pelo menos um caractere de cada tipo\n    senha += minusculas[Math.floor(Math.random() * minusculas.length)];\n    senha += maiusculas[Math.floor(Math.random() * maiusculas.length)];\n    senha += numeros[Math.floor(Math.random() * numeros.length)];\n    senha += especiais[Math.floor(Math.random() * especiais.length)];\n\n    // Completar com caracteres aleat\xF3rios at\xE9 12 caracteres\n    for (let i = 4; i < 12; i++) {\n      senha +=\n        todosCaracteres[Math.floor(Math.random() * todosCaracteres.length)];\n    }\n\n    // Embaralhar a senha\n    return senha\n      .split('')\n      .sort(() => Math.random() - 0.5)\n      .join('');\n  };\n\n  const verificarForcaSenha = (senha: string) => {\n    let pontuacao = 0;\n    const sugestoes: string[] = [];\n\n    // Comprimento\n    if (senha.length >= 8) {\n      pontuacao += 1;\n    } else {\n      sugestoes.push('Use pelo menos 8 caracteres');\n    }\n\n    if (senha.length >= 12) {\n      pontuacao += 1;\n    } else if (senha.length >= 8) {\n      sugestoes.push('Use 12 ou mais caracteres para maior seguran\xE7a');\n    }\n\n    // Letras min\xFAsculas\n    if (/[a-z]/.test(senha)) {\n      pontuacao += 1;\n    } else {\n      sugestoes.push('Inclua letras min\xFAsculas');\n    }\n\n    // Letras mai\xFAsculas\n    if (/[A-Z]/.test(senha)) {\n      pontuacao += 1;\n    } else {\n      sugestoes.push('Inclua letras mai\xFAsculas');\n    }\n\n    // N\xFAmeros\n    if (/\\d/.test(senha)) {\n      pontuacao += 1;\n    } else {\n      sugestoes.push('Inclua n\xFAmeros');\n    }\n\n    // Caracteres especiais\n    if (/[@$!%*?&]/.test(senha)) {\n      pontuacao += 1;\n    } else {\n      sugestoes.push('Inclua caracteres especiais (@$!%*?&)');\n    }\n\n    // Variedade de caracteres\n    const caracteresUnicos = new Set(senha).size;\n    if (caracteresUnicos >= senha.length * 0.7) {\n      pontuacao += 1;\n    } else {\n      sugestoes.push('Evite repetir muitos caracteres');\n    }\n\n    // Padr\xF5es comuns\n    const padroesComuns = [\n      /123456/,\n      /abcdef/,\n      /qwerty/,\n      /(.)\\1{2,}/, // 3 ou mais caracteres repetidos\n    ];\n\n    const temPadraoComum = padroesComuns.some(padrao =>\n      padrao.test(senha.toLowerCase())\n    );\n    if (!temPadraoComum) {\n      pontuacao += 1;\n    } else {\n      sugestoes.push('Evite sequ\xEAncias e padr\xF5es comuns');\n    }\n\n    // Determinar n\xEDvel\n    let nivel: 'fraca' | 'media' | 'forte' | 'muito-forte';\n    if (pontuacao <= 2) {\n      nivel = 'fraca';\n    } else if (pontuacao <= 4) {\n      nivel = 'media';\n    } else if (pontuacao <= 6) {\n      nivel = 'forte';\n    } else {\n      nivel = 'muito-forte';\n    }\n\n    return {\n      pontuacao,\n      nivel,\n      sugestoes,\n    };\n  };\n\n  return {\n    carregando,\n    erros,\n    alterarSenha,\n    validarAlteracaoSenha,\n    redefinirSenha,\n    gerarSenhaTemporaria,\n    validarRedefinicaoSenha,\n    gerarSenhaSegura,\n    verificarForcaSenha,\n    limparErros,\n  };\n}\n\nexport default useUserPassword;\n"],
      names: ["useUserPassword", "alterarSenhaSchema", "z", "object", "senhaAtual", "string", "min", "novaSenha", "regex", "confirmarSenha", "refine", "data", "message", "path", "redefinirSenhaSchema", "session", "useSession", "carregando", "setCarregando", "useState", "erros", "setErros", "limparErros", "validarAlteracaoSenha", "dados", "parse", "error", "ZodError", "novosErros", "errors", "forEach", "err", "validarRedefinicaoSenha", "alterarSenha", "usuarioId", "user", "toast", "podeAlterar", "id", "tipo", "response", "fetch", "method", "headers", "body", "JSON", "stringify", "resultado", "json", "ok", "status", "erro", "includes", "success", "console", "redefinirSenha", "redefinicaoAdmin", "gerarSenhaTemporaria", "senhaTemporaria", "gerarSenhaSegura", "minusculas", "maiusculas", "numeros", "especiais", "todosCaracteres", "senha", "Math", "floor", "random", "length", "i", "split", "sort", "join", "verificarForcaSenha", "pontuacao", "sugestoes", "push", "test", "caracteresUnicos", "Set", "size", "padroesComuns", "temPadraoComum", "some", "padrao", "toLowerCase", "nivel"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "491b4424e867c3c1786feab6f191f818bfcc2774"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_14518uwgi9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_14518uwgi9();
cov_14518uwgi9().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_14518uwgi9().f[0]++;
  cov_14518uwgi9().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_14518uwgi9().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_14518uwgi9().s[3]++;
_export(exports, {
  get default() {
    /* istanbul ignore next */
    cov_14518uwgi9().f[1]++;
    cov_14518uwgi9().s[4]++;
    return _default;
  },
  get useUserPassword() {
    /* istanbul ignore next */
    cov_14518uwgi9().f[2]++;
    cov_14518uwgi9().s[5]++;
    return useUserPassword;
  }
});
const _react =
/* istanbul ignore next */
(cov_14518uwgi9().s[6]++, require("react"));
const _sonner =
/* istanbul ignore next */
(cov_14518uwgi9().s[7]++, require("sonner"));
const _react1 =
/* istanbul ignore next */
(cov_14518uwgi9().s[8]++, require("next-auth/react"));
const _zod =
/* istanbul ignore next */
(cov_14518uwgi9().s[9]++, require("zod"));
// Schema de validação para alteração de senha
const alterarSenhaSchema =
/* istanbul ignore next */
(cov_14518uwgi9().s[10]++, _zod.z.object({
  senhaAtual: _zod.z.string().min(1, 'Senha atual é obrigatória'),
  novaSenha: _zod.z.string().min(8, 'Nova senha deve ter pelo menos 8 caracteres').regex(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]/, 'Nova senha deve conter pelo menos: 1 letra minúscula, 1 maiúscula, 1 número e 1 caractere especial'),
  confirmarSenha: _zod.z.string().min(1, 'Confirmação de senha é obrigatória')
}).refine(data => {
  /* istanbul ignore next */
  cov_14518uwgi9().f[3]++;
  cov_14518uwgi9().s[11]++;
  return data.novaSenha === data.confirmarSenha;
}, {
  message: 'Senhas não coincidem',
  path: ['confirmarSenha']
}));
// Schema para redefinição de senha (admin)
const redefinirSenhaSchema =
/* istanbul ignore next */
(cov_14518uwgi9().s[12]++, _zod.z.object({
  novaSenha: _zod.z.string().min(8, 'Nova senha deve ter pelo menos 8 caracteres').regex(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]/, 'Nova senha deve conter pelo menos: 1 letra minúscula, 1 maiúscula, 1 número e 1 caractere especial'),
  confirmarSenha: _zod.z.string().min(1, 'Confirmação de senha é obrigatória')
}).refine(data => {
  /* istanbul ignore next */
  cov_14518uwgi9().f[4]++;
  cov_14518uwgi9().s[13]++;
  return data.novaSenha === data.confirmarSenha;
}, {
  message: 'Senhas não coincidem',
  path: ['confirmarSenha']
}));
function useUserPassword() {
  /* istanbul ignore next */
  cov_14518uwgi9().f[5]++;
  const {
    data: session
  } =
  /* istanbul ignore next */
  (cov_14518uwgi9().s[14]++, (0, _react1.useSession)());
  const [carregando, setCarregando] =
  /* istanbul ignore next */
  (cov_14518uwgi9().s[15]++, (0, _react.useState)(false));
  const [erros, setErros] =
  /* istanbul ignore next */
  (cov_14518uwgi9().s[16]++, (0, _react.useState)({}));
  /* istanbul ignore next */
  cov_14518uwgi9().s[17]++;
  const limparErros = () => {
    /* istanbul ignore next */
    cov_14518uwgi9().f[6]++;
    cov_14518uwgi9().s[18]++;
    setErros({});
  };
  /* istanbul ignore next */
  cov_14518uwgi9().s[19]++;
  const validarAlteracaoSenha = dados => {
    /* istanbul ignore next */
    cov_14518uwgi9().f[7]++;
    cov_14518uwgi9().s[20]++;
    try {
      /* istanbul ignore next */
      cov_14518uwgi9().s[21]++;
      alterarSenhaSchema.parse(dados);
      /* istanbul ignore next */
      cov_14518uwgi9().s[22]++;
      limparErros();
      /* istanbul ignore next */
      cov_14518uwgi9().s[23]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_14518uwgi9().s[24]++;
      if (error instanceof _zod.z.ZodError) {
        /* istanbul ignore next */
        cov_14518uwgi9().b[0][0]++;
        const novosErros =
        /* istanbul ignore next */
        (cov_14518uwgi9().s[25]++, {});
        /* istanbul ignore next */
        cov_14518uwgi9().s[26]++;
        error.errors.forEach(err => {
          /* istanbul ignore next */
          cov_14518uwgi9().f[8]++;
          cov_14518uwgi9().s[27]++;
          if (err.path) {
            /* istanbul ignore next */
            cov_14518uwgi9().b[1][0]++;
            cov_14518uwgi9().s[28]++;
            novosErros[err.path[0]] = err.message;
          } else
          /* istanbul ignore next */
          {
            cov_14518uwgi9().b[1][1]++;
          }
        });
        /* istanbul ignore next */
        cov_14518uwgi9().s[29]++;
        setErros(novosErros);
      } else
      /* istanbul ignore next */
      {
        cov_14518uwgi9().b[0][1]++;
      }
      cov_14518uwgi9().s[30]++;
      return false;
    }
  };
  /* istanbul ignore next */
  cov_14518uwgi9().s[31]++;
  const validarRedefinicaoSenha = dados => {
    /* istanbul ignore next */
    cov_14518uwgi9().f[9]++;
    cov_14518uwgi9().s[32]++;
    try {
      /* istanbul ignore next */
      cov_14518uwgi9().s[33]++;
      redefinirSenhaSchema.parse(dados);
      /* istanbul ignore next */
      cov_14518uwgi9().s[34]++;
      limparErros();
      /* istanbul ignore next */
      cov_14518uwgi9().s[35]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_14518uwgi9().s[36]++;
      if (error instanceof _zod.z.ZodError) {
        /* istanbul ignore next */
        cov_14518uwgi9().b[2][0]++;
        const novosErros =
        /* istanbul ignore next */
        (cov_14518uwgi9().s[37]++, {});
        /* istanbul ignore next */
        cov_14518uwgi9().s[38]++;
        error.errors.forEach(err => {
          /* istanbul ignore next */
          cov_14518uwgi9().f[10]++;
          cov_14518uwgi9().s[39]++;
          if (err.path) {
            /* istanbul ignore next */
            cov_14518uwgi9().b[3][0]++;
            cov_14518uwgi9().s[40]++;
            novosErros[err.path[0]] = err.message;
          } else
          /* istanbul ignore next */
          {
            cov_14518uwgi9().b[3][1]++;
          }
        });
        /* istanbul ignore next */
        cov_14518uwgi9().s[41]++;
        setErros(novosErros);
      } else
      /* istanbul ignore next */
      {
        cov_14518uwgi9().b[2][1]++;
      }
      cov_14518uwgi9().s[42]++;
      return false;
    }
  };
  /* istanbul ignore next */
  cov_14518uwgi9().s[43]++;
  const alterarSenha = async (usuarioId, dados) => {
    /* istanbul ignore next */
    cov_14518uwgi9().f[11]++;
    cov_14518uwgi9().s[44]++;
    if (!validarAlteracaoSenha(dados)) {
      /* istanbul ignore next */
      cov_14518uwgi9().b[4][0]++;
      cov_14518uwgi9().s[45]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_14518uwgi9().b[4][1]++;
    }
    cov_14518uwgi9().s[46]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_14518uwgi9().b[5][0]++;
      cov_14518uwgi9().s[47]++;
      _sonner.toast.error('Usuário não autenticado');
      /* istanbul ignore next */
      cov_14518uwgi9().s[48]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_14518uwgi9().b[5][1]++;
    }
    // Verificar se o usuário pode alterar a senha (próprio usuário ou admin)
    const podeAlterar =
    /* istanbul ignore next */
    (cov_14518uwgi9().s[49]++,
    /* istanbul ignore next */
    (cov_14518uwgi9().b[6][0]++, session.user.id === usuarioId) ||
    /* istanbul ignore next */
    (cov_14518uwgi9().b[6][1]++, session.user.tipo === 'ADMIN'));
    /* istanbul ignore next */
    cov_14518uwgi9().s[50]++;
    if (!podeAlterar) {
      /* istanbul ignore next */
      cov_14518uwgi9().b[7][0]++;
      cov_14518uwgi9().s[51]++;
      _sonner.toast.error('Você não tem permissão para alterar esta senha');
      /* istanbul ignore next */
      cov_14518uwgi9().s[52]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_14518uwgi9().b[7][1]++;
    }
    cov_14518uwgi9().s[53]++;
    try {
      /* istanbul ignore next */
      cov_14518uwgi9().s[54]++;
      setCarregando(true);
      /* istanbul ignore next */
      cov_14518uwgi9().s[55]++;
      limparErros();
      const response =
      /* istanbul ignore next */
      (cov_14518uwgi9().s[56]++, await fetch(`/api/usuarios/${usuarioId}/senha`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          senhaAtual: dados.senhaAtual,
          novaSenha: dados.novaSenha
        })
      }));
      const resultado =
      /* istanbul ignore next */
      (cov_14518uwgi9().s[57]++, await response.json());
      /* istanbul ignore next */
      cov_14518uwgi9().s[58]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_14518uwgi9().b[8][0]++;
        cov_14518uwgi9().s[59]++;
        if (
        /* istanbul ignore next */
        (cov_14518uwgi9().b[10][0]++, response.status === 400) &&
        /* istanbul ignore next */
        (cov_14518uwgi9().b[10][1]++, resultado.erro)) {
          /* istanbul ignore next */
          cov_14518uwgi9().b[9][0]++;
          cov_14518uwgi9().s[60]++;
          _sonner.toast.error(resultado.erro);
          /* istanbul ignore next */
          cov_14518uwgi9().s[61]++;
          if (resultado.erro.includes('senha atual')) {
            /* istanbul ignore next */
            cov_14518uwgi9().b[11][0]++;
            cov_14518uwgi9().s[62]++;
            setErros({
              senhaAtual: 'Senha atual incorreta'
            });
          } else
          /* istanbul ignore next */
          {
            cov_14518uwgi9().b[11][1]++;
          }
        } else {
          /* istanbul ignore next */
          cov_14518uwgi9().b[9][1]++;
          cov_14518uwgi9().s[63]++;
          _sonner.toast.error('Erro ao alterar senha');
        }
        /* istanbul ignore next */
        cov_14518uwgi9().s[64]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_14518uwgi9().b[8][1]++;
      }
      cov_14518uwgi9().s[65]++;
      _sonner.toast.success('Senha alterada com sucesso');
      /* istanbul ignore next */
      cov_14518uwgi9().s[66]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_14518uwgi9().s[67]++;
      console.error('Erro ao alterar senha:', error);
      /* istanbul ignore next */
      cov_14518uwgi9().s[68]++;
      _sonner.toast.error('Erro interno do servidor');
      /* istanbul ignore next */
      cov_14518uwgi9().s[69]++;
      return false;
    } finally {
      /* istanbul ignore next */
      cov_14518uwgi9().s[70]++;
      setCarregando(false);
    }
  };
  /* istanbul ignore next */
  cov_14518uwgi9().s[71]++;
  const redefinirSenha = async (usuarioId, dados) => {
    /* istanbul ignore next */
    cov_14518uwgi9().f[12]++;
    cov_14518uwgi9().s[72]++;
    if (!validarRedefinicaoSenha(dados)) {
      /* istanbul ignore next */
      cov_14518uwgi9().b[12][0]++;
      cov_14518uwgi9().s[73]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_14518uwgi9().b[12][1]++;
    }
    cov_14518uwgi9().s[74]++;
    if (
    /* istanbul ignore next */
    (cov_14518uwgi9().b[14][0]++, !session?.user) ||
    /* istanbul ignore next */
    (cov_14518uwgi9().b[14][1]++, session.user.tipo !== 'ADMIN')) {
      /* istanbul ignore next */
      cov_14518uwgi9().b[13][0]++;
      cov_14518uwgi9().s[75]++;
      _sonner.toast.error('Apenas administradores podem redefinir senhas');
      /* istanbul ignore next */
      cov_14518uwgi9().s[76]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_14518uwgi9().b[13][1]++;
    }
    cov_14518uwgi9().s[77]++;
    try {
      /* istanbul ignore next */
      cov_14518uwgi9().s[78]++;
      setCarregando(true);
      /* istanbul ignore next */
      cov_14518uwgi9().s[79]++;
      limparErros();
      const response =
      /* istanbul ignore next */
      (cov_14518uwgi9().s[80]++, await fetch(`/api/usuarios/${usuarioId}/senha`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          novaSenha: dados.novaSenha,
          redefinicaoAdmin: true
        })
      }));
      const resultado =
      /* istanbul ignore next */
      (cov_14518uwgi9().s[81]++, await response.json());
      /* istanbul ignore next */
      cov_14518uwgi9().s[82]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_14518uwgi9().b[15][0]++;
        cov_14518uwgi9().s[83]++;
        _sonner.toast.error(
        /* istanbul ignore next */
        (cov_14518uwgi9().b[16][0]++, resultado.erro) ||
        /* istanbul ignore next */
        (cov_14518uwgi9().b[16][1]++, 'Erro ao redefinir senha'));
        /* istanbul ignore next */
        cov_14518uwgi9().s[84]++;
        return false;
      } else
      /* istanbul ignore next */
      {
        cov_14518uwgi9().b[15][1]++;
      }
      cov_14518uwgi9().s[85]++;
      _sonner.toast.success('Senha redefinida com sucesso');
      /* istanbul ignore next */
      cov_14518uwgi9().s[86]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_14518uwgi9().s[87]++;
      console.error('Erro ao redefinir senha:', error);
      /* istanbul ignore next */
      cov_14518uwgi9().s[88]++;
      _sonner.toast.error('Erro interno do servidor');
      /* istanbul ignore next */
      cov_14518uwgi9().s[89]++;
      return false;
    } finally {
      /* istanbul ignore next */
      cov_14518uwgi9().s[90]++;
      setCarregando(false);
    }
  };
  /* istanbul ignore next */
  cov_14518uwgi9().s[91]++;
  const gerarSenhaTemporaria = async usuarioId => {
    /* istanbul ignore next */
    cov_14518uwgi9().f[13]++;
    cov_14518uwgi9().s[92]++;
    if (
    /* istanbul ignore next */
    (cov_14518uwgi9().b[18][0]++, !session?.user) ||
    /* istanbul ignore next */
    (cov_14518uwgi9().b[18][1]++, session.user.tipo !== 'ADMIN')) {
      /* istanbul ignore next */
      cov_14518uwgi9().b[17][0]++;
      cov_14518uwgi9().s[93]++;
      _sonner.toast.error('Apenas administradores podem gerar senhas temporárias');
      /* istanbul ignore next */
      cov_14518uwgi9().s[94]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_14518uwgi9().b[17][1]++;
    }
    cov_14518uwgi9().s[95]++;
    try {
      /* istanbul ignore next */
      cov_14518uwgi9().s[96]++;
      setCarregando(true);
      const response =
      /* istanbul ignore next */
      (cov_14518uwgi9().s[97]++, await fetch(`/api/usuarios/${usuarioId}/senha`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        }
      }));
      const resultado =
      /* istanbul ignore next */
      (cov_14518uwgi9().s[98]++, await response.json());
      /* istanbul ignore next */
      cov_14518uwgi9().s[99]++;
      if (!response.ok) {
        /* istanbul ignore next */
        cov_14518uwgi9().b[19][0]++;
        cov_14518uwgi9().s[100]++;
        _sonner.toast.error(
        /* istanbul ignore next */
        (cov_14518uwgi9().b[20][0]++, resultado.erro) ||
        /* istanbul ignore next */
        (cov_14518uwgi9().b[20][1]++, 'Erro ao gerar senha temporária'));
        /* istanbul ignore next */
        cov_14518uwgi9().s[101]++;
        return null;
      } else
      /* istanbul ignore next */
      {
        cov_14518uwgi9().b[19][1]++;
      }
      cov_14518uwgi9().s[102]++;
      _sonner.toast.success('Senha temporária gerada com sucesso');
      /* istanbul ignore next */
      cov_14518uwgi9().s[103]++;
      return resultado.senhaTemporaria;
    } catch (error) {
      /* istanbul ignore next */
      cov_14518uwgi9().s[104]++;
      console.error('Erro ao gerar senha temporária:', error);
      /* istanbul ignore next */
      cov_14518uwgi9().s[105]++;
      _sonner.toast.error('Erro interno do servidor');
      /* istanbul ignore next */
      cov_14518uwgi9().s[106]++;
      return null;
    } finally {
      /* istanbul ignore next */
      cov_14518uwgi9().s[107]++;
      setCarregando(false);
    }
  };
  /* istanbul ignore next */
  cov_14518uwgi9().s[108]++;
  const gerarSenhaSegura = () => {
    /* istanbul ignore next */
    cov_14518uwgi9().f[14]++;
    const minusculas =
    /* istanbul ignore next */
    (cov_14518uwgi9().s[109]++, 'abcdefghijklmnopqrstuvwxyz');
    const maiusculas =
    /* istanbul ignore next */
    (cov_14518uwgi9().s[110]++, 'ABCDEFGHIJKLMNOPQRSTUVWXYZ');
    const numeros =
    /* istanbul ignore next */
    (cov_14518uwgi9().s[111]++, '0123456789');
    const especiais =
    /* istanbul ignore next */
    (cov_14518uwgi9().s[112]++, '@$!%*?&');
    const todosCaracteres =
    /* istanbul ignore next */
    (cov_14518uwgi9().s[113]++, minusculas + maiusculas + numeros + especiais);
    let senha =
    /* istanbul ignore next */
    (cov_14518uwgi9().s[114]++, '');
    // Garantir pelo menos um caractere de cada tipo
    /* istanbul ignore next */
    cov_14518uwgi9().s[115]++;
    senha += minusculas[Math.floor(Math.random() * minusculas.length)];
    /* istanbul ignore next */
    cov_14518uwgi9().s[116]++;
    senha += maiusculas[Math.floor(Math.random() * maiusculas.length)];
    /* istanbul ignore next */
    cov_14518uwgi9().s[117]++;
    senha += numeros[Math.floor(Math.random() * numeros.length)];
    /* istanbul ignore next */
    cov_14518uwgi9().s[118]++;
    senha += especiais[Math.floor(Math.random() * especiais.length)];
    // Completar com caracteres aleatórios até 12 caracteres
    /* istanbul ignore next */
    cov_14518uwgi9().s[119]++;
    for (let i =
    /* istanbul ignore next */
    (cov_14518uwgi9().s[120]++, 4); i < 12; i++) {
      /* istanbul ignore next */
      cov_14518uwgi9().s[121]++;
      senha += todosCaracteres[Math.floor(Math.random() * todosCaracteres.length)];
    }
    // Embaralhar a senha
    /* istanbul ignore next */
    cov_14518uwgi9().s[122]++;
    return senha.split('').sort(() => {
      /* istanbul ignore next */
      cov_14518uwgi9().f[15]++;
      cov_14518uwgi9().s[123]++;
      return Math.random() - 0.5;
    }).join('');
  };
  /* istanbul ignore next */
  cov_14518uwgi9().s[124]++;
  const verificarForcaSenha = senha => {
    /* istanbul ignore next */
    cov_14518uwgi9().f[16]++;
    let pontuacao =
    /* istanbul ignore next */
    (cov_14518uwgi9().s[125]++, 0);
    const sugestoes =
    /* istanbul ignore next */
    (cov_14518uwgi9().s[126]++, []);
    // Comprimento
    /* istanbul ignore next */
    cov_14518uwgi9().s[127]++;
    if (senha.length >= 8) {
      /* istanbul ignore next */
      cov_14518uwgi9().b[21][0]++;
      cov_14518uwgi9().s[128]++;
      pontuacao += 1;
    } else {
      /* istanbul ignore next */
      cov_14518uwgi9().b[21][1]++;
      cov_14518uwgi9().s[129]++;
      sugestoes.push('Use pelo menos 8 caracteres');
    }
    /* istanbul ignore next */
    cov_14518uwgi9().s[130]++;
    if (senha.length >= 12) {
      /* istanbul ignore next */
      cov_14518uwgi9().b[22][0]++;
      cov_14518uwgi9().s[131]++;
      pontuacao += 1;
    } else {
      /* istanbul ignore next */
      cov_14518uwgi9().b[22][1]++;
      cov_14518uwgi9().s[132]++;
      if (senha.length >= 8) {
        /* istanbul ignore next */
        cov_14518uwgi9().b[23][0]++;
        cov_14518uwgi9().s[133]++;
        sugestoes.push('Use 12 ou mais caracteres para maior segurança');
      } else
      /* istanbul ignore next */
      {
        cov_14518uwgi9().b[23][1]++;
      }
    }
    // Letras minúsculas
    /* istanbul ignore next */
    cov_14518uwgi9().s[134]++;
    if (/[a-z]/.test(senha)) {
      /* istanbul ignore next */
      cov_14518uwgi9().b[24][0]++;
      cov_14518uwgi9().s[135]++;
      pontuacao += 1;
    } else {
      /* istanbul ignore next */
      cov_14518uwgi9().b[24][1]++;
      cov_14518uwgi9().s[136]++;
      sugestoes.push('Inclua letras minúsculas');
    }
    // Letras maiúsculas
    /* istanbul ignore next */
    cov_14518uwgi9().s[137]++;
    if (/[A-Z]/.test(senha)) {
      /* istanbul ignore next */
      cov_14518uwgi9().b[25][0]++;
      cov_14518uwgi9().s[138]++;
      pontuacao += 1;
    } else {
      /* istanbul ignore next */
      cov_14518uwgi9().b[25][1]++;
      cov_14518uwgi9().s[139]++;
      sugestoes.push('Inclua letras maiúsculas');
    }
    // Números
    /* istanbul ignore next */
    cov_14518uwgi9().s[140]++;
    if (/\d/.test(senha)) {
      /* istanbul ignore next */
      cov_14518uwgi9().b[26][0]++;
      cov_14518uwgi9().s[141]++;
      pontuacao += 1;
    } else {
      /* istanbul ignore next */
      cov_14518uwgi9().b[26][1]++;
      cov_14518uwgi9().s[142]++;
      sugestoes.push('Inclua números');
    }
    // Caracteres especiais
    /* istanbul ignore next */
    cov_14518uwgi9().s[143]++;
    if (/[@$!%*?&]/.test(senha)) {
      /* istanbul ignore next */
      cov_14518uwgi9().b[27][0]++;
      cov_14518uwgi9().s[144]++;
      pontuacao += 1;
    } else {
      /* istanbul ignore next */
      cov_14518uwgi9().b[27][1]++;
      cov_14518uwgi9().s[145]++;
      sugestoes.push('Inclua caracteres especiais (@$!%*?&)');
    }
    // Variedade de caracteres
    const caracteresUnicos =
    /* istanbul ignore next */
    (cov_14518uwgi9().s[146]++, new Set(senha).size);
    /* istanbul ignore next */
    cov_14518uwgi9().s[147]++;
    if (caracteresUnicos >= senha.length * 0.7) {
      /* istanbul ignore next */
      cov_14518uwgi9().b[28][0]++;
      cov_14518uwgi9().s[148]++;
      pontuacao += 1;
    } else {
      /* istanbul ignore next */
      cov_14518uwgi9().b[28][1]++;
      cov_14518uwgi9().s[149]++;
      sugestoes.push('Evite repetir muitos caracteres');
    }
    // Padrões comuns
    const padroesComuns =
    /* istanbul ignore next */
    (cov_14518uwgi9().s[150]++, [/123456/, /abcdef/, /qwerty/, /(.)\1{2,}/]);
    const temPadraoComum =
    /* istanbul ignore next */
    (cov_14518uwgi9().s[151]++, padroesComuns.some(padrao => {
      /* istanbul ignore next */
      cov_14518uwgi9().f[17]++;
      cov_14518uwgi9().s[152]++;
      return padrao.test(senha.toLowerCase());
    }));
    /* istanbul ignore next */
    cov_14518uwgi9().s[153]++;
    if (!temPadraoComum) {
      /* istanbul ignore next */
      cov_14518uwgi9().b[29][0]++;
      cov_14518uwgi9().s[154]++;
      pontuacao += 1;
    } else {
      /* istanbul ignore next */
      cov_14518uwgi9().b[29][1]++;
      cov_14518uwgi9().s[155]++;
      sugestoes.push('Evite sequências e padrões comuns');
    }
    // Determinar nível
    let nivel;
    /* istanbul ignore next */
    cov_14518uwgi9().s[156]++;
    if (pontuacao <= 2) {
      /* istanbul ignore next */
      cov_14518uwgi9().b[30][0]++;
      cov_14518uwgi9().s[157]++;
      nivel = 'fraca';
    } else {
      /* istanbul ignore next */
      cov_14518uwgi9().b[30][1]++;
      cov_14518uwgi9().s[158]++;
      if (pontuacao <= 4) {
        /* istanbul ignore next */
        cov_14518uwgi9().b[31][0]++;
        cov_14518uwgi9().s[159]++;
        nivel = 'media';
      } else {
        /* istanbul ignore next */
        cov_14518uwgi9().b[31][1]++;
        cov_14518uwgi9().s[160]++;
        if (pontuacao <= 6) {
          /* istanbul ignore next */
          cov_14518uwgi9().b[32][0]++;
          cov_14518uwgi9().s[161]++;
          nivel = 'forte';
        } else {
          /* istanbul ignore next */
          cov_14518uwgi9().b[32][1]++;
          cov_14518uwgi9().s[162]++;
          nivel = 'muito-forte';
        }
      }
    }
    /* istanbul ignore next */
    cov_14518uwgi9().s[163]++;
    return {
      pontuacao,
      nivel,
      sugestoes
    };
  };
  /* istanbul ignore next */
  cov_14518uwgi9().s[164]++;
  return {
    carregando,
    erros,
    alterarSenha,
    validarAlteracaoSenha,
    redefinirSenha,
    gerarSenhaTemporaria,
    validarRedefinicaoSenha,
    gerarSenhaSegura,
    verificarForcaSenha,
    limparErros
  };
}
const _default =
/* istanbul ignore next */
(cov_14518uwgi9().s[165]++, useUserPassword);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,