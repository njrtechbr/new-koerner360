{"version":3,"names":["DetalhesUsuario","usuarioId","onEditar","onExcluir","onAlterarStatus","onRedefinirSenha","onFechar","cov_pdp66lhn3","f","usuario","setUsuario","s","_react","useState","carregando","setCarregando","erro","setErro","podeGerenciarUsuarios","podeExcluirUsuarios","_usepermissions","usePermissions","useEffect","carregarUsuario","response","fetch","ok","b","errorData","json","Error","dadosUsuario","error","console","message","_sonner","toast","obterIniciais","nome","split","map","parte","charAt","join","toUpperCase","slice","obterCorPerfil","perfil","manipularAlteracaoStatus","novoStatus","ativo","id","prev","success","manipularRedefinicaoSenha","manipularExclusao","confirmacao","window","confirm","_jsxruntime","jsx","className","jsxs","_lucidereact","Loader2","AlertCircle","_button","Button","onClick","variant","_card","Card","CardHeader","_avatar","Avatar","AvatarImage","src","avatar","alt","AvatarFallback","_badge","Badge","Mail","email","Shield","CardTitle","Clock","CardContent","Label","Calendar","_utils","formatarData","criadoEm","_separator","Separator","atualizadoEm","ultimoLogin","Fragment","User","CardDescription","Edit","UserX","UserCheck","Key","Trash2","children","props"],"sources":["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\components\\usuarios\\detalhes-usuario.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { Button } from '@/components/ui/button';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Separator } from '@/components/ui/separator';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport { toast } from 'sonner';\nimport {\n  User,\n  Mail,\n  Shield,\n  Calendar,\n  Clock,\n  Edit,\n  Trash2,\n  UserCheck,\n  UserX,\n  Key,\n  Loader2,\n  AlertCircle,\n} from 'lucide-react';\nimport { usePermissions } from '@/hooks/use-permissions';\nimport { formatarData } from '@/lib/utils';\n\ninterface Usuario {\n  id: string;\n  nome: string;\n  email: string;\n  perfil: 'ADMIN' | 'GESTOR' | 'OPERADOR';\n  ativo: boolean;\n  criadoEm: string;\n  atualizadoEm: string;\n  ultimoLogin?: string;\n  avatar?: string;\n}\n\ninterface DetalhesUsuarioProps {\n  usuarioId: string;\n  onEditar: (usuario: Usuario) => void;\n  onExcluir: (usuarioId: string) => void;\n  onAlterarStatus: (usuarioId: string, ativo: boolean) => void;\n  onRedefinirSenha: (usuarioId: string) => void;\n  onFechar: () => void;\n}\n\nexport function DetalhesUsuario({\n  usuarioId,\n  onEditar,\n  onExcluir,\n  onAlterarStatus,\n  onRedefinirSenha,\n  onFechar,\n}: DetalhesUsuarioProps) {\n  const [usuario, setUsuario] = useState<Usuario | null>(null);\n  const [carregando, setCarregando] = useState(true);\n  const [erro, setErro] = useState<string | null>(null);\n  const { podeGerenciarUsuarios, podeExcluirUsuarios } = usePermissions();\n\n  // Carregar dados do usuário\n  useEffect(() => {\n    const carregarUsuario = async () => {\n      try {\n        setCarregando(true);\n        setErro(null);\n\n        const response = await fetch(`/api/usuarios/${usuarioId}`);\n\n        if (!response.ok) {\n          const errorData = await response.json();\n          throw new Error(errorData.erro || 'Erro ao carregar usuário');\n        }\n\n        const dadosUsuario = await response.json();\n        setUsuario(dadosUsuario);\n      } catch (error) {\n        console.error('Erro ao carregar usuário:', error);\n        setErro(error instanceof Error ? error.message : 'Erro inesperado');\n        toast.error('Erro ao carregar dados do usuário');\n      } finally {\n        setCarregando(false);\n      }\n    };\n\n    if (usuarioId) {\n      carregarUsuario();\n    }\n  }, [usuarioId]);\n\n  // Obter iniciais do nome\n  const obterIniciais = (nome: string) => {\n    return nome\n      .split(' ')\n      .map(parte => parte.charAt(0))\n      .join('')\n      .toUpperCase()\n      .slice(0, 2);\n  };\n\n  // Obter cor do badge do perfil\n  const obterCorPerfil = (perfil: string) => {\n    switch (perfil) {\n      case 'ADMIN':\n        return 'destructive';\n      case 'GESTOR':\n        return 'default';\n      case 'OPERADOR':\n        return 'secondary';\n      default:\n        return 'outline';\n    }\n  };\n\n  // Manipular alteração de status\n  const manipularAlteracaoStatus = async () => {\n    if (!usuario) return;\n\n    try {\n      const novoStatus = !usuario.ativo;\n      await onAlterarStatus(usuario.id, novoStatus);\n\n      setUsuario(prev => (prev ? { ...prev, ativo: novoStatus } : null));\n\n      toast.success(\n        novoStatus\n          ? 'Usuário ativado com sucesso'\n          : 'Usuário desativado com sucesso'\n      );\n    } catch (error) {\n      console.error('Erro ao alterar status:', error);\n      toast.error('Erro ao alterar status do usuário');\n    }\n  };\n\n  // Manipular redefinição de senha\n  const manipularRedefinicaoSenha = async () => {\n    if (!usuario) return;\n\n    try {\n      await onRedefinirSenha(usuario.id);\n      toast.success('Senha redefinida com sucesso');\n    } catch (error) {\n      console.error('Erro ao redefinir senha:', error);\n      toast.error('Erro ao redefinir senha');\n    }\n  };\n\n  // Manipular exclusão\n  const manipularExclusao = async () => {\n    if (!usuario) return;\n\n    const confirmacao = window.confirm(\n      `Tem certeza que deseja excluir o usuário \"${usuario.nome}\"?\\n\\nEsta ação não pode ser desfeita.`\n    );\n\n    if (confirmacao) {\n      try {\n        await onExcluir(usuario.id);\n        toast.success('Usuário excluído com sucesso');\n        onFechar();\n      } catch (error) {\n        console.error('Erro ao excluir usuário:', error);\n        toast.error('Erro ao excluir usuário');\n      }\n    }\n  };\n\n  // Renderizar estado de carregamento\n  if (carregando) {\n    return (\n      <div className=\"flex items-center justify-center p-8\">\n        <div className=\"flex items-center gap-2\">\n          <Loader2 className=\"h-5 w-5 animate-spin\" />\n          <span>Carregando dados do usuário...</span>\n        </div>\n      </div>\n    );\n  }\n\n  // Renderizar estado de erro\n  if (erro || !usuario) {\n    return (\n      <div className=\"flex flex-col items-center justify-center p-8 space-y-4\">\n        <AlertCircle className=\"h-12 w-12 text-destructive\" />\n        <div className=\"text-center\">\n          <h3 className=\"text-lg font-semibold\">Erro ao carregar usuário</h3>\n          <p className=\"text-muted-foreground\">\n            {erro || 'Usuário não encontrado'}\n          </p>\n        </div>\n        <Button onClick={onFechar} variant=\"outline\">\n          Fechar\n        </Button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Cabeçalho com avatar e informações básicas */}\n      <Card>\n        <CardHeader>\n          <div className=\"flex items-start gap-4\">\n            <Avatar className=\"h-16 w-16\">\n              <AvatarImage src={usuario.avatar} alt={usuario.nome} />\n              <AvatarFallback className=\"text-lg\">\n                {obterIniciais(usuario.nome)}\n              </AvatarFallback>\n            </Avatar>\n\n            <div className=\"flex-1 space-y-2\">\n              <div className=\"flex items-center gap-2\">\n                <h2 className=\"text-2xl font-bold\">{usuario.nome}</h2>\n                <Badge\n                  variant={usuario.ativo ? 'default' : 'secondary'}\n                  className={usuario.ativo ? 'bg-green-500' : 'bg-gray-500'}\n                >\n                  {usuario.ativo ? 'Ativo' : 'Inativo'}\n                </Badge>\n              </div>\n\n              <div className=\"flex items-center gap-4 text-muted-foreground\">\n                <div className=\"flex items-center gap-1\">\n                  <Mail className=\"h-4 w-4\" />\n                  <span>{usuario.email}</span>\n                </div>\n\n                <div className=\"flex items-center gap-1\">\n                  <Shield className=\"h-4 w-4\" />\n                  <Badge variant={obterCorPerfil(usuario.perfil)}>\n                    {usuario.perfil}\n                  </Badge>\n                </div>\n              </div>\n            </div>\n          </div>\n        </CardHeader>\n      </Card>\n\n      {/* Informações detalhadas */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        {/* Informações do sistema */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Clock className=\"h-5 w-5\" />\n              Informações do Sistema\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div>\n              <Label className=\"text-sm font-medium text-muted-foreground\">\n                Data de Criação\n              </Label>\n              <div className=\"flex items-center gap-2 mt-1\">\n                <Calendar className=\"h-4 w-4 text-muted-foreground\" />\n                <span>{formatarData(usuario.criadoEm)}</span>\n              </div>\n            </div>\n\n            <Separator />\n\n            <div>\n              <Label className=\"text-sm font-medium text-muted-foreground\">\n                Última Atualização\n              </Label>\n              <div className=\"flex items-center gap-2 mt-1\">\n                <Calendar className=\"h-4 w-4 text-muted-foreground\" />\n                <span>{formatarData(usuario.atualizadoEm)}</span>\n              </div>\n            </div>\n\n            {usuario.ultimoLogin && (\n              <>\n                <Separator />\n                <div>\n                  <Label className=\"text-sm font-medium text-muted-foreground\">\n                    Último Login\n                  </Label>\n                  <div className=\"flex items-center gap-2 mt-1\">\n                    <User className=\"h-4 w-4 text-muted-foreground\" />\n                    <span>{formatarData(usuario.ultimoLogin)}</span>\n                  </div>\n                </div>\n              </>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Ações disponíveis */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Ações Disponíveis</CardTitle>\n            <CardDescription>\n              Operações que podem ser realizadas com este usuário\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-3\">\n            {podeGerenciarUsuarios && (\n              <Button\n                onClick={() => onEditar(usuario)}\n                variant=\"outline\"\n                className=\"w-full justify-start\"\n              >\n                <Edit className=\"mr-2 h-4 w-4\" />\n                Editar Usuário\n              </Button>\n            )}\n\n            {podeGerenciarUsuarios && (\n              <Button\n                onClick={manipularAlteracaoStatus}\n                variant=\"outline\"\n                className=\"w-full justify-start\"\n              >\n                {usuario.ativo ? (\n                  <>\n                    <UserX className=\"mr-2 h-4 w-4\" />\n                    Desativar Usuário\n                  </>\n                ) : (\n                  <>\n                    <UserCheck className=\"mr-2 h-4 w-4\" />\n                    Ativar Usuário\n                  </>\n                )}\n              </Button>\n            )}\n\n            {podeGerenciarUsuarios && (\n              <Button\n                onClick={manipularRedefinicaoSenha}\n                variant=\"outline\"\n                className=\"w-full justify-start\"\n              >\n                <Key className=\"mr-2 h-4 w-4\" />\n                Redefinir Senha\n              </Button>\n            )}\n\n            {podeExcluirUsuarios && (\n              <Button\n                onClick={manipularExclusao}\n                variant=\"destructive\"\n                className=\"w-full justify-start\"\n              >\n                <Trash2 className=\"mr-2 h-4 w-4\" />\n                Excluir Usuário\n              </Button>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Botão de fechar */}\n      <div className=\"flex justify-end pt-6\">\n        <Button onClick={onFechar} variant=\"outline\">\n          Fechar\n        </Button>\n      </div>\n    </div>\n  );\n}\n\n// Componente Label para consistência\nfunction Label({\n  children,\n  className,\n  ...props\n}: React.LabelHTMLAttributes<HTMLLabelElement>) {\n  return (\n    <label className={className} {...props}>\n      {children}\n    </label>\n  );\n}\n"],"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","ignoreList":[]}