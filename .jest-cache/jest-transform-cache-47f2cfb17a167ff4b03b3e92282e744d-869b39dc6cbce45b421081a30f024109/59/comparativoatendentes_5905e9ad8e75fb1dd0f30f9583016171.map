{"version":3,"names":["cov_jxnzpx7eh","actualCoverage","s","ComparativoAtendentes","f","default","_default","METRICAS_DISPONIVEIS","key","nome","icone","_jsxruntime","jsx","_lucidereact","FileText","className","tipo","Star","TrendingUp","Clock","Award","Users","Target","Activity","atendentes","onSelecionarAtendente","onRemoverAtendente","atendentesSelecionados","setAtendentesSelecionados","_react","useState","configuracao","setConfiguracao","metricasPrincipais","tipoVisualizacao","ordenarPor","ordemCrescente","mostrarTendencias","destacarMelhor","destacarPior","termoBusca","setTermoBusca","mostrarFiltros","setMostrarFiltros","atendentesDisponiveis","filter","atendente","b","find","sel","id","toLowerCase","includes","email","cargo","adicionarAtendente","length","prev","removerAtendente","a","obterValorMetrica","metrica","metricas","formatarValor","valor","toFixed","toString","obterIconeTendencia","tendencia","TrendingDown","Minus","prepararDadosGrafico","map","dados","split","nomeCompleto","forEach","prepararDadosRadar","m","k","met","renderizarGrafico","cores","_recharts","ResponsiveContainer","width","height","jsxs","BarChart","data","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","labelFormatter","label","Legend","index","metricaInfo","Bar","fill","name","dadosRadar","RadarChart","PolarGrid","PolarAngleAxis","PolarRadiusAxis","Radar","stroke","fillOpacity","LineChart","Line","type","strokeWidth","_utils","cn","_card","Card","CardHeader","CardTitle","CardDescription","CardContent","Search","_input","Input","placeholder","value","onChange","e","target","_button","Button","variant","onClick","Filter","slice","charAt","setor","Plus","size","X","avaliacaoMedia","tendencias","avaliacao","documentosCriados","documentos","produtividade","_badge","Badge","status","_label","Label","_checkbox","Checkbox","checked","onCheckedChange","htmlFor","_select","Select","onValueChange","SelectTrigger","SelectValue","SelectContent","SelectItem","BarChart3"],"sources":["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\components\\metricas\\comparativo-atendentes.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport {\n  Users,\n  TrendingUp,\n  TrendingDown,\n  Minus,\n  Search,\n  X,\n  BarChart3,\n  PieChart,\n  Activity,\n  Award,\n  Target,\n  Clock,\n  FileText,\n  Star,\n  Plus,\n  Filter,\n} from 'lucide-react';\nimport {\n  ResponsiveContainer,\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  RadarChart,\n  PolarGrid,\n  PolarAngleAxis,\n  PolarRadiusAxis,\n  Radar,\n  LineChart,\n  Line,\n} from 'recharts';\nimport { cn } from '@/lib/utils';\n\n/**\n * Interface para dados de um atendente\n */\nexport interface DadosAtendente {\n  id: string;\n  nome: string;\n  email: string;\n  cargo: string;\n  setor: string;\n  status: 'ativo' | 'inativo' | 'licenca';\n  avatar?: string;\n  dataAdmissao: string;\n  metricas: {\n    documentosCriados: number;\n    avaliacaoMedia: number;\n    produtividade: number;\n    pontualidade: number;\n    qualidade: number;\n    colaboracao: number;\n    inovacao: number;\n    resolucaoProblemas: number;\n    comunicacao: number;\n    lideranca: number;\n    tempoMedioTarefa: number; // em horas\n    tarefasConcluidas: number;\n    tarefasPendentes: number;\n    feedbacksPositivos: number;\n    feedbacksNegativos: number;\n  };\n  tendencias: {\n    documentos: 'up' | 'down' | 'stable';\n    avaliacao: 'up' | 'down' | 'stable';\n    produtividade: 'up' | 'down' | 'stable';\n  };\n}\n\n/**\n * Interface para configurações de comparação\n */\nexport interface ConfiguracaoComparacao {\n  metricasPrincipais: string[];\n  tipoVisualizacao: 'barras' | 'radar' | 'linha' | 'tabela';\n  ordenarPor: string;\n  ordemCrescente: boolean;\n  mostrarTendencias: boolean;\n  destacarMelhor: boolean;\n  destacarPior: boolean;\n}\n\n/**\n * Props do componente\n */\ninterface ComparativoAtendentesProps {\n  atendentes: DadosAtendente[];\n  onSelecionarAtendente?: (atendente: DadosAtendente) => void;\n  onRemoverAtendente?: (id: string) => void;\n  className?: string;\n}\n\n/**\n * Métricas disponíveis para comparação\n */\nconst METRICAS_DISPONIVEIS = [\n  {\n    key: 'documentosCriados',\n    nome: 'Documentos Criados',\n    icone: <FileText className=\"h-4 w-4\" />,\n    tipo: 'numero',\n  },\n  {\n    key: 'avaliacaoMedia',\n    nome: 'Avaliação Média',\n    icone: <Star className=\"h-4 w-4\" />,\n    tipo: 'decimal',\n  },\n  {\n    key: 'produtividade',\n    nome: 'Produtividade',\n    icone: <TrendingUp className=\"h-4 w-4\" />,\n    tipo: 'percentual',\n  },\n  {\n    key: 'pontualidade',\n    nome: 'Pontualidade',\n    icone: <Clock className=\"h-4 w-4\" />,\n    tipo: 'percentual',\n  },\n  {\n    key: 'qualidade',\n    nome: 'Qualidade',\n    icone: <Award className=\"h-4 w-4\" />,\n    tipo: 'percentual',\n  },\n  {\n    key: 'colaboracao',\n    nome: 'Colaboração',\n    icone: <Users className=\"h-4 w-4\" />,\n    tipo: 'percentual',\n  },\n  {\n    key: 'inovacao',\n    nome: 'Inovação',\n    icone: <Target className=\"h-4 w-4\" />,\n    tipo: 'percentual',\n  },\n  {\n    key: 'resolucaoProblemas',\n    nome: 'Resolução de Problemas',\n    icone: <Activity className=\"h-4 w-4\" />,\n    tipo: 'percentual',\n  },\n  {\n    key: 'comunicacao',\n    nome: 'Comunicação',\n    icone: <Users className=\"h-4 w-4\" />,\n    tipo: 'percentual',\n  },\n  {\n    key: 'lideranca',\n    nome: 'Liderança',\n    icone: <Award className=\"h-4 w-4\" />,\n    tipo: 'percentual',\n  },\n  {\n    key: 'tempoMedioTarefa',\n    nome: 'Tempo Médio por Tarefa',\n    icone: <Clock className=\"h-4 w-4\" />,\n    tipo: 'tempo',\n  },\n  {\n    key: 'tarefasConcluidas',\n    nome: 'Tarefas Concluídas',\n    icone: <Target className=\"h-4 w-4\" />,\n    tipo: 'numero',\n  },\n];\n\n/**\n * Componente principal para comparação de atendentes\n */\nexport function ComparativoAtendentes({\n  atendentes,\n  onSelecionarAtendente,\n  onRemoverAtendente,\n  className,\n}: ComparativoAtendentesProps) {\n  const [atendentesSelecionados, setAtendentesSelecionados] = useState<\n    DadosAtendente[]\n  >([]);\n  const [configuracao, setConfiguracao] = useState<ConfiguracaoComparacao>({\n    metricasPrincipais: [\n      'documentosCriados',\n      'avaliacaoMedia',\n      'produtividade',\n      'qualidade',\n    ],\n    tipoVisualizacao: 'barras',\n    ordenarPor: 'avaliacaoMedia',\n    ordemCrescente: false,\n    mostrarTendencias: true,\n    destacarMelhor: true,\n    destacarPior: false,\n  });\n  const [termoBusca, setTermoBusca] = useState('');\n  const [mostrarFiltros, setMostrarFiltros] = useState(false);\n\n  // Filtrar atendentes disponíveis\n  const atendentesDisponiveis = atendentes.filter(\n    atendente =>\n      !atendentesSelecionados.find(sel => sel.id === atendente.id) &&\n      (atendente.nome.toLowerCase().includes(termoBusca.toLowerCase()) ||\n        atendente.email.toLowerCase().includes(termoBusca.toLowerCase()) ||\n        atendente.cargo.toLowerCase().includes(termoBusca.toLowerCase()))\n  );\n\n  // Função para adicionar atendente à comparação\n  const adicionarAtendente = (atendente: DadosAtendente) => {\n    if (atendentesSelecionados.length < 6) {\n      setAtendentesSelecionados(prev => [...prev, atendente]);\n      onSelecionarAtendente?.(atendente);\n    }\n  };\n\n  // Função para remover atendente da comparação\n  const removerAtendente = (id: string) => {\n    setAtendentesSelecionados(prev => prev.filter(a => a.id !== id));\n    onRemoverAtendente?.(id);\n  };\n\n  // Função para obter valor da métrica\n  const obterValorMetrica = (\n    atendente: DadosAtendente,\n    metrica: string\n  ): number => {\n    return (atendente.metricas as any)[metrica] || 0;\n  };\n\n  // Função para formatar valor da métrica\n  const formatarValor = (valor: number, tipo: string): string => {\n    switch (tipo) {\n      case 'percentual':\n        return `${valor}%`;\n      case 'decimal':\n        return valor.toFixed(1);\n      case 'tempo':\n        return `${valor}h`;\n      default:\n        return valor.toString();\n    }\n  };\n\n  // Função para obter ícone de tendência\n  const obterIconeTendencia = (tendencia: 'up' | 'down' | 'stable') => {\n    switch (tendencia) {\n      case 'up':\n        return <TrendingUp className=\"h-3 w-3 text-green-500\" />;\n      case 'down':\n        return <TrendingDown className=\"h-3 w-3 text-red-500\" />;\n      default:\n        return <Minus className=\"h-3 w-3 text-gray-400\" />;\n    }\n  };\n\n  // Preparar dados para gráficos\n  const prepararDadosGrafico = () => {\n    return atendentesSelecionados.map(atendente => {\n      const dados: any = {\n        nome: atendente.nome.split(' ')[0], // Primeiro nome apenas\n        nomeCompleto: atendente.nome,\n      };\n\n      configuracao.metricasPrincipais.forEach(metrica => {\n        dados[metrica] = obterValorMetrica(atendente, metrica);\n      });\n\n      return dados;\n    });\n  };\n\n  // Preparar dados para radar\n  const prepararDadosRadar = () => {\n    const metricas = configuracao.metricasPrincipais.map(key => {\n      const metrica = METRICAS_DISPONIVEIS.find(m => m.key === key);\n      return metrica?.nome || key;\n    });\n\n    return metricas.map(metrica => {\n      const dados: any = { metrica };\n\n      atendentesSelecionados.forEach(atendente => {\n        const key = configuracao.metricasPrincipais.find(k => {\n          const m = METRICAS_DISPONIVEIS.find(met => met.key === k);\n          return m?.nome === metrica;\n        });\n\n        if (key) {\n          dados[atendente.nome.split(' ')[0]] = obterValorMetrica(\n            atendente,\n            key\n          );\n        }\n      });\n\n      return dados;\n    });\n  };\n\n  // Renderizar gráfico baseado no tipo selecionado\n  const renderizarGrafico = () => {\n    const dados = prepararDadosGrafico();\n    const cores = [\n      '#8884d8',\n      '#82ca9d',\n      '#ffc658',\n      '#ff7300',\n      '#8dd1e1',\n      '#d084d0',\n    ];\n\n    switch (configuracao.tipoVisualizacao) {\n      case 'barras':\n        return (\n          <ResponsiveContainer width=\"100%\" height={400}>\n            <BarChart data={dados}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"nome\" />\n              <YAxis />\n              <Tooltip\n                labelFormatter={label => {\n                  const atendente = atendentesSelecionados.find(\n                    a => a.nome.split(' ')[0] === label\n                  );\n                  return atendente?.nome || label;\n                }}\n              />\n              <Legend />\n              {configuracao.metricasPrincipais.map((metrica, index) => {\n                const metricaInfo = METRICAS_DISPONIVEIS.find(\n                  m => m.key === metrica\n                );\n                return (\n                  <Bar\n                    key={metrica}\n                    dataKey={metrica}\n                    fill={cores[index % cores.length]}\n                    name={metricaInfo?.nome || metrica}\n                  />\n                );\n              })}\n            </BarChart>\n          </ResponsiveContainer>\n        );\n\n      case 'radar':\n        const dadosRadar = prepararDadosRadar();\n        return (\n          <ResponsiveContainer width=\"100%\" height={400}>\n            <RadarChart data={dadosRadar}>\n              <PolarGrid />\n              <PolarAngleAxis dataKey=\"metrica\" />\n              <PolarRadiusAxis />\n              {atendentesSelecionados.map((atendente, index) => (\n                <Radar\n                  key={atendente.id}\n                  name={atendente.nome.split(' ')[0]}\n                  dataKey={atendente.nome.split(' ')[0]}\n                  stroke={cores[index % cores.length]}\n                  fill={cores[index % cores.length]}\n                  fillOpacity={0.1}\n                />\n              ))}\n              <Legend />\n            </RadarChart>\n          </ResponsiveContainer>\n        );\n\n      case 'linha':\n        return (\n          <ResponsiveContainer width=\"100%\" height={400}>\n            <LineChart data={dados}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"nome\" />\n              <YAxis />\n              <Tooltip\n                labelFormatter={label => {\n                  const atendente = atendentesSelecionados.find(\n                    a => a.nome.split(' ')[0] === label\n                  );\n                  return atendente?.nome || label;\n                }}\n              />\n              <Legend />\n              {configuracao.metricasPrincipais.map((metrica, index) => {\n                const metricaInfo = METRICAS_DISPONIVEIS.find(\n                  m => m.key === metrica\n                );\n                return (\n                  <Line\n                    key={metrica}\n                    type=\"monotone\"\n                    dataKey={metrica}\n                    stroke={cores[index % cores.length]}\n                    name={metricaInfo?.nome || metrica}\n                    strokeWidth={2}\n                  />\n                );\n              })}\n            </LineChart>\n          </ResponsiveContainer>\n        );\n\n      default:\n        return (\n          <div className=\"text-center text-gray-500 py-8\">\n            Selecione um tipo de visualização\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div className={cn('space-y-6', className)}>\n      {/* Cabeçalho */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center space-x-2\">\n            <Users className=\"h-5 w-5\" />\n            <span>Comparativo de Atendentes</span>\n          </CardTitle>\n          <CardDescription>\n            Compare métricas de desempenho entre diferentes atendentes\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          {/* Busca e seleção de atendentes */}\n          <div className=\"space-y-4\">\n            <div className=\"flex space-x-2\">\n              <div className=\"relative flex-1\">\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400\" />\n                <Input\n                  placeholder=\"Buscar atendentes por nome, email ou cargo...\"\n                  value={termoBusca}\n                  onChange={e => setTermoBusca(e.target.value)}\n                  className=\"pl-10\"\n                />\n              </div>\n              <Button\n                variant=\"outline\"\n                onClick={() => setMostrarFiltros(!mostrarFiltros)}\n              >\n                <Filter className=\"h-4 w-4 mr-1\" />\n                Filtros\n              </Button>\n            </div>\n\n            {/* Lista de atendentes disponíveis */}\n            {termoBusca && (\n              <div className=\"border rounded-lg p-3 max-h-48 overflow-y-auto\">\n                <div className=\"text-sm font-medium mb-2\">\n                  Atendentes Disponíveis:\n                </div>\n                <div className=\"space-y-2\">\n                  {atendentesDisponiveis.slice(0, 5).map(atendente => (\n                    <div\n                      key={atendente.id}\n                      className=\"flex items-center justify-between p-2 hover:bg-gray-50 rounded cursor-pointer\"\n                      onClick={() => adicionarAtendente(atendente)}\n                    >\n                      <div className=\"flex items-center space-x-3\">\n                        <div className=\"w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center\">\n                          <span className=\"text-sm font-medium text-blue-600\">\n                            {atendente.nome.charAt(0)}\n                          </span>\n                        </div>\n                        <div>\n                          <div className=\"font-medium text-sm\">\n                            {atendente.nome}\n                          </div>\n                          <div className=\"text-xs text-gray-500\">\n                            {atendente.cargo} - {atendente.setor}\n                          </div>\n                        </div>\n                      </div>\n                      <Plus className=\"h-4 w-4 text-gray-400\" />\n                    </div>\n                  ))}\n                  {atendentesDisponiveis.length === 0 && (\n                    <div className=\"text-sm text-gray-500 text-center py-2\">\n                      Nenhum atendente encontrado\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Atendentes selecionados */}\n      {atendentesSelecionados.length > 0 && (\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-lg\">\n              Atendentes Selecionados ({atendentesSelecionados.length}/6)\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n              {atendentesSelecionados.map(atendente => (\n                <div\n                  key={atendente.id}\n                  className=\"border rounded-lg p-4 relative\"\n                >\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"absolute top-2 right-2 h-6 w-6 p-0\"\n                    onClick={() => removerAtendente(atendente.id)}\n                  >\n                    <X className=\"h-3 w-3\" />\n                  </Button>\n\n                  <div className=\"flex items-center space-x-3 mb-3\">\n                    <div className=\"w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center\">\n                      <span className=\"font-medium text-blue-600\">\n                        {atendente.nome.charAt(0)}\n                      </span>\n                    </div>\n                    <div>\n                      <div className=\"font-medium\">{atendente.nome}</div>\n                      <div className=\"text-sm text-gray-500\">\n                        {atendente.cargo}\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-sm text-gray-600\">Avaliação:</span>\n                      <div className=\"flex items-center space-x-1\">\n                        <span className=\"font-medium\">\n                          {atendente.metricas.avaliacaoMedia.toFixed(1)}\n                        </span>\n                        {configuracao.mostrarTendencias &&\n                          obterIconeTendencia(atendente.tendencias.avaliacao)}\n                      </div>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-sm text-gray-600\">Documentos:</span>\n                      <div className=\"flex items-center space-x-1\">\n                        <span className=\"font-medium\">\n                          {atendente.metricas.documentosCriados}\n                        </span>\n                        {configuracao.mostrarTendencias &&\n                          obterIconeTendencia(atendente.tendencias.documentos)}\n                      </div>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-sm text-gray-600\">\n                        Produtividade:\n                      </span>\n                      <div className=\"flex items-center space-x-1\">\n                        <span className=\"font-medium\">\n                          {atendente.metricas.produtividade}%\n                        </span>\n                        {configuracao.mostrarTendencias &&\n                          obterIconeTendencia(\n                            atendente.tendencias.produtividade\n                          )}\n                      </div>\n                    </div>\n                  </div>\n\n                  <Badge\n                    variant={\n                      atendente.status === 'ativo' ? 'default' : 'secondary'\n                    }\n                    className=\"mt-2\"\n                  >\n                    {atendente.status}\n                  </Badge>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Configurações de comparação */}\n      {atendentesSelecionados.length > 1 && (\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-lg\">\n              Configurações de Comparação\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            {/* Seleção de métricas */}\n            <div className=\"space-y-2\">\n              <Label className=\"text-sm font-medium\">\n                Métricas para Comparação\n              </Label>\n              <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-2\">\n                {METRICAS_DISPONIVEIS.map(metrica => (\n                  <div\n                    key={metrica.key}\n                    className=\"flex items-center space-x-2\"\n                  >\n                    <Checkbox\n                      id={metrica.key}\n                      checked={configuracao.metricasPrincipais.includes(\n                        metrica.key\n                      )}\n                      onCheckedChange={checked => {\n                        if (checked) {\n                          setConfiguracao(prev => ({\n                            ...prev,\n                            metricasPrincipais: [\n                              ...prev.metricasPrincipais,\n                              metrica.key,\n                            ],\n                          }));\n                        } else {\n                          setConfiguracao(prev => ({\n                            ...prev,\n                            metricasPrincipais: prev.metricasPrincipais.filter(\n                              m => m !== metrica.key\n                            ),\n                          }));\n                        }\n                      }}\n                    />\n                    <Label\n                      htmlFor={metrica.key}\n                      className=\"text-sm flex items-center space-x-1\"\n                    >\n                      {metrica.icone}\n                      <span>{metrica.nome}</span>\n                    </Label>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Tipo de visualização */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label className=\"text-sm font-medium\">\n                  Tipo de Visualização\n                </Label>\n                <Select\n                  value={configuracao.tipoVisualizacao}\n                  onValueChange={valor =>\n                    setConfiguracao(prev => ({\n                      ...prev,\n                      tipoVisualizacao: valor as any,\n                    }))\n                  }\n                >\n                  <SelectTrigger>\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"barras\">Gráfico de Barras</SelectItem>\n                    <SelectItem value=\"radar\">Gráfico Radar</SelectItem>\n                    <SelectItem value=\"linha\">Gráfico de Linha</SelectItem>\n                    <SelectItem value=\"tabela\">Tabela Comparativa</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label className=\"text-sm font-medium\">Ordenar Por</Label>\n                <Select\n                  value={configuracao.ordenarPor}\n                  onValueChange={valor =>\n                    setConfiguracao(prev => ({ ...prev, ordenarPor: valor }))\n                  }\n                >\n                  <SelectTrigger>\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {METRICAS_DISPONIVEIS.map(metrica => (\n                      <SelectItem key={metrica.key} value={metrica.key}>\n                        {metrica.nome}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              </div>\n            </div>\n\n            {/* Opções adicionais */}\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n              <div className=\"flex items-center space-x-2\">\n                <Checkbox\n                  id=\"mostrarTendencias\"\n                  checked={configuracao.mostrarTendencias}\n                  onCheckedChange={checked =>\n                    setConfiguracao(prev => ({\n                      ...prev,\n                      mostrarTendencias: !!checked,\n                    }))\n                  }\n                />\n                <Label htmlFor=\"mostrarTendencias\" className=\"text-sm\">\n                  Mostrar Tendências\n                </Label>\n              </div>\n\n              <div className=\"flex items-center space-x-2\">\n                <Checkbox\n                  id=\"destacarMelhor\"\n                  checked={configuracao.destacarMelhor}\n                  onCheckedChange={checked =>\n                    setConfiguracao(prev => ({\n                      ...prev,\n                      destacarMelhor: !!checked,\n                    }))\n                  }\n                />\n                <Label htmlFor=\"destacarMelhor\" className=\"text-sm\">\n                  Destacar Melhor\n                </Label>\n              </div>\n\n              <div className=\"flex items-center space-x-2\">\n                <Checkbox\n                  id=\"destacarPior\"\n                  checked={configuracao.destacarPior}\n                  onCheckedChange={checked =>\n                    setConfiguracao(prev => ({\n                      ...prev,\n                      destacarPior: !!checked,\n                    }))\n                  }\n                />\n                <Label htmlFor=\"destacarPior\" className=\"text-sm\">\n                  Destacar Pior\n                </Label>\n              </div>\n\n              <div className=\"flex items-center space-x-2\">\n                <Checkbox\n                  id=\"ordemCrescente\"\n                  checked={configuracao.ordemCrescente}\n                  onCheckedChange={checked =>\n                    setConfiguracao(prev => ({\n                      ...prev,\n                      ordemCrescente: !!checked,\n                    }))\n                  }\n                />\n                <Label htmlFor=\"ordemCrescente\" className=\"text-sm\">\n                  Ordem Crescente\n                </Label>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Visualização comparativa */}\n      {atendentesSelecionados.length > 1 &&\n        configuracao.metricasPrincipais.length > 0 && (\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center space-x-2\">\n                <BarChart3 className=\"h-5 w-5\" />\n                <span>Comparação Visual</span>\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              {configuracao.tipoVisualizacao !== 'tabela' ? (\n                renderizarGrafico()\n              ) : (\n                <div className=\"overflow-x-auto\">\n                  <table className=\"w-full border-collapse border border-gray-200\">\n                    <thead>\n                      <tr className=\"bg-gray-50\">\n                        <th className=\"border border-gray-200 p-3 text-left\">\n                          Atendente\n                        </th>\n                        {configuracao.metricasPrincipais.map(metrica => {\n                          const metricaInfo = METRICAS_DISPONIVEIS.find(\n                            m => m.key === metrica\n                          );\n                          return (\n                            <th\n                              key={metrica}\n                              className=\"border border-gray-200 p-3 text-center\"\n                            >\n                              <div className=\"flex items-center justify-center space-x-1\">\n                                {metricaInfo?.icone}\n                                <span>{metricaInfo?.nome}</span>\n                              </div>\n                            </th>\n                          );\n                        })}\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {atendentesSelecionados.map(atendente => (\n                        <tr key={atendente.id} className=\"hover:bg-gray-50\">\n                          <td className=\"border border-gray-200 p-3\">\n                            <div className=\"flex items-center space-x-2\">\n                              <div className=\"w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center\">\n                                <span className=\"text-sm font-medium text-blue-600\">\n                                  {atendente.nome.charAt(0)}\n                                </span>\n                              </div>\n                              <div>\n                                <div className=\"font-medium\">\n                                  {atendente.nome}\n                                </div>\n                                <div className=\"text-sm text-gray-500\">\n                                  {atendente.cargo}\n                                </div>\n                              </div>\n                            </div>\n                          </td>\n                          {configuracao.metricasPrincipais.map(metrica => {\n                            const valor = obterValorMetrica(atendente, metrica);\n                            const metricaInfo = METRICAS_DISPONIVEIS.find(\n                              m => m.key === metrica\n                            );\n                            return (\n                              <td\n                                key={metrica}\n                                className=\"border border-gray-200 p-3 text-center\"\n                              >\n                                <span className=\"font-medium\">\n                                  {formatarValor(\n                                    valor,\n                                    metricaInfo?.tipo || 'numero'\n                                  )}\n                                </span>\n                              </td>\n                            );\n                          })}\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        )}\n\n      {/* Estado vazio */}\n      {atendentesSelecionados.length === 0 && (\n        <Card>\n          <CardContent className=\"text-center py-12\">\n            <Users className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n              Nenhum atendente selecionado\n            </h3>\n            <p className=\"text-gray-500 mb-4\">\n              Use a busca acima para encontrar e selecionar atendentes para\n              comparação\n            </p>\n            <p className=\"text-sm text-gray-400\">\n              Você pode comparar até 6 atendentes simultaneamente\n            </p>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n}\n\nexport default ComparativoAtendentes;\n"],"mappingsaAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,aAAA;AAAAA,aAAA,GAAAE,CAAA;;;;;;;;;;;;;;;;;;;;MArrBgBC,sBAAA;IAAA;IAAAH,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;WAAAC,qBAAA;;MAqrBhBE,QAAA;IAAA;IAAAL,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;WAAAI,QAAA;;;;;;;;wEA13B2C;;;iCAOpC;;;iCACgB;;;kCACD;;;kCACA;;;kCACA;;;kCAOf;;;kCACkB;;;kCAkBlB;;;kCAiBA;;;kCACY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DnB;;;AAGA,MAAMC,oBAAA;AAAA;AAAA,CAAAP,aAAA,GAAAE,CAAA,QAAuB,CAC3B;EACEM,GAAA,EAAK;EACLC,IAAA,EAAM;EACNC,KAAA,eAAO,IAAAC,WAAA,CAAAC,GAAA,EAACC,YAAA,CAAAC,QAAQ;IAACC,SAAA,EAAU;;EAC3BC,IAAA,EAAM;AACR,GACA;EACER,GAAA,EAAK;EACLC,IAAA,EAAM;EACNC,KAAA,eAAO,IAAAC,WAAA,CAAAC,GAAA,EAACC,YAAA,CAAAI,IAAI;IAACF,SAAA,EAAU;;EACvBC,IAAA,EAAM;AACR,GACA;EACER,GAAA,EAAK;EACLC,IAAA,EAAM;EACNC,KAAA,eAAO,IAAAC,WAAA,CAAAC,GAAA,EAACC,YAAA,CAAAK,UAAU;IAACH,SAAA,EAAU;;EAC7BC,IAAA,EAAM;AACR,GACA;EACER,GAAA,EAAK;EACLC,IAAA,EAAM;EACNC,KAAA,eAAO,IAAAC,WAAA,CAAAC,GAAA,EAACC,YAAA,CAAAM,KAAK;IAACJ,SAAA,EAAU;;EACxBC,IAAA,EAAM;AACR,GACA;EACER,GAAA,EAAK;EACLC,IAAA,EAAM;EACNC,KAAA,eAAO,IAAAC,WAAA,CAAAC,GAAA,EAACC,YAAA,CAAAO,KAAK;IAACL,SAAA,EAAU;;EACxBC,IAAA,EAAM;AACR,GACA;EACER,GAAA,EAAK;EACLC,IAAA,EAAM;EACNC,KAAA,eAAO,IAAAC,WAAA,CAAAC,GAAA,EAACC,YAAA,CAAAQ,KAAK;IAACN,SAAA,EAAU;;EACxBC,IAAA,EAAM;AACR,GACA;EACER,GAAA,EAAK;EACLC,IAAA,EAAM;EACNC,KAAA,eAAO,IAAAC,WAAA,CAAAC,GAAA,EAACC,YAAA,CAAAS,MAAM;IAACP,SAAA,EAAU;;EACzBC,IAAA,EAAM;AACR,GACA;EACER,GAAA,EAAK;EACLC,IAAA,EAAM;EACNC,KAAA,eAAO,IAAAC,WAAA,CAAAC,GAAA,EAACC,YAAA,CAAAU,QAAQ;IAACR,SAAA,EAAU;;EAC3BC,IAAA,EAAM;AACR,GACA;EACER,GAAA,EAAK;EACLC,IAAA,EAAM;EACNC,KAAA,eAAO,IAAAC,WAAA,CAAAC,GAAA,EAACC,YAAA,CAAAQ,KAAK;IAACN,SAAA,EAAU;;EACxBC,IAAA,EAAM;AACR,GACA;EACER,GAAA,EAAK;EACLC,IAAA,EAAM;EACNC,KAAA,eAAO,IAAAC,WAAA,CAAAC,GAAA,EAACC,YAAA,CAAAO,KAAK;IAACL,SAAA,EAAU;;EACxBC,IAAA,EAAM;AACR,GACA;EACER,GAAA,EAAK;EACLC,IAAA,EAAM;EACNC,KAAA,eAAO,IAAAC,WAAA,CAAAC,GAAA,EAACC,YAAA,CAAAM,KAAK;IAACJ,SAAA,EAAU;;EACxBC,IAAA,EAAM;AACR,GACA;EACER,GAAA,EAAK;EACLC,IAAA,EAAM;EACNC,KAAA,eAAO,IAAAC,WAAA,CAAAC,GAAA,EAACC,YAAA,CAAAS,MAAM;IAACP,SAAA,EAAU;;EACzBC,IAAA,EAAM;AACR,EACD;AAKM,SAASb,sBAAsB;EACpCqB,UAAU;EACVC,qBAAqB;EACrBC,kBAAkB;EAClBX;AAAS,CACkB;EAAA;EAAAf,aAAA,GAAAI,CAAA;EAC3B,MAAM,CAACuB,sBAAA,EAAwBC,yBAAA,CAA0B;EAAA;EAAA,CAAA5B,aAAA,GAAAE,CAAA,QAAG,IAAA2B,MAAA,CAAAC,QAAQ,EAElE,EAAE;EACJ,MAAM,CAACC,YAAA,EAAcC,eAAA,CAAgB;EAAA;EAAA,CAAAhC,aAAA,GAAAE,CAAA,QAAG,IAAA2B,MAAA,CAAAC,QAAQ,EAAyB;IACvEG,kBAAA,EAAoB,CAClB,qBACA,kBACA,iBACA,YACD;IACDC,gBAAA,EAAkB;IAClBC,UAAA,EAAY;IACZC,cAAA,EAAgB;IAChBC,iBAAA,EAAmB;IACnBC,cAAA,EAAgB;IAChBC,YAAA,EAAc;EAChB;EACA,MAAM,CAACC,UAAA,EAAYC,aAAA,CAAc;EAAA;EAAA,CAAAzC,aAAA,GAAAE,CAAA,QAAG,IAAA2B,MAAA,CAAAC,QAAQ,EAAC;EAC7C,MAAM,CAACY,cAAA,EAAgBC,iBAAA,CAAkB;EAAA;EAAA,CAAA3C,aAAA,GAAAE,CAAA,QAAG,IAAA2B,MAAA,CAAAC,QAAQ,EAAC;EAErD;EACA,MAAMc,qBAAA;EAAA;EAAA,CAAA5C,aAAA,GAAAE,CAAA,QAAwBsB,UAAA,CAAWqB,MAAM,CAC7CC,SAAA,IACE;IAAA;IAAA9C,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;IAAA,kCAAAF,aAAA,GAAA+C,CAAA,YAACpB,sBAAA,CAAuBqB,IAAI,CAACC,GAAA,IAAO;MAAA;MAAAjD,aAAA,GAAAI,CAAA;MAAAJ,aAAA,GAAAE,CAAA;MAAA,OAAA+C,GAAA,CAAIC,EAAE,KAAKJ,SAAA,CAAUI,EAAE;IAAF,CAAE;IAC1D;IAAA,CAAAlD,aAAA,GAAA+C,CAAA,WAAAD,SAAA,CAAUrC,IAAI,CAAC0C,WAAW,GAAGC,QAAQ,CAACZ,UAAA,CAAWW,WAAW;IAAA;IAAA,CAAAnD,aAAA,GAAA+C,CAAA,WAC3DD,SAAA,CAAUO,KAAK,CAACF,WAAW,GAAGC,QAAQ,CAACZ,UAAA,CAAWW,WAAW;IAAA;IAAA,CAAAnD,aAAA,GAAA+C,CAAA,WAC7DD,SAAA,CAAUQ,KAAK,CAACH,WAAW,GAAGC,QAAQ,CAACZ,UAAA,CAAWW,WAAW,GAAE;EAAA;EAGrE;EAAA;EAAAnD,aAAA,GAAAE,CAAA;EACA,MAAMqD,kBAAA,GAAsBT,SAAA;IAAA;IAAA9C,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;IAC1B,IAAIyB,sBAAA,CAAuB6B,MAAM,GAAG,GAAG;MAAA;MAAAxD,aAAA,GAAA+C,CAAA;MAAA/C,aAAA,GAAAE,CAAA;MACrC0B,yBAAA,CAA0B6B,IAAA,IAAQ;QAAA;QAAAzD,aAAA,GAAAI,CAAA;QAAAJ,aAAA,GAAAE,CAAA;QAAA,Q,GAAIuD,IAAA,EAAMX,SAAA,CAAU;OAAA;MAAA;MAAA9C,aAAA,GAAAE,CAAA;MACtDuB,qBAAA,GAAwBqB,SAAA;IAC1B;IAAA;IAAA;MAAA9C,aAAA,GAAA+C,CAAA;IAAA;EACF;EAEA;EAAA;EAAA/C,aAAA,GAAAE,CAAA;EACA,MAAMwD,gBAAA,GAAoBR,EAAA;IAAA;IAAAlD,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;IACxB0B,yBAAA,CAA0B6B,IAAA,IAAQ;MAAA;MAAAzD,aAAA,GAAAI,CAAA;MAAAJ,aAAA,GAAAE,CAAA;MAAA,OAAAuD,IAAA,CAAKZ,MAAM,CAACc,CAAA,IAAK;QAAA;QAAA3D,aAAA,GAAAI,CAAA;QAAAJ,aAAA,GAAAE,CAAA;QAAA,OAAAyD,CAAA,CAAET,EAAE,KAAKA,EAAA;MAAA;IAAA;IAAA;IAAAlD,aAAA,GAAAE,CAAA;IAC5DwB,kBAAA,GAAqBwB,EAAA;EACvB;EAEA;EAAA;EAAAlD,aAAA,GAAAE,CAAA;EACA,MAAM0D,iBAAA,GAAoBA,CACxBd,SAAA,EACAe,OAAA;IAAA;IAAA7D,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;IAEA,OAAO,2BAAAF,aAAA,GAAA+C,CAAA,WAAAD,SAAC,CAAUgB,QAAQ,CAASD,OAAA,CAAQ;IAAA;IAAA,CAAA7D,aAAA,GAAA+C,CAAA,WAAI;EACjD;EAEA;EAAA;EAAA/C,aAAA,GAAAE,CAAA;EACA,MAAM6D,aAAA,GAAgBA,CAACC,KAAA,EAAehD,IAAA;IAAA;IAAAhB,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;IACpC,QAAQc,IAAA;MACN,KAAK;QAAA;QAAAhB,aAAA,GAAA+C,CAAA;QAAA/C,aAAA,GAAAE,CAAA;QACH,OAAO,GAAG8D,KAAA,GAAQ;MACpB,KAAK;QAAA;QAAAhE,aAAA,GAAA+C,CAAA;QAAA/C,aAAA,GAAAE,CAAA;QACH,OAAO8D,KAAA,CAAMC,OAAO,CAAC;MACvB,KAAK;QAAA;QAAAjE,aAAA,GAAA+C,CAAA;QAAA/C,aAAA,GAAAE,CAAA;QACH,OAAO,GAAG8D,KAAA,GAAQ;MACpB;QAAA;QAAAhE,aAAA,GAAA+C,CAAA;QAAA/C,aAAA,GAAAE,CAAA;QACE,OAAO8D,KAAA,CAAME,QAAQ;IACzB;EACF;EAEA;EAAA;EAAAlE,aAAA,GAAAE,CAAA;EACA,MAAMiE,mBAAA,GAAuBC,SAAA;IAAA;IAAApE,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;IAC3B,QAAQkE,SAAA;MACN,KAAK;QAAA;QAAApE,aAAA,GAAA+C,CAAA;QAAA/C,aAAA,GAAAE,CAAA;QACH,oBAAO,IAAAS,WAAA,CAAAC,GAAA,EAACC,YAAA,CAAAK,UAAU;UAACH,SAAA,EAAU;;MAC/B,KAAK;QAAA;QAAAf,aAAA,GAAA+C,CAAA;QAAA/C,aAAA,GAAAE,CAAA;QACH,oBAAO,IAAAS,WAAA,CAAAC,GAAA,EAACC,YAAA,CAAAwD,YAAY;UAACtD,SAAA,EAAU;;MACjC;QAAA;QAAAf,aAAA,GAAA+C,CAAA;QAAA/C,aAAA,GAAAE,CAAA;QACE,oBAAO,IAAAS,WAAA,CAAAC,GAAA,EAACC,YAAA,CAAAyD,KAAK;UAACvD,SAAA,EAAU;;IAC5B;EACF;EAEA;EAAA;EAAAf,aAAA,GAAAE,CAAA;EACA,MAAMqE,oBAAA,GAAuBA,CAAA;IAAA;IAAAvE,aAAA,GAAAI,CAAA;IAAAJ,aAAA,GAAAE,CAAA;IAC3B,OAAOyB,sBAAA,CAAuB6C,GAAG,CAAC1B,SAAA;MAAA;MAAA9C,aAAA,GAAAI,CAAA;MAChC,MAAMqE,KAAA;MAAA;MAAA,CAAAzE,aAAA,GAAAE,CAAA,QAAa;QACjBO,IAAA,EAAMqC,SAAA,CAAUrC,IAAI,CAACiE,KAAK,CAAC,IAAI,CAAC,EAAE;QAClCC,YAAA,EAAc7B,SAAA,CAAUrC;MAC1B;MAAA;MAAAT,aAAA,GAAAE,CAAA;MAEA6B,YAAA,CAAaE,kBAAkB,CAAC2C,OAAO,CAACf,OAAA;QAAA;QAAA7D,aAAA,GAAAI,CAAA;QAAAJ,aAAA,GAAAE,CAAA;QACtCuE,KAAK,CAACZ,OAAA,CAAQ,GAAGD,iBAAA,CAAkBd,SAAA,EAAWe,OAAA;MAChD;MAAA;MAAA7D,aAAA,GAAAE,CAAA;MAEA,OAAOuE,KAAA;IACT;EACF;EAEA;EAAA;EAAAzE,aAAA,GAAAE,CAAA;EACA,MAAM2E,kBAAA,GAAqBA,CAAA;IAAA;IAAA7E,aAAA,GAAAI,CAAA;IACzB,MAAM0D,QAAA;IAAA;IAAA,CAAA9D,aAAA,GAAAE,CAAA,QAAW6B,YAAA,CAAaE,kBAAkB,CAACuC,GAAG,CAAChE,GAAA;MAAA;MAAAR,aAAA,GAAAI,CAAA;MACnD,MAAMyD,OAAA;MAAA;MAAA,CAAA7D,aAAA,GAAAE,CAAA,QAAUK,oBAAA,CAAqByC,IAAI,CAAC8B,CAAA,IAAK;QAAA;QAAA9E,aAAA,GAAAI,CAAA;QAAAJ,aAAA,GAAAE,CAAA;QAAA,OAAA4E,CAAA,CAAEtE,GAAG,KAAKA,GAAA;MAAA;MAAA;MAAAR,aAAA,GAAAE,CAAA;MACzD,OAAO,2BAAAF,aAAA,GAAA+C,CAAA,WAAAc,OAAA,EAASpD,IAAA;MAAA;MAAA,CAAAT,aAAA,GAAA+C,CAAA,WAAQvC,GAAA;IAC1B;IAAA;IAAAR,aAAA,GAAAE,CAAA;IAEA,OAAO4D,QAAA,CAASU,GAAG,CAACX,OAAA;MAAA;MAAA7D,aAAA,GAAAI,CAAA;MAClB,MAAMqE,KAAA;MAAA;MAAA,CAAAzE,aAAA,GAAAE,CAAA,QAAa;QAAE2D;MAAQ;MAAA;MAAA7D,aAAA,GAAAE,CAAA;MAE7ByB,sBAAA,CAAuBiD,OAAO,CAAC9B,SAAA;QAAA;QAAA9C,aAAA,GAAAI,CAAA;QAC7B,MAAMI,GAAA;QAAA;QAAA,CAAAR,aAAA,GAAAE,CAAA,QAAM6B,YAAA,CAAaE,kBAAkB,CAACe,IAAI,CAAC+B,CAAA;UAAA;UAAA/E,aAAA,GAAAI,CAAA;UAC/C,MAAM0E,CAAA;UAAA;UAAA,CAAA9E,aAAA,GAAAE,CAAA,QAAIK,oBAAA,CAAqByC,IAAI,CAACgC,GAAA,IAAO;YAAA;YAAAhF,aAAA,GAAAI,CAAA;YAAAJ,aAAA,GAAAE,CAAA;YAAA,OAAA8E,GAAA,CAAIxE,GAAG,KAAKuE,CAAA;UAAA;UAAA;UAAA/E,aAAA,GAAAE,CAAA;UACvD,OAAO4E,CAAA,EAAGrE,IAAA,KAASoD,OAAA;QACrB;QAAA;QAAA7D,aAAA,GAAAE,CAAA;QAEA,IAAIM,GAAA,EAAK;UAAA;UAAAR,aAAA,GAAA+C,CAAA;UAAA/C,aAAA,GAAAE,CAAA;UACPuE,KAAK,CAAC3B,SAAA,CAAUrC,IAAI,CAACiE,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,GAAGd,iBAAA,CACpCd,SAAA,EACAtC,GAAA;QAEJ;QAAA;QAAA;UAAAR,aAAA,GAAA+C,CAAA;QAAA;MACF;MAAA;MAAA/C,aAAA,GAAAE,CAAA;MAEA,OAAOuE,KAAA;IACT;EACF;EAEA;EAAA;EAAAzE,aAAA,GAAAE,CAAA;EACA,MAAM+E,iBAAA,GAAoBA,CAAA;IAAA;IAAAjF,aAAA,GAAAI,CAAA;IACxB,MAAMqE,KAAA;IAAA;IAAA,CAAAzE,aAAA,GAAAE,CAAA,QAAQqE,oBAAA;IACd,MAAMW,KAAA;IAAA;IAAA,CAAAlF,aAAA,GAAAE,CAAA,QAAQ,CACZ,WACA,WACA,WACA,WACA,WACA,UACD;IAAA;IAAAF,aAAA,GAAAE,CAAA;IAED,QAAQ6B,YAAA,CAAaG,gBAAgB;MACnC,KAAK;QAAA;QAAAlC,aAAA,GAAA+C,CAAA;QAAA/C,aAAA,GAAAE,CAAA;QACH,oBACE,IAAAS,WAAA,CAAAC,GAAA,EAACuE,SAAA,CAAAC,mBAAmB;UAACC,KAAA,EAAM;UAAOC,MAAA,EAAQ;oBACxC,iBAAA3E,WAAA,CAAA4E,IAAA,EAACJ,SAAA,CAAAK,QAAQ;YAACC,IAAA,EAAMhB,KAAA;oCACd,IAAA9D,WAAA,CAAAC,GAAA,EAACuE,SAAA,CAAAO,aAAa;cAACC,eAAA,EAAgB;6BAC/B,IAAAhF,WAAA,CAAAC,GAAA,EAACuE,SAAA,CAAAS,KAAK;cAACC,OAAA,EAAQ;6BACf,IAAAlF,WAAA,CAAAC,GAAA,EAACuE,SAAA,CAAAW,KAAK,O,aACN,IAAAnF,WAAA,CAAAC,GAAA,EAACuE,SAAA,CAAAY,OAAO;cACNC,cAAA,EAAgBC,KAAA;gBAAA;gBAAAjG,aAAA,GAAAI,CAAA;gBACd,MAAM0C,SAAA;gBAAA;gBAAA,CAAA9C,aAAA,GAAAE,CAAA,SAAYyB,sBAAA,CAAuBqB,IAAI,CAC3CW,CAAA,IAAK;kBAAA;kBAAA3D,aAAA,GAAAI,CAAA;kBAAAJ,aAAA,GAAAE,CAAA;kBAAA,OAAAyD,CAAA,CAAElD,IAAI,CAACiE,KAAK,CAAC,IAAI,CAAC,EAAE,KAAKuB,KAAA;gBAAA;gBAAA;gBAAAjG,aAAA,GAAAE,CAAA;gBAEhC,OAAO,2BAAAF,aAAA,GAAA+C,CAAA,WAAAD,SAAA,EAAWrC,IAAA;gBAAA;gBAAA,CAAAT,aAAA,GAAA+C,CAAA,WAAQkD,KAAA;cAC5B;6BAEF,IAAAtF,WAAA,CAAAC,GAAA,EAACuE,SAAA,CAAAe,MAAM,OACNnE,YAAA,CAAaE,kBAAkB,CAACuC,GAAG,CAAC,CAACX,OAAA,EAASsC,KAAA;cAAA;cAAAnG,aAAA,GAAAI,CAAA;cAC7C,MAAMgG,WAAA;cAAA;cAAA,CAAApG,aAAA,GAAAE,CAAA,SAAcK,oBAAA,CAAqByC,IAAI,CAC3C8B,CAAA,IAAK;gBAAA;gBAAA9E,aAAA,GAAAI,CAAA;gBAAAJ,aAAA,GAAAE,CAAA;gBAAA,OAAA4E,CAAA,CAAEtE,GAAG,KAAKqD,OAAA;cAAA;cAAA;cAAA7D,aAAA,GAAAE,CAAA;cAEjB,oBACE,IAAAS,WAAA,CAAAC,GAAA,EAACuE,SAAA,CAAAkB,GAAG;gBAEFR,OAAA,EAAShC,OAAA;gBACTyC,IAAA,EAAMpB,KAAK,CAACiB,KAAA,GAAQjB,KAAA,CAAM1B,MAAM,CAAC;gBACjC+C,IAAA;gBAAM;gBAAA,CAAAvG,aAAA,GAAA+C,CAAA,WAAAqD,WAAA,EAAa3F,IAAA;gBAAA;gBAAA,CAAAT,aAAA,GAAA+C,CAAA,WAAQc,OAAA;iBAHtBA,OAAA;YAMX;;;MAKR,KAAK;QAAA;QAAA7D,aAAA,GAAA+C,CAAA;QACH,MAAMyD,UAAA;QAAA;QAAA,CAAAxG,aAAA,GAAAE,CAAA,SAAa2E,kBAAA;QAAA;QAAA7E,aAAA,GAAAE,CAAA;QACnB,oBACE,IAAAS,WAAA,CAAAC,GAAA,EAACuE,SAAA,CAAAC,mBAAmB;UAACC,KAAA,EAAM;UAAOC,MAAA,EAAQ;oBACxC,iBAAA3E,WAAA,CAAA4E,IAAA,EAACJ,SAAA,CAAAsB,UAAU;YAAChB,IAAA,EAAMe,UAAA;oCAChB,IAAA7F,WAAA,CAAAC,GAAA,EAACuE,SAAA,CAAAuB,SAAS,O,aACV,IAAA/F,WAAA,CAAAC,GAAA,EAACuE,SAAA,CAAAwB,cAAc;cAACd,OAAA,EAAQ;6BACxB,IAAAlF,WAAA,CAAAC,GAAA,EAACuE,SAAA,CAAAyB,eAAe,OACfjF,sBAAA,CAAuB6C,GAAG,CAAC,CAAC1B,SAAA,EAAWqD,KAAA,KACtC;cAAA;cAAAnG,aAAA,GAAAI,CAAA;cAAAJ,aAAA,GAAAE,CAAA;cAAA,OADsC,aACtC,IAAAS,WAAA,CAAAC,GAAA,EAACuE,SAAA,CAAA0B,KAAK;gBAEJN,IAAA,EAAMzD,SAAA,CAAUrC,IAAI,CAACiE,KAAK,CAAC,IAAI,CAAC,EAAE;gBAClCmB,OAAA,EAAS/C,SAAA,CAAUrC,IAAI,CAACiE,KAAK,CAAC,IAAI,CAAC,EAAE;gBACrCoC,MAAA,EAAQ5B,KAAK,CAACiB,KAAA,GAAQjB,KAAA,CAAM1B,MAAM,CAAC;gBACnC8C,IAAA,EAAMpB,KAAK,CAACiB,KAAA,GAAQjB,KAAA,CAAM1B,MAAM,CAAC;gBACjCuD,WAAA,EAAa;iBALRjE,SAAA,CAAUI,EAAE;YAAA,I,aAQrB,IAAAvC,WAAA,CAAAC,GAAA,EAACuE,SAAA,CAAAe,MAAM;;;MAKf,KAAK;QAAA;QAAAlG,aAAA,GAAA+C,CAAA;QAAA/C,aAAA,GAAAE,CAAA;QACH,oBACE,IAAAS,WAAA,CAAAC,GAAA,EAACuE,SAAA,CAAAC,mBAAmB;UAACC,KAAA,EAAM;UAAOC,MAAA,EAAQ;oBACxC,iBAAA3E,WAAA,CAAA4E,IAAA,EAACJ,SAAA,CAAA6B,SAAS;YAACvB,IAAA,EAAMhB,KAAA;oCACf,IAAA9D,WAAA,CAAAC,GAAA,EAACuE,SAAA,CAAAO,aAAa;cAACC,eAAA,EAAgB;6BAC/B,IAAAhF,WAAA,CAAAC,GAAA,EAACuE,SAAA,CAAAS,KAAK;cAACC,OAAA,EAAQ;6BACf,IAAAlF,WAAA,CAAAC,GAAA,EAACuE,SAAA,CAAAW,KAAK,O,aACN,IAAAnF,WAAA,CAAAC,GAAA,EAACuE,SAAA,CAAAY,OAAO;cACNC,cAAA,EAAgBC,KAAA;gBAAA;gBAAAjG,aAAA,GAAAI,CAAA;gBACd,MAAM0C,SAAA;gBAAA;gBAAA,CAAA9C,aAAA,GAAAE,CAAA,SAAYyB,sBAAA,CAAuBqB,IAAI,CAC3CW,CAAA,IAAK;kBAAA;kBAAA3D,aAAA,GAAAI,CAAA;kBAAAJ,aAAA,GAAAE,CAAA;kBAAA,OAAAyD,CAAA,CAAElD,IAAI,CAACiE,KAAK,CAAC,IAAI,CAAC,EAAE,KAAKuB,KAAA;gBAAA;gBAAA;gBAAAjG,aAAA,GAAAE,CAAA;gBAEhC,OAAO,2BAAAF,aAAA,GAAA+C,CAAA,WAAAD,SAAA,EAAWrC,IAAA;gBAAA;gBAAA,CAAAT,aAAA,GAAA+C,CAAA,WAAQkD,KAAA;cAC5B;6BAEF,IAAAtF,WAAA,CAAAC,GAAA,EAACuE,SAAA,CAAAe,MAAM,OACNnE,YAAA,CAAaE,kBAAkB,CAACuC,GAAG,CAAC,CAACX,OAAA,EAASsC,KAAA;cAAA;cAAAnG,aAAA,GAAAI,CAAA;cAC7C,MAAMgG,WAAA;cAAA;cAAA,CAAApG,aAAA,GAAAE,CAAA,SAAcK,oBAAA,CAAqByC,IAAI,CAC3C8B,CAAA,IAAK;gBAAA;gBAAA9E,aAAA,GAAAI,CAAA;gBAAAJ,aAAA,GAAAE,CAAA;gBAAA,OAAA4E,CAAA,CAAEtE,GAAG,KAAKqD,OAAA;cAAA;cAAA;cAAA7D,aAAA,GAAAE,CAAA;cAEjB,oBACE,IAAAS,WAAA,CAAAC,GAAA,EAACuE,SAAA,CAAA8B,IAAI;gBAEHC,IAAA,EAAK;gBACLrB,OAAA,EAAShC,OAAA;gBACTiD,MAAA,EAAQ5B,KAAK,CAACiB,KAAA,GAAQjB,KAAA,CAAM1B,MAAM,CAAC;gBACnC+C,IAAA;gBAAM;gBAAA,CAAAvG,aAAA,GAAA+C,CAAA,WAAAqD,WAAA,EAAa3F,IAAA;gBAAA;gBAAA,CAAAT,aAAA,GAAA+C,CAAA,WAAQc,OAAA;gBAC3BsD,WAAA,EAAa;iBALRtD,OAAA;YAQX;;;MAKR;QAAA;QAAA7D,aAAA,GAAA+C,CAAA;QAAA/C,aAAA,GAAAE,CAAA;QACE,oBACE,IAAAS,WAAA,CAAAC,GAAA,EAAC;UAAIG,SAAA,EAAU;oBAAiC;;IAItD;EACF;EAAA;EAAAf,aAAA,GAAAE,CAAA;EAEA,oBACE,IAAAS,WAAA,CAAA4E,IAAA,EAAC;IAAIxE,SAAA,EAAW,IAAAqG,MAAA,CAAAC,EAAE,EAAC,aAAatG,SAAA;4BAE9B,IAAAJ,WAAA,CAAA4E,IAAA,EAAC+B,KAAA,CAAAC,IAAI;8BACH,IAAA5G,WAAA,CAAA4E,IAAA,EAAC+B,KAAA,CAAAE,UAAU;gCACT,IAAA7G,WAAA,CAAA4E,IAAA,EAAC+B,KAAA,CAAAG,SAAS;UAAC1G,SAAA,EAAU;kCACnB,IAAAJ,WAAA,CAAAC,GAAA,EAACC,YAAA,CAAAQ,KAAK;YAACN,SAAA,EAAU;2BACjB,IAAAJ,WAAA,CAAAC,GAAA,EAAC;sBAAK;;yBAER,IAAAD,WAAA,CAAAC,GAAA,EAAC0G,KAAA,CAAAI,eAAe;oBAAC;;uBAInB,IAAA/G,WAAA,CAAAC,GAAA,EAAC0G,KAAA,CAAAK,WAAW;kBAEV,iBAAAhH,WAAA,CAAA4E,IAAA,EAAC;UAAIxE,SAAA,EAAU;kCACb,IAAAJ,WAAA,CAAA4E,IAAA,EAAC;YAAIxE,SAAA,EAAU;oCACb,IAAAJ,WAAA,CAAA4E,IAAA,EAAC;cAAIxE,SAAA,EAAU;sCACb,IAAAJ,WAAA,CAAAC,GAAA,EAACC,YAAA,CAAA+G,MAAM;gBAAC7G,SAAA,EAAU;+BAClB,IAAAJ,WAAA,CAAAC,GAAA,EAACiH,MAAA,CAAAC,KAAK;gBACJC,WAAA,EAAY;gBACZC,KAAA,EAAOxF,UAAA;gBACPyF,QAAA,EAAUC,CAAA,IAAK;kBAAA;kBAAAlI,aAAA,GAAAI,CAAA;kBAAAJ,aAAA,GAAAE,CAAA;kBAAA,OAAAuC,aAAA,CAAcyF,CAAA,CAAEC,MAAM,CAACH,KAAK;gBAAA;gBAC3CjH,SAAA,EAAU;;6BAGd,IAAAJ,WAAA,CAAA4E,IAAA,EAAC6C,OAAA,CAAAC,MAAM;cACLC,OAAA,EAAQ;cACRC,OAAA,EAASA,CAAA,KAAM;gBAAA;gBAAAvI,aAAA,GAAAI,CAAA;gBAAAJ,aAAA,GAAAE,CAAA;gBAAA,OAAAyC,iBAAA,CAAkB,CAACD,cAAA;cAAA;sCAElC,IAAA/B,WAAA,CAAAC,GAAA,EAACC,YAAA,CAAA2H,MAAM;gBAACzH,SAAA,EAAU;kBAAiB;;;UAMtC;UAAA,CAAAf,aAAA,GAAA+C,CAAA,WAAAP,UAAA;UAAA;UAAA,CAAAxC,aAAA,GAAA+C,CAAA,wBACC,IAAApC,WAAA,CAAA4E,IAAA,EAAC;YAAIxE,SAAA,EAAU;oCACb,IAAAJ,WAAA,CAAAC,GAAA,EAAC;cAAIG,SAAA,EAAU;wBAA2B;6BAG1C,IAAAJ,WAAA,CAAA4E,IAAA,EAAC;cAAIxE,SAAA,EAAU;yBACZ6B,qBAAA,CAAsB6F,KAAK,CAAC,GAAG,GAAGjE,GAAG,CAAC1B,SAAA,IACrC;gBAAA;gBAAA9C,aAAA,GAAAI,CAAA;gBAAAJ,aAAA,GAAAE,CAAA;gBAAA,OADqC,aACrC,IAAAS,WAAA,CAAA4E,IAAA,EAAC;kBAECxE,SAAA,EAAU;kBACVwH,OAAA,EAASA,CAAA,KAAM;oBAAA;oBAAAvI,aAAA,GAAAI,CAAA;oBAAAJ,aAAA,GAAAE,CAAA;oBAAA,OAAAqD,kBAAA,CAAmBT,SAAA;kBAAA;0CAElC,IAAAnC,WAAA,CAAA4E,IAAA,EAAC;oBAAIxE,SAAA,EAAU;4CACb,IAAAJ,WAAA,CAAAC,GAAA,EAAC;sBAAIG,SAAA,EAAU;gCACb,iBAAAJ,WAAA,CAAAC,GAAA,EAAC;wBAAKG,SAAA,EAAU;kCACb+B,SAAA,CAAUrC,IAAI,CAACiI,MAAM,CAAC;;qCAG3B,IAAA/H,WAAA,CAAA4E,IAAA,EAAC;8CACC,IAAA5E,WAAA,CAAAC,GAAA,EAAC;wBAAIG,SAAA,EAAU;kCACZ+B,SAAA,CAAUrC;uCAEb,IAAAE,WAAA,CAAA4E,IAAA,EAAC;wBAAIxE,SAAA,EAAU;mCACZ+B,SAAA,CAAUQ,KAAK,EAAC,OAAIR,SAAA,CAAU6F,KAAK;;;mCAI1C,IAAAhI,WAAA,CAAAC,GAAA,EAACC,YAAA,CAAA+H,IAAI;oBAAC7H,SAAA,EAAU;;mBAnBX+B,SAAA,CAAUI,EAAE;cAAA;cAsBpB;cAAA,CAAAlD,aAAA,GAAA+C,CAAA,WAAAH,qBAAA,CAAsBY,MAAM,KAAK;cAAA;cAAA,CAAAxD,aAAA,GAAA+C,CAAA,wBAChC,IAAApC,WAAA,CAAAC,GAAA,EAAC;gBAAIG,SAAA,EAAU;0BAAyC;;;;;;;IAYrE;IAAA,CAAAf,aAAA,GAAA+C,CAAA,WAAApB,sBAAA,CAAuB6B,MAAM,GAAG;IAAA;IAAA,CAAAxD,aAAA,GAAA+C,CAAA,wBAC/B,IAAApC,WAAA,CAAA4E,IAAA,EAAC+B,KAAA,CAAAC,IAAI;8BACH,IAAA5G,WAAA,CAAAC,GAAA,EAAC0G,KAAA,CAAAE,UAAU;kBACT,iBAAA7G,WAAA,CAAA4E,IAAA,EAAC+B,KAAA,CAAAG,SAAS;UAAC1G,SAAA,EAAU;qBAAU,6BACHY,sBAAA,CAAuB6B,MAAM,EAAC;;uBAG5D,IAAA7C,WAAA,CAAAC,GAAA,EAAC0G,KAAA,CAAAK,WAAW;kBACV,iBAAAhH,WAAA,CAAAC,GAAA,EAAC;UAAIG,SAAA,EAAU;oBACZY,sBAAA,CAAuB6C,GAAG,CAAC1B,SAAA,IAC1B;YAAA;YAAA9C,aAAA,GAAAI,CAAA;YAAAJ,aAAA,GAAAE,CAAA;YAAA,OAD0B,aAC1B,IAAAS,WAAA,CAAA4E,IAAA,EAAC;cAECxE,SAAA,EAAU;sCAEV,IAAAJ,WAAA,CAAAC,GAAA,EAACwH,OAAA,CAAAC,MAAM;gBACLC,OAAA,EAAQ;gBACRO,IAAA,EAAK;gBACL9H,SAAA,EAAU;gBACVwH,OAAA,EAASA,CAAA,KAAM;kBAAA;kBAAAvI,aAAA,GAAAI,CAAA;kBAAAJ,aAAA,GAAAE,CAAA;kBAAA,OAAAwD,gBAAA,CAAiBZ,SAAA,CAAUI,EAAE;gBAAA;0BAE5C,iBAAAvC,WAAA,CAAAC,GAAA,EAACC,YAAA,CAAAiI,CAAC;kBAAC/H,SAAA,EAAU;;+BAGf,IAAAJ,WAAA,CAAA4E,IAAA,EAAC;gBAAIxE,SAAA,EAAU;wCACb,IAAAJ,WAAA,CAAAC,GAAA,EAAC;kBAAIG,SAAA,EAAU;4BACb,iBAAAJ,WAAA,CAAAC,GAAA,EAAC;oBAAKG,SAAA,EAAU;8BACb+B,SAAA,CAAUrC,IAAI,CAACiI,MAAM,CAAC;;iCAG3B,IAAA/H,WAAA,CAAA4E,IAAA,EAAC;0CACC,IAAA5E,WAAA,CAAAC,GAAA,EAAC;oBAAIG,SAAA,EAAU;8BAAe+B,SAAA,CAAUrC;mCACxC,IAAAE,WAAA,CAAAC,GAAA,EAAC;oBAAIG,SAAA,EAAU;8BACZ+B,SAAA,CAAUQ;;;+BAKjB,IAAA3C,WAAA,CAAA4E,IAAA,EAAC;gBAAIxE,SAAA,EAAU;wCACb,IAAAJ,WAAA,CAAA4E,IAAA,EAAC;kBAAIxE,SAAA,EAAU;0CACb,IAAAJ,WAAA,CAAAC,GAAA,EAAC;oBAAKG,SAAA,EAAU;8BAAwB;mCACxC,IAAAJ,WAAA,CAAA4E,IAAA,EAAC;oBAAIxE,SAAA,EAAU;4CACb,IAAAJ,WAAA,CAAAC,GAAA,EAAC;sBAAKG,SAAA,EAAU;gCACb+B,SAAA,CAAUgB,QAAQ,CAACiF,cAAc,CAAC9E,OAAO,CAAC;;oBAE5C;oBAAA,CAAAjE,aAAA,GAAA+C,CAAA,WAAAhB,YAAA,CAAaM,iBAAiB;oBAAA;oBAAA,CAAArC,aAAA,GAAA+C,CAAA,WAC7BoB,mBAAA,CAAoBrB,SAAA,CAAUkG,UAAU,CAACC,SAAS;;iCAGxD,IAAAtI,WAAA,CAAA4E,IAAA,EAAC;kBAAIxE,SAAA,EAAU;0CACb,IAAAJ,WAAA,CAAAC,GAAA,EAAC;oBAAKG,SAAA,EAAU;8BAAwB;mCACxC,IAAAJ,WAAA,CAAA4E,IAAA,EAAC;oBAAIxE,SAAA,EAAU;4CACb,IAAAJ,WAAA,CAAAC,GAAA,EAAC;sBAAKG,SAAA,EAAU;gCACb+B,SAAA,CAAUgB,QAAQ,CAACoF;;oBAErB;oBAAA,CAAAlJ,aAAA,GAAA+C,CAAA,WAAAhB,YAAA,CAAaM,iBAAiB;oBAAA;oBAAA,CAAArC,aAAA,GAAA+C,CAAA,WAC7BoB,mBAAA,CAAoBrB,SAAA,CAAUkG,UAAU,CAACG,UAAU;;iCAGzD,IAAAxI,WAAA,CAAA4E,IAAA,EAAC;kBAAIxE,SAAA,EAAU;0CACb,IAAAJ,WAAA,CAAAC,GAAA,EAAC;oBAAKG,SAAA,EAAU;8BAAwB;mCAGxC,IAAAJ,WAAA,CAAA4E,IAAA,EAAC;oBAAIxE,SAAA,EAAU;4CACb,IAAAJ,WAAA,CAAA4E,IAAA,EAAC;sBAAKxE,SAAA,EAAU;iCACb+B,SAAA,CAAUgB,QAAQ,CAACsF,aAAa,EAAC;;oBAEnC;oBAAA,CAAApJ,aAAA,GAAA+C,CAAA,WAAAhB,YAAA,CAAaM,iBAAiB;oBAAA;oBAAA,CAAArC,aAAA,GAAA+C,CAAA,WAC7BoB,mBAAA,CACErB,SAAA,CAAUkG,UAAU,CAACI,aAAa;;;+BAM5C,IAAAzI,WAAA,CAAAC,GAAA,EAACyI,MAAA,CAAAC,KAAK;gBACJhB,OAAA,EACExF,SAAA,CAAUyG,MAAM,KAAK;gBAAA;gBAAA,CAAAvJ,aAAA,GAAA+C,CAAA,WAAU;gBAAA;gBAAA,CAAA/C,aAAA,GAAA+C,CAAA,WAAY;gBAE7ChC,SAAA,EAAU;0BAET+B,SAAA,CAAUyG;;eArERzG,SAAA,CAAUI,EAAE;UAAA;;;;IA+E5B;IAAA,CAAAlD,aAAA,GAAA+C,CAAA,WAAApB,sBAAA,CAAuB6B,MAAM,GAAG;IAAA;IAAA,CAAAxD,aAAA,GAAA+C,CAAA,wBAC/B,IAAApC,WAAA,CAAA4E,IAAA,EAAC+B,KAAA,CAAAC,IAAI;8BACH,IAAA5G,WAAA,CAAAC,GAAA,EAAC0G,KAAA,CAAAE,UAAU;kBACT,iBAAA7G,WAAA,CAAAC,GAAA,EAAC0G,KAAA,CAAAG,SAAS;UAAC1G,SAAA,EAAU;oBAAU;;uBAIjC,IAAAJ,WAAA,CAAA4E,IAAA,EAAC+B,KAAA,CAAAK,WAAW;QAAC5G,SAAA,EAAU;gCAErB,IAAAJ,WAAA,CAAA4E,IAAA,EAAC;UAAIxE,SAAA,EAAU;kCACb,IAAAJ,WAAA,CAAAC,GAAA,EAAC4I,MAAA,CAAAC,KAAK;YAAC1I,SAAA,EAAU;sBAAsB;2BAGvC,IAAAJ,WAAA,CAAAC,GAAA,EAAC;YAAIG,SAAA,EAAU;sBACZR,oBAAA,CAAqBiE,GAAG,CAACX,OAAA,IACxB;cAAA;cAAA7D,aAAA,GAAAI,CAAA;cAAAJ,aAAA,GAAAE,CAAA;cAAA,OADwB,aACxB,IAAAS,WAAA,CAAA4E,IAAA,EAAC;gBAECxE,SAAA,EAAU;wCAEV,IAAAJ,WAAA,CAAAC,GAAA,EAAC8I,SAAA,CAAAC,QAAQ;kBACPzG,EAAA,EAAIW,OAAA,CAAQrD,GAAG;kBACfoJ,OAAA,EAAS7H,YAAA,CAAaE,kBAAkB,CAACmB,QAAQ,CAC/CS,OAAA,CAAQrD,GAAG;kBAEbqJ,eAAA,EAAiBD,OAAA;oBAAA;oBAAA5J,aAAA,GAAAI,CAAA;oBAAAJ,aAAA,GAAAE,CAAA;oBACf,IAAI0J,OAAA,EAAS;sBAAA;sBAAA5J,aAAA,GAAA+C,CAAA;sBAAA/C,aAAA,GAAAE,CAAA;sBACX8B,eAAA,CAAgByB,IAAA,IAAS;wBAAA;wBAAAzD,aAAA,GAAAI,CAAA;wBAAAJ,aAAA,GAAAE,CAAA;wBAAA;0BACvB,GAAGuD,IAAI;0BACPxB,kBAAA,EAAoB,C,GACfwB,IAAA,CAAKxB,kBAAkB,EAC1B4B,OAAA,CAAQrD,GAAG;wBAEf;sBAAA;oBACF,OAAO;sBAAA;sBAAAR,aAAA,GAAA+C,CAAA;sBAAA/C,aAAA,GAAAE,CAAA;sBACL8B,eAAA,CAAgByB,IAAA,IAAS;wBAAA;wBAAAzD,aAAA,GAAAI,CAAA;wBAAAJ,aAAA,GAAAE,CAAA;wBAAA;0BACvB,GAAGuD,IAAI;0BACPxB,kBAAA,EAAoBwB,IAAA,CAAKxB,kBAAkB,CAACY,MAAM,CAChDiC,CAAA,IAAK;4BAAA;4BAAA9E,aAAA,GAAAI,CAAA;4BAAAJ,aAAA,GAAAE,CAAA;4BAAA,OAAA4E,CAAA,KAAMjB,OAAA,CAAQrD,GAAG;0BAAH,CAAG;wBAE1B;sBAAA;oBACF;kBACF;iCAEF,IAAAG,WAAA,CAAA4E,IAAA,EAACiE,MAAA,CAAAC,KAAK;kBACJK,OAAA,EAASjG,OAAA,CAAQrD,GAAG;kBACpBO,SAAA,EAAU;6BAET8C,OAAA,CAAQnD,KAAK,E,aACd,IAAAC,WAAA,CAAAC,GAAA,EAAC;8BAAMiD,OAAA,CAAQpD;;;iBAhCZoD,OAAA,CAAQrD,GAAG;YAAA;;yBAwCxB,IAAAG,WAAA,CAAA4E,IAAA,EAAC;UAAIxE,SAAA,EAAU;kCACb,IAAAJ,WAAA,CAAA4E,IAAA,EAAC;YAAIxE,SAAA,EAAU;oCACb,IAAAJ,WAAA,CAAAC,GAAA,EAAC4I,MAAA,CAAAC,KAAK;cAAC1I,SAAA,EAAU;wBAAsB;6BAGvC,IAAAJ,WAAA,CAAA4E,IAAA,EAACwE,OAAA,CAAAC,MAAM;cACLhC,KAAA,EAAOjG,YAAA,CAAaG,gBAAgB;cACpC+H,aAAA,EAAejG,KAAA,IACb;gBAAA;gBAAAhE,aAAA,GAAAI,CAAA;gBAAAJ,aAAA,GAAAE,CAAA;gBAAA,OAAA8B,eAAA,CAAgByB,IAAA,IAAS;kBAAA;kBAAAzD,aAAA,GAAAI,CAAA;kBAAAJ,aAAA,GAAAE,CAAA;kBAAA;oBACvB,GAAGuD,IAAI;oBACPvB,gBAAA,EAAkB8B;kBACpB;gBAAA;cAAA;sCAGF,IAAArD,WAAA,CAAAC,GAAA,EAACmJ,OAAA,CAAAG,aAAa;0BACZ,iBAAAvJ,WAAA,CAAAC,GAAA,EAACmJ,OAAA,CAAAI,WAAW;+BAEd,IAAAxJ,WAAA,CAAA4E,IAAA,EAACwE,OAAA,CAAAK,aAAa;wCACZ,IAAAzJ,WAAA,CAAAC,GAAA,EAACmJ,OAAA,CAAAM,UAAU;kBAACrC,KAAA,EAAM;4BAAS;iCAC3B,IAAArH,WAAA,CAAAC,GAAA,EAACmJ,OAAA,CAAAM,UAAU;kBAACrC,KAAA,EAAM;4BAAQ;iCAC1B,IAAArH,WAAA,CAAAC,GAAA,EAACmJ,OAAA,CAAAM,UAAU;kBAACrC,KAAA,EAAM;4BAAQ;iCAC1B,IAAArH,WAAA,CAAAC,GAAA,EAACmJ,OAAA,CAAAM,UAAU;kBAACrC,KAAA,EAAM;4BAAS;;;;2BAKjC,IAAArH,WAAA,CAAA4E,IAAA,EAAC;YAAIxE,SAAA,EAAU;oCACb,IAAAJ,WAAA,CAAAC,GAAA,EAAC4I,MAAA,CAAAC,KAAK;cAAC1I,SAAA,EAAU;wBAAsB;6BACvC,IAAAJ,WAAA,CAAA4E,IAAA,EAACwE,OAAA,CAAAC,MAAM;cACLhC,KAAA,EAAOjG,YAAA,CAAaI,UAAU;cAC9B8H,aAAA,EAAejG,KAAA,IACb;gBAAA;gBAAAhE,aAAA,GAAAI,CAAA;gBAAAJ,aAAA,GAAAE,CAAA;gBAAA,OAAA8B,eAAA,CAAgByB,IAAA,IAAS;kBAAA;kBAAAzD,aAAA,GAAAI,CAAA;kBAAAJ,aAAA,GAAAE,CAAA;kBAAA;oBAAE,GAAGuD,IAAI;oBAAEtB,UAAA,EAAY6B;kBAAM;gBAAA;cAAA;sCAGxD,IAAArD,WAAA,CAAAC,GAAA,EAACmJ,OAAA,CAAAG,aAAa;0BACZ,iBAAAvJ,WAAA,CAAAC,GAAA,EAACmJ,OAAA,CAAAI,WAAW;+BAEd,IAAAxJ,WAAA,CAAAC,GAAA,EAACmJ,OAAA,CAAAK,aAAa;0BACX7J,oBAAA,CAAqBiE,GAAG,CAACX,OAAA,IACxB;kBAAA;kBAAA7D,aAAA,GAAAI,CAAA;kBAAAJ,aAAA,GAAAE,CAAA;kBAAA,OADwB,aACxB,IAAAS,WAAA,CAAAC,GAAA,EAACmJ,OAAA,CAAAM,UAAU;oBAAmBrC,KAAA,EAAOnE,OAAA,CAAQrD,GAAG;8BAC7CqD,OAAA,CAAQpD;qBADMoD,OAAA,CAAQrD,GAAG;gBAAA;;;;yBAUtC,IAAAG,WAAA,CAAA4E,IAAA,EAAC;UAAIxE,SAAA,EAAU;kCACb,IAAAJ,WAAA,CAAA4E,IAAA,EAAC;YAAIxE,SAAA,EAAU;oCACb,IAAAJ,WAAA,CAAAC,GAAA,EAAC8I,SAAA,CAAAC,QAAQ;cACPzG,EAAA,EAAG;cACH0G,OAAA,EAAS7H,YAAA,CAAaM,iBAAiB;cACvCwH,eAAA,EAAiBD,OAAA,IACf;gBAAA;gBAAA5J,aAAA,GAAAI,CAAA;gBAAAJ,aAAA,GAAAE,CAAA;gBAAA,OAAA8B,eAAA,CAAgByB,IAAA,IAAS;kBAAA;kBAAAzD,aAAA,GAAAI,CAAA;kBAAAJ,aAAA,GAAAE,CAAA;kBAAA;oBACvB,GAAGuD,IAAI;oBACPpB,iBAAA,EAAmB,CAAC,CAACuH;kBACvB;gBAAA;cAAA;6BAGJ,IAAAjJ,WAAA,CAAAC,GAAA,EAAC4I,MAAA,CAAAC,KAAK;cAACK,OAAA,EAAQ;cAAoB/I,SAAA,EAAU;wBAAU;;2BAKzD,IAAAJ,WAAA,CAAA4E,IAAA,EAAC;YAAIxE,SAAA,EAAU;oCACb,IAAAJ,WAAA,CAAAC,GAAA,EAAC8I,SAAA,CAAAC,QAAQ;cACPzG,EAAA,EAAG;cACH0G,OAAA,EAAS7H,YAAA,CAAaO,cAAc;cACpCuH,eAAA,EAAiBD,OAAA,IACf;gBAAA;gBAAA5J,aAAA,GAAAI,CAAA;gBAAAJ,aAAA,GAAAE,CAAA;gBAAA,OAAA8B,eAAA,CAAgByB,IAAA,IAAS;kBAAA;kBAAAzD,aAAA,GAAAI,CAAA;kBAAAJ,aAAA,GAAAE,CAAA;kBAAA;oBACvB,GAAGuD,IAAI;oBACPnB,cAAA,EAAgB,CAAC,CAACsH;kBACpB;gBAAA;cAAA;6BAGJ,IAAAjJ,WAAA,CAAAC,GAAA,EAAC4I,MAAA,CAAAC,KAAK;cAACK,OAAA,EAAQ;cAAiB/I,SAAA,EAAU;wBAAU;;2BAKtD,IAAAJ,WAAA,CAAA4E,IAAA,EAAC;YAAIxE,SAAA,EAAU;oCACb,IAAAJ,WAAA,CAAAC,GAAA,EAAC8I,SAAA,CAAAC,QAAQ;cACPzG,EAAA,EAAG;cACH0G,OAAA,EAAS7H,YAAA,CAAaQ,YAAY;cAClCsH,eAAA,EAAiBD,OAAA,IACf;gBAAA;gBAAA5J,aAAA,GAAAI,CAAA;gBAAAJ,aAAA,GAAAE,CAAA;gBAAA,OAAA8B,eAAA,CAAgByB,IAAA,IAAS;kBAAA;kBAAAzD,aAAA,GAAAI,CAAA;kBAAAJ,aAAA,GAAAE,CAAA;kBAAA;oBACvB,GAAGuD,IAAI;oBACPlB,YAAA,EAAc,CAAC,CAACqH;kBAClB;gBAAA;cAAA;6BAGJ,IAAAjJ,WAAA,CAAAC,GAAA,EAAC4I,MAAA,CAAAC,KAAK;cAACK,OAAA,EAAQ;cAAe/I,SAAA,EAAU;wBAAU;;2BAKpD,IAAAJ,WAAA,CAAA4E,IAAA,EAAC;YAAIxE,SAAA,EAAU;oCACb,IAAAJ,WAAA,CAAAC,GAAA,EAAC8I,SAAA,CAAAC,QAAQ;cACPzG,EAAA,EAAG;cACH0G,OAAA,EAAS7H,YAAA,CAAaK,cAAc;cACpCyH,eAAA,EAAiBD,OAAA,IACf;gBAAA;gBAAA5J,aAAA,GAAAI,CAAA;gBAAAJ,aAAA,GAAAE,CAAA;gBAAA,OAAA8B,eAAA,CAAgByB,IAAA,IAAS;kBAAA;kBAAAzD,aAAA,GAAAI,CAAA;kBAAAJ,aAAA,GAAAE,CAAA;kBAAA;oBACvB,GAAGuD,IAAI;oBACPrB,cAAA,EAAgB,CAAC,CAACwH;kBACpB;gBAAA;cAAA;6BAGJ,IAAAjJ,WAAA,CAAAC,GAAA,EAAC4I,MAAA,CAAAC,KAAK;cAACK,OAAA,EAAQ;cAAiB/I,SAAA,EAAU;wBAAU;;;;;;IAU7D;IAAA,CAAAf,aAAA,GAAA+C,CAAA,WAAApB,sBAAA,CAAuB6B,MAAM,GAAG;IAAA;IAAA,CAAAxD,aAAA,GAAA+C,CAAA,WAC/BhB,YAAA,CAAaE,kBAAkB,CAACuB,MAAM,GAAG;IAAA;IAAA,CAAAxD,aAAA,GAAA+C,CAAA,wBACvC,IAAApC,WAAA,CAAA4E,IAAA,EAAC+B,KAAA,CAAAC,IAAI;8BACH,IAAA5G,WAAA,CAAAC,GAAA,EAAC0G,KAAA,CAAAE,UAAU;kBACT,iBAAA7G,WAAA,CAAA4E,IAAA,EAAC+B,KAAA,CAAAG,SAAS;UAAC1G,SAAA,EAAU;kCACnB,IAAAJ,WAAA,CAAAC,GAAA,EAACC,YAAA,CAAAyJ,SAAS;YAACvJ,SAAA,EAAU;2BACrB,IAAAJ,WAAA,CAAAC,GAAA,EAAC;sBAAK;;;uBAGV,IAAAD,WAAA,CAAAC,GAAA,EAAC0G,KAAA,CAAAK,WAAW;kBACT5F,YAAA,CAAaG,gBAAgB,KAAK;QAAA;QAAA,CAAAlC,aAAA,GAAA+C,CAAA,WACjCkC,iBAAA;QAAA;QAAA,cAAAjF,aAAA,GAAA+C,CAAA,WAEA,IAAApC,WAAA,CAAAC,GAAA,EAAC;UAAIG,SAAA,EAAU;oBACb,iBAAAJ,WAAA,CAAA4E,IAAA,EAAC;YAAMxE,SAAA,EAAU;oCACf,IAAAJ,WAAA,CAAAC,GAAA,EAAC;wBACC,iBAAAD,WAAA,CAAA4E,IAAA,EAAC;gBAAGxE,SAAA,EAAU;wCACZ,IAAAJ,WAAA,CAAAC,GAAA,EAAC;kBAAGG,SAAA,EAAU;4BAAuC;oBAGpDgB,YAAA,CAAaE,kBAAkB,CAACuC,GAAG,CAACX,OAAA;kBAAA;kBAAA7D,aAAA,GAAAI,CAAA;kBACnC,MAAMgG,WAAA;kBAAA;kBAAA,CAAApG,aAAA,GAAAE,CAAA,SAAcK,oBAAA,CAAqByC,IAAI,CAC3C8B,CAAA,IAAK;oBAAA;oBAAA9E,aAAA,GAAAI,CAAA;oBAAAJ,aAAA,GAAAE,CAAA;oBAAA,OAAA4E,CAAA,CAAEtE,GAAG,KAAKqD,OAAA;kBAAA;kBAAA;kBAAA7D,aAAA,GAAAE,CAAA;kBAEjB,oBACE,IAAAS,WAAA,CAAAC,GAAA,EAAC;oBAECG,SAAA,EAAU;8BAEV,iBAAAJ,WAAA,CAAA4E,IAAA,EAAC;sBAAIxE,SAAA,EAAU;iCACZqF,WAAA,EAAa1F,KAAA,E,aACd,IAAAC,WAAA,CAAAC,GAAA,EAAC;kCAAMwF,WAAA,EAAa3F;;;qBALjBoD,OAAA;gBASX;;6BAGJ,IAAAlD,WAAA,CAAAC,GAAA,EAAC;wBACEe,sBAAA,CAAuB6C,GAAG,CAAC1B,SAAA,IAC1B;gBAAA;gBAAA9C,aAAA,GAAAI,CAAA;gBAAAJ,aAAA,GAAAE,CAAA;gBAAA,OAD0B,aAC1B,IAAAS,WAAA,CAAA4E,IAAA,EAAC;kBAAsBxE,SAAA,EAAU;0CAC/B,IAAAJ,WAAA,CAAAC,GAAA,EAAC;oBAAGG,SAAA,EAAU;8BACZ,iBAAAJ,WAAA,CAAA4E,IAAA,EAAC;sBAAIxE,SAAA,EAAU;8CACb,IAAAJ,WAAA,CAAAC,GAAA,EAAC;wBAAIG,SAAA,EAAU;kCACb,iBAAAJ,WAAA,CAAAC,GAAA,EAAC;0BAAKG,SAAA,EAAU;oCACb+B,SAAA,CAAUrC,IAAI,CAACiI,MAAM,CAAC;;uCAG3B,IAAA/H,WAAA,CAAA4E,IAAA,EAAC;gDACC,IAAA5E,WAAA,CAAAC,GAAA,EAAC;0BAAIG,SAAA,EAAU;oCACZ+B,SAAA,CAAUrC;yCAEb,IAAAE,WAAA,CAAAC,GAAA,EAAC;0BAAIG,SAAA,EAAU;oCACZ+B,SAAA,CAAUQ;;;;sBAKlBvB,YAAA,CAAaE,kBAAkB,CAACuC,GAAG,CAACX,OAAA;oBAAA;oBAAA7D,aAAA,GAAAI,CAAA;oBACnC,MAAM4D,KAAA;oBAAA;oBAAA,CAAAhE,aAAA,GAAAE,CAAA,SAAQ0D,iBAAA,CAAkBd,SAAA,EAAWe,OAAA;oBAC3C,MAAMuC,WAAA;oBAAA;oBAAA,CAAApG,aAAA,GAAAE,CAAA,SAAcK,oBAAA,CAAqByC,IAAI,CAC3C8B,CAAA,IAAK;sBAAA;sBAAA9E,aAAA,GAAAI,CAAA;sBAAAJ,aAAA,GAAAE,CAAA;sBAAA,OAAA4E,CAAA,CAAEtE,GAAG,KAAKqD,OAAA;oBAAA;oBAAA;oBAAA7D,aAAA,GAAAE,CAAA;oBAEjB,oBACE,IAAAS,WAAA,CAAAC,GAAA,EAAC;sBAECG,SAAA,EAAU;gCAEV,iBAAAJ,WAAA,CAAAC,GAAA,EAAC;wBAAKG,SAAA,EAAU;kCACbgD,aAAA,CACCC,KAAA;wBACA;wBAAA,CAAAhE,aAAA,GAAA+C,CAAA,WAAAqD,WAAA,EAAapF,IAAA;wBAAA;wBAAA,CAAAhB,aAAA,GAAA+C,CAAA,WAAQ;;uBANpBc,OAAA;kBAWX;mBApCOf,SAAA,CAAUI,EAAE;cAAA;;;;;;IAgDtC;IAAA,CAAAlD,aAAA,GAAA+C,CAAA,WAAApB,sBAAA,CAAuB6B,MAAM,KAAK;IAAA;IAAA,CAAAxD,aAAA,GAAA+C,CAAA,wBACjC,IAAApC,WAAA,CAAAC,GAAA,EAAC0G,KAAA,CAAAC,IAAI;gBACH,iBAAA5G,WAAA,CAAA4E,IAAA,EAAC+B,KAAA,CAAAK,WAAW;QAAC5G,SAAA,EAAU;gCACrB,IAAAJ,WAAA,CAAAC,GAAA,EAACC,YAAA,CAAAQ,KAAK;UAACN,SAAA,EAAU;yBACjB,IAAAJ,WAAA,CAAAC,GAAA,EAAC;UAAGG,SAAA,EAAU;oBAAyC;yBAGvD,IAAAJ,WAAA,CAAAC,GAAA,EAAC;UAAEG,SAAA,EAAU;oBAAqB;yBAIlC,IAAAJ,WAAA,CAAAC,GAAA,EAAC;UAAEG,SAAA,EAAU;oBAAwB;;;;;AAQjD;MAEAT,QAAA;AAAA;AAAA,CAAAN,aAAA,GAAAE,CAAA,SAAeC,qBAAA","ignoreList":[]}