{"version":3,"sources":["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\components\\__tests__\\lembretes\\lista-lembretes.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react';\nimport { describe, it, expect, beforeEach, afterEach } from '@jest/globals';\nimport { ListaLembretes } from '../../lembretes/lista-lembretes';\nimport { useLembretes } from '../../../hooks/use-lembretes';\nimport { useToast } from '../../../hooks/use-toast';\n// Tipos são importados do hook use-lembretes\n\n// Mock dos hooks\njest.mock('../../../hooks/use-lembretes');\njest.mock('../../../hooks/use-toast');\n\n// Mock dos lembretes de teste\nconst mockLembretes = [\n  {\n    id: '1',\n    usuarioId: 'user1',\n    avaliacaoId: 'aval1',\n    tipo: 'lembrete',\n    dataEnvio: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString(),\n    enviado: false,\n    tentativas: 0,\n    ultimaTentativa: undefined,\n    dataEnvioReal: undefined,\n    erro: undefined,\n    observacoes: undefined,\n    criadoEm: new Date().toISOString(),\n    atualizadoEm: new Date().toISOString(),\n    usuario: {\n      id: 'user1',\n      nome: 'João Silva',\n      email: 'joao@empresa.com',\n      cargo: 'Analista',\n    },\n    avaliacao: {\n      id: 'aval1',\n      prazo: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString(),\n      status: 'pendente',\n      avaliado: {\n        id: 'avaliado1',\n        nome: 'Pedro Avaliado',\n        cargo: 'Desenvolvedor',\n        email: 'pedro@empresa.com',\n      },\n      avaliador: {\n        id: 'avaliador1',\n        nome: 'Maria Avaliadora',\n        email: 'maria@empresa.com',\n      },\n      periodo: {\n        id: 'periodo1',\n        nome: 'Período Anual 2024',\n        dataInicio: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString(),\n        dataFim: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString(),\n      },\n    },\n  },\n  {\n    id: '2',\n    usuarioId: 'user2',\n    avaliacaoId: 'aval2',\n    tipo: 'vencimento',\n    dataEnvio: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(),\n    enviado: true,\n    tentativas: 1,\n    ultimaTentativa: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(),\n    dataEnvioReal: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(),\n    erro: undefined,\n    observacoes: undefined,\n    criadoEm: new Date().toISOString(),\n    atualizadoEm: new Date().toISOString(),\n    usuario: {\n      id: 'user2',\n      nome: 'Maria Santos',\n      email: 'maria@empresa.com',\n      cargo: 'Gerente',\n    },\n    avaliacao: {\n      id: 'aval2',\n      prazo: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString(),\n      status: 'em_andamento',\n      avaliado: {\n        id: 'avaliado2',\n        nome: 'Ana Avaliada',\n        cargo: 'Designer',\n        email: 'ana@empresa.com',\n      },\n      avaliador: {\n        id: 'avaliador2',\n        nome: 'Carlos Avaliador',\n        email: 'carlos@empresa.com',\n      },\n      periodo: {\n        id: 'periodo2',\n        nome: 'Período Trimestral Q4',\n        dataInicio: new Date(Date.now() - 60 * 24 * 60 * 60 * 1000).toISOString(),\n        dataFim: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString(),\n      },\n    },\n  },\n  {\n    id: '3',\n    usuarioId: 'user3',\n    avaliacaoId: 'aval3',\n    tipo: 'lembrete',\n    dataEnvio: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),\n    enviado: false,\n    tentativas: 3,\n    ultimaTentativa: new Date(Date.now() - 60 * 60 * 1000).toISOString(),\n    dataEnvioReal: undefined,\n    erro: 'Falha no envio de e-mail',\n    observacoes: 'Múltiplas tentativas falharam',\n    criadoEm: new Date().toISOString(),\n    atualizadoEm: new Date().toISOString(),\n    usuario: {\n      id: 'user3',\n      nome: 'Pedro Costa',\n      email: 'pedro@empresa.com',\n      cargo: 'Coordenador',\n    },\n    avaliacao: {\n      id: 'aval3',\n      prazo: new Date().toISOString(),\n      status: 'atrasada',\n      avaliado: {\n        id: 'avaliado3',\n        nome: 'Lucas Avaliado',\n        cargo: 'Analista Jr',\n        email: 'lucas@empresa.com',\n      },\n      avaliador: {\n        id: 'avaliador3',\n        nome: 'Fernanda Avaliadora',\n        email: 'fernanda@empresa.com',\n      },\n      periodo: {\n        id: 'periodo3',\n        nome: 'Período de Desempenho 2024',\n        dataInicio: new Date(Date.now() - 90 * 24 * 60 * 60 * 1000).toISOString(),\n        dataFim: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString(),\n      },\n    },\n  },\n];\n\nconst mockPaginacao = {\n  paginaAtual: 1,\n  totalPaginas: 1,\n  totalItens: 3,\n  itensPorPagina: 10,\n  temProximaPagina: false,\n  temPaginaAnterior: false,\n};\n\nconst mockHookReturn = {\n  lembretes: mockLembretes,\n  paginacao: mockPaginacao,\n  carregando: false,\n  erro: null,\n  buscarLembretes: jest.fn(),\n  executarAcaoLembrete: jest.fn(),\n};\n\nconst mockToast = jest.fn();\n\ndescribe('ListaLembretes', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n    (useLembretes as any).mockReturnValue(mockHookReturn);\n    (useToast as any).mockReturnValue({ toast: mockToast });\n  });\n\n  afterEach(() => {\n    jest.resetAllMocks();\n  });\n\n  describe('Renderização', () => {\n    it('deve renderizar lista de lembretes', () => {\n      render(<ListaLembretes />);\n\n      expect(screen.getByText('Lembretes de Avaliação')).toBeInTheDocument();\n      expect(screen.getByText('João Silva')).toBeInTheDocument();\n      expect(screen.getByText('Maria Santos')).toBeInTheDocument();\n      expect(screen.getByText('Pedro Costa')).toBeInTheDocument();\n    });\n\n    it('deve exibir estado de carregamento', () => {\n      (useLembretes as any).mockReturnValue({\n        ...mockHookReturn,\n        carregando: true,\n        lembretes: [],\n      });\n\n      render(<ListaLembretes />);\n\n      expect(screen.getByText('Carregando lembretes...')).toBeInTheDocument();\n    });\n\n    it('deve exibir mensagem quando não há lembretes', () => {\n      (useLembretes as any).mockReturnValue({\n        ...mockHookReturn,\n        lembretes: [],\n        paginacao: {\n          ...mockPaginacao,\n          total: 0,\n        },\n      });\n\n      render(<ListaLembretes />);\n\n      expect(screen.getByText('Nenhum lembrete encontrado')).toBeInTheDocument();\n    });\n\n    it('deve exibir erro quando houver falha', () => {\n      const errorMessage = 'Erro ao carregar lembretes';\n      (useLembretes as any).mockReturnValue({\n        ...mockHookReturn,\n        erro: errorMessage,\n        lembretes: [],\n      });\n\n      render(<ListaLembretes />);\n\n      expect(screen.getByText(errorMessage)).toBeInTheDocument();\n    });\n  });\n\n  describe('Filtros', () => {\n    it('deve filtrar por tipo de lembrete', async () => {\n      render(<ListaLembretes />);\n\n      const filtroTipo = screen.getAllByRole('combobox')[0];\n      fireEvent.click(filtroTipo);\n\n      await waitFor(() => {\n        expect(mockHookReturn.buscarLembretes).toHaveBeenCalledWith(\n          expect.objectContaining({\n            tipo: 'urgente',\n          })\n        );\n      });\n    });\n\n    it('deve filtrar por status', async () => {\n      render(<ListaLembretes />);\n\n      const filtroStatus = screen.getByLabelText('Status');\n      fireEvent.change(filtroStatus, { target: { value: 'pendente' } });\n\n      await waitFor(() => {\n        expect(mockHookReturn.buscarLembretes).toHaveBeenCalledWith(\n          expect.objectContaining({\n            status: 'pendente',\n          })\n        );\n      });\n    });\n\n    it('deve filtrar por usuário', async () => {\n      render(<ListaLembretes />);\n\n      const filtroUsuario = screen.getByLabelText('Usuário');\n      fireEvent.change(filtroUsuario, { target: { value: 'user1' } });\n\n      await waitFor(() => {\n        expect(mockHookReturn.buscarLembretes).toHaveBeenCalledWith(\n          expect.objectContaining({\n            usuarioId: 'user1',\n          })\n        );\n      });\n    });\n\n    it('deve filtrar por avaliação', async () => {\n      render(<ListaLembretes />);\n\n      const filtroAvaliacao = screen.getByLabelText('Avaliação');\n      fireEvent.change(filtroAvaliacao, { target: { value: 'aval1' } });\n\n      await waitFor(() => {\n        expect(mockHookReturn.buscarLembretes).toHaveBeenCalledWith(\n          expect.objectContaining({\n            avaliacaoId: 'aval1',\n          })\n        );\n      });\n    });\n\n    it('deve filtrar por período de data', async () => {\n      render(<ListaLembretes />);\n\n      const dataInicio = screen.getByLabelText('Data início');\n      const dataFim = screen.getByLabelText('Data fim');\n\n      fireEvent.change(dataInicio, { target: { value: '2024-01-01' } });\n      fireEvent.change(dataFim, { target: { value: '2024-12-31' } });\n\n      await waitFor(() => {\n        expect(mockHookReturn.buscarLembretes).toHaveBeenCalledWith(\n          expect.objectContaining({\n            dataInicio: '2024-01-01',\n            dataFim: '2024-12-31',\n          })\n        );\n      });\n    });\n\n    it('deve limpar filtros', async () => {\n      render(<ListaLembretes />);\n\n      // Aplicar filtros primeiro\n      const filtroTipo = screen.getAllByRole('combobox')[0];\n      fireEvent.click(filtroTipo);\n\n      // Limpar filtros\n      const botaoLimpar = screen.getByText('Limpar Filtros');\n      fireEvent.click(botaoLimpar);\n\n      await waitFor(() => {\n        expect(mockHookReturn.buscarLembretes).toHaveBeenCalledWith({});\n      });\n    });\n  });\n\n  describe('Busca', () => {\n    it('deve buscar lembretes por texto', async () => {\n      render(<ListaLembretes />);\n\n      const campoBusca = screen.getByPlaceholderText('Buscar lembretes...');\n      fireEvent.change(campoBusca, { target: { value: 'João' } });\n\n      // Simular debounce\n      await waitFor(() => {\n        expect(mockHookReturn.buscarLembretes).toHaveBeenCalledWith(\n          expect.objectContaining({\n            busca: 'João',\n          })\n        );\n      }, { timeout: 1000 });\n    });\n\n    it('deve limpar busca', async () => {\n      render(<ListaLembretes />);\n\n      const campoBusca = screen.getByPlaceholderText('Buscar lembretes...');\n      fireEvent.change(campoBusca, { target: { value: 'João' } });\n      fireEvent.change(campoBusca, { target: { value: '' } });\n\n      await waitFor(() => {\n        expect(mockHookReturn.buscarLembretes).toHaveBeenCalledWith(\n          expect.objectContaining({\n            busca: '',\n          })\n        );\n      });\n    });\n  });\n\n  describe('Ações de Lembrete', () => {\n    it('deve reenviar lembrete', async () => {\n      mockHookReturn.executarAcaoLembrete.mockResolvedValueOnce(true);\n\n      render(<ListaLembretes />);\n\n      const botaoReenviar = screen.getAllByRole('button').find(btn => \n        btn.querySelector('svg')?.classList.contains('lucide-send')\n      );\n      fireEvent.click(botaoReenviar);\n\n      await waitFor(() => {\n        expect(mockHookReturn.executarAcaoLembrete).toHaveBeenCalledWith('1', 'reenviar');\n      });\n    });\n\n    it('deve marcar como enviado', async () => {\n      mockHookReturn.executarAcaoLembrete.mockResolvedValueOnce(true);\n\n      render(<ListaLembretes />);\n\n      const botaoMarcar = screen.getAllByRole('button').find(btn => \n        btn.querySelector('svg')?.classList.contains('lucide-check-circle')\n      );\n      fireEvent.click(botaoMarcar);\n\n      await waitFor(() => {\n        expect(mockHookReturn.executarAcaoLembrete).toHaveBeenCalledWith('1', 'marcar_enviado');\n      });\n    });\n\n    it('deve reagendar lembrete', async () => {\n      mockHookReturn.executarAcaoLembrete.mockResolvedValueOnce(true);\n\n      render(<ListaLembretes />);\n\n      const botaoReagendar = screen.getAllByRole('button').find(btn => \n        btn.querySelector('svg')?.classList.contains('lucide-edit')\n      );\n      fireEvent.click(botaoReagendar);\n\n      // Preencher nova data\n      const inputData = screen.getByLabelText('Nova data de envio');\n      fireEvent.change(inputData, { target: { value: '2024-12-31T10:00' } });\n\n      const botaoConfirmar = screen.getByText('Confirmar');\n      fireEvent.click(botaoConfirmar);\n\n      await waitFor(() => {\n        expect(mockHookReturn.executarAcaoLembrete).toHaveBeenCalledWith(\n           '1',\n           'reagendar',\n           { dataEnvio: '2024-12-31T10:00' }\n         );\n      });\n    });\n\n    it('deve remover lembrete', async () => {\n      mockHookReturn.executarAcaoLembrete.mockResolvedValueOnce(true);\n      window.confirm = jest.fn(() => true);\n\n      render(<ListaLembretes />);\n\n      const botaoRemover = screen.getAllByRole('button').find(btn => \n        btn.querySelector('svg')?.classList.contains('lucide-trash-2')\n      );\n      fireEvent.click(botaoRemover);\n\n      await waitFor(() => {\n        expect(mockHookReturn.executarAcaoLembrete).toHaveBeenCalledWith('1', 'remover');\n      });\n    });\n\n    it('deve cancelar remoção se usuário não confirmar', async () => {\n      window.confirm = jest.fn(() => false);\n\n      render(<ListaLembretes />);\n\n      const botaoRemover = screen.getAllByRole('button').find(btn => \n        btn.querySelector('svg')?.classList.contains('lucide-trash-2')\n      );\n      fireEvent.click(botaoRemover);\n\n      expect(mockHookReturn.executarAcaoLembrete).not.toHaveBeenCalled();\n    });\n  });\n\n  // Testes de ações em lote removidos pois o componente não implementa essa funcionalidade\n\n  describe('Paginação', () => {\n    it('deve navegar para próxima página', async () => {\n      (useLembretes as any).mockReturnValue({\n        ...mockHookReturn,\n        paginacao: {\n          ...mockPaginacao,\n          pagina: 1,\n          totalPaginas: 3,\n        },\n      });\n\n      render(<ListaLembretes />);\n\n      const botaoProxima = screen.getByText('Próxima');\n      fireEvent.click(botaoProxima);\n\n      await waitFor(() => {\n        expect(mockHookReturn.buscarLembretes).toHaveBeenCalledWith(\n          expect.objectContaining({\n            pagina: 2,\n          })\n        );\n      });\n    });\n\n    it('deve navegar para página anterior', async () => {\n      (useLembretes as any).mockReturnValue({\n        ...mockHookReturn,\n        paginacao: {\n          ...mockPaginacao,\n          pagina: 2,\n          totalPaginas: 3,\n        },\n      });\n\n      render(<ListaLembretes />);\n\n      const botaoAnterior = screen.getByText('Anterior');\n      fireEvent.click(botaoAnterior);\n\n      await waitFor(() => {\n        expect(mockHookReturn.buscarLembretes).toHaveBeenCalledWith(\n          expect.objectContaining({\n            pagina: 1,\n          })\n        );\n      });\n    });\n\n    it('deve alterar limite por página', async () => {\n      render(<ListaLembretes />);\n\n      const seletorLimite = screen.getByLabelText('Itens por página');\n      fireEvent.change(seletorLimite, { target: { value: '25' } });\n\n      await waitFor(() => {\n        expect(mockHookReturn.buscarLembretes).toHaveBeenCalledWith(\n          expect.objectContaining({\n            limite: 25,\n            pagina: 1, // Reset para primeira página\n          })\n        );\n      });\n    });\n  });\n\n  describe('Ordenação', () => {\n    it('deve ordenar por data de envio', async () => {\n      render(<ListaLembretes />);\n\n      const cabecalhoData = screen.getByText('Data de Envio');\n      fireEvent.click(cabecalhoData);\n\n      await waitFor(() => {\n        expect(mockHookReturn.buscarLembretes).toHaveBeenCalledWith(\n          expect.objectContaining({\n            ordenarPor: 'dataEnvio',\n            ordem: 'asc',\n          })\n        );\n      });\n    });\n\n    it('deve alternar ordem de classificação', async () => {\n      render(<ListaLembretes />);\n\n      const cabecalhoData = screen.getByText('Data de Envio');\n      \n      // Primeira clique - ASC\n      fireEvent.click(cabecalhoData);\n      \n      await waitFor(() => {\n        expect(mockHookReturn.buscarLembretes).toHaveBeenCalledWith(\n          expect.objectContaining({\n            ordem: 'asc',\n          })\n        );\n      });\n\n      // Segunda clique - DESC\n      fireEvent.click(cabecalhoData);\n      \n      await waitFor(() => {\n        expect(mockHookReturn.buscarLembretes).toHaveBeenCalledWith(\n          expect.objectContaining({\n            ordem: 'desc',\n          })\n        );\n      });\n    });\n\n    it('deve ordenar por diferentes campos', async () => {\n      render(<ListaLembretes />);\n\n      const cabecalhoUsuario = screen.getByText('Usuário');\n      fireEvent.click(cabecalhoUsuario);\n\n      await waitFor(() => {\n        expect(mockHookReturn.buscarLembretes).toHaveBeenCalledWith(\n          expect.objectContaining({\n            ordenarPor: 'nomeUsuario',\n          })\n        );\n      });\n    });\n  });\n\n  describe('Exibição de Dados', () => {\n    it('deve exibir elementos principais da interface', () => {\n      render(<ListaLembretes />);\n\n      expect(screen.getByText('Lembretes')).toBeInTheDocument();\n      expect(screen.getByText('Gerencie todos os lembretes de avaliação do sistema')).toBeInTheDocument();\n    });\n\n    it('deve exibir dados dos lembretes', () => {\n      render(<ListaLembretes />);\n\n      expect(screen.getByText('João Silva')).toBeInTheDocument();\n      expect(screen.getByText('Maria Santos')).toBeInTheDocument();\n      expect(screen.getByText('lembrete')).toBeInTheDocument();\n      expect(screen.getByText('vencimento')).toBeInTheDocument();\n    });\n\n    it('deve exibir badges de status corretamente', () => {\n      render(<ListaLembretes />);\n\n      // Verificar se os status são exibidos baseados nos dados mock\n      expect(screen.getByText('João Silva')).toBeInTheDocument();\n      expect(screen.getByText('Maria Santos')).toBeInTheDocument();\n      expect(screen.getByText('Pedro Costa')).toBeInTheDocument();\n    });\n\n    it('deve exibir badges de tipo corretamente', () => {\n      render(<ListaLembretes />);\n\n      expect(screen.getByText('lembrete')).toBeInTheDocument();\n      expect(screen.getByText('vencimento')).toBeInTheDocument();\n    });\n\n    it('deve exibir informações de tentativas', () => {\n      render(<ListaLembretes />);\n\n      expect(screen.getByText('0 tentativas')).toBeInTheDocument();\n      expect(screen.getByText('1 tentativa')).toBeInTheDocument();\n      expect(screen.getByText('3 tentativas')).toBeInTheDocument();\n    });\n\n    it('deve exibir mensagem de erro quando presente', () => {\n      render(<ListaLembretes />);\n\n      expect(screen.getByText('Falha no envio de e-mail')).toBeInTheDocument();\n    });\n  });\n\n  describe('Atualização Automática', () => {\n    it('deve atualizar lista após ações', async () => {\n      mockHookReturn.executarAcaoLembrete.mockResolvedValueOnce(true);\n\n      render(<ListaLembretes />);\n\n      const botaoReenviar = screen.getAllByRole('button').find(btn => \n        btn.querySelector('svg')?.classList.contains('lucide-send')\n      );\n      fireEvent.click(botaoReenviar);\n\n      await waitFor(() => {\n        expect(mockHookReturn.buscarLembretes).toHaveBeenCalledTimes(2); // Initial + after action\n      });\n    });\n\n    it('deve atualizar automaticamente a cada 30 segundos', async () => {\n      jest.useFakeTimers();\n\n      render(<ListaLembretes />);\n\n      // Avançar 30 segundos\n      jest.advanceTimersByTime(30000);\n\n      await waitFor(() => {\n        expect(mockHookReturn.buscarLembretes).toHaveBeenCalledTimes(2);\n      });\n\n      jest.useRealTimers();\n    });\n  });\n\n  describe('Estados de Erro', () => {\n    it('deve exibir erro ao falhar ao reenviar', async () => {\n      mockHookReturn.executarAcaoLembrete.mockRejectedValueOnce(new Error('Erro de rede'));\n\n      render(<ListaLembretes />);\n\n      const botaoReenviar = screen.getAllByRole('button').find(btn => \n        btn.querySelector('svg')?.classList.contains('lucide-send')\n      );\n      fireEvent.click(botaoReenviar);\n\n      await waitFor(() => {\n        expect(mockToast).toHaveBeenCalledWith(\n          expect.objectContaining({\n            title: 'Erro',\n            variant: 'destructive',\n          })\n        );\n      });\n    });\n\n    it('deve exibir erro ao falhar ao remover', async () => {\n      mockHookReturn.executarAcaoLembrete.mockRejectedValueOnce(new Error('Erro de rede'));\n      window.confirm = jest.fn(() => true);\n\n      render(<ListaLembretes />);\n\n      const botaoRemover = screen.getAllByRole('button').find(btn => \n        btn.querySelector('svg')?.classList.contains('lucide-trash-2')\n      );\n      fireEvent.click(botaoRemover);\n\n      await waitFor(() => {\n        expect(mockToast).toHaveBeenCalledWith(\n          expect.objectContaining({\n            title: 'Erro',\n            variant: 'destructive',\n          })\n        );\n      });\n    });\n  });\n\n  describe('Acessibilidade', () => {\n    it('deve ter labels apropriados para screen readers', () => {\n      render(<ListaLembretes />);\n      \n      expect(screen.getByLabelText('Buscar')).toBeInTheDocument();\n      expect(screen.getByText('Tipo')).toBeInTheDocument();\n      expect(screen.getByText('Status')).toBeInTheDocument();\n    });\n\n    it('deve ter navegação por teclado funcional', () => {\n      render(<ListaLembretes />);\n\n      const filtroTipo = screen.getAllByRole('combobox')[0];\n      filtroTipo.focus();\n      expect(document.activeElement).toBe(filtroTipo);\n    });\n\n    it('deve ter descrições adequadas para ações', () => {\n      render(<ListaLembretes />);\n\n      // Verificar se botões de ação estão presentes\n      const botoes = screen.getAllByRole('button');\n      expect(botoes.length).toBeGreaterThan(0);\n    });\n  });\n\n  describe('Responsividade', () => {\n    it('deve adaptar layout para telas pequenas', () => {\n      // Mock window.innerWidth\n      Object.defineProperty(window, 'innerWidth', {\n        writable: true,\n        configurable: true,\n        value: 768,\n      });\n\n      render(<ListaLembretes />);\n\n      // Verificar se o componente renderiza corretamente\n       expect(screen.getByText('Lembretes')).toBeInTheDocument();\n    });\n\n    it('deve mostrar todas as colunas em telas grandes', () => {\n      Object.defineProperty(window, 'innerWidth', {\n        writable: true,\n        configurable: true,\n        value: 1200,\n      });\n\n      render(<ListaLembretes />);\n\n      // Verificar se o componente renderiza corretamente em telas grandes\n       expect(screen.getByText('Lembretes')).toBeInTheDocument();\n      expect(screen.getByText('João Silva')).toBeInTheDocument();\n    });\n  });\n});"],"names":["jest","mock","mockLembretes","id","usuarioId","avaliacaoId","tipo","dataEnvio","Date","now","toISOString","enviado","tentativas","ultimaTentativa","undefined","dataEnvioReal","erro","observacoes","criadoEm","atualizadoEm","usuario","nome","email","cargo","avaliacao","prazo","status","avaliado","avaliador","periodo","dataInicio","dataFim","mockPaginacao","paginaAtual","totalPaginas","totalItens","itensPorPagina","temProximaPagina","temPaginaAnterior","mockHookReturn","lembretes","paginacao","carregando","buscarLembretes","fn","executarAcaoLembrete","mockToast","describe","beforeEach","clearAllMocks","useLembretes","mockReturnValue","useToast","toast","afterEach","resetAllMocks","it","render","ListaLembretes","expect","screen","getByText","toBeInTheDocument","total","errorMessage","filtroTipo","getAllByRole","fireEvent","click","waitFor","toHaveBeenCalledWith","objectContaining","filtroStatus","getByLabelText","change","target","value","filtroUsuario","filtroAvaliacao","botaoLimpar","campoBusca","getByPlaceholderText","busca","timeout","mockResolvedValueOnce","botaoReenviar","find","btn","querySelector","classList","contains","botaoMarcar","botaoReagendar","inputData","botaoConfirmar","window","confirm","botaoRemover","not","toHaveBeenCalled","pagina","botaoProxima","botaoAnterior","seletorLimite","limite","cabecalhoData","ordenarPor","ordem","cabecalhoUsuario","toHaveBeenCalledTimes","useFakeTimers","advanceTimersByTime","useRealTimers","mockRejectedValueOnce","Error","title","variant","focus","document","activeElement","toBe","botoes","length","toBeGreaterThan","Object","defineProperty","writable","configurable"],"mappings":"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"}