b49fbfc73069b3cdb13dddf681c3e1f6
'use client';
"use strict";

/* istanbul ignore next */
function cov_1kt2ovpjkp() {
  var path = "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\components\\avaliacoes\\metricas-avaliacoes.tsx";
  var hash = "70fde6da29e4b32bbe5ac11192859a8fdde26940";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\components\\avaliacoes\\metricas-avaliacoes.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 34
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "5": {
        start: {
          line: 14,
          column: 14
        },
        end: {
          line: 14,
          column: 35
        }
      },
      "6": {
        start: {
          line: 15,
          column: 16
        },
        end: {
          line: 15,
          column: 39
        }
      },
      "7": {
        start: {
          line: 16,
          column: 16
        },
        end: {
          line: 16,
          column: 39
        }
      },
      "8": {
        start: {
          line: 17,
          column: 15
        },
        end: {
          line: 17,
          column: 37
        }
      },
      "9": {
        start: {
          line: 18,
          column: 14
        },
        end: {
          line: 18,
          column: 35
        }
      },
      "10": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 19,
          column: 43
        }
      },
      "11": {
        start: {
          line: 20,
          column: 18
        },
        end: {
          line: 20,
          column: 43
        }
      },
      "12": {
        start: {
          line: 21,
          column: 15
        },
        end: {
          line: 21,
          column: 37
        }
      },
      "13": {
        start: {
          line: 22,
          column: 18
        },
        end: {
          line: 22,
          column: 37
        }
      },
      "14": {
        start: {
          line: 23,
          column: 21
        },
        end: {
          line: 23,
          column: 44
        }
      },
      "15": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 25,
          column: 51
        }
      },
      "16": {
        start: {
          line: 25,
          column: 39
        },
        end: {
          line: 25,
          column: 51
        }
      },
      "17": {
        start: {
          line: 26,
          column: 28
        },
        end: {
          line: 26,
          column: 41
        }
      },
      "18": {
        start: {
          line: 27,
          column: 27
        },
        end: {
          line: 27,
          column: 40
        }
      },
      "19": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 30,
          column: 20
        }
      },
      "20": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 66
        }
      },
      "21": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "22": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 19
        }
      },
      "23": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "24": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 39,
          column: 10
        }
      },
      "25": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 41,
          column: 53
        }
      },
      "26": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "27": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 30
        }
      },
      "28": {
        start: {
          line: 45,
          column: 17
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "29": {
        start: {
          line: 48,
          column: 32
        },
        end: {
          line: 48,
          column: 88
        }
      },
      "30": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "31": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "32": {
        start: {
          line: 51,
          column: 23
        },
        end: {
          line: 51,
          column: 95
        }
      },
      "33": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 56,
          column: 13
        }
      },
      "34": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 53,
          column: 57
        }
      },
      "35": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 39
        }
      },
      "36": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 25
        }
      },
      "37": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "38": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 31
        }
      },
      "39": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 63,
          column: 18
        }
      },
      "40": {
        start: {
          line: 65,
          column: 23
        },
        end: {
          line: 71,
          column: 1
        }
      },
      "41": {
        start: {
          line: 72,
          column: 20
        },
        end: {
          line: 78,
          column: 1
        }
      },
      "42": {
        start: {
          line: 80,
          column: 40
        },
        end: {
          line: 80,
          column: 66
        }
      },
      "43": {
        start: {
          line: 81,
          column: 28
        },
        end: {
          line: 81,
          column: 54
        }
      },
      "44": {
        start: {
          line: 82,
          column: 54
        },
        end: {
          line: 82,
          column: 80
        }
      },
      "45": {
        start: {
          line: 83,
          column: 54
        },
        end: {
          line: 83,
          column: 78
        }
      },
      "46": {
        start: {
          line: 84,
          column: 58
        },
        end: {
          line: 84,
          column: 82
        }
      },
      "47": {
        start: {
          line: 85,
          column: 36
        },
        end: {
          line: 85,
          column: 60
        }
      },
      "48": {
        start: {
          line: 86,
          column: 40
        },
        end: {
          line: 86,
          column: 64
        }
      },
      "49": {
        start: {
          line: 87,
          column: 34
        },
        end: {
          line: 87,
          column: 58
        }
      },
      "50": {
        start: {
          line: 88,
          column: 36
        },
        end: {
          line: 88,
          column: 71
        }
      },
      "51": {
        start: {
          line: 90,
          column: 4
        },
        end: {
          line: 94,
          column: 11
        }
      },
      "52": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 24
        }
      },
      "53": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 27
        }
      },
      "54": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 93,
          column: 29
        }
      },
      "55": {
        start: {
          line: 96,
          column: 4
        },
        end: {
          line: 102,
          column: 7
        }
      },
      "56": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 99,
          column: 9
        }
      },
      "57": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 28
        }
      },
      "58": {
        start: {
          line: 103,
          column: 26
        },
        end: {
          line: 146,
          column: 5
        }
      },
      "59": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 145,
          column: 9
        }
      },
      "60": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 32
        }
      },
      "61": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 26
        }
      },
      "62": {
        start: {
          line: 107,
          column: 57
        },
        end: {
          line: 136,
          column: 14
        }
      },
      "63": {
        start: {
          line: 116,
          column: 31
        },
        end: {
          line: 116,
          column: 41
        }
      },
      "64": {
        start: {
          line: 126,
          column: 31
        },
        end: {
          line: 126,
          column: 41
        }
      },
      "65": {
        start: {
          line: 135,
          column: 31
        },
        end: {
          line: 135,
          column: 41
        }
      },
      "66": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 52
        }
      },
      "67": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 138,
          column: 47
        }
      },
      "68": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 53
        }
      },
      "69": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 63
        }
      },
      "70": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 142,
          column: 59
        }
      },
      "71": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 144,
          column: 33
        }
      },
      "72": {
        start: {
          line: 147,
          column: 29
        },
        end: {
          line: 155,
          column: 5
        }
      },
      "73": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 154,
          column: 9
        }
      },
      "74": {
        start: {
          line: 149,
          column: 29
        },
        end: {
          line: 149,
          column: 67
        }
      },
      "75": {
        start: {
          line: 150,
          column: 25
        },
        end: {
          line: 150,
          column: 46
        }
      },
      "76": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 151,
          column: 41
        }
      },
      "77": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 63
        }
      },
      "78": {
        start: {
          line: 156,
          column: 31
        },
        end: {
          line: 164,
          column: 5
        }
      },
      "79": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 163,
          column: 9
        }
      },
      "80": {
        start: {
          line: 158,
          column: 29
        },
        end: {
          line: 158,
          column: 59
        }
      },
      "81": {
        start: {
          line: 159,
          column: 25
        },
        end: {
          line: 159,
          column: 46
        }
      },
      "82": {
        start: {
          line: 160,
          column: 12
        },
        end: {
          line: 160,
          column: 43
        }
      },
      "83": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 162,
          column: 65
        }
      },
      "84": {
        start: {
          line: 165,
          column: 26
        },
        end: {
          line: 170,
          column: 5
        }
      },
      "85": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 169,
          column: 16
        }
      },
      "86": {
        start: {
          line: 166,
          column: 28
        },
        end: {
          line: 169,
          column: 13
        }
      },
      "87": {
        start: {
          line: 171,
          column: 26
        },
        end: {
          line: 173,
          column: 5
        }
      },
      "88": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 23
        }
      },
      "89": {
        start: {
          line: 174,
          column: 30
        },
        end: {
          line: 199,
          column: 5
        }
      },
      "90": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 198,
          column: 9
        }
      },
      "91": {
        start: {
          line: 176,
          column: 29
        },
        end: {
          line: 184,
          column: 14
        }
      },
      "92": {
        start: {
          line: 185,
          column: 12
        },
        end: {
          line: 195,
          column: 13
        }
      },
      "93": {
        start: {
          line: 186,
          column: 29
        },
        end: {
          line: 186,
          column: 50
        }
      },
      "94": {
        start: {
          line: 187,
          column: 28
        },
        end: {
          line: 187,
          column: 60
        }
      },
      "95": {
        start: {
          line: 188,
          column: 26
        },
        end: {
          line: 188,
          column: 53
        }
      },
      "96": {
        start: {
          line: 189,
          column: 16
        },
        end: {
          line: 189,
          column: 29
        }
      },
      "97": {
        start: {
          line: 190,
          column: 16
        },
        end: {
          line: 190,
          column: 98
        }
      },
      "98": {
        start: {
          line: 191,
          column: 16
        },
        end: {
          line: 191,
          column: 45
        }
      },
      "99": {
        start: {
          line: 192,
          column: 16
        },
        end: {
          line: 192,
          column: 26
        }
      },
      "100": {
        start: {
          line: 193,
          column: 16
        },
        end: {
          line: 193,
          column: 48
        }
      },
      "101": {
        start: {
          line: 194,
          column: 16
        },
        end: {
          line: 194,
          column: 45
        }
      },
      "102": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 197,
          column: 64
        }
      },
      "103": {
        start: {
          line: 201,
          column: 30
        },
        end: {
          line: 227,
          column: 10
        }
      },
      "104": {
        start: {
          line: 228,
          column: 25
        },
        end: {
          line: 233,
          column: 11
        }
      },
      "105": {
        start: {
          line: 228,
          column: 61
        },
        end: {
          line: 233,
          column: 9
        }
      },
      "106": {
        start: {
          line: 234,
          column: 29
        },
        end: {
          line: 242,
          column: 11
        }
      },
      "107": {
        start: {
          line: 234,
          column: 65
        },
        end: {
          line: 242,
          column: 9
        }
      },
      "108": {
        start: {
          line: 243,
          column: 4
        },
        end: {
          line: 250,
          column: 5
        }
      },
      "109": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 249,
          column: 11
        }
      },
      "110": {
        start: {
          line: 251,
          column: 4
        },
        end: {
          line: 840,
          column: 7
        }
      },
      "111": {
        start: {
          line: 273,
          column: 56
        },
        end: {
          line: 277,
          column: 38
        }
      },
      "112": {
        start: {
          line: 291,
          column: 82
        },
        end: {
          line: 294,
          column: 62
        }
      },
      "113": {
        start: {
          line: 340,
          column: 44
        },
        end: {
          line: 352,
          column: 25
        }
      },
      "114": {
        start: {
          line: 539,
          column: 91
        },
        end: {
          line: 539,
          column: 115
        }
      },
      "115": {
        start: {
          line: 540,
          column: 122
        },
        end: {
          line: 542,
          column: 83
        }
      },
      "116": {
        start: {
          line: 569,
          column: 76
        },
        end: {
          line: 590,
          column: 57
        }
      },
      "117": {
        start: {
          line: 593,
          column: 126
        },
        end: {
          line: 630,
          column: 77
        }
      },
      "118": {
        start: {
          line: 684,
          column: 78
        },
        end: {
          line: 687,
          column: 57
        }
      },
      "119": {
        start: {
          line: 743,
          column: 78
        },
        end: {
          line: 746,
          column: 57
        }
      },
      "120": {
        start: {
          line: 786,
          column: 68
        },
        end: {
          line: 796,
          column: 49
        }
      },
      "121": {
        start: {
          line: 800,
          column: 64
        },
        end: {
          line: 800,
          column: 160
        }
      },
      "122": {
        start: {
          line: 801,
          column: 44
        },
        end: {
          line: 830,
          column: 53
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 24,
            column: 9
          },
          end: {
            line: 24,
            column: 33
          }
        },
        loc: {
          start: {
            line: 24,
            column: 47
          },
          end: {
            line: 31,
            column: 1
          }
        },
        line: 24
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 28,
            column: 39
          },
          end: {
            line: 28,
            column: 40
          }
        },
        loc: {
          start: {
            line: 28,
            column: 61
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 32,
            column: 9
          },
          end: {
            line: 32,
            column: 34
          }
        },
        loc: {
          start: {
            line: 32,
            column: 53
          },
          end: {
            line: 64,
            column: 1
          }
        },
        line: 32
      },
      "4": {
        name: "MetricasAvaliacoes",
        decl: {
          start: {
            line: 79,
            column: 9
          },
          end: {
            line: 79,
            column: 27
          }
        },
        loc: {
          start: {
            line: 79,
            column: 43
          },
          end: {
            line: 841,
            column: 1
          }
        },
        line: 79
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 90,
            column: 26
          },
          end: {
            line: 90,
            column: 27
          }
        },
        loc: {
          start: {
            line: 90,
            column: 30
          },
          end: {
            line: 94,
            column: 5
          }
        },
        line: 90
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 96,
            column: 26
          },
          end: {
            line: 96,
            column: 27
          }
        },
        loc: {
          start: {
            line: 96,
            column: 30
          },
          end: {
            line: 100,
            column: 5
          }
        },
        line: 96
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 103,
            column: 26
          },
          end: {
            line: 103,
            column: 27
          }
        },
        loc: {
          start: {
            line: 103,
            column: 36
          },
          end: {
            line: 146,
            column: 5
          }
        },
        line: 103
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 116,
            column: 24
          },
          end: {
            line: 116,
            column: 25
          }
        },
        loc: {
          start: {
            line: 116,
            column: 31
          },
          end: {
            line: 116,
            column: 41
          }
        },
        line: 116
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 126,
            column: 24
          },
          end: {
            line: 126,
            column: 25
          }
        },
        loc: {
          start: {
            line: 126,
            column: 31
          },
          end: {
            line: 126,
            column: 41
          }
        },
        line: 126
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 135,
            column: 24
          },
          end: {
            line: 135,
            column: 25
          }
        },
        loc: {
          start: {
            line: 135,
            column: 31
          },
          end: {
            line: 135,
            column: 41
          }
        },
        line: 135
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 147,
            column: 29
          },
          end: {
            line: 147,
            column: 30
          }
        },
        loc: {
          start: {
            line: 147,
            column: 39
          },
          end: {
            line: 155,
            column: 5
          }
        },
        line: 147
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 156,
            column: 31
          },
          end: {
            line: 156,
            column: 32
          }
        },
        loc: {
          start: {
            line: 156,
            column: 41
          },
          end: {
            line: 164,
            column: 5
          }
        },
        line: 156
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 165,
            column: 26
          },
          end: {
            line: 165,
            column: 27
          }
        },
        loc: {
          start: {
            line: 165,
            column: 42
          },
          end: {
            line: 170,
            column: 5
          }
        },
        line: 165
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 166,
            column: 19
          },
          end: {
            line: 166,
            column: 20
          }
        },
        loc: {
          start: {
            line: 166,
            column: 28
          },
          end: {
            line: 169,
            column: 13
          }
        },
        line: 166
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 171,
            column: 26
          },
          end: {
            line: 171,
            column: 27
          }
        },
        loc: {
          start: {
            line: 171,
            column: 30
          },
          end: {
            line: 173,
            column: 5
          }
        },
        line: 171
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 174,
            column: 30
          },
          end: {
            line: 174,
            column: 31
          }
        },
        loc: {
          start: {
            line: 174,
            column: 40
          },
          end: {
            line: 199,
            column: 5
          }
        },
        line: 174
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 228,
            column: 47
          },
          end: {
            line: 228,
            column: 48
          }
        },
        loc: {
          start: {
            line: 228,
            column: 61
          },
          end: {
            line: 233,
            column: 9
          }
        },
        line: 228
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 234,
            column: 53
          },
          end: {
            line: 234,
            column: 54
          }
        },
        loc: {
          start: {
            line: 234,
            column: 65
          },
          end: {
            line: 242,
            column: 9
          }
        },
        line: 234
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 273,
            column: 47
          },
          end: {
            line: 273,
            column: 48
          }
        },
        loc: {
          start: {
            line: 273,
            column: 56
          },
          end: {
            line: 277,
            column: 38
          }
        },
        line: 273
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 291,
            column: 57
          },
          end: {
            line: 291,
            column: 58
          }
        },
        loc: {
          start: {
            line: 291,
            column: 82
          },
          end: {
            line: 294,
            column: 62
          }
        },
        line: 291
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 340,
            column: 22
          },
          end: {
            line: 340,
            column: 23
          }
        },
        loc: {
          start: {
            line: 340,
            column: 44
          },
          end: {
            line: 352,
            column: 25
          }
        },
        line: 340
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 539,
            column: 67
          },
          end: {
            line: 539,
            column: 68
          }
        },
        loc: {
          start: {
            line: 539,
            column: 91
          },
          end: {
            line: 539,
            column: 115
          }
        },
        line: 539
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 540,
            column: 92
          },
          end: {
            line: 540,
            column: 93
          }
        },
        loc: {
          start: {
            line: 540,
            column: 122
          },
          end: {
            line: 542,
            column: 83
          }
        },
        line: 540
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 569,
            column: 54
          },
          end: {
            line: 569,
            column: 55
          }
        },
        loc: {
          start: {
            line: 569,
            column: 76
          },
          end: {
            line: 590,
            column: 57
          }
        },
        line: 569
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 593,
            column: 92
          },
          end: {
            line: 593,
            column: 93
          }
        },
        loc: {
          start: {
            line: 593,
            column: 126
          },
          end: {
            line: 630,
            column: 77
          }
        },
        line: 593
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 684,
            column: 63
          },
          end: {
            line: 684,
            column: 64
          }
        },
        loc: {
          start: {
            line: 684,
            column: 78
          },
          end: {
            line: 687,
            column: 57
          }
        },
        line: 684
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 743,
            column: 63
          },
          end: {
            line: 743,
            column: 64
          }
        },
        loc: {
          start: {
            line: 743,
            column: 78
          },
          end: {
            line: 746,
            column: 57
          }
        },
        line: 743
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 786,
            column: 46
          },
          end: {
            line: 786,
            column: 47
          }
        },
        loc: {
          start: {
            line: 786,
            column: 68
          },
          end: {
            line: 796,
            column: 49
          }
        },
        line: 786
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 799,
            column: 106
          },
          end: {
            line: 799,
            column: 107
          }
        },
        loc: {
          start: {
            line: 799,
            column: 128
          },
          end: {
            line: 831,
            column: 41
          }
        },
        line: 799
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 15
          },
          end: {
            line: 29,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 29,
            column: 29
          },
          end: {
            line: 29,
            column: 45
          }
        }, {
          start: {
            line: 29,
            column: 48
          },
          end: {
            line: 29,
            column: 65
          }
        }],
        line: 29
      },
      "2": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "3": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 20
          }
        }, {
          start: {
            line: 33,
            column: 24
          },
          end: {
            line: 33,
            column: 27
          }
        }, {
          start: {
            line: 33,
            column: 31
          },
          end: {
            line: 33,
            column: 45
          }
        }],
        line: 33
      },
      "4": {
        loc: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "5": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 20
          }
        }, {
          start: {
            line: 36,
            column: 24
          },
          end: {
            line: 36,
            column: 47
          }
        }, {
          start: {
            line: 36,
            column: 51
          },
          end: {
            line: 36,
            column: 76
          }
        }],
        line: 36
      },
      "6": {
        loc: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "7": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 42,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 42,
            column: 13
          }
        }, {
          start: {
            line: 42,
            column: 17
          },
          end: {
            line: 42,
            column: 31
          }
        }],
        line: 42
      },
      "8": {
        loc: {
          start: {
            line: 48,
            column: 32
          },
          end: {
            line: 48,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 32
          },
          end: {
            line: 48,
            column: 53
          }
        }, {
          start: {
            line: 48,
            column: 57
          },
          end: {
            line: 48,
            column: 88
          }
        }],
        line: 48
      },
      "9": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "10": {
        loc: {
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 50,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 50,
            column: 29
          }
        }, {
          start: {
            line: 50,
            column: 33
          },
          end: {
            line: 50,
            column: 79
          }
        }],
        line: 50
      },
      "11": {
        loc: {
          start: {
            line: 51,
            column: 23
          },
          end: {
            line: 51,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 51,
            column: 47
          },
          end: {
            line: 51,
            column: 88
          }
        }, {
          start: {
            line: 51,
            column: 91
          },
          end: {
            line: 51,
            column: 95
          }
        }],
        line: 51
      },
      "12": {
        loc: {
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        }, {
          start: {
            line: 54,
            column: 19
          },
          end: {
            line: 56,
            column: 13
          }
        }],
        line: 52
      },
      "13": {
        loc: {
          start: {
            line: 52,
            column: 16
          },
          end: {
            line: 52,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 16
          },
          end: {
            line: 52,
            column: 20
          }
        }, {
          start: {
            line: 52,
            column: 25
          },
          end: {
            line: 52,
            column: 33
          }
        }, {
          start: {
            line: 52,
            column: 37
          },
          end: {
            line: 52,
            column: 45
          }
        }],
        line: 52
      },
      "14": {
        loc: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "15": {
        loc: {
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 99,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 99,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "16": {
        loc: {
          start: {
            line: 151,
            column: 24
          },
          end: {
            line: 151,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 151,
            column: 24
          },
          end: {
            line: 151,
            column: 33
          }
        }, {
          start: {
            line: 151,
            column: 37
          },
          end: {
            line: 151,
            column: 39
          }
        }],
        line: 151
      },
      "17": {
        loc: {
          start: {
            line: 160,
            column: 26
          },
          end: {
            line: 160,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 160,
            column: 26
          },
          end: {
            line: 160,
            column: 35
          }
        }, {
          start: {
            line: 160,
            column: 39
          },
          end: {
            line: 160,
            column: 41
          }
        }],
        line: 160
      },
      "18": {
        loc: {
          start: {
            line: 185,
            column: 12
          },
          end: {
            line: 195,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 185,
            column: 12
          },
          end: {
            line: 195,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 185
      },
      "19": {
        loc: {
          start: {
            line: 201,
            column: 30
          },
          end: {
            line: 227,
            column: 10
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 201,
            column: 50
          },
          end: {
            line: 227,
            column: 5
          }
        }, {
          start: {
            line: 227,
            column: 8
          },
          end: {
            line: 227,
            column: 10
          }
        }],
        line: 201
      },
      "20": {
        loc: {
          start: {
            line: 243,
            column: 4
          },
          end: {
            line: 250,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 243,
            column: 4
          },
          end: {
            line: 250,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 243
      },
      "21": {
        loc: {
          start: {
            line: 274,
            column: 52
          },
          end: {
            line: 276,
            column: 53
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 274,
            column: 60
          },
          end: {
            line: 276,
            column: 41
          }
        }, {
          start: {
            line: 276,
            column: 44
          },
          end: {
            line: 276,
            column: 53
          }
        }],
        line: 274
      },
      "22": {
        loc: {
          start: {
            line: 336,
            column: 12
          },
          end: {
            line: 480,
            column: 14
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 336,
            column: 39
          },
          end: {
            line: 353,
            column: 14
          }
        }, {
          start: {
            line: 353,
            column: 17
          },
          end: {
            line: 480,
            column: 14
          }
        }],
        line: 336
      },
      "23": {
        loc: {
          start: {
            line: 353,
            column: 17
          },
          end: {
            line: 480,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 353,
            column: 17
          },
          end: {
            line: 353,
            column: 34
          }
        }, {
          start: {
            line: 353,
            column: 52
          },
          end: {
            line: 480,
            column: 14
          }
        }],
        line: 353
      },
      "24": {
        loc: {
          start: {
            line: 396,
            column: 44
          },
          end: {
            line: 402,
            column: 46
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 396,
            column: 94
          },
          end: {
            line: 398,
            column: 46
          }
        }, {
          start: {
            line: 398,
            column: 49
          },
          end: {
            line: 402,
            column: 46
          }
        }],
        line: 396
      },
      "25": {
        loc: {
          start: {
            line: 398,
            column: 49
          },
          end: {
            line: 402,
            column: 46
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 398,
            column: 99
          },
          end: {
            line: 400,
            column: 46
          }
        }, {
          start: {
            line: 400,
            column: 63
          },
          end: {
            line: 402,
            column: 46
          }
        }],
        line: 398
      },
      "26": {
        loc: {
          start: {
            line: 435,
            column: 46
          },
          end: {
            line: 447,
            column: 38
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 435,
            column: 103
          },
          end: {
            line: 439,
            column: 38
          }
        }, {
          start: {
            line: 439,
            column: 41
          },
          end: {
            line: 447,
            column: 38
          }
        }],
        line: 435
      },
      "27": {
        loc: {
          start: {
            line: 439,
            column: 41
          },
          end: {
            line: 447,
            column: 38
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 439,
            column: 100
          },
          end: {
            line: 443,
            column: 38
          }
        }, {
          start: {
            line: 443,
            column: 55
          },
          end: {
            line: 447,
            column: 38
          }
        }],
        line: 439
      },
      "28": {
        loc: {
          start: {
            line: 526,
            column: 54
          },
          end: {
            line: 548,
            column: 46
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 526,
            column: 81
          },
          end: {
            line: 528,
            column: 46
          }
        }, {
          start: {
            line: 528,
            column: 63
          },
          end: {
            line: 548,
            column: 46
          }
        }],
        line: 526
      },
      "29": {
        loc: {
          start: {
            line: 565,
            column: 54
          },
          end: {
            line: 631,
            column: 46
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 565,
            column: 81
          },
          end: {
            line: 591,
            column: 46
          }
        }, {
          start: {
            line: 591,
            column: 63
          },
          end: {
            line: 631,
            column: 46
          }
        }],
        line: 565
      },
      "30": {
        loc: {
          start: {
            line: 654,
            column: 46
          },
          end: {
            line: 695,
            column: 38
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 654,
            column: 73
          },
          end: {
            line: 656,
            column: 38
          }
        }, {
          start: {
            line: 656,
            column: 55
          },
          end: {
            line: 695,
            column: 38
          }
        }],
        line: 654
      },
      "31": {
        loc: {
          start: {
            line: 685,
            column: 60
          },
          end: {
            line: 685,
            column: 121
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 685,
            column: 79
          },
          end: {
            line: 685,
            column: 97
          }
        }, {
          start: {
            line: 685,
            column: 100
          },
          end: {
            line: 685,
            column: 121
          }
        }],
        line: 685
      },
      "32": {
        loc: {
          start: {
            line: 686,
            column: 60
          },
          end: {
            line: 686,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 686,
            column: 79
          },
          end: {
            line: 686,
            column: 86
          }
        }, {
          start: {
            line: 686,
            column: 89
          },
          end: {
            line: 686,
            column: 96
          }
        }],
        line: 686
      },
      "33": {
        loc: {
          start: {
            line: 716,
            column: 46
          },
          end: {
            line: 761,
            column: 38
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 716,
            column: 73
          },
          end: {
            line: 718,
            column: 38
          }
        }, {
          start: {
            line: 718,
            column: 55
          },
          end: {
            line: 761,
            column: 38
          }
        }],
        line: 716
      },
      "34": {
        loc: {
          start: {
            line: 744,
            column: 60
          },
          end: {
            line: 744,
            column: 121
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 744,
            column: 79
          },
          end: {
            line: 744,
            column: 97
          }
        }, {
          start: {
            line: 744,
            column: 100
          },
          end: {
            line: 744,
            column: 121
          }
        }],
        line: 744
      },
      "35": {
        loc: {
          start: {
            line: 745,
            column: 60
          },
          end: {
            line: 745,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 745,
            column: 79
          },
          end: {
            line: 745,
            column: 86
          }
        }, {
          start: {
            line: 745,
            column: 89
          },
          end: {
            line: 745,
            column: 96
          }
        }],
        line: 745
      },
      "36": {
        loc: {
          start: {
            line: 782,
            column: 46
          },
          end: {
            line: 832,
            column: 38
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 782,
            column: 73
          },
          end: {
            line: 797,
            column: 38
          }
        }, {
          start: {
            line: 797,
            column: 41
          },
          end: {
            line: 832,
            column: 38
          }
        }],
        line: 782
      },
      "37": {
        loc: {
          start: {
            line: 797,
            column: 41
          },
          end: {
            line: 832,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 797,
            column: 41
          },
          end: {
            line: 797,
            column: 58
          }
        }, {
          start: {
            line: 797,
            column: 76
          },
          end: {
            line: 832,
            column: 38
          }
        }],
        line: 797
      },
      "38": {
        loc: {
          start: {
            line: 800,
            column: 64
          },
          end: {
            line: 800,
            column: 160
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 800,
            column: 104
          },
          end: {
            line: 800,
            column: 156
          }
        }, {
          start: {
            line: 800,
            column: 159
          },
          end: {
            line: 800,
            column: 160
          }
        }],
        line: 800
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\components\\avaliacoes\\metricas-avaliacoes.tsx"],
      sourcesContent: ["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Badge } from '@/components/ui/badge';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Progress } from '@/components/ui/progress';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { \n  BarChart, \n  Bar, \n  XAxis, \n  YAxis, \n  CartesianGrid, \n  Tooltip, \n  ResponsiveContainer,\n  LineChart,\n  Line,\n  PieChart,\n  Pie,\n  Cell,\n  Legend\n} from 'recharts';\nimport { \n  TrendingUp, \n  TrendingDown, \n  Users, \n  Calendar, \n  BarChart3,\n  PieChart as PieChartIcon,\n  Download,\n  Filter,\n  RefreshCw\n} from 'lucide-react';\nimport { \n  MetricasAtendente, \n  MetricasPeriodo, \n  ComparativoTemporal, \n  FiltrosMetricas \n} from '@/lib/utils/metricas-avaliacoes';\n\ninterface MetricasAvaliacoesProps {\n  className?: string;\n}\n\ninterface DadosConsolidados {\n  totalAvaliacoes: number;\n  mediaGeral: number;\n  medianaGeral: number;\n  desvioPadraoGeral: number;\n  distribuicaoGeral: {\n    nota1: number;\n    nota2: number;\n    nota3: number;\n    nota4: number;\n    nota5: number;\n  };\n  atendentesAvaliados: number;\n  periodosAtivos: number;\n}\n\ninterface Periodo {\n  id: string;\n  nome: string;\n  dataInicio: string;\n  dataFim: string;\n  status: string;\n}\n\ninterface Atendente {\n  id: string;\n  nome: string;\n  setor: string;\n  departamento?: string;\n}\n\nconst CORES_GRAFICOS = {\n  primaria: '#3b82f6',\n  secundaria: '#10b981',\n  terciaria: '#f59e0b',\n  quaternaria: '#ef4444',\n  quinaria: '#8b5cf6'\n};\n\nconst CORES_NOTAS = {\n  nota1: '#ef4444', // Vermelho\n  nota2: '#f97316', // Laranja\n  nota3: '#eab308', // Amarelo\n  nota4: '#22c55e', // Verde claro\n  nota5: '#16a34a'  // Verde escuro\n};\n\nexport default function MetricasAvaliacoes({ className }: MetricasAvaliacoesProps) {\n  const [carregando, setCarregando] = useState(true);\n  const [erro, setErro] = useState<string | null>(null);\n  const [dadosConsolidados, setDadosConsolidados] = useState<DadosConsolidados | null>(null);\n  const [rankingAtendentes, setRankingAtendentes] = useState<MetricasAtendente[]>([]);\n  const [comparativoTemporal, setComparativoTemporal] = useState<ComparativoTemporal[]>([]);\n  const [periodos, setPeriodos] = useState<Periodo[]>([]);\n  const [atendentes, setAtendentes] = useState<Atendente[]>([]);\n  const [filtros, setFiltros] = useState<FiltrosMetricas>({});\n  const [abaAtiva, setAbaAtiva] = useState('visao-geral');\n\n  // Carregar dados iniciais\n  useEffect(() => {\n    carregarDados();\n    carregarPeriodos();\n    carregarAtendentes();\n  }, []);\n\n  // Recarregar dados quando filtros mudarem\n  useEffect(() => {\n    if (!carregando) {\n      carregarDados();\n    }\n  }, [filtros]);\n\n  const carregarDados = async () => {\n    try {\n      setCarregando(true);\n      setErro(null);\n\n      const [consolidados, ranking, comparativo] = await Promise.all([\n        fetch('/api/avaliacoes/metricas/consolidadas', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ filtros })\n        }).then(res => res.json()),\n        fetch('/api/avaliacoes/metricas/ranking', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ filtros, limite: 10 })\n        }).then(res => res.json()),\n        fetch('/api/avaliacoes/metricas/comparativo-temporal', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ filtros })\n        }).then(res => res.json())\n      ]);\n\n      setDadosConsolidados(consolidados.data);\n      setRankingAtendentes(ranking.data);\n      setComparativoTemporal(comparativo.data);\n    } catch (error) {\n      console.error('Erro ao carregar m\xE9tricas:', error);\n      setErro('Erro ao carregar dados das m\xE9tricas');\n    } finally {\n      setCarregando(false);\n    }\n  };\n\n  const carregarPeriodos = async () => {\n    try {\n      const response = await fetch('/api/periodos-avaliacao');\n      const data = await response.json();\n      setPeriodos(data.data || []);\n    } catch (error) {\n      console.error('Erro ao carregar per\xEDodos:', error);\n    }\n  };\n\n  const carregarAtendentes = async () => {\n    try {\n      const response = await fetch('/api/atendentes');\n      const data = await response.json();\n      setAtendentes(data.data || []);\n    } catch (error) {\n      console.error('Erro ao carregar atendentes:', error);\n    }\n  };\n\n  const aplicarFiltro = (novosFiltros: Partial<FiltrosMetricas>) => {\n    setFiltros(prev => ({ ...prev, ...novosFiltros }));\n  };\n\n  const limparFiltros = () => {\n    setFiltros({});\n  };\n\n  const exportarRelatorio = async () => {\n    try {\n      const response = await fetch('/api/avaliacoes/metricas/exportar', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ filtros })\n      });\n      \n      if (response.ok) {\n        const blob = await response.blob();\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = `metricas-avaliacoes-${new Date().toISOString().split('T')[0]}.xlsx`;\n        document.body.appendChild(a);\n        a.click();\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(a);\n      }\n    } catch (error) {\n      console.error('Erro ao exportar relat\xF3rio:', error);\n    }\n  };\n\n  // Preparar dados para gr\xE1ficos\n  const dadosDistribuicao = dadosConsolidados ? [\n    { nota: 'Nota 1', quantidade: dadosConsolidados.distribuicaoGeral.nota1, cor: CORES_NOTAS.nota1 },\n    { nota: 'Nota 2', quantidade: dadosConsolidados.distribuicaoGeral.nota2, cor: CORES_NOTAS.nota2 },\n    { nota: 'Nota 3', quantidade: dadosConsolidados.distribuicaoGeral.nota3, cor: CORES_NOTAS.nota3 },\n    { nota: 'Nota 4', quantidade: dadosConsolidados.distribuicaoGeral.nota4, cor: CORES_NOTAS.nota4 },\n    { nota: 'Nota 5', quantidade: dadosConsolidados.distribuicaoGeral.nota5, cor: CORES_NOTAS.nota5 }\n  ] : [];\n\n  const dadosRanking = rankingAtendentes.map(atendente => ({\n    nome: atendente.nomeAtendente.split(' ')[0], // Apenas primeiro nome\n    media: atendente.media,\n    total: atendente.totalAvaliacoes,\n    setor: atendente.setor\n  }));\n\n  const dadosComparativo = comparativoTemporal.map(periodo => ({\n    periodo: periodo.nomePeriodo,\n    media: periodo.mediaGeral,\n    total: periodo.totalAvaliacoes,\n    data: new Date(periodo.dataInicio).toLocaleDateString('pt-BR', { month: 'short', year: 'numeric' })\n  }));\n\n  if (erro) {\n    return (\n      <Alert className=\"m-4\">\n        <AlertDescription>{erro}</AlertDescription>\n      </Alert>\n    );\n  }\n\n  return (\n    <div className={`space-y-6 ${className}`}>\n      {/* Cabe\xE7alho com filtros */}\n      <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\n        <div>\n          <h2 className=\"text-2xl font-bold\">M\xE9tricas de Avalia\xE7\xF5es</h2>\n          <p className=\"text-muted-foreground\">An\xE1lise estat\xEDstica e comparativa das avalia\xE7\xF5es 360\xB0</p>\n        </div>\n        \n        <div className=\"flex flex-wrap gap-2\">\n          <Select onValueChange={(value) => aplicarFiltro({ periodoIds: value ? [value] : undefined })}>\n            <SelectTrigger className=\"w-[200px]\">\n              <SelectValue placeholder=\"Filtrar por per\xEDodo\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"todos\">Todos os per\xEDodos</SelectItem>\n              {periodos.map(periodo => (\n                <SelectItem key={periodo.id} value={periodo.id}>\n                  {periodo.nome}\n                </SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n          \n          <Button variant=\"outline\" size=\"sm\" onClick={limparFiltros}>\n            <Filter className=\"h-4 w-4 mr-2\" />\n            Limpar Filtros\n          </Button>\n          \n          <Button variant=\"outline\" size=\"sm\" onClick={carregarDados}>\n            <RefreshCw className=\"h-4 w-4 mr-2\" />\n            Atualizar\n          </Button>\n          \n          <Button variant=\"outline\" size=\"sm\" onClick={exportarRelatorio}>\n            <Download className=\"h-4 w-4 mr-2\" />\n            Exportar\n          </Button>\n        </div>\n      </div>\n\n      {/* Cards de resumo */}\n      {carregando ? (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          {[...Array(4)].map((_, i) => (\n            <Card key={i}>\n              <CardHeader className=\"pb-2\">\n                <Skeleton className=\"h-4 w-24\" />\n                <Skeleton className=\"h-8 w-16\" />\n              </CardHeader>\n            </Card>\n          ))}\n        </div>\n      ) : dadosConsolidados && (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          <Card>\n            <CardHeader className=\"pb-2\">\n              <CardDescription>Total de Avalia\xE7\xF5es</CardDescription>\n              <CardTitle className=\"text-2xl\">{dadosConsolidados.totalAvaliacoes}</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"flex items-center text-sm text-muted-foreground\">\n                <Users className=\"h-4 w-4 mr-1\" />\n                {dadosConsolidados.atendentesAvaliados} atendentes\n              </div>\n            </CardContent>\n          </Card>\n          \n          <Card>\n            <CardHeader className=\"pb-2\">\n              <CardDescription>M\xE9dia Geral</CardDescription>\n              <CardTitle className=\"text-2xl flex items-center\">\n                {dadosConsolidados.mediaGeral.toFixed(2)}\n                {dadosConsolidados.mediaGeral >= 4 ? (\n                  <TrendingUp className=\"h-5 w-5 ml-2 text-green-500\" />\n                ) : dadosConsolidados.mediaGeral >= 3 ? (\n                  <BarChart3 className=\"h-5 w-5 ml-2 text-yellow-500\" />\n                ) : (\n                  <TrendingDown className=\"h-5 w-5 ml-2 text-red-500\" />\n                )}\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"flex items-center text-sm text-muted-foreground\">\n                Mediana: {dadosConsolidados.medianaGeral.toFixed(2)}\n              </div>\n            </CardContent>\n          </Card>\n          \n          <Card>\n            <CardHeader className=\"pb-2\">\n              <CardDescription>Desvio Padr\xE3o</CardDescription>\n              <CardTitle className=\"text-2xl\">{dadosConsolidados.desvioPadraoGeral.toFixed(2)}</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"flex items-center text-sm text-muted-foreground\">\n                {dadosConsolidados.desvioPadraoGeral <= 1 ? (\n                  <Badge variant=\"secondary\" className=\"text-xs\">Baixa varia\xE7\xE3o</Badge>\n                ) : dadosConsolidados.desvioPadraoGeral <= 1.5 ? (\n                  <Badge variant=\"outline\" className=\"text-xs\">Varia\xE7\xE3o moderada</Badge>\n                ) : (\n                  <Badge variant=\"destructive\" className=\"text-xs\">Alta varia\xE7\xE3o</Badge>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n          \n          <Card>\n            <CardHeader className=\"pb-2\">\n              <CardDescription>Per\xEDodos Ativos</CardDescription>\n              <CardTitle className=\"text-2xl\">{dadosConsolidados.periodosAtivos}</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"flex items-center text-sm text-muted-foreground\">\n                <Calendar className=\"h-4 w-4 mr-1\" />\n                Com avalia\xE7\xF5es\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      )}\n\n      {/* Abas de visualiza\xE7\xE3o */}\n      <Tabs value={abaAtiva} onValueChange={setAbaAtiva}>\n        <TabsList className=\"grid w-full grid-cols-4\">\n          <TabsTrigger value=\"visao-geral\">Vis\xE3o Geral</TabsTrigger>\n          <TabsTrigger value=\"ranking\">Ranking</TabsTrigger>\n          <TabsTrigger value=\"temporal\">Evolu\xE7\xE3o</TabsTrigger>\n          <TabsTrigger value=\"distribuicao\">Distribui\xE7\xE3o</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"visao-geral\" className=\"space-y-4\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n            {/* Gr\xE1fico de distribui\xE7\xE3o de notas */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center\">\n                  <PieChartIcon className=\"h-5 w-5 mr-2\" />\n                  Distribui\xE7\xE3o de Notas\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                {carregando ? (\n                  <Skeleton className=\"h-64 w-full\" />\n                ) : (\n                  <ResponsiveContainer width=\"100%\" height={300}>\n                    <PieChart>\n                      <Pie\n                        data={dadosDistribuicao}\n                        cx=\"50%\"\n                        cy=\"50%\"\n                        outerRadius={80}\n                        dataKey=\"quantidade\"\n                        label={({ nota, quantidade }) => `${nota}: ${quantidade}`}\n                      >\n                        {dadosDistribuicao.map((entry, index) => (\n                          <Cell key={`cell-${index}`} fill={entry.cor} />\n                        ))}\n                      </Pie>\n                      <Tooltip />\n                      <Legend />\n                    </PieChart>\n                  </ResponsiveContainer>\n                )}\n              </CardContent>\n            </Card>\n\n            {/* Top 5 atendentes */}\n            <Card>\n              <CardHeader>\n                <CardTitle>Top 5 Atendentes</CardTitle>\n                <CardDescription>Melhores m\xE9dias de avalia\xE7\xE3o</CardDescription>\n              </CardHeader>\n              <CardContent>\n                {carregando ? (\n                  <div className=\"space-y-3\">\n                    {[...Array(5)].map((_, i) => (\n                      <div key={i} className=\"flex items-center space-x-3\">\n                        <Skeleton className=\"h-8 w-8 rounded-full\" />\n                        <div className=\"space-y-1 flex-1\">\n                          <Skeleton className=\"h-4 w-24\" />\n                          <Skeleton className=\"h-3 w-16\" />\n                        </div>\n                        <Skeleton className=\"h-4 w-12\" />\n                      </div>\n                    ))}\n                  </div>\n                ) : (\n                  <div className=\"space-y-3\">\n                    {rankingAtendentes.slice(0, 5).map((atendente, index) => (\n                      <div key={atendente.atendenteId} className=\"flex items-center space-x-3\">\n                        <div className=\"flex-shrink-0 w-8 h-8 bg-primary/10 rounded-full flex items-center justify-center text-sm font-medium\">\n                          {index + 1}\n                        </div>\n                        <div className=\"flex-1 min-w-0\">\n                          <p className=\"text-sm font-medium truncate\">{atendente.nomeAtendente}</p>\n                          <p className=\"text-xs text-muted-foreground\">{atendente.setor}</p>\n                        </div>\n                        <div className=\"text-right\">\n                          <p className=\"text-sm font-medium\">{atendente.media.toFixed(2)}</p>\n                          <p className=\"text-xs text-muted-foreground\">{atendente.totalAvaliacoes} aval.</p>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </CardContent>\n            </Card>\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"ranking\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Ranking de Atendentes</CardTitle>\n              <CardDescription>Classifica\xE7\xE3o por m\xE9dia de avalia\xE7\xF5es</CardDescription>\n            </CardHeader>\n            <CardContent>\n              {carregando ? (\n                <Skeleton className=\"h-96 w-full\" />\n              ) : (\n                <ResponsiveContainer width=\"100%\" height={400}>\n                  <BarChart data={dadosRanking} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis \n                      dataKey=\"nome\" \n                      angle={-45}\n                      textAnchor=\"end\"\n                      height={80}\n                    />\n                    <YAxis domain={[0, 5]} />\n                    <Tooltip \n                      formatter={(value, name) => [\n                        name === 'media' ? `${value} (m\xE9dia)` : `${value} avalia\xE7\xF5es`,\n                        name === 'media' ? 'M\xE9dia' : 'Total'\n                      ]}\n                    />\n                    <Bar dataKey=\"media\" fill={CORES_GRAFICOS.primaria} />\n                  </BarChart>\n                </ResponsiveContainer>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"temporal\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Evolu\xE7\xE3o Temporal</CardTitle>\n              <CardDescription>M\xE9dia de avalia\xE7\xF5es por per\xEDodo</CardDescription>\n            </CardHeader>\n            <CardContent>\n              {carregando ? (\n                <Skeleton className=\"h-96 w-full\" />\n              ) : (\n                <ResponsiveContainer width=\"100%\" height={400}>\n                  <LineChart data={dadosComparativo} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"data\" />\n                    <YAxis domain={[0, 5]} />\n                    <Tooltip \n                      formatter={(value, name) => [\n                        name === 'media' ? `${value} (m\xE9dia)` : `${value} avalia\xE7\xF5es`,\n                        name === 'media' ? 'M\xE9dia' : 'Total'\n                      ]}\n                    />\n                    <Line \n                      type=\"monotone\" \n                      dataKey=\"media\" \n                      stroke={CORES_GRAFICOS.primaria} \n                      strokeWidth={2}\n                      dot={{ fill: CORES_GRAFICOS.primaria, strokeWidth: 2, r: 4 }}\n                    />\n                  </LineChart>\n                </ResponsiveContainer>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"distribuicao\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Distribui\xE7\xE3o Detalhada</CardTitle>\n              <CardDescription>An\xE1lise da distribui\xE7\xE3o de notas</CardDescription>\n            </CardHeader>\n            <CardContent>\n              {carregando ? (\n                <div className=\"space-y-4\">\n                  {[...Array(5)].map((_, i) => (\n                    <div key={i} className=\"space-y-2\">\n                      <Skeleton className=\"h-4 w-16\" />\n                      <Skeleton className=\"h-2 w-full\" />\n                    </div>\n                  ))}\n                </div>\n              ) : dadosConsolidados && (\n                <div className=\"space-y-4\">\n                  {Object.entries(dadosConsolidados.distribuicaoGeral).map(([nota, quantidade]) => {\n                    const porcentagem = dadosConsolidados.totalAvaliacoes > 0 \n                      ? (quantidade / dadosConsolidados.totalAvaliacoes) * 100 \n                      : 0;\n                    \n                    return (\n                      <div key={nota} className=\"space-y-2\">\n                        <div className=\"flex justify-between text-sm\">\n                          <span className=\"font-medium\">\n                            {nota.replace('nota', 'Nota ')} \u2B50\n                          </span>\n                          <span className=\"text-muted-foreground\">\n                            {quantidade} ({porcentagem.toFixed(1)}%)\n                          </span>\n                        </div>\n                        <Progress value={porcentagem} className=\"h-2\" />\n                      </div>\n                    );\n                  })}\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}"],
      names: ["MetricasAvaliacoes", "CORES_GRAFICOS", "primaria", "secundaria", "terciaria", "quaternaria", "quinaria", "CORES_NOTAS", "nota1", "nota2", "nota3", "nota4", "nota5", "className", "carregando", "setCarregando", "useState", "erro", "setErro", "dadosConsolidados", "setDadosConsolidados", "rankingAtendentes", "setRankingAtendentes", "comparativoTemporal", "setComparativoTemporal", "periodos", "setPeriodos", "atendentes", "setAtendentes", "filtros", "setFiltros", "abaAtiva", "setAbaAtiva", "useEffect", "carregarDados", "carregarPeriodos", "carregarAtendentes", "consolidados", "ranking", "comparativo", "Promise", "all", "fetch", "method", "headers", "body", "JSON", "stringify", "then", "res", "json", "limite", "data", "error", "console", "response", "aplicarFiltro", "novosFiltros", "prev", "limparFiltros", "exportarRelatorio", "ok", "blob", "url", "window", "URL", "createObjectURL", "a", "document", "createElement", "href", "download", "Date", "toISOString", "split", "appendChild", "click", "revokeObjectURL", "removeChild", "dadosDistribuicao", "nota", "quantidade", "distribuicaoGeral", "cor", "dadosRanking", "map", "atendente", "nome", "nomeAtendente", "media", "total", "totalAvaliacoes", "setor", "dadosComparativo", "periodo", "nomePeriodo", "mediaGeral", "dataInicio", "toLocaleDateString", "month", "year", "Alert", "AlertDescription", "div", "h2", "p", "Select", "onValueChange", "value", "periodoIds", "undefined", "SelectTrigger", "SelectValue", "placeholder", "SelectContent", "SelectItem", "id", "Button", "variant", "size", "onClick", "Filter", "RefreshCw", "Download", "Array", "_", "i", "Card", "CardHeader", "Skeleton", "CardDescription", "CardTitle", "CardContent", "Users", "atendentesAvaliados", "toFixed", "TrendingUp", "BarChart3", "TrendingDown", "medianaGeral", "desvioPadraoGeral", "Badge", "periodosAtivos", "Calendar", "Tabs", "TabsList", "TabsTrigger", "TabsContent", "PieChartIcon", "ResponsiveContainer", "width", "height", "PieChart", "Pie", "cx", "cy", "outerRadius", "dataKey", "label", "entry", "index", "Cell", "fill", "Tooltip", "Legend", "slice", "atendenteId", "BarChart", "margin", "top", "right", "left", "bottom", "CartesianGrid", "strokeDasharray", "XAxis", "angle", "textAnchor", "YAxis", "domain", "formatter", "name", "Bar", "LineChart", "Line", "type", "stroke", "strokeWidth", "dot", "r", "Object", "entries", "porcentagem", "span", "replace", "Progress"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "70fde6da29e4b32bbe5ac11192859a8fdde26940"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1kt2ovpjkp = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1kt2ovpjkp();
cov_1kt2ovpjkp().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1kt2ovpjkp().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1kt2ovpjkp().f[0]++;
    cov_1kt2ovpjkp().s[2]++;
    return MetricasAvaliacoes;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1kt2ovpjkp().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_1kt2ovpjkp().s[4]++, _interop_require_wildcard(require("react")));
const _card =
/* istanbul ignore next */
(cov_1kt2ovpjkp().s[5]++, require("../ui/card"));
const _button =
/* istanbul ignore next */
(cov_1kt2ovpjkp().s[6]++, require("../ui/button"));
const _select =
/* istanbul ignore next */
(cov_1kt2ovpjkp().s[7]++, require("../ui/select"));
const _badge =
/* istanbul ignore next */
(cov_1kt2ovpjkp().s[8]++, require("../ui/badge"));
const _tabs =
/* istanbul ignore next */
(cov_1kt2ovpjkp().s[9]++, require("../ui/tabs"));
const _progress =
/* istanbul ignore next */
(cov_1kt2ovpjkp().s[10]++, require("../ui/progress"));
const _skeleton =
/* istanbul ignore next */
(cov_1kt2ovpjkp().s[11]++, require("../ui/skeleton"));
const _alert =
/* istanbul ignore next */
(cov_1kt2ovpjkp().s[12]++, require("../ui/alert"));
const _recharts =
/* istanbul ignore next */
(cov_1kt2ovpjkp().s[13]++, require("recharts"));
const _lucidereact =
/* istanbul ignore next */
(cov_1kt2ovpjkp().s[14]++, require("lucide-react"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1kt2ovpjkp().f[1]++;
  cov_1kt2ovpjkp().s[15]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1kt2ovpjkp().b[0][0]++;
    cov_1kt2ovpjkp().s[16]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1kt2ovpjkp().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1kt2ovpjkp().s[17]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1kt2ovpjkp().s[18]++, new WeakMap());
  /* istanbul ignore next */
  cov_1kt2ovpjkp().s[19]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1kt2ovpjkp().f[2]++;
    cov_1kt2ovpjkp().s[20]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1kt2ovpjkp().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1kt2ovpjkp().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1kt2ovpjkp().f[3]++;
  cov_1kt2ovpjkp().s[21]++;
  if (
  /* istanbul ignore next */
  (cov_1kt2ovpjkp().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1kt2ovpjkp().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1kt2ovpjkp().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1kt2ovpjkp().b[2][0]++;
    cov_1kt2ovpjkp().s[22]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1kt2ovpjkp().b[2][1]++;
  }
  cov_1kt2ovpjkp().s[23]++;
  if (
  /* istanbul ignore next */
  (cov_1kt2ovpjkp().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1kt2ovpjkp().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1kt2ovpjkp().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1kt2ovpjkp().b[4][0]++;
    cov_1kt2ovpjkp().s[24]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1kt2ovpjkp().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1kt2ovpjkp().s[25]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1kt2ovpjkp().s[26]++;
  if (
  /* istanbul ignore next */
  (cov_1kt2ovpjkp().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1kt2ovpjkp().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1kt2ovpjkp().b[6][0]++;
    cov_1kt2ovpjkp().s[27]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1kt2ovpjkp().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1kt2ovpjkp().s[28]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1kt2ovpjkp().s[29]++,
  /* istanbul ignore next */
  (cov_1kt2ovpjkp().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1kt2ovpjkp().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1kt2ovpjkp().s[30]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1kt2ovpjkp().s[31]++;
    if (
    /* istanbul ignore next */
    (cov_1kt2ovpjkp().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1kt2ovpjkp().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1kt2ovpjkp().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1kt2ovpjkp().s[32]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1kt2ovpjkp().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1kt2ovpjkp().b[11][1]++, null));
      /* istanbul ignore next */
      cov_1kt2ovpjkp().s[33]++;
      if (
      /* istanbul ignore next */
      (cov_1kt2ovpjkp().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1kt2ovpjkp().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1kt2ovpjkp().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1kt2ovpjkp().b[12][0]++;
        cov_1kt2ovpjkp().s[34]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1kt2ovpjkp().b[12][1]++;
        cov_1kt2ovpjkp().s[35]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1kt2ovpjkp().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1kt2ovpjkp().s[36]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1kt2ovpjkp().s[37]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1kt2ovpjkp().b[14][0]++;
    cov_1kt2ovpjkp().s[38]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1kt2ovpjkp().b[14][1]++;
  }
  cov_1kt2ovpjkp().s[39]++;
  return newObj;
}
const CORES_GRAFICOS =
/* istanbul ignore next */
(cov_1kt2ovpjkp().s[40]++, {
  primaria: '#3b82f6',
  secundaria: '#10b981',
  terciaria: '#f59e0b',
  quaternaria: '#ef4444',
  quinaria: '#8b5cf6'
});
const CORES_NOTAS =
/* istanbul ignore next */
(cov_1kt2ovpjkp().s[41]++, {
  nota1: '#ef4444',
  nota2: '#f97316',
  nota3: '#eab308',
  nota4: '#22c55e',
  nota5: '#16a34a' // Verde escuro
});
function MetricasAvaliacoes({
  className
}) {
  /* istanbul ignore next */
  cov_1kt2ovpjkp().f[4]++;
  const [carregando, setCarregando] =
  /* istanbul ignore next */
  (cov_1kt2ovpjkp().s[42]++, (0, _react.useState)(true));
  const [erro, setErro] =
  /* istanbul ignore next */
  (cov_1kt2ovpjkp().s[43]++, (0, _react.useState)(null));
  const [dadosConsolidados, setDadosConsolidados] =
  /* istanbul ignore next */
  (cov_1kt2ovpjkp().s[44]++, (0, _react.useState)(null));
  const [rankingAtendentes, setRankingAtendentes] =
  /* istanbul ignore next */
  (cov_1kt2ovpjkp().s[45]++, (0, _react.useState)([]));
  const [comparativoTemporal, setComparativoTemporal] =
  /* istanbul ignore next */
  (cov_1kt2ovpjkp().s[46]++, (0, _react.useState)([]));
  const [periodos, setPeriodos] =
  /* istanbul ignore next */
  (cov_1kt2ovpjkp().s[47]++, (0, _react.useState)([]));
  const [atendentes, setAtendentes] =
  /* istanbul ignore next */
  (cov_1kt2ovpjkp().s[48]++, (0, _react.useState)([]));
  const [filtros, setFiltros] =
  /* istanbul ignore next */
  (cov_1kt2ovpjkp().s[49]++, (0, _react.useState)({}));
  const [abaAtiva, setAbaAtiva] =
  /* istanbul ignore next */
  (cov_1kt2ovpjkp().s[50]++, (0, _react.useState)('visao-geral'));
  // Carregar dados iniciais
  /* istanbul ignore next */
  cov_1kt2ovpjkp().s[51]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1kt2ovpjkp().f[5]++;
    cov_1kt2ovpjkp().s[52]++;
    carregarDados();
    /* istanbul ignore next */
    cov_1kt2ovpjkp().s[53]++;
    carregarPeriodos();
    /* istanbul ignore next */
    cov_1kt2ovpjkp().s[54]++;
    carregarAtendentes();
  }, []);
  // Recarregar dados quando filtros mudarem
  /* istanbul ignore next */
  cov_1kt2ovpjkp().s[55]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1kt2ovpjkp().f[6]++;
    cov_1kt2ovpjkp().s[56]++;
    if (!carregando) {
      /* istanbul ignore next */
      cov_1kt2ovpjkp().b[15][0]++;
      cov_1kt2ovpjkp().s[57]++;
      carregarDados();
    } else
    /* istanbul ignore next */
    {
      cov_1kt2ovpjkp().b[15][1]++;
    }
  }, [filtros]);
  /* istanbul ignore next */
  cov_1kt2ovpjkp().s[58]++;
  const carregarDados = async () => {
    /* istanbul ignore next */
    cov_1kt2ovpjkp().f[7]++;
    cov_1kt2ovpjkp().s[59]++;
    try {
      /* istanbul ignore next */
      cov_1kt2ovpjkp().s[60]++;
      setCarregando(true);
      /* istanbul ignore next */
      cov_1kt2ovpjkp().s[61]++;
      setErro(null);
      const [consolidados, ranking, comparativo] =
      /* istanbul ignore next */
      (cov_1kt2ovpjkp().s[62]++, await Promise.all([fetch('/api/avaliacoes/metricas/consolidadas', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          filtros
        })
      }).then(res => {
        /* istanbul ignore next */
        cov_1kt2ovpjkp().f[8]++;
        cov_1kt2ovpjkp().s[63]++;
        return res.json();
      }), fetch('/api/avaliacoes/metricas/ranking', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          filtros,
          limite: 10
        })
      }).then(res => {
        /* istanbul ignore next */
        cov_1kt2ovpjkp().f[9]++;
        cov_1kt2ovpjkp().s[64]++;
        return res.json();
      }), fetch('/api/avaliacoes/metricas/comparativo-temporal', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          filtros
        })
      }).then(res => {
        /* istanbul ignore next */
        cov_1kt2ovpjkp().f[10]++;
        cov_1kt2ovpjkp().s[65]++;
        return res.json();
      })]));
      /* istanbul ignore next */
      cov_1kt2ovpjkp().s[66]++;
      setDadosConsolidados(consolidados.data);
      /* istanbul ignore next */
      cov_1kt2ovpjkp().s[67]++;
      setRankingAtendentes(ranking.data);
      /* istanbul ignore next */
      cov_1kt2ovpjkp().s[68]++;
      setComparativoTemporal(comparativo.data);
    } catch (error) {
      /* istanbul ignore next */
      cov_1kt2ovpjkp().s[69]++;
      console.error('Erro ao carregar métricas:', error);
      /* istanbul ignore next */
      cov_1kt2ovpjkp().s[70]++;
      setErro('Erro ao carregar dados das métricas');
    } finally {
      /* istanbul ignore next */
      cov_1kt2ovpjkp().s[71]++;
      setCarregando(false);
    }
  };
  /* istanbul ignore next */
  cov_1kt2ovpjkp().s[72]++;
  const carregarPeriodos = async () => {
    /* istanbul ignore next */
    cov_1kt2ovpjkp().f[11]++;
    cov_1kt2ovpjkp().s[73]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_1kt2ovpjkp().s[74]++, await fetch('/api/periodos-avaliacao'));
      const data =
      /* istanbul ignore next */
      (cov_1kt2ovpjkp().s[75]++, await response.json());
      /* istanbul ignore next */
      cov_1kt2ovpjkp().s[76]++;
      setPeriodos(
      /* istanbul ignore next */
      (cov_1kt2ovpjkp().b[16][0]++, data.data) ||
      /* istanbul ignore next */
      (cov_1kt2ovpjkp().b[16][1]++, []));
    } catch (error) {
      /* istanbul ignore next */
      cov_1kt2ovpjkp().s[77]++;
      console.error('Erro ao carregar períodos:', error);
    }
  };
  /* istanbul ignore next */
  cov_1kt2ovpjkp().s[78]++;
  const carregarAtendentes = async () => {
    /* istanbul ignore next */
    cov_1kt2ovpjkp().f[12]++;
    cov_1kt2ovpjkp().s[79]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_1kt2ovpjkp().s[80]++, await fetch('/api/atendentes'));
      const data =
      /* istanbul ignore next */
      (cov_1kt2ovpjkp().s[81]++, await response.json());
      /* istanbul ignore next */
      cov_1kt2ovpjkp().s[82]++;
      setAtendentes(
      /* istanbul ignore next */
      (cov_1kt2ovpjkp().b[17][0]++, data.data) ||
      /* istanbul ignore next */
      (cov_1kt2ovpjkp().b[17][1]++, []));
    } catch (error) {
      /* istanbul ignore next */
      cov_1kt2ovpjkp().s[83]++;
      console.error('Erro ao carregar atendentes:', error);
    }
  };
  /* istanbul ignore next */
  cov_1kt2ovpjkp().s[84]++;
  const aplicarFiltro = novosFiltros => {
    /* istanbul ignore next */
    cov_1kt2ovpjkp().f[13]++;
    cov_1kt2ovpjkp().s[85]++;
    setFiltros(prev => {
      /* istanbul ignore next */
      cov_1kt2ovpjkp().f[14]++;
      cov_1kt2ovpjkp().s[86]++;
      return {
        ...prev,
        ...novosFiltros
      };
    });
  };
  /* istanbul ignore next */
  cov_1kt2ovpjkp().s[87]++;
  const limparFiltros = () => {
    /* istanbul ignore next */
    cov_1kt2ovpjkp().f[15]++;
    cov_1kt2ovpjkp().s[88]++;
    setFiltros({});
  };
  /* istanbul ignore next */
  cov_1kt2ovpjkp().s[89]++;
  const exportarRelatorio = async () => {
    /* istanbul ignore next */
    cov_1kt2ovpjkp().f[16]++;
    cov_1kt2ovpjkp().s[90]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_1kt2ovpjkp().s[91]++, await fetch('/api/avaliacoes/metricas/exportar', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          filtros
        })
      }));
      /* istanbul ignore next */
      cov_1kt2ovpjkp().s[92]++;
      if (response.ok) {
        /* istanbul ignore next */
        cov_1kt2ovpjkp().b[18][0]++;
        const blob =
        /* istanbul ignore next */
        (cov_1kt2ovpjkp().s[93]++, await response.blob());
        const url =
        /* istanbul ignore next */
        (cov_1kt2ovpjkp().s[94]++, window.URL.createObjectURL(blob));
        const a =
        /* istanbul ignore next */
        (cov_1kt2ovpjkp().s[95]++, document.createElement('a'));
        /* istanbul ignore next */
        cov_1kt2ovpjkp().s[96]++;
        a.href = url;
        /* istanbul ignore next */
        cov_1kt2ovpjkp().s[97]++;
        a.download = `metricas-avaliacoes-${new Date().toISOString().split('T')[0]}.xlsx`;
        /* istanbul ignore next */
        cov_1kt2ovpjkp().s[98]++;
        document.body.appendChild(a);
        /* istanbul ignore next */
        cov_1kt2ovpjkp().s[99]++;
        a.click();
        /* istanbul ignore next */
        cov_1kt2ovpjkp().s[100]++;
        window.URL.revokeObjectURL(url);
        /* istanbul ignore next */
        cov_1kt2ovpjkp().s[101]++;
        document.body.removeChild(a);
      } else
      /* istanbul ignore next */
      {
        cov_1kt2ovpjkp().b[18][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1kt2ovpjkp().s[102]++;
      console.error('Erro ao exportar relatório:', error);
    }
  };
  // Preparar dados para gráficos
  const dadosDistribuicao =
  /* istanbul ignore next */
  (cov_1kt2ovpjkp().s[103]++, dadosConsolidados ?
  /* istanbul ignore next */
  (cov_1kt2ovpjkp().b[19][0]++, [{
    nota: 'Nota 1',
    quantidade: dadosConsolidados.distribuicaoGeral.nota1,
    cor: CORES_NOTAS.nota1
  }, {
    nota: 'Nota 2',
    quantidade: dadosConsolidados.distribuicaoGeral.nota2,
    cor: CORES_NOTAS.nota2
  }, {
    nota: 'Nota 3',
    quantidade: dadosConsolidados.distribuicaoGeral.nota3,
    cor: CORES_NOTAS.nota3
  }, {
    nota: 'Nota 4',
    quantidade: dadosConsolidados.distribuicaoGeral.nota4,
    cor: CORES_NOTAS.nota4
  }, {
    nota: 'Nota 5',
    quantidade: dadosConsolidados.distribuicaoGeral.nota5,
    cor: CORES_NOTAS.nota5
  }]) :
  /* istanbul ignore next */
  (cov_1kt2ovpjkp().b[19][1]++, []));
  const dadosRanking =
  /* istanbul ignore next */
  (cov_1kt2ovpjkp().s[104]++, rankingAtendentes.map(atendente => {
    /* istanbul ignore next */
    cov_1kt2ovpjkp().f[17]++;
    cov_1kt2ovpjkp().s[105]++;
    return {
      nome: atendente.nomeAtendente.split(' ')[0],
      media: atendente.media,
      total: atendente.totalAvaliacoes,
      setor: atendente.setor
    };
  }));
  const dadosComparativo =
  /* istanbul ignore next */
  (cov_1kt2ovpjkp().s[106]++, comparativoTemporal.map(periodo => {
    /* istanbul ignore next */
    cov_1kt2ovpjkp().f[18]++;
    cov_1kt2ovpjkp().s[107]++;
    return {
      periodo: periodo.nomePeriodo,
      media: periodo.mediaGeral,
      total: periodo.totalAvaliacoes,
      data: new Date(periodo.dataInicio).toLocaleDateString('pt-BR', {
        month: 'short',
        year: 'numeric'
      })
    };
  }));
  /* istanbul ignore next */
  cov_1kt2ovpjkp().s[108]++;
  if (erro) {
    /* istanbul ignore next */
    cov_1kt2ovpjkp().b[20][0]++;
    cov_1kt2ovpjkp().s[109]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)(_alert.Alert, {
      className: "m-4",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_alert.AlertDescription, {
        children: erro
      })
    });
  } else
  /* istanbul ignore next */
  {
    cov_1kt2ovpjkp().b[20][1]++;
  }
  cov_1kt2ovpjkp().s[110]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: `space-y-6 ${className}`,
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
          className: "text-2xl font-bold",
          children: "M\xe9tricas de Avalia\xe7\xf5es"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "text-muted-foreground",
          children: "An\xe1lise estat\xedstica e comparativa das avalia\xe7\xf5es 360\xb0"
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex flex-wrap gap-2",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_select.Select, {
          onValueChange: value => {
            /* istanbul ignore next */
            cov_1kt2ovpjkp().f[19]++;
            cov_1kt2ovpjkp().s[111]++;
            return aplicarFiltro({
              periodoIds: value ?
              /* istanbul ignore next */
              (cov_1kt2ovpjkp().b[21][0]++, [value]) :
              /* istanbul ignore next */
              (cov_1kt2ovpjkp().b[21][1]++, undefined)
            });
          },
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectTrigger, {
            className: "w-[200px]",
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectValue, {
              placeholder: "Filtrar por per\xedodo"
            })
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_select.SelectContent, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
              value: "todos",
              children: "Todos os per\xedodos"
            }), periodos.map(periodo => {
              /* istanbul ignore next */
              cov_1kt2ovpjkp().f[20]++;
              cov_1kt2ovpjkp().s[112]++;
              return /*#__PURE__*/(0, _jsxruntime.jsx)(_select.SelectItem, {
                value: periodo.id,
                children: periodo.nome
              }, periodo.id);
            })]
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
          variant: "outline",
          size: "sm",
          onClick: limparFiltros,
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Filter, {
            className: "h-4 w-4 mr-2"
          }), "Limpar Filtros"]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
          variant: "outline",
          size: "sm",
          onClick: carregarDados,
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.RefreshCw, {
            className: "h-4 w-4 mr-2"
          }), "Atualizar"]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_button.Button, {
          variant: "outline",
          size: "sm",
          onClick: exportarRelatorio,
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Download, {
            className: "h-4 w-4 mr-2"
          }), "Exportar"]
        })]
      })]
    }), carregando ?
    /* istanbul ignore next */
    (/*#__PURE__*/cov_1kt2ovpjkp().b[22][0]++, (0, _jsxruntime.jsx)("div", {
      className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4",
      children: [...Array(4)].map((_, i) => {
        /* istanbul ignore next */
        cov_1kt2ovpjkp().f[21]++;
        cov_1kt2ovpjkp().s[113]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)(_card.Card, {
          children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardHeader, {
            className: "pb-2",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_skeleton.Skeleton, {
              className: "h-4 w-24"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_skeleton.Skeleton, {
              className: "h-8 w-16"
            })]
          })
        }, i);
      })
    })) :
    /* istanbul ignore next */
    (cov_1kt2ovpjkp().b[22][1]++,
    /* istanbul ignore next */
    (cov_1kt2ovpjkp().b[23][0]++, dadosConsolidados) &&
    /* istanbul ignore next */
    (cov_1kt2ovpjkp().b[23][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardHeader, {
          className: "pb-2",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardDescription, {
            children: "Total de Avalia\xe7\xf5es"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
            className: "text-2xl",
            children: dadosConsolidados.totalAvaliacoes
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
          children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-center text-sm text-muted-foreground",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Users, {
              className: "h-4 w-4 mr-1"
            }), dadosConsolidados.atendentesAvaliados, " atendentes"]
          })
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardHeader, {
          className: "pb-2",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardDescription, {
            children: "M\xe9dia Geral"
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardTitle, {
            className: "text-2xl flex items-center",
            children: [dadosConsolidados.mediaGeral.toFixed(2), dadosConsolidados.mediaGeral >= 4 ?
            /* istanbul ignore next */
            (/*#__PURE__*/cov_1kt2ovpjkp().b[24][0]++, (0, _jsxruntime.jsx)(_lucidereact.TrendingUp, {
              className: "h-5 w-5 ml-2 text-green-500"
            })) :
            /* istanbul ignore next */
            (cov_1kt2ovpjkp().b[24][1]++, dadosConsolidados.mediaGeral >= 3 ?
            /* istanbul ignore next */
            (/*#__PURE__*/cov_1kt2ovpjkp().b[25][0]++, (0, _jsxruntime.jsx)(_lucidereact.BarChart3, {
              className: "h-5 w-5 ml-2 text-yellow-500"
            })) :
            /* istanbul ignore next */
            (/*#__PURE__*/cov_1kt2ovpjkp().b[25][1]++, (0, _jsxruntime.jsx)(_lucidereact.TrendingDown, {
              className: "h-5 w-5 ml-2 text-red-500"
            })))]
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
          children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-center text-sm text-muted-foreground",
            children: ["Mediana: ", dadosConsolidados.medianaGeral.toFixed(2)]
          })
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardHeader, {
          className: "pb-2",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardDescription, {
            children: "Desvio Padr\xe3o"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
            className: "text-2xl",
            children: dadosConsolidados.desvioPadraoGeral.toFixed(2)
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
          children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "flex items-center text-sm text-muted-foreground",
            children: dadosConsolidados.desvioPadraoGeral <= 1 ?
            /* istanbul ignore next */
            (/*#__PURE__*/cov_1kt2ovpjkp().b[26][0]++, (0, _jsxruntime.jsx)(_badge.Badge, {
              variant: "secondary",
              className: "text-xs",
              children: "Baixa varia\xe7\xe3o"
            })) :
            /* istanbul ignore next */
            (cov_1kt2ovpjkp().b[26][1]++, dadosConsolidados.desvioPadraoGeral <= 1.5 ?
            /* istanbul ignore next */
            (/*#__PURE__*/cov_1kt2ovpjkp().b[27][0]++, (0, _jsxruntime.jsx)(_badge.Badge, {
              variant: "outline",
              className: "text-xs",
              children: "Varia\xe7\xe3o moderada"
            })) :
            /* istanbul ignore next */
            (/*#__PURE__*/cov_1kt2ovpjkp().b[27][1]++, (0, _jsxruntime.jsx)(_badge.Badge, {
              variant: "destructive",
              className: "text-xs",
              children: "Alta varia\xe7\xe3o"
            })))
          })
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardHeader, {
          className: "pb-2",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardDescription, {
            children: "Per\xedodos Ativos"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
            className: "text-2xl",
            children: dadosConsolidados.periodosAtivos
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
          children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-center text-sm text-muted-foreground",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.Calendar, {
              className: "h-4 w-4 mr-1"
            }), "Com avalia\xe7\xf5es"]
          })
        })]
      })]
    }))), /*#__PURE__*/(0, _jsxruntime.jsxs)(_tabs.Tabs, {
      value: abaAtiva,
      onValueChange: setAbaAtiva,
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_tabs.TabsList, {
        className: "grid w-full grid-cols-4",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsTrigger, {
          value: "visao-geral",
          children: "Vis\xe3o Geral"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsTrigger, {
          value: "ranking",
          children: "Ranking"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsTrigger, {
          value: "temporal",
          children: "Evolu\xe7\xe3o"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsTrigger, {
          value: "distribuicao",
          children: "Distribui\xe7\xe3o"
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsContent, {
        value: "visao-geral",
        className: "space-y-4",
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "grid grid-cols-1 lg:grid-cols-2 gap-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardHeader, {
              children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardTitle, {
                className: "flex items-center",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_lucidereact.PieChart, {
                  className: "h-5 w-5 mr-2"
                }), "Distribui\xe7\xe3o de Notas"]
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
              children: carregando ?
              /* istanbul ignore next */
              (/*#__PURE__*/cov_1kt2ovpjkp().b[28][0]++, (0, _jsxruntime.jsx)(_skeleton.Skeleton, {
                className: "h-64 w-full"
              })) :
              /* istanbul ignore next */
              (/*#__PURE__*/cov_1kt2ovpjkp().b[28][1]++, (0, _jsxruntime.jsx)(_recharts.ResponsiveContainer, {
                width: "100%",
                height: 300,
                children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_recharts.PieChart, {
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.Pie, {
                    data: dadosDistribuicao,
                    cx: "50%",
                    cy: "50%",
                    outerRadius: 80,
                    dataKey: "quantidade",
                    label: ({
                      nota,
                      quantidade
                    }) => {
                      /* istanbul ignore next */
                      cov_1kt2ovpjkp().f[22]++;
                      cov_1kt2ovpjkp().s[114]++;
                      return `${nota}: ${quantidade}`;
                    },
                    children: dadosDistribuicao.map((entry, index) => {
                      /* istanbul ignore next */
                      cov_1kt2ovpjkp().f[23]++;
                      cov_1kt2ovpjkp().s[115]++;
                      return /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.Cell, {
                        fill: entry.cor
                      }, `cell-${index}`);
                    })
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.Tooltip, {}), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.Legend, {})]
                })
              }))
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardHeader, {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
                children: "Top 5 Atendentes"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardDescription, {
                children: "Melhores m\xe9dias de avalia\xe7\xe3o"
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
              children: carregando ?
              /* istanbul ignore next */
              (/*#__PURE__*/cov_1kt2ovpjkp().b[29][0]++, (0, _jsxruntime.jsx)("div", {
                className: "space-y-3",
                children: [...Array(5)].map((_, i) => {
                  /* istanbul ignore next */
                  cov_1kt2ovpjkp().f[24]++;
                  cov_1kt2ovpjkp().s[116]++;
                  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex items-center space-x-3",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_skeleton.Skeleton, {
                      className: "h-8 w-8 rounded-full"
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "space-y-1 flex-1",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_skeleton.Skeleton, {
                        className: "h-4 w-24"
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_skeleton.Skeleton, {
                        className: "h-3 w-16"
                      })]
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_skeleton.Skeleton, {
                      className: "h-4 w-12"
                    })]
                  }, i);
                })
              })) :
              /* istanbul ignore next */
              (/*#__PURE__*/cov_1kt2ovpjkp().b[29][1]++, (0, _jsxruntime.jsx)("div", {
                className: "space-y-3",
                children: rankingAtendentes.slice(0, 5).map((atendente, index) => {
                  /* istanbul ignore next */
                  cov_1kt2ovpjkp().f[25]++;
                  cov_1kt2ovpjkp().s[117]++;
                  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex items-center space-x-3",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                      className: "flex-shrink-0 w-8 h-8 bg-primary/10 rounded-full flex items-center justify-center text-sm font-medium",
                      children: index + 1
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "flex-1 min-w-0",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                        className: "text-sm font-medium truncate",
                        children: atendente.nomeAtendente
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                        className: "text-xs text-muted-foreground",
                        children: atendente.setor
                      })]
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "text-right",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                        className: "text-sm font-medium",
                        children: atendente.media.toFixed(2)
                      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
                        className: "text-xs text-muted-foreground",
                        children: [atendente.totalAvaliacoes, " aval."]
                      })]
                    })]
                  }, atendente.atendenteId);
                })
              }))
            })]
          })]
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsContent, {
        value: "ranking",
        className: "space-y-4",
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardHeader, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
              children: "Ranking de Atendentes"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardDescription, {
              children: "Classifica\xe7\xe3o por m\xe9dia de avalia\xe7\xf5es"
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
            children: carregando ?
            /* istanbul ignore next */
            (/*#__PURE__*/cov_1kt2ovpjkp().b[30][0]++, (0, _jsxruntime.jsx)(_skeleton.Skeleton, {
              className: "h-96 w-full"
            })) :
            /* istanbul ignore next */
            (/*#__PURE__*/cov_1kt2ovpjkp().b[30][1]++, (0, _jsxruntime.jsx)(_recharts.ResponsiveContainer, {
              width: "100%",
              height: 400,
              children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_recharts.BarChart, {
                data: dadosRanking,
                margin: {
                  top: 20,
                  right: 30,
                  left: 20,
                  bottom: 5
                },
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.CartesianGrid, {
                  strokeDasharray: "3 3"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.XAxis, {
                  dataKey: "nome",
                  angle: -45,
                  textAnchor: "end",
                  height: 80
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.YAxis, {
                  domain: [0, 5]
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.Tooltip, {
                  formatter: (value, name) => {
                    /* istanbul ignore next */
                    cov_1kt2ovpjkp().f[26]++;
                    cov_1kt2ovpjkp().s[118]++;
                    return [name === 'media' ?
                    /* istanbul ignore next */
                    (cov_1kt2ovpjkp().b[31][0]++, `${value} (média)`) :
                    /* istanbul ignore next */
                    (cov_1kt2ovpjkp().b[31][1]++, `${value} avaliações`), name === 'media' ?
                    /* istanbul ignore next */
                    (cov_1kt2ovpjkp().b[32][0]++, 'Média') :
                    /* istanbul ignore next */
                    (cov_1kt2ovpjkp().b[32][1]++, 'Total')];
                  }
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.Bar, {
                  dataKey: "media",
                  fill: CORES_GRAFICOS.primaria
                })]
              })
            }))
          })]
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsContent, {
        value: "temporal",
        className: "space-y-4",
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardHeader, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
              children: "Evolu\xe7\xe3o Temporal"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardDescription, {
              children: "M\xe9dia de avalia\xe7\xf5es por per\xedodo"
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
            children: carregando ?
            /* istanbul ignore next */
            (/*#__PURE__*/cov_1kt2ovpjkp().b[33][0]++, (0, _jsxruntime.jsx)(_skeleton.Skeleton, {
              className: "h-96 w-full"
            })) :
            /* istanbul ignore next */
            (/*#__PURE__*/cov_1kt2ovpjkp().b[33][1]++, (0, _jsxruntime.jsx)(_recharts.ResponsiveContainer, {
              width: "100%",
              height: 400,
              children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_recharts.LineChart, {
                data: dadosComparativo,
                margin: {
                  top: 20,
                  right: 30,
                  left: 20,
                  bottom: 5
                },
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.CartesianGrid, {
                  strokeDasharray: "3 3"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.XAxis, {
                  dataKey: "data"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.YAxis, {
                  domain: [0, 5]
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.Tooltip, {
                  formatter: (value, name) => {
                    /* istanbul ignore next */
                    cov_1kt2ovpjkp().f[27]++;
                    cov_1kt2ovpjkp().s[119]++;
                    return [name === 'media' ?
                    /* istanbul ignore next */
                    (cov_1kt2ovpjkp().b[34][0]++, `${value} (média)`) :
                    /* istanbul ignore next */
                    (cov_1kt2ovpjkp().b[34][1]++, `${value} avaliações`), name === 'media' ?
                    /* istanbul ignore next */
                    (cov_1kt2ovpjkp().b[35][0]++, 'Média') :
                    /* istanbul ignore next */
                    (cov_1kt2ovpjkp().b[35][1]++, 'Total')];
                  }
                }), /*#__PURE__*/(0, _jsxruntime.jsx)(_recharts.Line, {
                  type: "monotone",
                  dataKey: "media",
                  stroke: CORES_GRAFICOS.primaria,
                  strokeWidth: 2,
                  dot: {
                    fill: CORES_GRAFICOS.primaria,
                    strokeWidth: 2,
                    r: 4
                  }
                })]
              })
            }))
          })]
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_tabs.TabsContent, {
        value: "distribuicao",
        className: "space-y-4",
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_card.Card, {
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_card.CardHeader, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardTitle, {
              children: "Distribui\xe7\xe3o Detalhada"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardDescription, {
              children: "An\xe1lise da distribui\xe7\xe3o de notas"
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_card.CardContent, {
            children: carregando ?
            /* istanbul ignore next */
            (/*#__PURE__*/cov_1kt2ovpjkp().b[36][0]++, (0, _jsxruntime.jsx)("div", {
              className: "space-y-4",
              children: [...Array(5)].map((_, i) => {
                /* istanbul ignore next */
                cov_1kt2ovpjkp().f[28]++;
                cov_1kt2ovpjkp().s[120]++;
                return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "space-y-2",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_skeleton.Skeleton, {
                    className: "h-4 w-16"
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)(_skeleton.Skeleton, {
                    className: "h-2 w-full"
                  })]
                }, i);
              })
            })) :
            /* istanbul ignore next */
            (cov_1kt2ovpjkp().b[36][1]++,
            /* istanbul ignore next */
            (cov_1kt2ovpjkp().b[37][0]++, dadosConsolidados) &&
            /* istanbul ignore next */
            (cov_1kt2ovpjkp().b[37][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "space-y-4",
              children: Object.entries(dadosConsolidados.distribuicaoGeral).map(([nota, quantidade]) => {
                /* istanbul ignore next */
                cov_1kt2ovpjkp().f[29]++;
                const porcentagem =
                /* istanbul ignore next */
                (cov_1kt2ovpjkp().s[121]++, dadosConsolidados.totalAvaliacoes > 0 ?
                /* istanbul ignore next */
                (cov_1kt2ovpjkp().b[38][0]++, quantidade / dadosConsolidados.totalAvaliacoes * 100) :
                /* istanbul ignore next */
                (cov_1kt2ovpjkp().b[38][1]++, 0));
                /* istanbul ignore next */
                cov_1kt2ovpjkp().s[122]++;
                return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "space-y-2",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex justify-between text-sm",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                      className: "font-medium",
                      children: [nota.replace('nota', 'Nota '), " ⭐"]
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                      className: "text-muted-foreground",
                      children: [quantidade, " (", porcentagem.toFixed(1), "%)"]
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)(_progress.Progress, {
                    value: porcentagem,
                    className: "h-2"
                  })]
                }, nota);
              })
            })))
          })]
        })
      })]
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJNZXRyaWNhc0F2YWxpYWNvZXMiLCJDT1JFU19HUkFGSUNPUyIsImNvdl8xa3Qyb3ZwamtwIiwicyIsInByaW1hcmlhIiwic2VjdW5kYXJpYSIsInRlcmNpYXJpYSIsInF1YXRlcm5hcmlhIiwicXVpbmFyaWEiLCJDT1JFU19OT1RBUyIsIm5vdGExIiwibm90YTIiLCJub3RhMyIsIm5vdGE0Iiwibm90YTUiLCJjbGFzc05hbWUiLCJmIiwiY2FycmVnYW5kbyIsInNldENhcnJlZ2FuZG8iLCJfcmVhY3QiLCJ1c2VTdGF0ZSIsImVycm8iLCJzZXRFcnJvIiwiZGFkb3NDb25zb2xpZGFkb3MiLCJzZXREYWRvc0NvbnNvbGlkYWRvcyIsInJhbmtpbmdBdGVuZGVudGVzIiwic2V0UmFua2luZ0F0ZW5kZW50ZXMiLCJjb21wYXJhdGl2b1RlbXBvcmFsIiwic2V0Q29tcGFyYXRpdm9UZW1wb3JhbCIsInBlcmlvZG9zIiwic2V0UGVyaW9kb3MiLCJhdGVuZGVudGVzIiwic2V0QXRlbmRlbnRlcyIsImZpbHRyb3MiLCJzZXRGaWx0cm9zIiwiYWJhQXRpdmEiLCJzZXRBYmFBdGl2YSIsInVzZUVmZmVjdCIsImNhcnJlZ2FyRGFkb3MiLCJjYXJyZWdhclBlcmlvZG9zIiwiY2FycmVnYXJBdGVuZGVudGVzIiwiYiIsImNvbnNvbGlkYWRvcyIsInJhbmtpbmciLCJjb21wYXJhdGl2byIsIlByb21pc2UiLCJhbGwiLCJmZXRjaCIsIm1ldGhvZCIsImhlYWRlcnMiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsInRoZW4iLCJyZXMiLCJqc29uIiwibGltaXRlIiwiZGF0YSIsImVycm9yIiwiY29uc29sZSIsInJlc3BvbnNlIiwiYXBsaWNhckZpbHRybyIsIm5vdm9zRmlsdHJvcyIsInByZXYiLCJsaW1wYXJGaWx0cm9zIiwiZXhwb3J0YXJSZWxhdG9yaW8iLCJvayIsImJsb2IiLCJ1cmwiLCJ3aW5kb3ciLCJVUkwiLCJjcmVhdGVPYmplY3RVUkwiLCJhIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiaHJlZiIsImRvd25sb2FkIiwiRGF0ZSIsInRvSVNPU3RyaW5nIiwic3BsaXQiLCJhcHBlbmRDaGlsZCIsImNsaWNrIiwicmV2b2tlT2JqZWN0VVJMIiwicmVtb3ZlQ2hpbGQiLCJkYWRvc0Rpc3RyaWJ1aWNhbyIsIm5vdGEiLCJxdWFudGlkYWRlIiwiZGlzdHJpYnVpY2FvR2VyYWwiLCJjb3IiLCJkYWRvc1JhbmtpbmciLCJtYXAiLCJhdGVuZGVudGUiLCJub21lIiwibm9tZUF0ZW5kZW50ZSIsIm1lZGlhIiwidG90YWwiLCJ0b3RhbEF2YWxpYWNvZXMiLCJzZXRvciIsImRhZG9zQ29tcGFyYXRpdm8iLCJwZXJpb2RvIiwibm9tZVBlcmlvZG8iLCJtZWRpYUdlcmFsIiwiZGF0YUluaWNpbyIsInRvTG9jYWxlRGF0ZVN0cmluZyIsIm1vbnRoIiwieWVhciIsIl9qc3hydW50aW1lIiwianN4IiwiX2FsZXJ0IiwiQWxlcnQiLCJBbGVydERlc2NyaXB0aW9uIiwianN4cyIsIl9zZWxlY3QiLCJTZWxlY3QiLCJvblZhbHVlQ2hhbmdlIiwidmFsdWUiLCJwZXJpb2RvSWRzIiwidW5kZWZpbmVkIiwiU2VsZWN0VHJpZ2dlciIsIlNlbGVjdFZhbHVlIiwicGxhY2Vob2xkZXIiLCJTZWxlY3RDb250ZW50IiwiU2VsZWN0SXRlbSIsImlkIiwiX2J1dHRvbiIsIkJ1dHRvbiIsInZhcmlhbnQiLCJzaXplIiwib25DbGljayIsIl9sdWNpZGVyZWFjdCIsIkZpbHRlciIsIlJlZnJlc2hDdyIsIkRvd25sb2FkIiwiQXJyYXkiLCJfIiwiaSIsIl9jYXJkIiwiQ2FyZCIsIkNhcmRIZWFkZXIiLCJfc2tlbGV0b24iLCJTa2VsZXRvbiIsIkNhcmREZXNjcmlwdGlvbiIsIkNhcmRUaXRsZSIsIkNhcmRDb250ZW50IiwiVXNlcnMiLCJhdGVuZGVudGVzQXZhbGlhZG9zIiwidG9GaXhlZCIsIlRyZW5kaW5nVXAiLCJCYXJDaGFydDMiLCJUcmVuZGluZ0Rvd24iLCJtZWRpYW5hR2VyYWwiLCJkZXN2aW9QYWRyYW9HZXJhbCIsIl9iYWRnZSIsIkJhZGdlIiwicGVyaW9kb3NBdGl2b3MiLCJDYWxlbmRhciIsIl90YWJzIiwiVGFicyIsIlRhYnNMaXN0IiwiVGFic1RyaWdnZXIiLCJUYWJzQ29udGVudCIsIlBpZUNoYXJ0IiwiX3JlY2hhcnRzIiwiUmVzcG9uc2l2ZUNvbnRhaW5lciIsIndpZHRoIiwiaGVpZ2h0IiwiUGllIiwiY3giLCJjeSIsIm91dGVyUmFkaXVzIiwiZGF0YUtleSIsImxhYmVsIiwiZW50cnkiLCJpbmRleCIsIkNlbGwiLCJmaWxsIiwiVG9vbHRpcCIsIkxlZ2VuZCIsInNsaWNlIiwiYXRlbmRlbnRlSWQiLCJCYXJDaGFydCIsIm1hcmdpbiIsInRvcCIsInJpZ2h0IiwibGVmdCIsImJvdHRvbSIsIkNhcnRlc2lhbkdyaWQiLCJzdHJva2VEYXNoYXJyYXkiLCJYQXhpcyIsImFuZ2xlIiwidGV4dEFuY2hvciIsIllBeGlzIiwiZG9tYWluIiwiZm9ybWF0dGVyIiwibmFtZSIsIkJhciIsIkxpbmVDaGFydCIsIkxpbmUiLCJ0eXBlIiwic3Ryb2tlIiwic3Ryb2tlV2lkdGgiLCJkb3QiLCJyIiwiT2JqZWN0IiwiZW50cmllcyIsInBvcmNlbnRhZ2VtIiwicmVwbGFjZSIsIl9wcm9ncmVzcyIsIlByb2dyZXNzIl0sInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxOZXJldSBKclxcRG9jdW1lbnRzXFxEZXZcXG5ld1xcc3JjXFxjb21wb25lbnRzXFxhdmFsaWFjb2VzXFxtZXRyaWNhcy1hdmFsaWFjb2VzLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCc7XG5cbmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgQ2FyZCwgQ2FyZENvbnRlbnQsIENhcmREZXNjcmlwdGlvbiwgQ2FyZEhlYWRlciwgQ2FyZFRpdGxlIH0gZnJvbSAnQC9jb21wb25lbnRzL3VpL2NhcmQnO1xuaW1wb3J0IHsgQnV0dG9uIH0gZnJvbSAnQC9jb21wb25lbnRzL3VpL2J1dHRvbic7XG5pbXBvcnQgeyBTZWxlY3QsIFNlbGVjdENvbnRlbnQsIFNlbGVjdEl0ZW0sIFNlbGVjdFRyaWdnZXIsIFNlbGVjdFZhbHVlIH0gZnJvbSAnQC9jb21wb25lbnRzL3VpL3NlbGVjdCc7XG5pbXBvcnQgeyBCYWRnZSB9IGZyb20gJ0AvY29tcG9uZW50cy91aS9iYWRnZSc7XG5pbXBvcnQgeyBUYWJzLCBUYWJzQ29udGVudCwgVGFic0xpc3QsIFRhYnNUcmlnZ2VyIH0gZnJvbSAnQC9jb21wb25lbnRzL3VpL3RhYnMnO1xuaW1wb3J0IHsgUHJvZ3Jlc3MgfSBmcm9tICdAL2NvbXBvbmVudHMvdWkvcHJvZ3Jlc3MnO1xuaW1wb3J0IHsgU2tlbGV0b24gfSBmcm9tICdAL2NvbXBvbmVudHMvdWkvc2tlbGV0b24nO1xuaW1wb3J0IHsgQWxlcnQsIEFsZXJ0RGVzY3JpcHRpb24gfSBmcm9tICdAL2NvbXBvbmVudHMvdWkvYWxlcnQnO1xuaW1wb3J0IHsgXG4gIEJhckNoYXJ0LCBcbiAgQmFyLCBcbiAgWEF4aXMsIFxuICBZQXhpcywgXG4gIENhcnRlc2lhbkdyaWQsIFxuICBUb29sdGlwLCBcbiAgUmVzcG9uc2l2ZUNvbnRhaW5lcixcbiAgTGluZUNoYXJ0LFxuICBMaW5lLFxuICBQaWVDaGFydCxcbiAgUGllLFxuICBDZWxsLFxuICBMZWdlbmRcbn0gZnJvbSAncmVjaGFydHMnO1xuaW1wb3J0IHsgXG4gIFRyZW5kaW5nVXAsIFxuICBUcmVuZGluZ0Rvd24sIFxuICBVc2VycywgXG4gIENhbGVuZGFyLCBcbiAgQmFyQ2hhcnQzLFxuICBQaWVDaGFydCBhcyBQaWVDaGFydEljb24sXG4gIERvd25sb2FkLFxuICBGaWx0ZXIsXG4gIFJlZnJlc2hDd1xufSBmcm9tICdsdWNpZGUtcmVhY3QnO1xuaW1wb3J0IHsgXG4gIE1ldHJpY2FzQXRlbmRlbnRlLCBcbiAgTWV0cmljYXNQZXJpb2RvLCBcbiAgQ29tcGFyYXRpdm9UZW1wb3JhbCwgXG4gIEZpbHRyb3NNZXRyaWNhcyBcbn0gZnJvbSAnQC9saWIvdXRpbHMvbWV0cmljYXMtYXZhbGlhY29lcyc7XG5cbmludGVyZmFjZSBNZXRyaWNhc0F2YWxpYWNvZXNQcm9wcyB7XG4gIGNsYXNzTmFtZT86IHN0cmluZztcbn1cblxuaW50ZXJmYWNlIERhZG9zQ29uc29saWRhZG9zIHtcbiAgdG90YWxBdmFsaWFjb2VzOiBudW1iZXI7XG4gIG1lZGlhR2VyYWw6IG51bWJlcjtcbiAgbWVkaWFuYUdlcmFsOiBudW1iZXI7XG4gIGRlc3Zpb1BhZHJhb0dlcmFsOiBudW1iZXI7XG4gIGRpc3RyaWJ1aWNhb0dlcmFsOiB7XG4gICAgbm90YTE6IG51bWJlcjtcbiAgICBub3RhMjogbnVtYmVyO1xuICAgIG5vdGEzOiBudW1iZXI7XG4gICAgbm90YTQ6IG51bWJlcjtcbiAgICBub3RhNTogbnVtYmVyO1xuICB9O1xuICBhdGVuZGVudGVzQXZhbGlhZG9zOiBudW1iZXI7XG4gIHBlcmlvZG9zQXRpdm9zOiBudW1iZXI7XG59XG5cbmludGVyZmFjZSBQZXJpb2RvIHtcbiAgaWQ6IHN0cmluZztcbiAgbm9tZTogc3RyaW5nO1xuICBkYXRhSW5pY2lvOiBzdHJpbmc7XG4gIGRhdGFGaW06IHN0cmluZztcbiAgc3RhdHVzOiBzdHJpbmc7XG59XG5cbmludGVyZmFjZSBBdGVuZGVudGUge1xuICBpZDogc3RyaW5nO1xuICBub21lOiBzdHJpbmc7XG4gIHNldG9yOiBzdHJpbmc7XG4gIGRlcGFydGFtZW50bz86IHN0cmluZztcbn1cblxuY29uc3QgQ09SRVNfR1JBRklDT1MgPSB7XG4gIHByaW1hcmlhOiAnIzNiODJmNicsXG4gIHNlY3VuZGFyaWE6ICcjMTBiOTgxJyxcbiAgdGVyY2lhcmlhOiAnI2Y1OWUwYicsXG4gIHF1YXRlcm5hcmlhOiAnI2VmNDQ0NCcsXG4gIHF1aW5hcmlhOiAnIzhiNWNmNidcbn07XG5cbmNvbnN0IENPUkVTX05PVEFTID0ge1xuICBub3RhMTogJyNlZjQ0NDQnLCAvLyBWZXJtZWxob1xuICBub3RhMjogJyNmOTczMTYnLCAvLyBMYXJhbmphXG4gIG5vdGEzOiAnI2VhYjMwOCcsIC8vIEFtYXJlbG9cbiAgbm90YTQ6ICcjMjJjNTVlJywgLy8gVmVyZGUgY2xhcm9cbiAgbm90YTU6ICcjMTZhMzRhJyAgLy8gVmVyZGUgZXNjdXJvXG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNZXRyaWNhc0F2YWxpYWNvZXMoeyBjbGFzc05hbWUgfTogTWV0cmljYXNBdmFsaWFjb2VzUHJvcHMpIHtcbiAgY29uc3QgW2NhcnJlZ2FuZG8sIHNldENhcnJlZ2FuZG9dID0gdXNlU3RhdGUodHJ1ZSk7XG4gIGNvbnN0IFtlcnJvLCBzZXRFcnJvXSA9IHVzZVN0YXRlPHN0cmluZyB8IG51bGw+KG51bGwpO1xuICBjb25zdCBbZGFkb3NDb25zb2xpZGFkb3MsIHNldERhZG9zQ29uc29saWRhZG9zXSA9IHVzZVN0YXRlPERhZG9zQ29uc29saWRhZG9zIHwgbnVsbD4obnVsbCk7XG4gIGNvbnN0IFtyYW5raW5nQXRlbmRlbnRlcywgc2V0UmFua2luZ0F0ZW5kZW50ZXNdID0gdXNlU3RhdGU8TWV0cmljYXNBdGVuZGVudGVbXT4oW10pO1xuICBjb25zdCBbY29tcGFyYXRpdm9UZW1wb3JhbCwgc2V0Q29tcGFyYXRpdm9UZW1wb3JhbF0gPSB1c2VTdGF0ZTxDb21wYXJhdGl2b1RlbXBvcmFsW10+KFtdKTtcbiAgY29uc3QgW3BlcmlvZG9zLCBzZXRQZXJpb2Rvc10gPSB1c2VTdGF0ZTxQZXJpb2RvW10+KFtdKTtcbiAgY29uc3QgW2F0ZW5kZW50ZXMsIHNldEF0ZW5kZW50ZXNdID0gdXNlU3RhdGU8QXRlbmRlbnRlW10+KFtdKTtcbiAgY29uc3QgW2ZpbHRyb3MsIHNldEZpbHRyb3NdID0gdXNlU3RhdGU8RmlsdHJvc01ldHJpY2FzPih7fSk7XG4gIGNvbnN0IFthYmFBdGl2YSwgc2V0QWJhQXRpdmFdID0gdXNlU3RhdGUoJ3Zpc2FvLWdlcmFsJyk7XG5cbiAgLy8gQ2FycmVnYXIgZGFkb3MgaW5pY2lhaXNcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjYXJyZWdhckRhZG9zKCk7XG4gICAgY2FycmVnYXJQZXJpb2RvcygpO1xuICAgIGNhcnJlZ2FyQXRlbmRlbnRlcygpO1xuICB9LCBbXSk7XG5cbiAgLy8gUmVjYXJyZWdhciBkYWRvcyBxdWFuZG8gZmlsdHJvcyBtdWRhcmVtXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCFjYXJyZWdhbmRvKSB7XG4gICAgICBjYXJyZWdhckRhZG9zKCk7XG4gICAgfVxuICB9LCBbZmlsdHJvc10pO1xuXG4gIGNvbnN0IGNhcnJlZ2FyRGFkb3MgPSBhc3luYyAoKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIHNldENhcnJlZ2FuZG8odHJ1ZSk7XG4gICAgICBzZXRFcnJvKG51bGwpO1xuXG4gICAgICBjb25zdCBbY29uc29saWRhZG9zLCByYW5raW5nLCBjb21wYXJhdGl2b10gPSBhd2FpdCBQcm9taXNlLmFsbChbXG4gICAgICAgIGZldGNoKCcvYXBpL2F2YWxpYWNvZXMvbWV0cmljYXMvY29uc29saWRhZGFzJywge1xuICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9LFxuICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgZmlsdHJvcyB9KVxuICAgICAgICB9KS50aGVuKHJlcyA9PiByZXMuanNvbigpKSxcbiAgICAgICAgZmV0Y2goJy9hcGkvYXZhbGlhY29lcy9tZXRyaWNhcy9yYW5raW5nJywge1xuICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9LFxuICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgZmlsdHJvcywgbGltaXRlOiAxMCB9KVxuICAgICAgICB9KS50aGVuKHJlcyA9PiByZXMuanNvbigpKSxcbiAgICAgICAgZmV0Y2goJy9hcGkvYXZhbGlhY29lcy9tZXRyaWNhcy9jb21wYXJhdGl2by10ZW1wb3JhbCcsIHtcbiAgICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgICBoZWFkZXJzOiB7ICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicgfSxcbiAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IGZpbHRyb3MgfSlcbiAgICAgICAgfSkudGhlbihyZXMgPT4gcmVzLmpzb24oKSlcbiAgICAgIF0pO1xuXG4gICAgICBzZXREYWRvc0NvbnNvbGlkYWRvcyhjb25zb2xpZGFkb3MuZGF0YSk7XG4gICAgICBzZXRSYW5raW5nQXRlbmRlbnRlcyhyYW5raW5nLmRhdGEpO1xuICAgICAgc2V0Q29tcGFyYXRpdm9UZW1wb3JhbChjb21wYXJhdGl2by5kYXRhKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRXJybyBhbyBjYXJyZWdhciBtw6l0cmljYXM6JywgZXJyb3IpO1xuICAgICAgc2V0RXJybygnRXJybyBhbyBjYXJyZWdhciBkYWRvcyBkYXMgbcOpdHJpY2FzJyk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIHNldENhcnJlZ2FuZG8oZmFsc2UpO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBjYXJyZWdhclBlcmlvZG9zID0gYXN5bmMgKCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCcvYXBpL3BlcmlvZG9zLWF2YWxpYWNhbycpO1xuICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICAgIHNldFBlcmlvZG9zKGRhdGEuZGF0YSB8fCBbXSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm8gYW8gY2FycmVnYXIgcGVyw61vZG9zOicsIGVycm9yKTtcbiAgICB9XG4gIH07XG5cbiAgY29uc3QgY2FycmVnYXJBdGVuZGVudGVzID0gYXN5bmMgKCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCcvYXBpL2F0ZW5kZW50ZXMnKTtcbiAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICBzZXRBdGVuZGVudGVzKGRhdGEuZGF0YSB8fCBbXSk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm8gYW8gY2FycmVnYXIgYXRlbmRlbnRlczonLCBlcnJvcik7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGFwbGljYXJGaWx0cm8gPSAobm92b3NGaWx0cm9zOiBQYXJ0aWFsPEZpbHRyb3NNZXRyaWNhcz4pID0+IHtcbiAgICBzZXRGaWx0cm9zKHByZXYgPT4gKHsgLi4ucHJldiwgLi4ubm92b3NGaWx0cm9zIH0pKTtcbiAgfTtcblxuICBjb25zdCBsaW1wYXJGaWx0cm9zID0gKCkgPT4ge1xuICAgIHNldEZpbHRyb3Moe30pO1xuICB9O1xuXG4gIGNvbnN0IGV4cG9ydGFyUmVsYXRvcmlvID0gYXN5bmMgKCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCcvYXBpL2F2YWxpYWNvZXMvbWV0cmljYXMvZXhwb3J0YXInLCB7XG4gICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICBoZWFkZXJzOiB7ICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicgfSxcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoeyBmaWx0cm9zIH0pXG4gICAgICB9KTtcbiAgICAgIFxuICAgICAgaWYgKHJlc3BvbnNlLm9rKSB7XG4gICAgICAgIGNvbnN0IGJsb2IgPSBhd2FpdCByZXNwb25zZS5ibG9iKCk7XG4gICAgICAgIGNvbnN0IHVybCA9IHdpbmRvdy5VUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpO1xuICAgICAgICBjb25zdCBhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xuICAgICAgICBhLmhyZWYgPSB1cmw7XG4gICAgICAgIGEuZG93bmxvYWQgPSBgbWV0cmljYXMtYXZhbGlhY29lcy0ke25ldyBEYXRlKCkudG9JU09TdHJpbmcoKS5zcGxpdCgnVCcpWzBdfS54bHN4YDtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChhKTtcbiAgICAgICAgYS5jbGljaygpO1xuICAgICAgICB3aW5kb3cuVVJMLnJldm9rZU9iamVjdFVSTCh1cmwpO1xuICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGEpO1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvIGFvIGV4cG9ydGFyIHJlbGF0w7NyaW86JywgZXJyb3IpO1xuICAgIH1cbiAgfTtcblxuICAvLyBQcmVwYXJhciBkYWRvcyBwYXJhIGdyw6FmaWNvc1xuICBjb25zdCBkYWRvc0Rpc3RyaWJ1aWNhbyA9IGRhZG9zQ29uc29saWRhZG9zID8gW1xuICAgIHsgbm90YTogJ05vdGEgMScsIHF1YW50aWRhZGU6IGRhZG9zQ29uc29saWRhZG9zLmRpc3RyaWJ1aWNhb0dlcmFsLm5vdGExLCBjb3I6IENPUkVTX05PVEFTLm5vdGExIH0sXG4gICAgeyBub3RhOiAnTm90YSAyJywgcXVhbnRpZGFkZTogZGFkb3NDb25zb2xpZGFkb3MuZGlzdHJpYnVpY2FvR2VyYWwubm90YTIsIGNvcjogQ09SRVNfTk9UQVMubm90YTIgfSxcbiAgICB7IG5vdGE6ICdOb3RhIDMnLCBxdWFudGlkYWRlOiBkYWRvc0NvbnNvbGlkYWRvcy5kaXN0cmlidWljYW9HZXJhbC5ub3RhMywgY29yOiBDT1JFU19OT1RBUy5ub3RhMyB9LFxuICAgIHsgbm90YTogJ05vdGEgNCcsIHF1YW50aWRhZGU6IGRhZG9zQ29uc29saWRhZG9zLmRpc3RyaWJ1aWNhb0dlcmFsLm5vdGE0LCBjb3I6IENPUkVTX05PVEFTLm5vdGE0IH0sXG4gICAgeyBub3RhOiAnTm90YSA1JywgcXVhbnRpZGFkZTogZGFkb3NDb25zb2xpZGFkb3MuZGlzdHJpYnVpY2FvR2VyYWwubm90YTUsIGNvcjogQ09SRVNfTk9UQVMubm90YTUgfVxuICBdIDogW107XG5cbiAgY29uc3QgZGFkb3NSYW5raW5nID0gcmFua2luZ0F0ZW5kZW50ZXMubWFwKGF0ZW5kZW50ZSA9PiAoe1xuICAgIG5vbWU6IGF0ZW5kZW50ZS5ub21lQXRlbmRlbnRlLnNwbGl0KCcgJylbMF0sIC8vIEFwZW5hcyBwcmltZWlybyBub21lXG4gICAgbWVkaWE6IGF0ZW5kZW50ZS5tZWRpYSxcbiAgICB0b3RhbDogYXRlbmRlbnRlLnRvdGFsQXZhbGlhY29lcyxcbiAgICBzZXRvcjogYXRlbmRlbnRlLnNldG9yXG4gIH0pKTtcblxuICBjb25zdCBkYWRvc0NvbXBhcmF0aXZvID0gY29tcGFyYXRpdm9UZW1wb3JhbC5tYXAocGVyaW9kbyA9PiAoe1xuICAgIHBlcmlvZG86IHBlcmlvZG8ubm9tZVBlcmlvZG8sXG4gICAgbWVkaWE6IHBlcmlvZG8ubWVkaWFHZXJhbCxcbiAgICB0b3RhbDogcGVyaW9kby50b3RhbEF2YWxpYWNvZXMsXG4gICAgZGF0YTogbmV3IERhdGUocGVyaW9kby5kYXRhSW5pY2lvKS50b0xvY2FsZURhdGVTdHJpbmcoJ3B0LUJSJywgeyBtb250aDogJ3Nob3J0JywgeWVhcjogJ251bWVyaWMnIH0pXG4gIH0pKTtcblxuICBpZiAoZXJybykge1xuICAgIHJldHVybiAoXG4gICAgICA8QWxlcnQgY2xhc3NOYW1lPVwibS00XCI+XG4gICAgICAgIDxBbGVydERlc2NyaXB0aW9uPntlcnJvfTwvQWxlcnREZXNjcmlwdGlvbj5cbiAgICAgIDwvQWxlcnQ+XG4gICAgKTtcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9e2BzcGFjZS15LTYgJHtjbGFzc05hbWV9YH0+XG4gICAgICB7LyogQ2FiZcOnYWxobyBjb20gZmlsdHJvcyAqL31cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBmbGV4LWNvbCBzbTpmbGV4LXJvdyBqdXN0aWZ5LWJldHdlZW4gaXRlbXMtc3RhcnQgc206aXRlbXMtY2VudGVyIGdhcC00XCI+XG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPGgyIGNsYXNzTmFtZT1cInRleHQtMnhsIGZvbnQtYm9sZFwiPk3DqXRyaWNhcyBkZSBBdmFsaWHDp8O1ZXM8L2gyPlxuICAgICAgICAgIDxwIGNsYXNzTmFtZT1cInRleHQtbXV0ZWQtZm9yZWdyb3VuZFwiPkFuw6FsaXNlIGVzdGF0w61zdGljYSBlIGNvbXBhcmF0aXZhIGRhcyBhdmFsaWHDp8O1ZXMgMzYwwrA8L3A+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICBcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGZsZXgtd3JhcCBnYXAtMlwiPlxuICAgICAgICAgIDxTZWxlY3Qgb25WYWx1ZUNoYW5nZT17KHZhbHVlKSA9PiBhcGxpY2FyRmlsdHJvKHsgcGVyaW9kb0lkczogdmFsdWUgPyBbdmFsdWVdIDogdW5kZWZpbmVkIH0pfT5cbiAgICAgICAgICAgIDxTZWxlY3RUcmlnZ2VyIGNsYXNzTmFtZT1cInctWzIwMHB4XVwiPlxuICAgICAgICAgICAgICA8U2VsZWN0VmFsdWUgcGxhY2Vob2xkZXI9XCJGaWx0cmFyIHBvciBwZXLDrW9kb1wiIC8+XG4gICAgICAgICAgICA8L1NlbGVjdFRyaWdnZXI+XG4gICAgICAgICAgICA8U2VsZWN0Q29udGVudD5cbiAgICAgICAgICAgICAgPFNlbGVjdEl0ZW0gdmFsdWU9XCJ0b2Rvc1wiPlRvZG9zIG9zIHBlcsOtb2RvczwvU2VsZWN0SXRlbT5cbiAgICAgICAgICAgICAge3BlcmlvZG9zLm1hcChwZXJpb2RvID0+IChcbiAgICAgICAgICAgICAgICA8U2VsZWN0SXRlbSBrZXk9e3BlcmlvZG8uaWR9IHZhbHVlPXtwZXJpb2RvLmlkfT5cbiAgICAgICAgICAgICAgICAgIHtwZXJpb2RvLm5vbWV9XG4gICAgICAgICAgICAgICAgPC9TZWxlY3RJdGVtPlxuICAgICAgICAgICAgICApKX1cbiAgICAgICAgICAgIDwvU2VsZWN0Q29udGVudD5cbiAgICAgICAgICA8L1NlbGVjdD5cbiAgICAgICAgICBcbiAgICAgICAgICA8QnV0dG9uIHZhcmlhbnQ9XCJvdXRsaW5lXCIgc2l6ZT1cInNtXCIgb25DbGljaz17bGltcGFyRmlsdHJvc30+XG4gICAgICAgICAgICA8RmlsdGVyIGNsYXNzTmFtZT1cImgtNCB3LTQgbXItMlwiIC8+XG4gICAgICAgICAgICBMaW1wYXIgRmlsdHJvc1xuICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgIFxuICAgICAgICAgIDxCdXR0b24gdmFyaWFudD1cIm91dGxpbmVcIiBzaXplPVwic21cIiBvbkNsaWNrPXtjYXJyZWdhckRhZG9zfT5cbiAgICAgICAgICAgIDxSZWZyZXNoQ3cgY2xhc3NOYW1lPVwiaC00IHctNCBtci0yXCIgLz5cbiAgICAgICAgICAgIEF0dWFsaXphclxuICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgIFxuICAgICAgICAgIDxCdXR0b24gdmFyaWFudD1cIm91dGxpbmVcIiBzaXplPVwic21cIiBvbkNsaWNrPXtleHBvcnRhclJlbGF0b3Jpb30+XG4gICAgICAgICAgICA8RG93bmxvYWQgY2xhc3NOYW1lPVwiaC00IHctNCBtci0yXCIgLz5cbiAgICAgICAgICAgIEV4cG9ydGFyXG4gICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG5cbiAgICAgIHsvKiBDYXJkcyBkZSByZXN1bW8gKi99XG4gICAgICB7Y2FycmVnYW5kbyA/IChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJncmlkIGdyaWQtY29scy0xIG1kOmdyaWQtY29scy0yIGxnOmdyaWQtY29scy00IGdhcC00XCI+XG4gICAgICAgICAge1suLi5BcnJheSg0KV0ubWFwKChfLCBpKSA9PiAoXG4gICAgICAgICAgICA8Q2FyZCBrZXk9e2l9PlxuICAgICAgICAgICAgICA8Q2FyZEhlYWRlciBjbGFzc05hbWU9XCJwYi0yXCI+XG4gICAgICAgICAgICAgICAgPFNrZWxldG9uIGNsYXNzTmFtZT1cImgtNCB3LTI0XCIgLz5cbiAgICAgICAgICAgICAgICA8U2tlbGV0b24gY2xhc3NOYW1lPVwiaC04IHctMTZcIiAvPlxuICAgICAgICAgICAgICA8L0NhcmRIZWFkZXI+XG4gICAgICAgICAgICA8L0NhcmQ+XG4gICAgICAgICAgKSl9XG4gICAgICAgIDwvZGl2PlxuICAgICAgKSA6IGRhZG9zQ29uc29saWRhZG9zICYmIChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJncmlkIGdyaWQtY29scy0xIG1kOmdyaWQtY29scy0yIGxnOmdyaWQtY29scy00IGdhcC00XCI+XG4gICAgICAgICAgPENhcmQ+XG4gICAgICAgICAgICA8Q2FyZEhlYWRlciBjbGFzc05hbWU9XCJwYi0yXCI+XG4gICAgICAgICAgICAgIDxDYXJkRGVzY3JpcHRpb24+VG90YWwgZGUgQXZhbGlhw6fDtWVzPC9DYXJkRGVzY3JpcHRpb24+XG4gICAgICAgICAgICAgIDxDYXJkVGl0bGUgY2xhc3NOYW1lPVwidGV4dC0yeGxcIj57ZGFkb3NDb25zb2xpZGFkb3MudG90YWxBdmFsaWFjb2VzfTwvQ2FyZFRpdGxlPlxuICAgICAgICAgICAgPC9DYXJkSGVhZGVyPlxuICAgICAgICAgICAgPENhcmRDb250ZW50PlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIHRleHQtc20gdGV4dC1tdXRlZC1mb3JlZ3JvdW5kXCI+XG4gICAgICAgICAgICAgICAgPFVzZXJzIGNsYXNzTmFtZT1cImgtNCB3LTQgbXItMVwiIC8+XG4gICAgICAgICAgICAgICAge2RhZG9zQ29uc29saWRhZG9zLmF0ZW5kZW50ZXNBdmFsaWFkb3N9IGF0ZW5kZW50ZXNcbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L0NhcmRDb250ZW50PlxuICAgICAgICAgIDwvQ2FyZD5cbiAgICAgICAgICBcbiAgICAgICAgICA8Q2FyZD5cbiAgICAgICAgICAgIDxDYXJkSGVhZGVyIGNsYXNzTmFtZT1cInBiLTJcIj5cbiAgICAgICAgICAgICAgPENhcmREZXNjcmlwdGlvbj5Nw6lkaWEgR2VyYWw8L0NhcmREZXNjcmlwdGlvbj5cbiAgICAgICAgICAgICAgPENhcmRUaXRsZSBjbGFzc05hbWU9XCJ0ZXh0LTJ4bCBmbGV4IGl0ZW1zLWNlbnRlclwiPlxuICAgICAgICAgICAgICAgIHtkYWRvc0NvbnNvbGlkYWRvcy5tZWRpYUdlcmFsLnRvRml4ZWQoMil9XG4gICAgICAgICAgICAgICAge2RhZG9zQ29uc29saWRhZG9zLm1lZGlhR2VyYWwgPj0gNCA/IChcbiAgICAgICAgICAgICAgICAgIDxUcmVuZGluZ1VwIGNsYXNzTmFtZT1cImgtNSB3LTUgbWwtMiB0ZXh0LWdyZWVuLTUwMFwiIC8+XG4gICAgICAgICAgICAgICAgKSA6IGRhZG9zQ29uc29saWRhZG9zLm1lZGlhR2VyYWwgPj0gMyA/IChcbiAgICAgICAgICAgICAgICAgIDxCYXJDaGFydDMgY2xhc3NOYW1lPVwiaC01IHctNSBtbC0yIHRleHQteWVsbG93LTUwMFwiIC8+XG4gICAgICAgICAgICAgICAgKSA6IChcbiAgICAgICAgICAgICAgICAgIDxUcmVuZGluZ0Rvd24gY2xhc3NOYW1lPVwiaC01IHctNSBtbC0yIHRleHQtcmVkLTUwMFwiIC8+XG4gICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgPC9DYXJkVGl0bGU+XG4gICAgICAgICAgICA8L0NhcmRIZWFkZXI+XG4gICAgICAgICAgICA8Q2FyZENvbnRlbnQ+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIgdGV4dC1zbSB0ZXh0LW11dGVkLWZvcmVncm91bmRcIj5cbiAgICAgICAgICAgICAgICBNZWRpYW5hOiB7ZGFkb3NDb25zb2xpZGFkb3MubWVkaWFuYUdlcmFsLnRvRml4ZWQoMil9XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9DYXJkQ29udGVudD5cbiAgICAgICAgICA8L0NhcmQ+XG4gICAgICAgICAgXG4gICAgICAgICAgPENhcmQ+XG4gICAgICAgICAgICA8Q2FyZEhlYWRlciBjbGFzc05hbWU9XCJwYi0yXCI+XG4gICAgICAgICAgICAgIDxDYXJkRGVzY3JpcHRpb24+RGVzdmlvIFBhZHLDo288L0NhcmREZXNjcmlwdGlvbj5cbiAgICAgICAgICAgICAgPENhcmRUaXRsZSBjbGFzc05hbWU9XCJ0ZXh0LTJ4bFwiPntkYWRvc0NvbnNvbGlkYWRvcy5kZXN2aW9QYWRyYW9HZXJhbC50b0ZpeGVkKDIpfTwvQ2FyZFRpdGxlPlxuICAgICAgICAgICAgPC9DYXJkSGVhZGVyPlxuICAgICAgICAgICAgPENhcmRDb250ZW50PlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIHRleHQtc20gdGV4dC1tdXRlZC1mb3JlZ3JvdW5kXCI+XG4gICAgICAgICAgICAgICAge2RhZG9zQ29uc29saWRhZG9zLmRlc3Zpb1BhZHJhb0dlcmFsIDw9IDEgPyAoXG4gICAgICAgICAgICAgICAgICA8QmFkZ2UgdmFyaWFudD1cInNlY29uZGFyeVwiIGNsYXNzTmFtZT1cInRleHQteHNcIj5CYWl4YSB2YXJpYcOnw6NvPC9CYWRnZT5cbiAgICAgICAgICAgICAgICApIDogZGFkb3NDb25zb2xpZGFkb3MuZGVzdmlvUGFkcmFvR2VyYWwgPD0gMS41ID8gKFxuICAgICAgICAgICAgICAgICAgPEJhZGdlIHZhcmlhbnQ9XCJvdXRsaW5lXCIgY2xhc3NOYW1lPVwidGV4dC14c1wiPlZhcmlhw6fDo28gbW9kZXJhZGE8L0JhZGdlPlxuICAgICAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgICAgICA8QmFkZ2UgdmFyaWFudD1cImRlc3RydWN0aXZlXCIgY2xhc3NOYW1lPVwidGV4dC14c1wiPkFsdGEgdmFyaWHDp8OjbzwvQmFkZ2U+XG4gICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L0NhcmRDb250ZW50PlxuICAgICAgICAgIDwvQ2FyZD5cbiAgICAgICAgICBcbiAgICAgICAgICA8Q2FyZD5cbiAgICAgICAgICAgIDxDYXJkSGVhZGVyIGNsYXNzTmFtZT1cInBiLTJcIj5cbiAgICAgICAgICAgICAgPENhcmREZXNjcmlwdGlvbj5QZXLDrW9kb3MgQXRpdm9zPC9DYXJkRGVzY3JpcHRpb24+XG4gICAgICAgICAgICAgIDxDYXJkVGl0bGUgY2xhc3NOYW1lPVwidGV4dC0yeGxcIj57ZGFkb3NDb25zb2xpZGFkb3MucGVyaW9kb3NBdGl2b3N9PC9DYXJkVGl0bGU+XG4gICAgICAgICAgICA8L0NhcmRIZWFkZXI+XG4gICAgICAgICAgICA8Q2FyZENvbnRlbnQ+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIgdGV4dC1zbSB0ZXh0LW11dGVkLWZvcmVncm91bmRcIj5cbiAgICAgICAgICAgICAgICA8Q2FsZW5kYXIgY2xhc3NOYW1lPVwiaC00IHctNCBtci0xXCIgLz5cbiAgICAgICAgICAgICAgICBDb20gYXZhbGlhw6fDtWVzXG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9DYXJkQ29udGVudD5cbiAgICAgICAgICA8L0NhcmQ+XG4gICAgICAgIDwvZGl2PlxuICAgICAgKX1cblxuICAgICAgey8qIEFiYXMgZGUgdmlzdWFsaXphw6fDo28gKi99XG4gICAgICA8VGFicyB2YWx1ZT17YWJhQXRpdmF9IG9uVmFsdWVDaGFuZ2U9e3NldEFiYUF0aXZhfT5cbiAgICAgICAgPFRhYnNMaXN0IGNsYXNzTmFtZT1cImdyaWQgdy1mdWxsIGdyaWQtY29scy00XCI+XG4gICAgICAgICAgPFRhYnNUcmlnZ2VyIHZhbHVlPVwidmlzYW8tZ2VyYWxcIj5WaXPDo28gR2VyYWw8L1RhYnNUcmlnZ2VyPlxuICAgICAgICAgIDxUYWJzVHJpZ2dlciB2YWx1ZT1cInJhbmtpbmdcIj5SYW5raW5nPC9UYWJzVHJpZ2dlcj5cbiAgICAgICAgICA8VGFic1RyaWdnZXIgdmFsdWU9XCJ0ZW1wb3JhbFwiPkV2b2x1w6fDo288L1RhYnNUcmlnZ2VyPlxuICAgICAgICAgIDxUYWJzVHJpZ2dlciB2YWx1ZT1cImRpc3RyaWJ1aWNhb1wiPkRpc3RyaWJ1acOnw6NvPC9UYWJzVHJpZ2dlcj5cbiAgICAgICAgPC9UYWJzTGlzdD5cblxuICAgICAgICA8VGFic0NvbnRlbnQgdmFsdWU9XCJ2aXNhby1nZXJhbFwiIGNsYXNzTmFtZT1cInNwYWNlLXktNFwiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZ3JpZCBncmlkLWNvbHMtMSBsZzpncmlkLWNvbHMtMiBnYXAtNFwiPlxuICAgICAgICAgICAgey8qIEdyw6FmaWNvIGRlIGRpc3RyaWJ1acOnw6NvIGRlIG5vdGFzICovfVxuICAgICAgICAgICAgPENhcmQ+XG4gICAgICAgICAgICAgIDxDYXJkSGVhZGVyPlxuICAgICAgICAgICAgICAgIDxDYXJkVGl0bGUgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXJcIj5cbiAgICAgICAgICAgICAgICAgIDxQaWVDaGFydEljb24gY2xhc3NOYW1lPVwiaC01IHctNSBtci0yXCIgLz5cbiAgICAgICAgICAgICAgICAgIERpc3RyaWJ1acOnw6NvIGRlIE5vdGFzXG4gICAgICAgICAgICAgICAgPC9DYXJkVGl0bGU+XG4gICAgICAgICAgICAgIDwvQ2FyZEhlYWRlcj5cbiAgICAgICAgICAgICAgPENhcmRDb250ZW50PlxuICAgICAgICAgICAgICAgIHtjYXJyZWdhbmRvID8gKFxuICAgICAgICAgICAgICAgICAgPFNrZWxldG9uIGNsYXNzTmFtZT1cImgtNjQgdy1mdWxsXCIgLz5cbiAgICAgICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICAgICAgPFJlc3BvbnNpdmVDb250YWluZXIgd2lkdGg9XCIxMDAlXCIgaGVpZ2h0PXszMDB9PlxuICAgICAgICAgICAgICAgICAgICA8UGllQ2hhcnQ+XG4gICAgICAgICAgICAgICAgICAgICAgPFBpZVxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YT17ZGFkb3NEaXN0cmlidWljYW99XG4gICAgICAgICAgICAgICAgICAgICAgICBjeD1cIjUwJVwiXG4gICAgICAgICAgICAgICAgICAgICAgICBjeT1cIjUwJVwiXG4gICAgICAgICAgICAgICAgICAgICAgICBvdXRlclJhZGl1cz17ODB9XG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhS2V5PVwicXVhbnRpZGFkZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICBsYWJlbD17KHsgbm90YSwgcXVhbnRpZGFkZSB9KSA9PiBgJHtub3RhfTogJHtxdWFudGlkYWRlfWB9XG4gICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAge2RhZG9zRGlzdHJpYnVpY2FvLm1hcCgoZW50cnksIGluZGV4KSA9PiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxDZWxsIGtleT17YGNlbGwtJHtpbmRleH1gfSBmaWxsPXtlbnRyeS5jb3J9IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICApKX1cbiAgICAgICAgICAgICAgICAgICAgICA8L1BpZT5cbiAgICAgICAgICAgICAgICAgICAgICA8VG9vbHRpcCAvPlxuICAgICAgICAgICAgICAgICAgICAgIDxMZWdlbmQgLz5cbiAgICAgICAgICAgICAgICAgICAgPC9QaWVDaGFydD5cbiAgICAgICAgICAgICAgICAgIDwvUmVzcG9uc2l2ZUNvbnRhaW5lcj5cbiAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICA8L0NhcmRDb250ZW50PlxuICAgICAgICAgICAgPC9DYXJkPlxuXG4gICAgICAgICAgICB7LyogVG9wIDUgYXRlbmRlbnRlcyAqL31cbiAgICAgICAgICAgIDxDYXJkPlxuICAgICAgICAgICAgICA8Q2FyZEhlYWRlcj5cbiAgICAgICAgICAgICAgICA8Q2FyZFRpdGxlPlRvcCA1IEF0ZW5kZW50ZXM8L0NhcmRUaXRsZT5cbiAgICAgICAgICAgICAgICA8Q2FyZERlc2NyaXB0aW9uPk1lbGhvcmVzIG3DqWRpYXMgZGUgYXZhbGlhw6fDo288L0NhcmREZXNjcmlwdGlvbj5cbiAgICAgICAgICAgICAgPC9DYXJkSGVhZGVyPlxuICAgICAgICAgICAgICA8Q2FyZENvbnRlbnQ+XG4gICAgICAgICAgICAgICAge2NhcnJlZ2FuZG8gPyAoXG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNwYWNlLXktM1wiPlxuICAgICAgICAgICAgICAgICAgICB7Wy4uLkFycmF5KDUpXS5tYXAoKF8sIGkpID0+IChcbiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGtleT17aX0gY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0zXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8U2tlbGV0b24gY2xhc3NOYW1lPVwiaC04IHctOCByb3VuZGVkLWZ1bGxcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzcGFjZS15LTEgZmxleC0xXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxTa2VsZXRvbiBjbGFzc05hbWU9XCJoLTQgdy0yNFwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxTa2VsZXRvbiBjbGFzc05hbWU9XCJoLTMgdy0xNlwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxTa2VsZXRvbiBjbGFzc05hbWU9XCJoLTQgdy0xMlwiIC8+XG4gICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgKSA6IChcbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3BhY2UteS0zXCI+XG4gICAgICAgICAgICAgICAgICAgIHtyYW5raW5nQXRlbmRlbnRlcy5zbGljZSgwLCA1KS5tYXAoKGF0ZW5kZW50ZSwgaW5kZXgpID0+IChcbiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGtleT17YXRlbmRlbnRlLmF0ZW5kZW50ZUlkfSBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTNcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleC1zaHJpbmstMCB3LTggaC04IGJnLXByaW1hcnkvMTAgcm91bmRlZC1mdWxsIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIHRleHQtc20gZm9udC1tZWRpdW1cIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAge2luZGV4ICsgMX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4LTEgbWluLXctMFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LXNtIGZvbnQtbWVkaXVtIHRydW5jYXRlXCI+e2F0ZW5kZW50ZS5ub21lQXRlbmRlbnRlfTwvcD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC14cyB0ZXh0LW11dGVkLWZvcmVncm91bmRcIj57YXRlbmRlbnRlLnNldG9yfTwvcD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LXJpZ2h0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cInRleHQtc20gZm9udC1tZWRpdW1cIj57YXRlbmRlbnRlLm1lZGlhLnRvRml4ZWQoMil9PC9wPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LXhzIHRleHQtbXV0ZWQtZm9yZWdyb3VuZFwiPnthdGVuZGVudGUudG90YWxBdmFsaWFjb2VzfSBhdmFsLjwvcD5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICApKX1cbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgIDwvQ2FyZENvbnRlbnQ+XG4gICAgICAgICAgICA8L0NhcmQ+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvVGFic0NvbnRlbnQ+XG5cbiAgICAgICAgPFRhYnNDb250ZW50IHZhbHVlPVwicmFua2luZ1wiIGNsYXNzTmFtZT1cInNwYWNlLXktNFwiPlxuICAgICAgICAgIDxDYXJkPlxuICAgICAgICAgICAgPENhcmRIZWFkZXI+XG4gICAgICAgICAgICAgIDxDYXJkVGl0bGU+UmFua2luZyBkZSBBdGVuZGVudGVzPC9DYXJkVGl0bGU+XG4gICAgICAgICAgICAgIDxDYXJkRGVzY3JpcHRpb24+Q2xhc3NpZmljYcOnw6NvIHBvciBtw6lkaWEgZGUgYXZhbGlhw6fDtWVzPC9DYXJkRGVzY3JpcHRpb24+XG4gICAgICAgICAgICA8L0NhcmRIZWFkZXI+XG4gICAgICAgICAgICA8Q2FyZENvbnRlbnQ+XG4gICAgICAgICAgICAgIHtjYXJyZWdhbmRvID8gKFxuICAgICAgICAgICAgICAgIDxTa2VsZXRvbiBjbGFzc05hbWU9XCJoLTk2IHctZnVsbFwiIC8+XG4gICAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgICAgPFJlc3BvbnNpdmVDb250YWluZXIgd2lkdGg9XCIxMDAlXCIgaGVpZ2h0PXs0MDB9PlxuICAgICAgICAgICAgICAgICAgPEJhckNoYXJ0IGRhdGE9e2RhZG9zUmFua2luZ30gbWFyZ2luPXt7IHRvcDogMjAsIHJpZ2h0OiAzMCwgbGVmdDogMjAsIGJvdHRvbTogNSB9fT5cbiAgICAgICAgICAgICAgICAgICAgPENhcnRlc2lhbkdyaWQgc3Ryb2tlRGFzaGFycmF5PVwiMyAzXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgPFhBeGlzIFxuICAgICAgICAgICAgICAgICAgICAgIGRhdGFLZXk9XCJub21lXCIgXG4gICAgICAgICAgICAgICAgICAgICAgYW5nbGU9ey00NX1cbiAgICAgICAgICAgICAgICAgICAgICB0ZXh0QW5jaG9yPVwiZW5kXCJcbiAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ9ezgwfVxuICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICA8WUF4aXMgZG9tYWluPXtbMCwgNV19IC8+XG4gICAgICAgICAgICAgICAgICAgIDxUb29sdGlwIFxuICAgICAgICAgICAgICAgICAgICAgIGZvcm1hdHRlcj17KHZhbHVlLCBuYW1lKSA9PiBbXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lID09PSAnbWVkaWEnID8gYCR7dmFsdWV9IChtw6lkaWEpYCA6IGAke3ZhbHVlfSBhdmFsaWHDp8O1ZXNgLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZSA9PT0gJ21lZGlhJyA/ICdNw6lkaWEnIDogJ1RvdGFsJ1xuICAgICAgICAgICAgICAgICAgICAgIF19XG4gICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgIDxCYXIgZGF0YUtleT1cIm1lZGlhXCIgZmlsbD17Q09SRVNfR1JBRklDT1MucHJpbWFyaWF9IC8+XG4gICAgICAgICAgICAgICAgICA8L0JhckNoYXJ0PlxuICAgICAgICAgICAgICAgIDwvUmVzcG9uc2l2ZUNvbnRhaW5lcj5cbiAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIDwvQ2FyZENvbnRlbnQ+XG4gICAgICAgICAgPC9DYXJkPlxuICAgICAgICA8L1RhYnNDb250ZW50PlxuXG4gICAgICAgIDxUYWJzQ29udGVudCB2YWx1ZT1cInRlbXBvcmFsXCIgY2xhc3NOYW1lPVwic3BhY2UteS00XCI+XG4gICAgICAgICAgPENhcmQ+XG4gICAgICAgICAgICA8Q2FyZEhlYWRlcj5cbiAgICAgICAgICAgICAgPENhcmRUaXRsZT5Fdm9sdcOnw6NvIFRlbXBvcmFsPC9DYXJkVGl0bGU+XG4gICAgICAgICAgICAgIDxDYXJkRGVzY3JpcHRpb24+TcOpZGlhIGRlIGF2YWxpYcOnw7VlcyBwb3IgcGVyw61vZG88L0NhcmREZXNjcmlwdGlvbj5cbiAgICAgICAgICAgIDwvQ2FyZEhlYWRlcj5cbiAgICAgICAgICAgIDxDYXJkQ29udGVudD5cbiAgICAgICAgICAgICAge2NhcnJlZ2FuZG8gPyAoXG4gICAgICAgICAgICAgICAgPFNrZWxldG9uIGNsYXNzTmFtZT1cImgtOTYgdy1mdWxsXCIgLz5cbiAgICAgICAgICAgICAgKSA6IChcbiAgICAgICAgICAgICAgICA8UmVzcG9uc2l2ZUNvbnRhaW5lciB3aWR0aD1cIjEwMCVcIiBoZWlnaHQ9ezQwMH0+XG4gICAgICAgICAgICAgICAgICA8TGluZUNoYXJ0IGRhdGE9e2RhZG9zQ29tcGFyYXRpdm99IG1hcmdpbj17eyB0b3A6IDIwLCByaWdodDogMzAsIGxlZnQ6IDIwLCBib3R0b206IDUgfX0+XG4gICAgICAgICAgICAgICAgICAgIDxDYXJ0ZXNpYW5HcmlkIHN0cm9rZURhc2hhcnJheT1cIjMgM1wiIC8+XG4gICAgICAgICAgICAgICAgICAgIDxYQXhpcyBkYXRhS2V5PVwiZGF0YVwiIC8+XG4gICAgICAgICAgICAgICAgICAgIDxZQXhpcyBkb21haW49e1swLCA1XX0gLz5cbiAgICAgICAgICAgICAgICAgICAgPFRvb2x0aXAgXG4gICAgICAgICAgICAgICAgICAgICAgZm9ybWF0dGVyPXsodmFsdWUsIG5hbWUpID0+IFtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWUgPT09ICdtZWRpYScgPyBgJHt2YWx1ZX0gKG3DqWRpYSlgIDogYCR7dmFsdWV9IGF2YWxpYcOnw7Vlc2AsXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lID09PSAnbWVkaWEnID8gJ03DqWRpYScgOiAnVG90YWwnXG4gICAgICAgICAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgPExpbmUgXG4gICAgICAgICAgICAgICAgICAgICAgdHlwZT1cIm1vbm90b25lXCIgXG4gICAgICAgICAgICAgICAgICAgICAgZGF0YUtleT1cIm1lZGlhXCIgXG4gICAgICAgICAgICAgICAgICAgICAgc3Ryb2tlPXtDT1JFU19HUkFGSUNPUy5wcmltYXJpYX0gXG4gICAgICAgICAgICAgICAgICAgICAgc3Ryb2tlV2lkdGg9ezJ9XG4gICAgICAgICAgICAgICAgICAgICAgZG90PXt7IGZpbGw6IENPUkVTX0dSQUZJQ09TLnByaW1hcmlhLCBzdHJva2VXaWR0aDogMiwgcjogNCB9fVxuICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgPC9MaW5lQ2hhcnQ+XG4gICAgICAgICAgICAgICAgPC9SZXNwb25zaXZlQ29udGFpbmVyPlxuICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgPC9DYXJkQ29udGVudD5cbiAgICAgICAgICA8L0NhcmQ+XG4gICAgICAgIDwvVGFic0NvbnRlbnQ+XG5cbiAgICAgICAgPFRhYnNDb250ZW50IHZhbHVlPVwiZGlzdHJpYnVpY2FvXCIgY2xhc3NOYW1lPVwic3BhY2UteS00XCI+XG4gICAgICAgICAgPENhcmQ+XG4gICAgICAgICAgICA8Q2FyZEhlYWRlcj5cbiAgICAgICAgICAgICAgPENhcmRUaXRsZT5EaXN0cmlidWnDp8OjbyBEZXRhbGhhZGE8L0NhcmRUaXRsZT5cbiAgICAgICAgICAgICAgPENhcmREZXNjcmlwdGlvbj5BbsOhbGlzZSBkYSBkaXN0cmlidWnDp8OjbyBkZSBub3RhczwvQ2FyZERlc2NyaXB0aW9uPlxuICAgICAgICAgICAgPC9DYXJkSGVhZGVyPlxuICAgICAgICAgICAgPENhcmRDb250ZW50PlxuICAgICAgICAgICAgICB7Y2FycmVnYW5kbyA/IChcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNwYWNlLXktNFwiPlxuICAgICAgICAgICAgICAgICAge1suLi5BcnJheSg1KV0ubWFwKChfLCBpKSA9PiAoXG4gICAgICAgICAgICAgICAgICAgIDxkaXYga2V5PXtpfSBjbGFzc05hbWU9XCJzcGFjZS15LTJcIj5cbiAgICAgICAgICAgICAgICAgICAgICA8U2tlbGV0b24gY2xhc3NOYW1lPVwiaC00IHctMTZcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgIDxTa2VsZXRvbiBjbGFzc05hbWU9XCJoLTIgdy1mdWxsXCIgLz5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICApKX1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgKSA6IGRhZG9zQ29uc29saWRhZG9zICYmIChcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNwYWNlLXktNFwiPlxuICAgICAgICAgICAgICAgICAge09iamVjdC5lbnRyaWVzKGRhZG9zQ29uc29saWRhZG9zLmRpc3RyaWJ1aWNhb0dlcmFsKS5tYXAoKFtub3RhLCBxdWFudGlkYWRlXSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBwb3JjZW50YWdlbSA9IGRhZG9zQ29uc29saWRhZG9zLnRvdGFsQXZhbGlhY29lcyA+IDAgXG4gICAgICAgICAgICAgICAgICAgICAgPyAocXVhbnRpZGFkZSAvIGRhZG9zQ29uc29saWRhZG9zLnRvdGFsQXZhbGlhY29lcykgKiAxMDAgXG4gICAgICAgICAgICAgICAgICAgICAgOiAwO1xuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGtleT17bm90YX0gY2xhc3NOYW1lPVwic3BhY2UteS0yXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXgganVzdGlmeS1iZXR3ZWVuIHRleHQtc21cIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiZm9udC1tZWRpdW1cIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7bm90YS5yZXBsYWNlKCdub3RhJywgJ05vdGEgJyl9IOKtkFxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInRleHQtbXV0ZWQtZm9yZWdyb3VuZFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtxdWFudGlkYWRlfSAoe3BvcmNlbnRhZ2VtLnRvRml4ZWQoMSl9JSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8UHJvZ3Jlc3MgdmFsdWU9e3BvcmNlbnRhZ2VtfSBjbGFzc05hbWU9XCJoLTJcIiAvPlxuICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICl9XG4gICAgICAgICAgICA8L0NhcmRDb250ZW50PlxuICAgICAgICAgIDwvQ2FyZD5cbiAgICAgICAgPC9UYWJzQ29udGVudD5cbiAgICAgIDwvVGFicz5cbiAgICA8L2Rpdj5cbiAgKTtcbn0iXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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QVloRyxTQUFBLEVBQVU7MENBQ3JCLElBQUEyRixXQUFBLENBQUFDLEdBQUEsRUFBQ2dDLFNBQUEsQ0FBQUMsUUFBUTtvQkFBQzdILFNBQUEsRUFBVTttQ0FDcEIsSUFBQTJGLFdBQUEsQ0FBQUMsR0FBQSxFQUFDZ0MsU0FBQSxDQUFBQyxRQUFRO29CQUFDN0gsU0FBQSxFQUFVOzttQkFGWndILENBQUE7Y0FBQTs7OztZQU1aO1lBQUEsQ0FBQXJJLGNBQUEsR0FBQXVDLENBQUEsV0FBQWxCLGlCQUFBO1lBQUE7WUFBQSxDQUFBckIsY0FBQSxHQUFBdUMsQ0FBQSx3QkFDRixJQUFBaUUsV0FBQSxDQUFBQyxHQUFBLEVBQUM7Y0FBSTVGLFNBQUEsRUFBVTt3QkFDWjRMLE1BQUEsQ0FBT0MsT0FBTyxDQUFDckwsaUJBQUEsQ0FBa0JnRSxpQkFBaUIsRUFBRUcsR0FBRyxDQUFDLENBQUMsQ0FBQ0wsSUFBQSxFQUFNQyxVQUFBLENBQVc7Z0JBQUE7Z0JBQUFwRixjQUFBLEdBQUFjLENBQUE7Z0JBQzFFLE1BQU02TCxXQUFBO2dCQUFBO2dCQUFBLENBQUEzTSxjQUFBLEdBQUFDLENBQUEsU0FBY29CLGlCQUFBLENBQWtCeUUsZUFBZSxHQUFHO2dCQUFBO2dCQUFBLENBQUE5RixjQUFBLEdBQUF1QyxDQUFBLFdBQ3BENkMsVUFBQyxHQUFhL0QsaUJBQUEsQ0FBa0J5RSxlQUFlLEdBQUk7Z0JBQUE7Z0JBQUEsQ0FBQTlGLGNBQUEsR0FBQXVDLENBQUEsV0FDbkQ7Z0JBQUE7Z0JBQUF2QyxjQUFBLEdBQUFDLENBQUE7Z0JBRUosb0JBQ0UsSUFBQXVHLFdBQUEsQ0FBQUssSUFBQSxFQUFDO2tCQUFlaEcsU0FBQSxFQUFVOzBDQUN4QixJQUFBMkYsV0FBQSxDQUFBSyxJQUFBLEVBQUM7b0JBQUloRyxTQUFBLEVBQVU7NENBQ2IsSUFBQTJGLFdBQUEsQ0FBQUssSUFBQSxFQUFDO3NCQUFLaEcsU0FBQSxFQUFVO2lDQUNic0UsSUFBQSxDQUFLeUgsT0FBTyxDQUFDLFFBQVEsVUFBUztxQ0FFakMsSUFBQXBHLFdBQUEsQ0FBQUssSUFBQSxFQUFDO3NCQUFLaEcsU0FBQSxFQUFVO2lDQUNidUUsVUFBQSxFQUFXLE1BQUd1SCxXQUFBLENBQVkzRCxPQUFPLENBQUMsSUFBRzs7bUNBRzFDLElBQUF4QyxXQUFBLENBQUFDLEdBQUEsRUFBQ29HLFNBQUEsQ0FBQUMsUUFBUTtvQkFBQzdGLEtBQUEsRUFBTzBGLFdBQUE7b0JBQWE5TCxTQUFBLEVBQVU7O21CQVRoQ3NFLElBQUE7Y0FZZDs7Ozs7OztBQVNsQiIsImlnbm9yZUxpc3QiOltdfQ==