{"version":3,"sources":["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\components\\metricas\\filtros-periodo.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { Badge } from '@/components/ui/badge';\nimport { Calendar, Filter, X, CalendarDays } from 'lucide-react';\nimport { cn } from '@/lib/utils';\n\n/**\n * Interface para filtros de período\n */\nexport interface FiltrosPeriodo {\n  dataInicio?: string;\n  dataFim?: string;\n  periodo?:\n    | 'hoje'\n    | '7dias'\n    | '30dias'\n    | '90dias'\n    | '6meses'\n    | '1ano'\n    | 'personalizado';\n  setor?: string;\n  cargo?: string;\n  status?: 'ativo' | 'inativo' | 'pendente' | 'suspenso';\n}\n\n/**\n * Props do componente\n */\ninterface FiltrosPeriodoProps {\n  filtros: FiltrosPeriodo;\n  onFiltrosChange: (filtros: FiltrosPeriodo) => void;\n  setores?: Array<{ id: string; nome: string }>;\n  cargos?: Array<{ id: string; nome: string }>;\n  compacto?: boolean;\n  mostrarFiltrosAvancados?: boolean;\n  className?: string;\n}\n\n/**\n * Períodos predefinidos\n */\nconst PERIODOS_PREDEFINIDOS = [\n  { valor: 'hoje', label: 'Hoje', descricao: 'Apenas hoje' },\n  { valor: '7dias', label: 'Últimos 7 dias', descricao: 'Uma semana' },\n  { valor: '30dias', label: 'Últimos 30 dias', descricao: 'Um mês' },\n  { valor: '90dias', label: 'Últimos 90 dias', descricao: 'Três meses' },\n  { valor: '6meses', label: 'Últimos 6 meses', descricao: 'Semestre' },\n  { valor: '1ano', label: 'Último ano', descricao: 'Doze meses' },\n  {\n    valor: 'personalizado',\n    label: 'Período personalizado',\n    descricao: 'Escolher datas',\n  },\n] as const;\n\n/**\n * Status disponíveis\n */\nconst STATUS_OPCOES = [\n  { valor: 'ativo', label: 'Ativo', cor: 'bg-green-100 text-green-800' },\n  { valor: 'inativo', label: 'Inativo', cor: 'bg-red-100 text-red-800' },\n  {\n    valor: 'pendente',\n    label: 'Pendente',\n    cor: 'bg-yellow-100 text-yellow-800',\n  },\n  { valor: 'suspenso', label: 'Suspenso', cor: 'bg-gray-100 text-gray-800' },\n] as const;\n\n/**\n * Função para calcular datas baseadas no período\n */\nfunction calcularDatasPeriodo(periodo: string): {\n  dataInicio: string;\n  dataFim: string;\n} {\n  const hoje = new Date();\n  const dataFim = hoje.toISOString().split('T')[0];\n\n  let dataInicio: string;\n\n  switch (periodo) {\n    case 'hoje':\n      dataInicio = dataFim;\n      break;\n    case '7dias':\n      dataInicio = new Date(hoje.getTime() - 7 * 24 * 60 * 60 * 1000)\n        .toISOString()\n        .split('T')[0];\n      break;\n    case '30dias':\n      dataInicio = new Date(hoje.getTime() - 30 * 24 * 60 * 60 * 1000)\n        .toISOString()\n        .split('T')[0];\n      break;\n    case '90dias':\n      dataInicio = new Date(hoje.getTime() - 90 * 24 * 60 * 60 * 1000)\n        .toISOString()\n        .split('T')[0];\n      break;\n    case '6meses':\n      dataInicio = new Date(\n        hoje.getFullYear(),\n        hoje.getMonth() - 6,\n        hoje.getDate()\n      )\n        .toISOString()\n        .split('T')[0];\n      break;\n    case '1ano':\n      dataInicio = new Date(\n        hoje.getFullYear() - 1,\n        hoje.getMonth(),\n        hoje.getDate()\n      )\n        .toISOString()\n        .split('T')[0];\n      break;\n    default:\n      dataInicio = new Date(hoje.getTime() - 30 * 24 * 60 * 60 * 1000)\n        .toISOString()\n        .split('T')[0];\n  }\n\n  return { dataInicio, dataFim };\n}\n\n/**\n * Componente principal de filtros por período\n */\nexport function FiltrosPeriodo({\n  filtros,\n  onFiltrosChange,\n  setores = [],\n  cargos = [],\n  compacto = false,\n  mostrarFiltrosAvancados = true,\n  className,\n}: FiltrosPeriodoProps) {\n  const [mostrarAvancados, setMostrarAvancados] = useState(false);\n\n  // Função para atualizar período predefinido\n  const handlePeriodoChange = (periodo: string) => {\n    if (periodo === 'personalizado') {\n      onFiltrosChange({\n        ...filtros,\n        periodo: 'personalizado',\n        dataInicio: filtros.dataInicio || '',\n        dataFim: filtros.dataFim || '',\n      });\n    } else {\n      const { dataInicio, dataFim } = calcularDatasPeriodo(periodo);\n      onFiltrosChange({\n        ...filtros,\n        periodo: periodo as any,\n        dataInicio,\n        dataFim,\n      });\n    }\n  };\n\n  // Função para atualizar data específica\n  const handleDataChange = (campo: 'dataInicio' | 'dataFim', valor: string) => {\n    onFiltrosChange({\n      ...filtros,\n      [campo]: valor,\n      periodo: 'personalizado',\n    });\n  };\n\n  // Função para limpar filtros\n  const limparFiltros = () => {\n    const { dataInicio, dataFim } = calcularDatasPeriodo('30dias');\n    onFiltrosChange({\n      dataInicio,\n      dataFim,\n      periodo: '30dias',\n    });\n    setMostrarAvancados(false);\n  };\n\n  // Contar filtros ativos\n  const filtrosAtivos = Object.entries(filtros).filter(([key, value]) => {\n    if (key === 'dataInicio' || key === 'dataFim' || key === 'periodo')\n      return false;\n    return value !== undefined && value !== '';\n  }).length;\n\n  if (compacto) {\n    return (\n      <div className={cn('flex flex-wrap items-center gap-2', className)}>\n        <Select\n          value={filtros.periodo || '30dias'}\n          onValueChange={handlePeriodoChange}\n        >\n          <SelectTrigger className=\"w-48\">\n            <Calendar className=\"h-4 w-4 mr-2\" />\n            <SelectValue placeholder=\"Selecionar período\" />\n          </SelectTrigger>\n          <SelectContent>\n            {PERIODOS_PREDEFINIDOS.map(periodo => (\n              <SelectItem key={periodo.valor} value={periodo.valor}>\n                <div>\n                  <div className=\"font-medium\">{periodo.label}</div>\n                  <div className=\"text-xs text-gray-500\">\n                    {periodo.descricao}\n                  </div>\n                </div>\n              </SelectItem>\n            ))}\n          </SelectContent>\n        </Select>\n\n        {filtros.periodo === 'personalizado' && (\n          <>\n            <Input\n              type=\"date\"\n              value={filtros.dataInicio || ''}\n              onChange={e => handleDataChange('dataInicio', e.target.value)}\n              className=\"w-40\"\n            />\n            <span className=\"text-gray-500\">até</span>\n            <Input\n              type=\"date\"\n              value={filtros.dataFim || ''}\n              onChange={e => handleDataChange('dataFim', e.target.value)}\n              className=\"w-40\"\n            />\n          </>\n        )}\n\n        {mostrarFiltrosAvancados && (\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => setMostrarAvancados(!mostrarAvancados)}\n          >\n            <Filter className=\"h-4 w-4 mr-1\" />\n            Filtros\n            {filtrosAtivos > 0 && (\n              <Badge variant=\"secondary\" className=\"ml-1 h-5 w-5 p-0 text-xs\">\n                {filtrosAtivos}\n              </Badge>\n            )}\n          </Button>\n        )}\n\n        {filtrosAtivos > 0 && (\n          <Button variant=\"ghost\" size=\"sm\" onClick={limparFiltros}>\n            <X className=\"h-4 w-4 mr-1\" />\n            Limpar\n          </Button>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <Card className={className}>\n      <CardHeader className=\"pb-4\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <CardTitle className=\"flex items-center space-x-2\">\n              <CalendarDays className=\"h-5 w-5\" />\n              <span>Filtros de Período</span>\n            </CardTitle>\n            <CardDescription>\n              Selecione o período e critérios para análise\n            </CardDescription>\n          </div>\n          {filtrosAtivos > 0 && (\n            <Button variant=\"outline\" size=\"sm\" onClick={limparFiltros}>\n              <X className=\"h-4 w-4 mr-1\" />\n              Limpar Filtros\n            </Button>\n          )}\n        </div>\n      </CardHeader>\n      <CardContent className=\"space-y-6\">\n        {/* Seleção de período */}\n        <div className=\"space-y-3\">\n          <Label className=\"text-sm font-medium\">Período</Label>\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-2\">\n            {PERIODOS_PREDEFINIDOS.map(periodo => (\n              <Button\n                key={periodo.valor}\n                variant={\n                  filtros.periodo === periodo.valor ? 'default' : 'outline'\n                }\n                size=\"sm\"\n                onClick={() => handlePeriodoChange(periodo.valor)}\n                className=\"justify-start h-auto p-3\"\n              >\n                <div className=\"text-left\">\n                  <div className=\"font-medium text-xs\">{periodo.label}</div>\n                  <div className=\"text-xs opacity-70\">{periodo.descricao}</div>\n                </div>\n              </Button>\n            ))}\n          </div>\n        </div>\n\n        {/* Datas personalizadas */}\n        {filtros.periodo === 'personalizado' && (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"dataInicio\">Data de Início</Label>\n              <Input\n                id=\"dataInicio\"\n                type=\"date\"\n                value={filtros.dataInicio || ''}\n                onChange={e => handleDataChange('dataInicio', e.target.value)}\n              />\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"dataFim\">Data de Fim</Label>\n              <Input\n                id=\"dataFim\"\n                type=\"date\"\n                value={filtros.dataFim || ''}\n                onChange={e => handleDataChange('dataFim', e.target.value)}\n              />\n            </div>\n          </div>\n        )}\n\n        {/* Filtros avançados */}\n        {mostrarFiltrosAvancados && (\n          <>\n            <div className=\"flex items-center justify-between\">\n              <Label className=\"text-sm font-medium\">Filtros Avançados</Label>\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => setMostrarAvancados(!mostrarAvancados)}\n              >\n                {mostrarAvancados ? 'Ocultar' : 'Mostrar'}\n              </Button>\n            </div>\n\n            {mostrarAvancados && (\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 pt-4 border-t\">\n                {/* Filtro por setor */}\n                {setores.length > 0 && (\n                  <div className=\"space-y-2\">\n                    <Label>Setor</Label>\n                    <Select\n                      value={filtros.setor || ''}\n                      onValueChange={valor =>\n                        onFiltrosChange({\n                          ...filtros,\n                          setor: valor || undefined,\n                        })\n                      }\n                    >\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Todos os setores\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"\">Todos os setores</SelectItem>\n                        {setores.map(setor => (\n                          <SelectItem key={setor.id} value={setor.id}>\n                            {setor.nome}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                  </div>\n                )}\n\n                {/* Filtro por cargo */}\n                {cargos.length > 0 && (\n                  <div className=\"space-y-2\">\n                    <Label>Cargo</Label>\n                    <Select\n                      value={filtros.cargo || ''}\n                      onValueChange={valor =>\n                        onFiltrosChange({\n                          ...filtros,\n                          cargo: valor || undefined,\n                        })\n                      }\n                    >\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Todos os cargos\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"\">Todos os cargos</SelectItem>\n                        {cargos.map(cargo => (\n                          <SelectItem key={cargo.id} value={cargo.id}>\n                            {cargo.nome}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                  </div>\n                )}\n\n                {/* Filtro por status */}\n                <div className=\"space-y-2\">\n                  <Label>Status</Label>\n                  <Select\n                    value={filtros.status || ''}\n                    onValueChange={valor =>\n                      onFiltrosChange({\n                        ...filtros,\n                        status: (valor as any) || undefined,\n                      })\n                    }\n                  >\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"Todos os status\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"\">Todos os status</SelectItem>\n                      {STATUS_OPCOES.map(status => (\n                        <SelectItem key={status.valor} value={status.valor}>\n                          <div className=\"flex items-center space-x-2\">\n                            <div\n                              className={cn('w-2 h-2 rounded-full', status.cor)}\n                            />\n                            <span>{status.label}</span>\n                          </div>\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n              </div>\n            )}\n          </>\n        )}\n\n        {/* Resumo dos filtros ativos */}\n        {filtrosAtivos > 0 && (\n          <div className=\"pt-4 border-t\">\n            <Label className=\"text-sm font-medium mb-2 block\">\n              Filtros Ativos\n            </Label>\n            <div className=\"flex flex-wrap gap-2\">\n              {filtros.setor && (\n                <Badge variant=\"secondary\">\n                  Setor:{' '}\n                  {setores.find(s => s.id === filtros.setor)?.nome ||\n                    filtros.setor}\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"h-auto p-0 ml-1\"\n                    onClick={() =>\n                      onFiltrosChange({ ...filtros, setor: undefined })\n                    }\n                  >\n                    <X className=\"h-3 w-3\" />\n                  </Button>\n                </Badge>\n              )}\n              {filtros.cargo && (\n                <Badge variant=\"secondary\">\n                  Cargo:{' '}\n                  {cargos.find(c => c.id === filtros.cargo)?.nome ||\n                    filtros.cargo}\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"h-auto p-0 ml-1\"\n                    onClick={() =>\n                      onFiltrosChange({ ...filtros, cargo: undefined })\n                    }\n                  >\n                    <X className=\"h-3 w-3\" />\n                  </Button>\n                </Badge>\n              )}\n              {filtros.status && (\n                <Badge variant=\"secondary\">\n                  Status:{' '}\n                  {STATUS_OPCOES.find(s => s.valor === filtros.status)?.label ||\n                    filtros.status}\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"h-auto p-0 ml-1\"\n                    onClick={() =>\n                      onFiltrosChange({ ...filtros, status: undefined })\n                    }\n                  >\n                    <X className=\"h-3 w-3\" />\n                  </Button>\n                </Badge>\n              )}\n            </div>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default FiltrosPeriodo;\n"],"names":["FiltrosPeriodo","PERIODOS_PREDEFINIDOS","valor","label","descricao","STATUS_OPCOES","cor","calcularDatasPeriodo","periodo","hoje","Date","dataFim","toISOString","split","dataInicio","getTime","getFullYear","getMonth","getDate","filtros","onFiltrosChange","setores","cargos","compacto","mostrarFiltrosAvancados","className","mostrarAvancados","setMostrarAvancados","useState","handlePeriodoChange","handleDataChange","campo","limparFiltros","filtrosAtivos","Object","entries","filter","key","value","undefined","length","div","cn","Select","onValueChange","SelectTrigger","Calendar","SelectValue","placeholder","SelectContent","map","SelectItem","Input","type","onChange","e","target","span","Button","variant","size","onClick","Filter","Badge","X","Card","CardHeader","CardTitle","CalendarDays","CardDescription","CardContent","Label","htmlFor","id","setor","nome","cargo","status","find","s","c"],"mappings":"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"}