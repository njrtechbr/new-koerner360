374a326241499920e2ae94a48fa2ec41
"use strict";

/* istanbul ignore next */
function cov_1uh46hctoo() {
  var path = "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\lib\\upload-server.ts";
  var hash = "4168488d5c22c9f45b06c35edd95283e36b6dc0e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\lib\\upload-server.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 36,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 29
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 32
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 26
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 26
        }
      },
      "8": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 27
        }
      },
      "9": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 25
        }
      },
      "10": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 24
        }
      },
      "11": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 28
        }
      },
      "12": {
        start: {
          line: 37,
          column: 18
        },
        end: {
          line: 37,
          column: 45
        }
      },
      "13": {
        start: {
          line: 38,
          column: 14
        },
        end: {
          line: 38,
          column: 29
        }
      },
      "14": {
        start: {
          line: 39,
          column: 16
        },
        end: {
          line: 39,
          column: 33
        }
      },
      "15": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 25
        }
      },
      "16": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 42,
          column: 51
        }
      },
      "17": {
        start: {
          line: 42,
          column: 39
        },
        end: {
          line: 42,
          column: 51
        }
      },
      "18": {
        start: {
          line: 43,
          column: 28
        },
        end: {
          line: 43,
          column: 41
        }
      },
      "19": {
        start: {
          line: 44,
          column: 27
        },
        end: {
          line: 44,
          column: 40
        }
      },
      "20": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 47,
          column: 20
        }
      },
      "21": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 66
        }
      },
      "22": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 52,
          column: 5
        }
      },
      "23": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 19
        }
      },
      "24": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 57,
          column: 5
        }
      },
      "25": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 56,
          column: 10
        }
      },
      "26": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 58,
          column: 53
        }
      },
      "27": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "28": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 30
        }
      },
      "29": {
        start: {
          line: 62,
          column: 17
        },
        end: {
          line: 64,
          column: 5
        }
      },
      "30": {
        start: {
          line: 65,
          column: 32
        },
        end: {
          line: 65,
          column: 88
        }
      },
      "31": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 75,
          column: 5
        }
      },
      "32": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 74,
          column: 9
        }
      },
      "33": {
        start: {
          line: 68,
          column: 23
        },
        end: {
          line: 68,
          column: 95
        }
      },
      "34": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 73,
          column: 13
        }
      },
      "35": {
        start: {
          line: 70,
          column: 16
        },
        end: {
          line: 70,
          column: 57
        }
      },
      "36": {
        start: {
          line: 72,
          column: 16
        },
        end: {
          line: 72,
          column: 39
        }
      },
      "37": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 76,
          column: 25
        }
      },
      "38": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 79,
          column: 5
        }
      },
      "39": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 31
        }
      },
      "40": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 80,
          column: 18
        }
      },
      "41": {
        start: {
          line: 82,
          column: 22
        },
        end: {
          line: 129,
          column: 1
        }
      },
      "42": {
        start: {
          line: 131,
          column: 4
        },
        end: {
          line: 184,
          column: 5
        }
      },
      "43": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 152,
          column: 9
        }
      },
      "44": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 32
        }
      },
      "45": {
        start: {
          line: 138,
          column: 12
        },
        end: {
          line: 151,
          column: 13
        }
      },
      "46": {
        start: {
          line: 139,
          column: 16
        },
        end: {
          line: 139,
          column: 34
        }
      },
      "47": {
        start: {
          line: 140,
          column: 19
        },
        end: {
          line: 151,
          column: 13
        }
      },
      "48": {
        start: {
          line: 141,
          column: 16
        },
        end: {
          line: 141,
          column: 31
        }
      },
      "49": {
        start: {
          line: 142,
          column: 19
        },
        end: {
          line: 151,
          column: 13
        }
      },
      "50": {
        start: {
          line: 143,
          column: 16
        },
        end: {
          line: 143,
          column: 31
        }
      },
      "51": {
        start: {
          line: 144,
          column: 19
        },
        end: {
          line: 151,
          column: 13
        }
      },
      "52": {
        start: {
          line: 145,
          column: 16
        },
        end: {
          line: 145,
          column: 31
        }
      },
      "53": {
        start: {
          line: 147,
          column: 16
        },
        end: {
          line: 150,
          column: 18
        }
      },
      "54": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 159,
          column: 9
        }
      },
      "55": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 158,
          column: 14
        }
      },
      "56": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 167,
          column: 9
        }
      },
      "57": {
        start: {
          line: 162,
          column: 30
        },
        end: {
          line: 162,
          column: 79
        }
      },
      "58": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 166,
          column: 14
        }
      },
      "59": {
        start: {
          line: 169,
          column: 8
        },
        end: {
          line: 174,
          column: 9
        }
      },
      "60": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 173,
          column: 14
        }
      },
      "61": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 178,
          column: 10
        }
      },
      "62": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 183,
          column: 10
        }
      },
      "63": {
        start: {
          line: 187,
          column: 4
        },
        end: {
          line: 252,
          column: 5
        }
      },
      "64": {
        start: {
          line: 189,
          column: 26
        },
        end: {
          line: 189,
          column: 50
        }
      },
      "65": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 195,
          column: 9
        }
      },
      "66": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 194,
          column: 14
        }
      },
      "67": {
        start: {
          line: 197,
          column: 23
        },
        end: {
          line: 197,
          column: 48
        }
      },
      "68": {
        start: {
          line: 199,
          column: 25
        },
        end: {
          line: 199,
          column: 57
        }
      },
      "69": {
        start: {
          line: 201,
          column: 28
        },
        end: {
          line: 201,
          column: 51
        }
      },
      "70": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 219,
          column: 9
        }
      },
      "71": {
        start: {
          line: 206,
          column: 16
        },
        end: {
          line: 206,
          column: 68
        }
      },
      "72": {
        start: {
          line: 207,
          column: 16
        },
        end: {
          line: 207,
          column: 22
        }
      },
      "73": {
        start: {
          line: 209,
          column: 16
        },
        end: {
          line: 209,
          column: 65
        }
      },
      "74": {
        start: {
          line: 210,
          column: 16
        },
        end: {
          line: 210,
          column: 22
        }
      },
      "75": {
        start: {
          line: 212,
          column: 16
        },
        end: {
          line: 212,
          column: 65
        }
      },
      "76": {
        start: {
          line: 213,
          column: 16
        },
        end: {
          line: 213,
          column: 22
        }
      },
      "77": {
        start: {
          line: 215,
          column: 16
        },
        end: {
          line: 215,
          column: 65
        }
      },
      "78": {
        start: {
          line: 216,
          column: 16
        },
        end: {
          line: 216,
          column: 22
        }
      },
      "79": {
        start: {
          line: 218,
          column: 16
        },
        end: {
          line: 218,
          column: 63
        }
      },
      "80": {
        start: {
          line: 221,
          column: 34
        },
        end: {
          line: 221,
          column: 176
        }
      },
      "81": {
        start: {
          line: 223,
          column: 8
        },
        end: {
          line: 225,
          column: 11
        }
      },
      "82": {
        start: {
          line: 227,
          column: 31
        },
        end: {
          line: 227,
          column: 78
        }
      },
      "83": {
        start: {
          line: 229,
          column: 28
        },
        end: {
          line: 229,
          column: 52
        }
      },
      "84": {
        start: {
          line: 230,
          column: 23
        },
        end: {
          line: 230,
          column: 47
        }
      },
      "85": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 232,
          column: 63
        }
      },
      "86": {
        start: {
          line: 234,
          column: 27
        },
        end: {
          line: 234,
          column: 129
        }
      },
      "87": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 246,
          column: 10
        }
      },
      "88": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 251,
          column: 10
        }
      },
      "89": {
        start: {
          line: 255,
          column: 4
        },
        end: {
          line: 274,
          column: 5
        }
      },
      "90": {
        start: {
          line: 257,
          column: 8
        },
        end: {
          line: 257,
          column: 65
        }
      },
      "91": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 259,
          column: 45
        }
      },
      "92": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 262,
          column: 10
        }
      },
      "93": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 269,
          column: 9
        }
      },
      "94": {
        start: {
          line: 266,
          column: 12
        },
        end: {
          line: 268,
          column: 14
        }
      },
      "95": {
        start: {
          line: 270,
          column: 8
        },
        end: {
          line: 273,
          column: 10
        }
      },
      "96": {
        start: {
          line: 277,
          column: 4
        },
        end: {
          line: 282,
          column: 5
        }
      },
      "97": {
        start: {
          line: 278,
          column: 8
        },
        end: {
          line: 278,
          column: 65
        }
      },
      "98": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 279,
          column: 20
        }
      },
      "99": {
        start: {
          line: 281,
          column: 8
        },
        end: {
          line: 281,
          column: 21
        }
      },
      "100": {
        start: {
          line: 285,
          column: 4
        },
        end: {
          line: 300,
          column: 5
        }
      },
      "101": {
        start: {
          line: 286,
          column: 29
        },
        end: {
          line: 286,
          column: 78
        }
      },
      "102": {
        start: {
          line: 287,
          column: 22
        },
        end: {
          line: 287,
          column: 158
        }
      },
      "103": {
        start: {
          line: 287,
          column: 69
        },
        end: {
          line: 287,
          column: 123
        }
      },
      "104": {
        start: {
          line: 287,
          column: 136
        },
        end: {
          line: 287,
          column: 157
        }
      },
      "105": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 295,
          column: 10
        }
      },
      "106": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 299,
          column: 10
        }
      },
      "107": {
        start: {
          line: 303,
          column: 4
        },
        end: {
          line: 331,
          column: 5
        }
      },
      "108": {
        start: {
          line: 304,
          column: 29
        },
        end: {
          line: 304,
          column: 80
        }
      },
      "109": {
        start: {
          line: 305,
          column: 34
        },
        end: {
          line: 305,
          column: 136
        }
      },
      "110": {
        start: {
          line: 305,
          column: 81
        },
        end: {
          line: 305,
          column: 135
        }
      },
      "111": {
        start: {
          line: 306,
          column: 22
        },
        end: {
          line: 306,
          column: 49
        }
      },
      "112": {
        start: {
          line: 307,
          column: 25
        },
        end: {
          line: 307,
          column: 27
        }
      },
      "113": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 320,
          column: 9
        }
      },
      "114": {
        start: {
          line: 309,
          column: 29
        },
        end: {
          line: 309,
          column: 64
        }
      },
      "115": {
        start: {
          line: 310,
          column: 26
        },
        end: {
          line: 310,
          column: 46
        }
      },
      "116": {
        start: {
          line: 311,
          column: 12
        },
        end: {
          line: 319,
          column: 13
        }
      },
      "117": {
        start: {
          line: 312,
          column: 16
        },
        end: {
          line: 318,
          column: 19
        }
      },
      "118": {
        start: {
          line: 321,
          column: 8
        },
        end: {
          line: 324,
          column: 10
        }
      },
      "119": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 330,
          column: 10
        }
      },
      "120": {
        start: {
          line: 334,
          column: 4
        },
        end: {
          line: 362,
          column: 5
        }
      },
      "121": {
        start: {
          line: 335,
          column: 24
        },
        end: {
          line: 335,
          column: 96
        }
      },
      "122": {
        start: {
          line: 336,
          column: 42
        },
        end: {
          line: 336,
          column: 144
        }
      },
      "123": {
        start: {
          line: 336,
          column: 89
        },
        end: {
          line: 336,
          column: 143
        }
      },
      "124": {
        start: {
          line: 337,
          column: 22
        },
        end: {
          line: 337,
          column: 32
        }
      },
      "125": {
        start: {
          line: 338,
          column: 30
        },
        end: {
          line: 338,
          column: 63
        }
      },
      "126": {
        start: {
          line: 339,
          column: 22
        },
        end: {
          line: 339,
          column: 44
        }
      },
      "127": {
        start: {
          line: 340,
          column: 24
        },
        end: {
          line: 340,
          column: 25
        }
      },
      "128": {
        start: {
          line: 341,
          column: 8
        },
        end: {
          line: 351,
          column: 9
        }
      },
      "129": {
        start: {
          line: 342,
          column: 29
        },
        end: {
          line: 342,
          column: 59
        }
      },
      "130": {
        start: {
          line: 343,
          column: 26
        },
        end: {
          line: 343,
          column: 46
        }
      },
      "131": {
        start: {
          line: 344,
          column: 12
        },
        end: {
          line: 350,
          column: 13
        }
      },
      "132": {
        start: {
          line: 345,
          column: 30
        },
        end: {
          line: 345,
          column: 69
        }
      },
      "133": {
        start: {
          line: 346,
          column: 16
        },
        end: {
          line: 349,
          column: 17
        }
      },
      "134": {
        start: {
          line: 347,
          column: 20
        },
        end: {
          line: 347,
          column: 43
        }
      },
      "135": {
        start: {
          line: 348,
          column: 20
        },
        end: {
          line: 348,
          column: 32
        }
      },
      "136": {
        start: {
          line: 352,
          column: 8
        },
        end: {
          line: 355,
          column: 10
        }
      },
      "137": {
        start: {
          line: 357,
          column: 8
        },
        end: {
          line: 361,
          column: 10
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 25
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 28
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 22
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 22
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 23
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 21
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 20
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 24
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      },
      "9": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 41,
            column: 9
          },
          end: {
            line: 41,
            column: 33
          }
        },
        loc: {
          start: {
            line: 41,
            column: 47
          },
          end: {
            line: 48,
            column: 1
          }
        },
        line: 41
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 45,
            column: 39
          },
          end: {
            line: 45,
            column: 40
          }
        },
        loc: {
          start: {
            line: 45,
            column: 61
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 45
      },
      "11": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 49,
            column: 9
          },
          end: {
            line: 49,
            column: 34
          }
        },
        loc: {
          start: {
            line: 49,
            column: 53
          },
          end: {
            line: 81,
            column: 1
          }
        },
        line: 49
      },
      "12": {
        name: "validateFile",
        decl: {
          start: {
            line: 130,
            column: 9
          },
          end: {
            line: 130,
            column: 21
          }
        },
        loc: {
          start: {
            line: 130,
            column: 42
          },
          end: {
            line: 185,
            column: 1
          }
        },
        line: 130
      },
      "13": {
        name: "saveFile",
        decl: {
          start: {
            line: 186,
            column: 15
          },
          end: {
            line: 186,
            column: 23
          }
        },
        loc: {
          start: {
            line: 186,
            column: 50
          },
          end: {
            line: 253,
            column: 1
          }
        },
        line: 186
      },
      "14": {
        name: "deleteFile",
        decl: {
          start: {
            line: 254,
            column: 15
          },
          end: {
            line: 254,
            column: 25
          }
        },
        loc: {
          start: {
            line: 254,
            column: 35
          },
          end: {
            line: 275,
            column: 1
          }
        },
        line: 254
      },
      "15": {
        name: "fileExists",
        decl: {
          start: {
            line: 276,
            column: 15
          },
          end: {
            line: 276,
            column: 25
          }
        },
        loc: {
          start: {
            line: 276,
            column: 35
          },
          end: {
            line: 283,
            column: 1
          }
        },
        line: 276
      },
      "16": {
        name: "getFileInfo",
        decl: {
          start: {
            line: 284,
            column: 15
          },
          end: {
            line: 284,
            column: 26
          }
        },
        loc: {
          start: {
            line: 284,
            column: 36
          },
          end: {
            line: 301,
            column: 1
          }
        },
        line: 284
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 287,
            column: 51
          },
          end: {
            line: 287,
            column: 52
          }
        },
        loc: {
          start: {
            line: 287,
            column: 69
          },
          end: {
            line: 287,
            column: 123
          }
        },
        line: 287
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 287,
            column: 130
          },
          end: {
            line: 287,
            column: 131
          }
        },
        loc: {
          start: {
            line: 287,
            column: 136
          },
          end: {
            line: 287,
            column: 157
          }
        },
        line: 287
      },
      "19": {
        name: "listFiles",
        decl: {
          start: {
            line: 302,
            column: 15
          },
          end: {
            line: 302,
            column: 24
          }
        },
        loc: {
          start: {
            line: 302,
            column: 36
          },
          end: {
            line: 332,
            column: 1
          }
        },
        line: 302
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 305,
            column: 63
          },
          end: {
            line: 305,
            column: 64
          }
        },
        loc: {
          start: {
            line: 305,
            column: 81
          },
          end: {
            line: 305,
            column: 135
          }
        },
        line: 305
      },
      "21": {
        name: "cleanupTempFiles",
        decl: {
          start: {
            line: 333,
            column: 15
          },
          end: {
            line: 333,
            column: 31
          }
        },
        loc: {
          start: {
            line: 333,
            column: 55
          },
          end: {
            line: 363,
            column: 1
          }
        },
        line: 333
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 336,
            column: 71
          },
          end: {
            line: 336,
            column: 72
          }
        },
        loc: {
          start: {
            line: 336,
            column: 89
          },
          end: {
            line: 336,
            column: 143
          }
        },
        line: 336
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 42,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 42,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "1": {
        loc: {
          start: {
            line: 46,
            column: 15
          },
          end: {
            line: 46,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 46,
            column: 29
          },
          end: {
            line: 46,
            column: 45
          }
        }, {
          start: {
            line: 46,
            column: 48
          },
          end: {
            line: 46,
            column: 65
          }
        }],
        line: 46
      },
      "2": {
        loc: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "3": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 50,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 50,
            column: 20
          }
        }, {
          start: {
            line: 50,
            column: 24
          },
          end: {
            line: 50,
            column: 27
          }
        }, {
          start: {
            line: 50,
            column: 31
          },
          end: {
            line: 50,
            column: 45
          }
        }],
        line: 50
      },
      "4": {
        loc: {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "5": {
        loc: {
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 53,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 53,
            column: 20
          }
        }, {
          start: {
            line: 53,
            column: 24
          },
          end: {
            line: 53,
            column: 47
          }
        }, {
          start: {
            line: 53,
            column: 51
          },
          end: {
            line: 53,
            column: 76
          }
        }],
        line: 53
      },
      "6": {
        loc: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "7": {
        loc: {
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 59,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 59,
            column: 13
          }
        }, {
          start: {
            line: 59,
            column: 17
          },
          end: {
            line: 59,
            column: 31
          }
        }],
        line: 59
      },
      "8": {
        loc: {
          start: {
            line: 65,
            column: 32
          },
          end: {
            line: 65,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 32
          },
          end: {
            line: 65,
            column: 53
          }
        }, {
          start: {
            line: 65,
            column: 57
          },
          end: {
            line: 65,
            column: 88
          }
        }],
        line: 65
      },
      "9": {
        loc: {
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "10": {
        loc: {
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 67,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 67,
            column: 29
          }
        }, {
          start: {
            line: 67,
            column: 33
          },
          end: {
            line: 67,
            column: 79
          }
        }],
        line: 67
      },
      "11": {
        loc: {
          start: {
            line: 68,
            column: 23
          },
          end: {
            line: 68,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 68,
            column: 47
          },
          end: {
            line: 68,
            column: 88
          }
        }, {
          start: {
            line: 68,
            column: 91
          },
          end: {
            line: 68,
            column: 95
          }
        }],
        line: 68
      },
      "12": {
        loc: {
          start: {
            line: 69,
            column: 12
          },
          end: {
            line: 73,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 12
          },
          end: {
            line: 73,
            column: 13
          }
        }, {
          start: {
            line: 71,
            column: 19
          },
          end: {
            line: 73,
            column: 13
          }
        }],
        line: 69
      },
      "13": {
        loc: {
          start: {
            line: 69,
            column: 16
          },
          end: {
            line: 69,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 16
          },
          end: {
            line: 69,
            column: 20
          }
        }, {
          start: {
            line: 69,
            column: 25
          },
          end: {
            line: 69,
            column: 33
          }
        }, {
          start: {
            line: 69,
            column: 37
          },
          end: {
            line: 69,
            column: 45
          }
        }],
        line: 69
      },
      "14": {
        loc: {
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "15": {
        loc: {
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 152,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 8
          },
          end: {
            line: 152,
            column: 9
          }
        }, {
          start: {
            line: 136,
            column: 15
          },
          end: {
            line: 152,
            column: 9
          }
        }],
        line: 134
      },
      "16": {
        loc: {
          start: {
            line: 138,
            column: 12
          },
          end: {
            line: 151,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 12
          },
          end: {
            line: 151,
            column: 13
          }
        }, {
          start: {
            line: 140,
            column: 19
          },
          end: {
            line: 151,
            column: 13
          }
        }],
        line: 138
      },
      "17": {
        loc: {
          start: {
            line: 140,
            column: 19
          },
          end: {
            line: 151,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 19
          },
          end: {
            line: 151,
            column: 13
          }
        }, {
          start: {
            line: 142,
            column: 19
          },
          end: {
            line: 151,
            column: 13
          }
        }],
        line: 140
      },
      "18": {
        loc: {
          start: {
            line: 142,
            column: 19
          },
          end: {
            line: 151,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 19
          },
          end: {
            line: 151,
            column: 13
          }
        }, {
          start: {
            line: 144,
            column: 19
          },
          end: {
            line: 151,
            column: 13
          }
        }],
        line: 142
      },
      "19": {
        loc: {
          start: {
            line: 144,
            column: 19
          },
          end: {
            line: 151,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 19
          },
          end: {
            line: 151,
            column: 13
          }
        }, {
          start: {
            line: 146,
            column: 19
          },
          end: {
            line: 151,
            column: 13
          }
        }],
        line: 144
      },
      "20": {
        loc: {
          start: {
            line: 154,
            column: 8
          },
          end: {
            line: 159,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 154,
            column: 8
          },
          end: {
            line: 159,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 154
      },
      "21": {
        loc: {
          start: {
            line: 161,
            column: 8
          },
          end: {
            line: 167,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 8
          },
          end: {
            line: 167,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      },
      "22": {
        loc: {
          start: {
            line: 169,
            column: 8
          },
          end: {
            line: 174,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 169,
            column: 8
          },
          end: {
            line: 174,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 169
      },
      "23": {
        loc: {
          start: {
            line: 182,
            column: 46
          },
          end: {
            line: 182,
            column: 106
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 182,
            column: 71
          },
          end: {
            line: 182,
            column: 84
          }
        }, {
          start: {
            line: 182,
            column: 87
          },
          end: {
            line: 182,
            column: 106
          }
        }],
        line: 182
      },
      "24": {
        loc: {
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 195,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 8
          },
          end: {
            line: 195,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 190
      },
      "25": {
        loc: {
          start: {
            line: 199,
            column: 25
          },
          end: {
            line: 199,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 199,
            column: 25
          },
          end: {
            line: 199,
            column: 51
          }
        }, {
          start: {
            line: 199,
            column: 55
          },
          end: {
            line: 199,
            column: 57
          }
        }],
        line: 199
      },
      "26": {
        loc: {
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 219,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 205,
            column: 12
          },
          end: {
            line: 207,
            column: 22
          }
        }, {
          start: {
            line: 208,
            column: 12
          },
          end: {
            line: 210,
            column: 22
          }
        }, {
          start: {
            line: 211,
            column: 12
          },
          end: {
            line: 213,
            column: 22
          }
        }, {
          start: {
            line: 214,
            column: 12
          },
          end: {
            line: 216,
            column: 22
          }
        }, {
          start: {
            line: 217,
            column: 12
          },
          end: {
            line: 218,
            column: 63
          }
        }],
        line: 204
      },
      "27": {
        loc: {
          start: {
            line: 221,
            column: 34
          },
          end: {
            line: 221,
            column: 176
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 221,
            column: 49
          },
          end: {
            line: 221,
            column: 118
          }
        }, {
          start: {
            line: 221,
            column: 121
          },
          end: {
            line: 221,
            column: 176
          }
        }],
        line: 221
      },
      "28": {
        loc: {
          start: {
            line: 234,
            column: 27
          },
          end: {
            line: 234,
            column: 129
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 234,
            column: 42
          },
          end: {
            line: 234,
            column: 92
          }
        }, {
          start: {
            line: 234,
            column: 95
          },
          end: {
            line: 234,
            column: 129
          }
        }],
        line: 234
      },
      "29": {
        loc: {
          start: {
            line: 250,
            column: 45
          },
          end: {
            line: 250,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 250,
            column: 70
          },
          end: {
            line: 250,
            column: 83
          }
        }, {
          start: {
            line: 250,
            column: 86
          },
          end: {
            line: 250,
            column: 105
          }
        }],
        line: 250
      },
      "30": {
        loc: {
          start: {
            line: 264,
            column: 8
          },
          end: {
            line: 269,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 264,
            column: 8
          },
          end: {
            line: 269,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 264
      },
      "31": {
        loc: {
          start: {
            line: 264,
            column: 12
          },
          end: {
            line: 264,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 264,
            column: 12
          },
          end: {
            line: 264,
            column: 34
          }
        }, {
          start: {
            line: 264,
            column: 38
          },
          end: {
            line: 264,
            column: 53
          }
        }, {
          start: {
            line: 264,
            column: 57
          },
          end: {
            line: 264,
            column: 80
          }
        }],
        line: 264
      },
      "32": {
        loc: {
          start: {
            line: 272,
            column: 46
          },
          end: {
            line: 272,
            column: 106
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 272,
            column: 71
          },
          end: {
            line: 272,
            column: 84
          }
        }, {
          start: {
            line: 272,
            column: 87
          },
          end: {
            line: 272,
            column: 106
          }
        }],
        line: 272
      },
      "33": {
        loc: {
          start: {
            line: 311,
            column: 12
          },
          end: {
            line: 319,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 311,
            column: 12
          },
          end: {
            line: 319,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 311
      },
      "34": {
        loc: {
          start: {
            line: 328,
            column: 46
          },
          end: {
            line: 328,
            column: 106
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 328,
            column: 71
          },
          end: {
            line: 328,
            column: 84
          }
        }, {
          start: {
            line: 328,
            column: 87
          },
          end: {
            line: 328,
            column: 106
          }
        }],
        line: 328
      },
      "35": {
        loc: {
          start: {
            line: 333,
            column: 32
          },
          end: {
            line: 333,
            column: 53
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 333,
            column: 51
          },
          end: {
            line: 333,
            column: 53
          }
        }],
        line: 333
      },
      "36": {
        loc: {
          start: {
            line: 344,
            column: 12
          },
          end: {
            line: 350,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 344,
            column: 12
          },
          end: {
            line: 350,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 344
      },
      "37": {
        loc: {
          start: {
            line: 346,
            column: 16
          },
          end: {
            line: 349,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 346,
            column: 16
          },
          end: {
            line: 349,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 346
      },
      "38": {
        loc: {
          start: {
            line: 359,
            column: 58
          },
          end: {
            line: 359,
            column: 118
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 359,
            column: 83
          },
          end: {
            line: 359,
            column: 96
          }
        }, {
          start: {
            line: 359,
            column: 99
          },
          end: {
            line: 359,
            column: 118
          }
        }],
        line: 359
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0, 0, 0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\lib\\upload-server.ts"],
      sourcesContent: ["import { writeFile, mkdir, unlink, access } from 'fs/promises';\nimport { join } from 'path';\nimport { randomUUID } from 'crypto';\nimport { constants } from 'fs';\n\n// Configura\xE7\xF5es de upload\nexport const UPLOAD_CONFIG = {\n  // Tamanhos m\xE1ximos em bytes\n  MAX_FILE_SIZE: {\n    DOCUMENT: 10 * 1024 * 1024, // 10MB para documentos\n    IMAGE: 5 * 1024 * 1024, // 5MB para imagens\n    VIDEO: 50 * 1024 * 1024, // 50MB para v\xEDdeos\n    AUDIO: 20 * 1024 * 1024, // 20MB para \xE1udios\n  },\n\n  // Tipos de arquivo permitidos\n  ALLOWED_TYPES: {\n    DOCUMENT: [\n      'application/pdf',\n      'application/msword',\n      'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n      'application/vnd.ms-excel',\n      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n      'text/plain',\n      'text/csv',\n    ],\n    IMAGE: [\n      'image/jpeg',\n      'image/png',\n      'image/gif',\n      'image/webp',\n      'image/svg+xml',\n    ],\n    VIDEO: ['video/mp4', 'video/mpeg', 'video/quicktime', 'video/x-msvideo'],\n    AUDIO: ['audio/mpeg', 'audio/wav', 'audio/ogg', 'audio/mp4'],\n  },\n\n  // Diret\xF3rios de upload\n  UPLOAD_DIRS: {\n    DOCUMENTS: 'uploads/documents',\n    IMAGES: 'uploads/images',\n    VIDEOS: 'uploads/videos',\n    AUDIOS: 'uploads/audios',\n    TEMP: 'uploads/temp',\n  },\n};\n\n// Tipos de arquivo\nexport type TipoArquivo = 'DOCUMENT' | 'IMAGE' | 'VIDEO' | 'AUDIO';\n\n// Interface para resultado de upload\nexport interface ResultadoUpload {\n  sucesso: boolean;\n  arquivo?: {\n    id: string;\n    nome: string;\n    nomeOriginal: string;\n    tamanho: number;\n    tipo: string;\n    caminho: string;\n    url: string;\n  };\n  erro?: string;\n}\n\n// Interface para valida\xE7\xE3o de arquivo\nexport interface ResultadoValidacao {\n  valido: boolean;\n  erro?: string;\n  tipo?: TipoArquivo;\n}\n\n/**\n * Valida um arquivo baseado no tipo e configura\xE7\xF5es\n */\nexport function validateFile(\n  file: File,\n  tipoEsperado?: TipoArquivo\n): ResultadoValidacao {\n  try {\n    // Determinar tipo do arquivo\n    let tipo: TipoArquivo;\n\n    if (tipoEsperado) {\n      tipo = tipoEsperado;\n    } else {\n      // Auto-detectar tipo baseado no MIME type\n      if (UPLOAD_CONFIG.ALLOWED_TYPES.DOCUMENT.includes(file.type)) {\n        tipo = 'DOCUMENT';\n      } else if (UPLOAD_CONFIG.ALLOWED_TYPES.IMAGE.includes(file.type)) {\n        tipo = 'IMAGE';\n      } else if (UPLOAD_CONFIG.ALLOWED_TYPES.VIDEO.includes(file.type)) {\n        tipo = 'VIDEO';\n      } else if (UPLOAD_CONFIG.ALLOWED_TYPES.AUDIO.includes(file.type)) {\n        tipo = 'AUDIO';\n      } else {\n        return {\n          valido: false,\n          erro: `Tipo de arquivo n\xE3o suportado: ${file.type}`,\n        };\n      }\n    }\n\n    // Verificar se o tipo MIME \xE9 permitido\n    if (!UPLOAD_CONFIG.ALLOWED_TYPES[tipo].includes(file.type)) {\n      return {\n        valido: false,\n        erro: `Tipo de arquivo n\xE3o permitido para categoria ${tipo}: ${file.type}`,\n      };\n    }\n\n    // Verificar tamanho do arquivo\n    if (file.size > UPLOAD_CONFIG.MAX_FILE_SIZE[tipo]) {\n      const maxSizeMB = UPLOAD_CONFIG.MAX_FILE_SIZE[tipo] / (1024 * 1024);\n      return {\n        valido: false,\n        erro: `Arquivo muito grande. Tamanho m\xE1ximo permitido: ${maxSizeMB}MB`,\n      };\n    }\n\n    // Verificar se o arquivo n\xE3o est\xE1 vazio\n    if (file.size === 0) {\n      return {\n        valido: false,\n        erro: 'Arquivo est\xE1 vazio',\n      };\n    }\n\n    return {\n      valido: true,\n      tipo,\n    };\n  } catch (error) {\n    return {\n      valido: false,\n      erro: `Erro ao validar arquivo: ${error instanceof Error ? error.message : 'Erro desconhecido'}`,\n    };\n  }\n}\n\n/**\n * Salva um arquivo no sistema de arquivos\n */\nexport async function saveFile(\n  file: File,\n  tipo: TipoArquivo,\n  subdiretorio?: string\n): Promise<ResultadoUpload> {\n  try {\n    // Validar arquivo\n    const validacao = validateFile(file, tipo);\n    if (!validacao.valido) {\n      return {\n        sucesso: false,\n        erro: validacao.erro,\n      };\n    }\n\n    // Gerar ID \xFAnico para o arquivo\n    const fileId = randomUUID();\n\n    // Obter extens\xE3o do arquivo\n    const extensao = file.name.split('.').pop() || '';\n\n    // Gerar nome \xFAnico para o arquivo\n    const nomeArquivo = `${fileId}.${extensao}`;\n\n    // Determinar diret\xF3rio de destino\n    let diretorioBase: string;\n    switch (tipo) {\n      case 'DOCUMENT':\n        diretorioBase = UPLOAD_CONFIG.UPLOAD_DIRS.DOCUMENTS;\n        break;\n      case 'IMAGE':\n        diretorioBase = UPLOAD_CONFIG.UPLOAD_DIRS.IMAGES;\n        break;\n      case 'VIDEO':\n        diretorioBase = UPLOAD_CONFIG.UPLOAD_DIRS.VIDEOS;\n        break;\n      case 'AUDIO':\n        diretorioBase = UPLOAD_CONFIG.UPLOAD_DIRS.AUDIOS;\n        break;\n      default:\n        diretorioBase = UPLOAD_CONFIG.UPLOAD_DIRS.TEMP;\n    }\n\n    // Adicionar subdiret\xF3rio se especificado\n    const diretorioCompleto = subdiretorio\n      ? join(process.cwd(), 'public', diretorioBase, subdiretorio)\n      : join(process.cwd(), 'public', diretorioBase);\n\n    // Criar diret\xF3rio se n\xE3o existir\n    await mkdir(diretorioCompleto, { recursive: true });\n\n    // Caminho completo do arquivo\n    const caminhoArquivo = join(diretorioCompleto, nomeArquivo);\n\n    // Converter File para Buffer\n    const arrayBuffer = await file.arrayBuffer();\n    const buffer = Buffer.from(arrayBuffer);\n\n    // Salvar arquivo\n    await writeFile(caminhoArquivo, buffer);\n\n    // Gerar URL p\xFAblica\n    const urlPublica = subdiretorio\n      ? `/${diretorioBase}/${subdiretorio}/${nomeArquivo}`\n      : `/${diretorioBase}/${nomeArquivo}`;\n\n    return {\n      sucesso: true,\n      arquivo: {\n        id: fileId,\n        nome: nomeArquivo,\n        nomeOriginal: file.name,\n        tamanho: file.size,\n        tipo: file.type,\n        caminho: caminhoArquivo,\n        url: urlPublica,\n      },\n    };\n  } catch (error) {\n    return {\n      sucesso: false,\n      erro: `Erro ao salvar arquivo: ${error instanceof Error ? error.message : 'Erro desconhecido'}`,\n    };\n  }\n}\n\n/**\n * Remove um arquivo do sistema de arquivos\n */\nexport async function deleteFile(\n  caminho: string\n): Promise<{ sucesso: boolean; erro?: string }> {\n  try {\n    // Verificar se o arquivo existe\n    await access(caminho, constants.F_OK);\n\n    // Remover arquivo\n    await unlink(caminho);\n\n    return { sucesso: true };\n  } catch (error) {\n    if (error instanceof Error && 'code' in error && error.code === 'ENOENT') {\n      // Arquivo n\xE3o existe, considerar como sucesso\n      return { sucesso: true };\n    }\n\n    return {\n      sucesso: false,\n      erro: `Erro ao remover arquivo: ${error instanceof Error ? error.message : 'Erro desconhecido'}`,\n    };\n  }\n}\n\n/**\n * Verifica se um arquivo existe\n */\nexport async function fileExists(caminho: string): Promise<boolean> {\n  try {\n    await access(caminho, constants.F_OK);\n    return true;\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Obt\xE9m informa\xE7\xF5es de um arquivo\n */\nexport async function getFileInfo(caminho: string) {\n  try {\n    const absolutePath = join(process.cwd(), 'public', caminho);\n    const stats = await import('fs/promises').then(fs => fs.stat(absolutePath));\n\n    return {\n      existe: true,\n      tamanho: stats.size,\n      criadoEm: stats.birthtime,\n      modificadoEm: stats.mtime,\n      ehArquivo: stats.isFile(),\n      ehDiretorio: stats.isDirectory(),\n    };\n  } catch {\n    return {\n      existe: false,\n    };\n  }\n}\n\n/**\n * Lista arquivos em um diret\xF3rio\n */\nexport async function listFiles(diretorio: string) {\n  try {\n    const absolutePath = join(process.cwd(), 'public', diretorio);\n    const { readdir, stat } = await import('fs/promises');\n\n    const items = await readdir(absolutePath);\n    const arquivos = [];\n\n    for (const item of items) {\n      const itemPath = join(absolutePath, item);\n      const stats = await stat(itemPath);\n\n      if (stats.isFile()) {\n        arquivos.push({\n          nome: item,\n          tamanho: stats.size,\n          criadoEm: stats.birthtime,\n          modificadoEm: stats.mtime,\n          caminho: join(diretorio, item),\n        });\n      }\n    }\n\n    return {\n      sucesso: true,\n      arquivos,\n    };\n  } catch (error) {\n    return {\n      sucesso: false,\n      erro: `Erro ao listar arquivos: ${error instanceof Error ? error.message : 'Erro desconhecido'}`,\n      arquivos: [],\n    };\n  }\n}\n\n/**\n * Limpa arquivos tempor\xE1rios antigos\n */\nexport async function cleanupTempFiles(idadeMaximaHoras: number = 24) {\n  try {\n    const tempDir = join(\n      process.cwd(),\n      'public',\n      UPLOAD_CONFIG.UPLOAD_DIRS.TEMP\n    );\n    const { readdir, stat, unlink } = await import('fs/promises');\n\n    const agora = new Date();\n    const idadeMaximaMs = idadeMaximaHoras * 60 * 60 * 1000;\n\n    const items = await readdir(tempDir);\n    let removidos = 0;\n\n    for (const item of items) {\n      const itemPath = join(tempDir, item);\n      const stats = await stat(itemPath);\n\n      if (stats.isFile()) {\n        const idade = agora.getTime() - stats.mtime.getTime();\n\n        if (idade > idadeMaximaMs) {\n          await unlink(itemPath);\n          removidos++;\n        }\n      }\n    }\n\n    return {\n      sucesso: true,\n      removidos,\n    };\n  } catch (error) {\n    return {\n      sucesso: false,\n      erro: `Erro ao limpar arquivos tempor\xE1rios: ${error instanceof Error ? error.message : 'Erro desconhecido'}`,\n      removidos: 0,\n    };\n  }\n}\n"],
      names: ["UPLOAD_CONFIG", "cleanupTempFiles", "deleteFile", "fileExists", "getFileInfo", "listFiles", "saveFile", "validateFile", "MAX_FILE_SIZE", "DOCUMENT", "IMAGE", "VIDEO", "AUDIO", "ALLOWED_TYPES", "UPLOAD_DIRS", "DOCUMENTS", "IMAGES", "VIDEOS", "AUDIOS", "TEMP", "file", "tipoEsperado", "tipo", "includes", "type", "valido", "erro", "size", "maxSizeMB", "error", "Error", "message", "subdiretorio", "validacao", "sucesso", "fileId", "randomUUID", "extensao", "name", "split", "pop", "nomeArquivo", "diretorioBase", "diretorioCompleto", "join", "process", "cwd", "mkdir", "recursive", "caminhoArquivo", "arrayBuffer", "buffer", "Buffer", "from", "writeFile", "urlPublica", "arquivo", "id", "nome", "nomeOriginal", "tamanho", "caminho", "url", "access", "constants", "F_OK", "unlink", "code", "absolutePath", "stats", "then", "fs", "stat", "existe", "criadoEm", "birthtime", "modificadoEm", "mtime", "ehArquivo", "isFile", "ehDiretorio", "isDirectory", "diretorio", "readdir", "items", "arquivos", "item", "itemPath", "push", "idadeMaximaHoras", "tempDir", "agora", "Date", "idadeMaximaMs", "removidos", "idade", "getTime"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4168488d5c22c9f45b06c35edd95283e36b6dc0e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1uh46hctoo = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1uh46hctoo();
cov_1uh46hctoo().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1uh46hctoo().f[0]++;
  cov_1uh46hctoo().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1uh46hctoo().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1uh46hctoo().s[3]++;
_export(exports, {
  get UPLOAD_CONFIG() {
    /* istanbul ignore next */
    cov_1uh46hctoo().f[1]++;
    cov_1uh46hctoo().s[4]++;
    return UPLOAD_CONFIG;
  },
  get cleanupTempFiles() {
    /* istanbul ignore next */
    cov_1uh46hctoo().f[2]++;
    cov_1uh46hctoo().s[5]++;
    return cleanupTempFiles;
  },
  get deleteFile() {
    /* istanbul ignore next */
    cov_1uh46hctoo().f[3]++;
    cov_1uh46hctoo().s[6]++;
    return deleteFile;
  },
  get fileExists() {
    /* istanbul ignore next */
    cov_1uh46hctoo().f[4]++;
    cov_1uh46hctoo().s[7]++;
    return fileExists;
  },
  get getFileInfo() {
    /* istanbul ignore next */
    cov_1uh46hctoo().f[5]++;
    cov_1uh46hctoo().s[8]++;
    return getFileInfo;
  },
  get listFiles() {
    /* istanbul ignore next */
    cov_1uh46hctoo().f[6]++;
    cov_1uh46hctoo().s[9]++;
    return listFiles;
  },
  get saveFile() {
    /* istanbul ignore next */
    cov_1uh46hctoo().f[7]++;
    cov_1uh46hctoo().s[10]++;
    return saveFile;
  },
  get validateFile() {
    /* istanbul ignore next */
    cov_1uh46hctoo().f[8]++;
    cov_1uh46hctoo().s[11]++;
    return validateFile;
  }
});
const _promises =
/* istanbul ignore next */
(cov_1uh46hctoo().s[12]++, require("node:fs/promises"));
const _path =
/* istanbul ignore next */
(cov_1uh46hctoo().s[13]++, require("path"));
const _crypto =
/* istanbul ignore next */
(cov_1uh46hctoo().s[14]++, require("crypto"));
const _fs =
/* istanbul ignore next */
(cov_1uh46hctoo().s[15]++, require("fs"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1uh46hctoo().f[9]++;
  cov_1uh46hctoo().s[16]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1uh46hctoo().b[0][0]++;
    cov_1uh46hctoo().s[17]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1uh46hctoo().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1uh46hctoo().s[18]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1uh46hctoo().s[19]++, new WeakMap());
  /* istanbul ignore next */
  cov_1uh46hctoo().s[20]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1uh46hctoo().f[10]++;
    cov_1uh46hctoo().s[21]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1uh46hctoo().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1uh46hctoo().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1uh46hctoo().f[11]++;
  cov_1uh46hctoo().s[22]++;
  if (
  /* istanbul ignore next */
  (cov_1uh46hctoo().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1uh46hctoo().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1uh46hctoo().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1uh46hctoo().b[2][0]++;
    cov_1uh46hctoo().s[23]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1uh46hctoo().b[2][1]++;
  }
  cov_1uh46hctoo().s[24]++;
  if (
  /* istanbul ignore next */
  (cov_1uh46hctoo().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1uh46hctoo().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1uh46hctoo().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1uh46hctoo().b[4][0]++;
    cov_1uh46hctoo().s[25]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1uh46hctoo().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1uh46hctoo().s[26]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1uh46hctoo().s[27]++;
  if (
  /* istanbul ignore next */
  (cov_1uh46hctoo().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1uh46hctoo().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1uh46hctoo().b[6][0]++;
    cov_1uh46hctoo().s[28]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1uh46hctoo().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1uh46hctoo().s[29]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1uh46hctoo().s[30]++,
  /* istanbul ignore next */
  (cov_1uh46hctoo().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1uh46hctoo().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1uh46hctoo().s[31]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1uh46hctoo().s[32]++;
    if (
    /* istanbul ignore next */
    (cov_1uh46hctoo().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1uh46hctoo().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1uh46hctoo().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1uh46hctoo().s[33]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1uh46hctoo().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1uh46hctoo().b[11][1]++, null));
      /* istanbul ignore next */
      cov_1uh46hctoo().s[34]++;
      if (
      /* istanbul ignore next */
      (cov_1uh46hctoo().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1uh46hctoo().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1uh46hctoo().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1uh46hctoo().b[12][0]++;
        cov_1uh46hctoo().s[35]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1uh46hctoo().b[12][1]++;
        cov_1uh46hctoo().s[36]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1uh46hctoo().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1uh46hctoo().s[37]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1uh46hctoo().s[38]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1uh46hctoo().b[14][0]++;
    cov_1uh46hctoo().s[39]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1uh46hctoo().b[14][1]++;
  }
  cov_1uh46hctoo().s[40]++;
  return newObj;
}
const UPLOAD_CONFIG =
/* istanbul ignore next */
(cov_1uh46hctoo().s[41]++, {
  // Tamanhos máximos em bytes
  MAX_FILE_SIZE: {
    DOCUMENT: 10 * 1024 * 1024,
    IMAGE: 5 * 1024 * 1024,
    VIDEO: 50 * 1024 * 1024,
    AUDIO: 20 * 1024 * 1024
  },
  // Tipos de arquivo permitidos
  ALLOWED_TYPES: {
    DOCUMENT: ['application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'text/plain', 'text/csv'],
    IMAGE: ['image/jpeg', 'image/png', 'image/gif', 'image/webp', 'image/svg+xml'],
    VIDEO: ['video/mp4', 'video/mpeg', 'video/quicktime', 'video/x-msvideo'],
    AUDIO: ['audio/mpeg', 'audio/wav', 'audio/ogg', 'audio/mp4']
  },
  // Diretórios de upload
  UPLOAD_DIRS: {
    DOCUMENTS: 'uploads/documents',
    IMAGES: 'uploads/images',
    VIDEOS: 'uploads/videos',
    AUDIOS: 'uploads/audios',
    TEMP: 'uploads/temp'
  }
});
function validateFile(file, tipoEsperado) {
  /* istanbul ignore next */
  cov_1uh46hctoo().f[12]++;
  cov_1uh46hctoo().s[42]++;
  try {
    // Determinar tipo do arquivo
    let tipo;
    /* istanbul ignore next */
    cov_1uh46hctoo().s[43]++;
    if (tipoEsperado) {
      /* istanbul ignore next */
      cov_1uh46hctoo().b[15][0]++;
      cov_1uh46hctoo().s[44]++;
      tipo = tipoEsperado;
    } else {
      /* istanbul ignore next */
      cov_1uh46hctoo().b[15][1]++;
      cov_1uh46hctoo().s[45]++;
      // Auto-detectar tipo baseado no MIME type
      if (UPLOAD_CONFIG.ALLOWED_TYPES.DOCUMENT.includes(file.type)) {
        /* istanbul ignore next */
        cov_1uh46hctoo().b[16][0]++;
        cov_1uh46hctoo().s[46]++;
        tipo = 'DOCUMENT';
      } else {
        /* istanbul ignore next */
        cov_1uh46hctoo().b[16][1]++;
        cov_1uh46hctoo().s[47]++;
        if (UPLOAD_CONFIG.ALLOWED_TYPES.IMAGE.includes(file.type)) {
          /* istanbul ignore next */
          cov_1uh46hctoo().b[17][0]++;
          cov_1uh46hctoo().s[48]++;
          tipo = 'IMAGE';
        } else {
          /* istanbul ignore next */
          cov_1uh46hctoo().b[17][1]++;
          cov_1uh46hctoo().s[49]++;
          if (UPLOAD_CONFIG.ALLOWED_TYPES.VIDEO.includes(file.type)) {
            /* istanbul ignore next */
            cov_1uh46hctoo().b[18][0]++;
            cov_1uh46hctoo().s[50]++;
            tipo = 'VIDEO';
          } else {
            /* istanbul ignore next */
            cov_1uh46hctoo().b[18][1]++;
            cov_1uh46hctoo().s[51]++;
            if (UPLOAD_CONFIG.ALLOWED_TYPES.AUDIO.includes(file.type)) {
              /* istanbul ignore next */
              cov_1uh46hctoo().b[19][0]++;
              cov_1uh46hctoo().s[52]++;
              tipo = 'AUDIO';
            } else {
              /* istanbul ignore next */
              cov_1uh46hctoo().b[19][1]++;
              cov_1uh46hctoo().s[53]++;
              return {
                valido: false,
                erro: `Tipo de arquivo não suportado: ${file.type}`
              };
            }
          }
        }
      }
    }
    // Verificar se o tipo MIME é permitido
    /* istanbul ignore next */
    cov_1uh46hctoo().s[54]++;
    if (!UPLOAD_CONFIG.ALLOWED_TYPES[tipo].includes(file.type)) {
      /* istanbul ignore next */
      cov_1uh46hctoo().b[20][0]++;
      cov_1uh46hctoo().s[55]++;
      return {
        valido: false,
        erro: `Tipo de arquivo não permitido para categoria ${tipo}: ${file.type}`
      };
    } else
    /* istanbul ignore next */
    {
      cov_1uh46hctoo().b[20][1]++;
    }
    // Verificar tamanho do arquivo
    cov_1uh46hctoo().s[56]++;
    if (file.size > UPLOAD_CONFIG.MAX_FILE_SIZE[tipo]) {
      /* istanbul ignore next */
      cov_1uh46hctoo().b[21][0]++;
      const maxSizeMB =
      /* istanbul ignore next */
      (cov_1uh46hctoo().s[57]++, UPLOAD_CONFIG.MAX_FILE_SIZE[tipo] / (1024 * 1024));
      /* istanbul ignore next */
      cov_1uh46hctoo().s[58]++;
      return {
        valido: false,
        erro: `Arquivo muito grande. Tamanho máximo permitido: ${maxSizeMB}MB`
      };
    } else
    /* istanbul ignore next */
    {
      cov_1uh46hctoo().b[21][1]++;
    }
    // Verificar se o arquivo não está vazio
    cov_1uh46hctoo().s[59]++;
    if (file.size === 0) {
      /* istanbul ignore next */
      cov_1uh46hctoo().b[22][0]++;
      cov_1uh46hctoo().s[60]++;
      return {
        valido: false,
        erro: 'Arquivo está vazio'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1uh46hctoo().b[22][1]++;
    }
    cov_1uh46hctoo().s[61]++;
    return {
      valido: true,
      tipo
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1uh46hctoo().s[62]++;
    return {
      valido: false,
      erro: `Erro ao validar arquivo: ${error instanceof Error ?
      /* istanbul ignore next */
      (cov_1uh46hctoo().b[23][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1uh46hctoo().b[23][1]++, 'Erro desconhecido')}`
    };
  }
}
async function saveFile(file, tipo, subdiretorio) {
  /* istanbul ignore next */
  cov_1uh46hctoo().f[13]++;
  cov_1uh46hctoo().s[63]++;
  try {
    // Validar arquivo
    const validacao =
    /* istanbul ignore next */
    (cov_1uh46hctoo().s[64]++, validateFile(file, tipo));
    /* istanbul ignore next */
    cov_1uh46hctoo().s[65]++;
    if (!validacao.valido) {
      /* istanbul ignore next */
      cov_1uh46hctoo().b[24][0]++;
      cov_1uh46hctoo().s[66]++;
      return {
        sucesso: false,
        erro: validacao.erro
      };
    } else
    /* istanbul ignore next */
    {
      cov_1uh46hctoo().b[24][1]++;
    }
    // Gerar ID único para o arquivo
    const fileId =
    /* istanbul ignore next */
    (cov_1uh46hctoo().s[67]++, (0, _crypto.randomUUID)());
    // Obter extensão do arquivo
    const extensao =
    /* istanbul ignore next */
    (cov_1uh46hctoo().s[68]++,
    /* istanbul ignore next */
    (cov_1uh46hctoo().b[25][0]++, file.name.split('.').pop()) ||
    /* istanbul ignore next */
    (cov_1uh46hctoo().b[25][1]++, ''));
    // Gerar nome único para o arquivo
    const nomeArquivo =
    /* istanbul ignore next */
    (cov_1uh46hctoo().s[69]++, `${fileId}.${extensao}`);
    // Determinar diretório de destino
    let diretorioBase;
    /* istanbul ignore next */
    cov_1uh46hctoo().s[70]++;
    switch (tipo) {
      case 'DOCUMENT':
        /* istanbul ignore next */
        cov_1uh46hctoo().b[26][0]++;
        cov_1uh46hctoo().s[71]++;
        diretorioBase = UPLOAD_CONFIG.UPLOAD_DIRS.DOCUMENTS;
        /* istanbul ignore next */
        cov_1uh46hctoo().s[72]++;
        break;
      case 'IMAGE':
        /* istanbul ignore next */
        cov_1uh46hctoo().b[26][1]++;
        cov_1uh46hctoo().s[73]++;
        diretorioBase = UPLOAD_CONFIG.UPLOAD_DIRS.IMAGES;
        /* istanbul ignore next */
        cov_1uh46hctoo().s[74]++;
        break;
      case 'VIDEO':
        /* istanbul ignore next */
        cov_1uh46hctoo().b[26][2]++;
        cov_1uh46hctoo().s[75]++;
        diretorioBase = UPLOAD_CONFIG.UPLOAD_DIRS.VIDEOS;
        /* istanbul ignore next */
        cov_1uh46hctoo().s[76]++;
        break;
      case 'AUDIO':
        /* istanbul ignore next */
        cov_1uh46hctoo().b[26][3]++;
        cov_1uh46hctoo().s[77]++;
        diretorioBase = UPLOAD_CONFIG.UPLOAD_DIRS.AUDIOS;
        /* istanbul ignore next */
        cov_1uh46hctoo().s[78]++;
        break;
      default:
        /* istanbul ignore next */
        cov_1uh46hctoo().b[26][4]++;
        cov_1uh46hctoo().s[79]++;
        diretorioBase = UPLOAD_CONFIG.UPLOAD_DIRS.TEMP;
    }
    // Adicionar subdiretório se especificado
    const diretorioCompleto =
    /* istanbul ignore next */
    (cov_1uh46hctoo().s[80]++, subdiretorio ?
    /* istanbul ignore next */
    (cov_1uh46hctoo().b[27][0]++, (0, _path.join)(process.cwd(), 'public', diretorioBase, subdiretorio)) :
    /* istanbul ignore next */
    (cov_1uh46hctoo().b[27][1]++, (0, _path.join)(process.cwd(), 'public', diretorioBase)));
    // Criar diretório se não existir
    /* istanbul ignore next */
    cov_1uh46hctoo().s[81]++;
    await (0, _promises.mkdir)(diretorioCompleto, {
      recursive: true
    });
    // Caminho completo do arquivo
    const caminhoArquivo =
    /* istanbul ignore next */
    (cov_1uh46hctoo().s[82]++, (0, _path.join)(diretorioCompleto, nomeArquivo));
    // Converter File para Buffer
    const arrayBuffer =
    /* istanbul ignore next */
    (cov_1uh46hctoo().s[83]++, await file.arrayBuffer());
    const buffer =
    /* istanbul ignore next */
    (cov_1uh46hctoo().s[84]++, Buffer.from(arrayBuffer));
    // Salvar arquivo
    /* istanbul ignore next */
    cov_1uh46hctoo().s[85]++;
    await (0, _promises.writeFile)(caminhoArquivo, buffer);
    // Gerar URL pública
    const urlPublica =
    /* istanbul ignore next */
    (cov_1uh46hctoo().s[86]++, subdiretorio ?
    /* istanbul ignore next */
    (cov_1uh46hctoo().b[28][0]++, `/${diretorioBase}/${subdiretorio}/${nomeArquivo}`) :
    /* istanbul ignore next */
    (cov_1uh46hctoo().b[28][1]++, `/${diretorioBase}/${nomeArquivo}`));
    /* istanbul ignore next */
    cov_1uh46hctoo().s[87]++;
    return {
      sucesso: true,
      arquivo: {
        id: fileId,
        nome: nomeArquivo,
        nomeOriginal: file.name,
        tamanho: file.size,
        tipo: file.type,
        caminho: caminhoArquivo,
        url: urlPublica
      }
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1uh46hctoo().s[88]++;
    return {
      sucesso: false,
      erro: `Erro ao salvar arquivo: ${error instanceof Error ?
      /* istanbul ignore next */
      (cov_1uh46hctoo().b[29][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1uh46hctoo().b[29][1]++, 'Erro desconhecido')}`
    };
  }
}
async function deleteFile(caminho) {
  /* istanbul ignore next */
  cov_1uh46hctoo().f[14]++;
  cov_1uh46hctoo().s[89]++;
  try {
    /* istanbul ignore next */
    cov_1uh46hctoo().s[90]++;
    // Verificar se o arquivo existe
    await (0, _promises.access)(caminho, _fs.constants.F_OK);
    // Remover arquivo
    /* istanbul ignore next */
    cov_1uh46hctoo().s[91]++;
    await (0, _promises.unlink)(caminho);
    /* istanbul ignore next */
    cov_1uh46hctoo().s[92]++;
    return {
      sucesso: true
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1uh46hctoo().s[93]++;
    if (
    /* istanbul ignore next */
    (cov_1uh46hctoo().b[31][0]++, error instanceof Error) &&
    /* istanbul ignore next */
    (cov_1uh46hctoo().b[31][1]++, 'code' in error) &&
    /* istanbul ignore next */
    (cov_1uh46hctoo().b[31][2]++, error.code === 'ENOENT')) {
      /* istanbul ignore next */
      cov_1uh46hctoo().b[30][0]++;
      cov_1uh46hctoo().s[94]++;
      // Arquivo não existe, considerar como sucesso
      return {
        sucesso: true
      };
    } else
    /* istanbul ignore next */
    {
      cov_1uh46hctoo().b[30][1]++;
    }
    cov_1uh46hctoo().s[95]++;
    return {
      sucesso: false,
      erro: `Erro ao remover arquivo: ${error instanceof Error ?
      /* istanbul ignore next */
      (cov_1uh46hctoo().b[32][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1uh46hctoo().b[32][1]++, 'Erro desconhecido')}`
    };
  }
}
async function fileExists(caminho) {
  /* istanbul ignore next */
  cov_1uh46hctoo().f[15]++;
  cov_1uh46hctoo().s[96]++;
  try {
    /* istanbul ignore next */
    cov_1uh46hctoo().s[97]++;
    await (0, _promises.access)(caminho, _fs.constants.F_OK);
    /* istanbul ignore next */
    cov_1uh46hctoo().s[98]++;
    return true;
  } catch {
    /* istanbul ignore next */
    cov_1uh46hctoo().s[99]++;
    return false;
  }
}
async function getFileInfo(caminho) {
  /* istanbul ignore next */
  cov_1uh46hctoo().f[16]++;
  cov_1uh46hctoo().s[100]++;
  try {
    const absolutePath =
    /* istanbul ignore next */
    (cov_1uh46hctoo().s[101]++, (0, _path.join)(process.cwd(), 'public', caminho));
    const stats =
    /* istanbul ignore next */
    (cov_1uh46hctoo().s[102]++, await Promise.resolve().then(() => {
      /* istanbul ignore next */
      cov_1uh46hctoo().f[17]++;
      cov_1uh46hctoo().s[103]++;
      return /*#__PURE__*/_interop_require_wildcard(require("node:fs/promises"));
    }).then(fs => {
      /* istanbul ignore next */
      cov_1uh46hctoo().f[18]++;
      cov_1uh46hctoo().s[104]++;
      return fs.stat(absolutePath);
    }));
    /* istanbul ignore next */
    cov_1uh46hctoo().s[105]++;
    return {
      existe: true,
      tamanho: stats.size,
      criadoEm: stats.birthtime,
      modificadoEm: stats.mtime,
      ehArquivo: stats.isFile(),
      ehDiretorio: stats.isDirectory()
    };
  } catch {
    /* istanbul ignore next */
    cov_1uh46hctoo().s[106]++;
    return {
      existe: false
    };
  }
}
async function listFiles(diretorio) {
  /* istanbul ignore next */
  cov_1uh46hctoo().f[19]++;
  cov_1uh46hctoo().s[107]++;
  try {
    const absolutePath =
    /* istanbul ignore next */
    (cov_1uh46hctoo().s[108]++, (0, _path.join)(process.cwd(), 'public', diretorio));
    const {
      readdir,
      stat
    } =
    /* istanbul ignore next */
    (cov_1uh46hctoo().s[109]++, await Promise.resolve().then(() => {
      /* istanbul ignore next */
      cov_1uh46hctoo().f[20]++;
      cov_1uh46hctoo().s[110]++;
      return /*#__PURE__*/_interop_require_wildcard(require("node:fs/promises"));
    }));
    const items =
    /* istanbul ignore next */
    (cov_1uh46hctoo().s[111]++, await readdir(absolutePath));
    const arquivos =
    /* istanbul ignore next */
    (cov_1uh46hctoo().s[112]++, []);
    /* istanbul ignore next */
    cov_1uh46hctoo().s[113]++;
    for (const item of items) {
      const itemPath =
      /* istanbul ignore next */
      (cov_1uh46hctoo().s[114]++, (0, _path.join)(absolutePath, item));
      const stats =
      /* istanbul ignore next */
      (cov_1uh46hctoo().s[115]++, await stat(itemPath));
      /* istanbul ignore next */
      cov_1uh46hctoo().s[116]++;
      if (stats.isFile()) {
        /* istanbul ignore next */
        cov_1uh46hctoo().b[33][0]++;
        cov_1uh46hctoo().s[117]++;
        arquivos.push({
          nome: item,
          tamanho: stats.size,
          criadoEm: stats.birthtime,
          modificadoEm: stats.mtime,
          caminho: (0, _path.join)(diretorio, item)
        });
      } else
      /* istanbul ignore next */
      {
        cov_1uh46hctoo().b[33][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1uh46hctoo().s[118]++;
    return {
      sucesso: true,
      arquivos
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1uh46hctoo().s[119]++;
    return {
      sucesso: false,
      erro: `Erro ao listar arquivos: ${error instanceof Error ?
      /* istanbul ignore next */
      (cov_1uh46hctoo().b[34][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1uh46hctoo().b[34][1]++, 'Erro desconhecido')}`,
      arquivos: []
    };
  }
}
async function cleanupTempFiles(idadeMaximaHoras =
/* istanbul ignore next */
(cov_1uh46hctoo().b[35][0]++, 24)) {
  /* istanbul ignore next */
  cov_1uh46hctoo().f[21]++;
  cov_1uh46hctoo().s[120]++;
  try {
    const tempDir =
    /* istanbul ignore next */
    (cov_1uh46hctoo().s[121]++, (0, _path.join)(process.cwd(), 'public', UPLOAD_CONFIG.UPLOAD_DIRS.TEMP));
    const {
      readdir,
      stat,
      unlink
    } =
    /* istanbul ignore next */
    (cov_1uh46hctoo().s[122]++, await Promise.resolve().then(() => {
      /* istanbul ignore next */
      cov_1uh46hctoo().f[22]++;
      cov_1uh46hctoo().s[123]++;
      return /*#__PURE__*/_interop_require_wildcard(require("node:fs/promises"));
    }));
    const agora =
    /* istanbul ignore next */
    (cov_1uh46hctoo().s[124]++, new Date());
    const idadeMaximaMs =
    /* istanbul ignore next */
    (cov_1uh46hctoo().s[125]++, idadeMaximaHoras * 60 * 60 * 1000);
    const items =
    /* istanbul ignore next */
    (cov_1uh46hctoo().s[126]++, await readdir(tempDir));
    let removidos =
    /* istanbul ignore next */
    (cov_1uh46hctoo().s[127]++, 0);
    /* istanbul ignore next */
    cov_1uh46hctoo().s[128]++;
    for (const item of items) {
      const itemPath =
      /* istanbul ignore next */
      (cov_1uh46hctoo().s[129]++, (0, _path.join)(tempDir, item));
      const stats =
      /* istanbul ignore next */
      (cov_1uh46hctoo().s[130]++, await stat(itemPath));
      /* istanbul ignore next */
      cov_1uh46hctoo().s[131]++;
      if (stats.isFile()) {
        /* istanbul ignore next */
        cov_1uh46hctoo().b[36][0]++;
        const idade =
        /* istanbul ignore next */
        (cov_1uh46hctoo().s[132]++, agora.getTime() - stats.mtime.getTime());
        /* istanbul ignore next */
        cov_1uh46hctoo().s[133]++;
        if (idade > idadeMaximaMs) {
          /* istanbul ignore next */
          cov_1uh46hctoo().b[37][0]++;
          cov_1uh46hctoo().s[134]++;
          await unlink(itemPath);
          /* istanbul ignore next */
          cov_1uh46hctoo().s[135]++;
          removidos++;
        } else
        /* istanbul ignore next */
        {
          cov_1uh46hctoo().b[37][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1uh46hctoo().b[36][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1uh46hctoo().s[136]++;
    return {
      sucesso: true,
      removidos
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_1uh46hctoo().s[137]++;
    return {
      sucesso: false,
      erro: `Erro ao limpar arquivos temporários: ${error instanceof Error ?
      /* istanbul ignore next */
      (cov_1uh46hctoo().b[38][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1uh46hctoo().b[38][1]++, 'Erro desconhecido')}`,
      removidos: 0
    };
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,