77bf452779116cb532d15779b4ef1b19
"use strict";

/* istanbul ignore next */
function cov_140q7zj0nr() {
  var path = "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\components\\ui\\badge.tsx";
  var hash = "70780b350c91025c09c5a121a30c4dca8806ae8b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\components\\ui\\badge.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 21
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 29
        }
      },
      "6": {
        start: {
          line: 19,
          column: 20
        },
        end: {
          line: 19,
          column: 48
        }
      },
      "7": {
        start: {
          line: 20,
          column: 29
        },
        end: {
          line: 20,
          column: 72
        }
      },
      "8": {
        start: {
          line: 21,
          column: 32
        },
        end: {
          line: 21,
          column: 67
        }
      },
      "9": {
        start: {
          line: 22,
          column: 15
        },
        end: {
          line: 22,
          column: 41
        }
      },
      "10": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 51
        }
      },
      "11": {
        start: {
          line: 24,
          column: 39
        },
        end: {
          line: 24,
          column: 51
        }
      },
      "12": {
        start: {
          line: 25,
          column: 28
        },
        end: {
          line: 25,
          column: 41
        }
      },
      "13": {
        start: {
          line: 26,
          column: 27
        },
        end: {
          line: 26,
          column: 40
        }
      },
      "14": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 29,
          column: 20
        }
      },
      "15": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 66
        }
      },
      "16": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 34,
          column: 5
        }
      },
      "17": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 19
        }
      },
      "18": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "19": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 38,
          column: 10
        }
      },
      "20": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 40,
          column: 53
        }
      },
      "21": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "22": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 30
        }
      },
      "23": {
        start: {
          line: 44,
          column: 17
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "24": {
        start: {
          line: 47,
          column: 32
        },
        end: {
          line: 47,
          column: 88
        }
      },
      "25": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 57,
          column: 5
        }
      },
      "26": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "27": {
        start: {
          line: 50,
          column: 23
        },
        end: {
          line: 50,
          column: 95
        }
      },
      "28": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 55,
          column: 13
        }
      },
      "29": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 57
        }
      },
      "30": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 39
        }
      },
      "31": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 58,
          column: 25
        }
      },
      "32": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "33": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 31
        }
      },
      "34": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 62,
          column: 18
        }
      },
      "35": {
        start: {
          line: 64,
          column: 22
        },
        end: {
          line: 79,
          column: 2
        }
      },
      "36": {
        start: {
          line: 81,
          column: 4
        },
        end: {
          line: 86,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 17
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 25
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 23,
            column: 9
          },
          end: {
            line: 23,
            column: 33
          }
        },
        loc: {
          start: {
            line: 23,
            column: 47
          },
          end: {
            line: 30,
            column: 1
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 27,
            column: 39
          },
          end: {
            line: 27,
            column: 40
          }
        },
        loc: {
          start: {
            line: 27,
            column: 61
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "5": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 31,
            column: 9
          },
          end: {
            line: 31,
            column: 34
          }
        },
        loc: {
          start: {
            line: 31,
            column: 53
          },
          end: {
            line: 63,
            column: 1
          }
        },
        line: 31
      },
      "6": {
        name: "Badge",
        decl: {
          start: {
            line: 80,
            column: 9
          },
          end: {
            line: 80,
            column: 14
          }
        },
        loc: {
          start: {
            line: 80,
            column: 49
          },
          end: {
            line: 87,
            column: 1
          }
        },
        line: 80
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 15
          },
          end: {
            line: 28,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 28,
            column: 29
          },
          end: {
            line: 28,
            column: 45
          }
        }, {
          start: {
            line: 28,
            column: 48
          },
          end: {
            line: 28,
            column: 65
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "3": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 20
          }
        }, {
          start: {
            line: 32,
            column: 24
          },
          end: {
            line: 32,
            column: 27
          }
        }, {
          start: {
            line: 32,
            column: 31
          },
          end: {
            line: 32,
            column: 45
          }
        }],
        line: 32
      },
      "4": {
        loc: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "5": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 20
          }
        }, {
          start: {
            line: 35,
            column: 24
          },
          end: {
            line: 35,
            column: 47
          }
        }, {
          start: {
            line: 35,
            column: 51
          },
          end: {
            line: 35,
            column: 76
          }
        }],
        line: 35
      },
      "6": {
        loc: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "7": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 13
          }
        }, {
          start: {
            line: 41,
            column: 17
          },
          end: {
            line: 41,
            column: 31
          }
        }],
        line: 41
      },
      "8": {
        loc: {
          start: {
            line: 47,
            column: 32
          },
          end: {
            line: 47,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 32
          },
          end: {
            line: 47,
            column: 53
          }
        }, {
          start: {
            line: 47,
            column: 57
          },
          end: {
            line: 47,
            column: 88
          }
        }],
        line: 47
      },
      "9": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "10": {
        loc: {
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 49,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 49,
            column: 29
          }
        }, {
          start: {
            line: 49,
            column: 33
          },
          end: {
            line: 49,
            column: 79
          }
        }],
        line: 49
      },
      "11": {
        loc: {
          start: {
            line: 50,
            column: 23
          },
          end: {
            line: 50,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 50,
            column: 47
          },
          end: {
            line: 50,
            column: 88
          }
        }, {
          start: {
            line: 50,
            column: 91
          },
          end: {
            line: 50,
            column: 95
          }
        }],
        line: 50
      },
      "12": {
        loc: {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 55,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 55,
            column: 13
          }
        }, {
          start: {
            line: 53,
            column: 19
          },
          end: {
            line: 55,
            column: 13
          }
        }],
        line: 51
      },
      "13": {
        loc: {
          start: {
            line: 51,
            column: 16
          },
          end: {
            line: 51,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 16
          },
          end: {
            line: 51,
            column: 20
          }
        }, {
          start: {
            line: 51,
            column: 25
          },
          end: {
            line: 51,
            column: 33
          }
        }, {
          start: {
            line: 51,
            column: 37
          },
          end: {
            line: 51,
            column: 45
          }
        }],
        line: 51
      },
      "14": {
        loc: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\components\\ui\\badge.tsx"],
      sourcesContent: ["import * as React from 'react';\nimport { cva, type VariantProps } from 'class-variance-authority';\n\nimport { cn } from '@/lib/utils';\n\nconst badgeVariants = cva(\n  'inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2',\n  {\n    variants: {\n      variant: {\n        default:\n          'border-transparent bg-primary text-primary-foreground hover:bg-primary/80',\n        secondary:\n          'border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80',\n        destructive:\n          'border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80',\n        outline: 'text-foreground',\n        success:\n          'border-transparent bg-green-500 text-white hover:bg-green-600',\n        warning:\n          'border-transparent bg-yellow-500 text-white hover:bg-yellow-600',\n        info: 'border-transparent bg-blue-500 text-white hover:bg-blue-600',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  }\n);\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n}\n\nexport { Badge, badgeVariants };\n"],
      names: ["Badge", "badgeVariants", "cva", "variants", "variant", "default", "secondary", "destructive", "outline", "success", "warning", "info", "defaultVariants", "className", "props", "div", "cn"],
      mappings: ";;;;;;;;;;;QAwCSA;eAAAA;;QAAOC;eAAAA;;;;+DAxCO;wCACgB;uBAEpB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEnB,MAAMA,gBAAgBC,IAAAA,2BAAG,EACvB,0KACA;IACEC,UAAU;QACRC,SAAS;YACPC,SACE;YACFC,WACE;YACFC,aACE;YACFC,SAAS;YACTC,SACE;YACFC,SACE;YACFC,MAAM;QACR;IACF;IACAC,iBAAiB;QACfR,SAAS;IACX;AACF;AAOF,SAASJ,MAAM,EAAEa,SAAS,EAAET,OAAO,EAAE,GAAGU,OAAmB;IACzD,qBACE,qBAACC;QAAIF,WAAWG,IAAAA,SAAE,EAACf,cAAc;YAAEG;QAAQ,IAAIS;QAAa,GAAGC,KAAK;;AAExE"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "70780b350c91025c09c5a121a30c4dca8806ae8b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_140q7zj0nr = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_140q7zj0nr();
cov_140q7zj0nr().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_140q7zj0nr().f[0]++;
  cov_140q7zj0nr().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_140q7zj0nr().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_140q7zj0nr().s[3]++;
_export(exports, {
  get Badge() {
    /* istanbul ignore next */
    cov_140q7zj0nr().f[1]++;
    cov_140q7zj0nr().s[4]++;
    return Badge;
  },
  get badgeVariants() {
    /* istanbul ignore next */
    cov_140q7zj0nr().f[2]++;
    cov_140q7zj0nr().s[5]++;
    return badgeVariants;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_140q7zj0nr().s[6]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_140q7zj0nr().s[7]++, _interop_require_wildcard(require("react")));
const _classvarianceauthority =
/* istanbul ignore next */
(cov_140q7zj0nr().s[8]++, require("class-variance-authority"));
const _utils =
/* istanbul ignore next */
(cov_140q7zj0nr().s[9]++, require("../../lib/utils"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_140q7zj0nr().f[3]++;
  cov_140q7zj0nr().s[10]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_140q7zj0nr().b[0][0]++;
    cov_140q7zj0nr().s[11]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_140q7zj0nr().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_140q7zj0nr().s[12]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_140q7zj0nr().s[13]++, new WeakMap());
  /* istanbul ignore next */
  cov_140q7zj0nr().s[14]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_140q7zj0nr().f[4]++;
    cov_140q7zj0nr().s[15]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_140q7zj0nr().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_140q7zj0nr().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_140q7zj0nr().f[5]++;
  cov_140q7zj0nr().s[16]++;
  if (
  /* istanbul ignore next */
  (cov_140q7zj0nr().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_140q7zj0nr().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_140q7zj0nr().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_140q7zj0nr().b[2][0]++;
    cov_140q7zj0nr().s[17]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_140q7zj0nr().b[2][1]++;
  }
  cov_140q7zj0nr().s[18]++;
  if (
  /* istanbul ignore next */
  (cov_140q7zj0nr().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_140q7zj0nr().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_140q7zj0nr().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_140q7zj0nr().b[4][0]++;
    cov_140q7zj0nr().s[19]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_140q7zj0nr().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_140q7zj0nr().s[20]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_140q7zj0nr().s[21]++;
  if (
  /* istanbul ignore next */
  (cov_140q7zj0nr().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_140q7zj0nr().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_140q7zj0nr().b[6][0]++;
    cov_140q7zj0nr().s[22]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_140q7zj0nr().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_140q7zj0nr().s[23]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_140q7zj0nr().s[24]++,
  /* istanbul ignore next */
  (cov_140q7zj0nr().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_140q7zj0nr().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_140q7zj0nr().s[25]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_140q7zj0nr().s[26]++;
    if (
    /* istanbul ignore next */
    (cov_140q7zj0nr().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_140q7zj0nr().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_140q7zj0nr().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_140q7zj0nr().s[27]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_140q7zj0nr().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_140q7zj0nr().b[11][1]++, null));
      /* istanbul ignore next */
      cov_140q7zj0nr().s[28]++;
      if (
      /* istanbul ignore next */
      (cov_140q7zj0nr().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_140q7zj0nr().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_140q7zj0nr().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_140q7zj0nr().b[12][0]++;
        cov_140q7zj0nr().s[29]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_140q7zj0nr().b[12][1]++;
        cov_140q7zj0nr().s[30]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_140q7zj0nr().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_140q7zj0nr().s[31]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_140q7zj0nr().s[32]++;
  if (cache) {
    /* istanbul ignore next */
    cov_140q7zj0nr().b[14][0]++;
    cov_140q7zj0nr().s[33]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_140q7zj0nr().b[14][1]++;
  }
  cov_140q7zj0nr().s[34]++;
  return newObj;
}
const badgeVariants =
/* istanbul ignore next */
(cov_140q7zj0nr().s[35]++, (0, _classvarianceauthority.cva)('inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2', {
  variants: {
    variant: {
      default: 'border-transparent bg-primary text-primary-foreground hover:bg-primary/80',
      secondary: 'border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80',
      destructive: 'border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80',
      outline: 'text-foreground',
      success: 'border-transparent bg-green-500 text-white hover:bg-green-600',
      warning: 'border-transparent bg-yellow-500 text-white hover:bg-yellow-600',
      info: 'border-transparent bg-blue-500 text-white hover:bg-blue-600'
    }
  },
  defaultVariants: {
    variant: 'default'
  }
}));
function Badge({
  className,
  variant,
  ...props
}) {
  /* istanbul ignore next */
  cov_140q7zj0nr().f[6]++;
  cov_140q7zj0nr().s[36]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    className: (0, _utils.cn)(badgeVariants({
      variant
    }), className),
    ...props
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJCYWRnZSIsImNvdl8xNDBxN3pqMG5yIiwiZiIsInMiLCJiYWRnZVZhcmlhbnRzIiwiX2NsYXNzdmFyaWFuY2VhdXRob3JpdHkiLCJjdmEiLCJ2YXJpYW50cyIsInZhcmlhbnQiLCJkZWZhdWx0Iiwic2Vjb25kYXJ5IiwiZGVzdHJ1Y3RpdmUiLCJvdXRsaW5lIiwic3VjY2VzcyIsIndhcm5pbmciLCJpbmZvIiwiZGVmYXVsdFZhcmlhbnRzIiwiY2xhc3NOYW1lIiwicHJvcHMiLCJfanN4cnVudGltZSIsImpzeCIsIl91dGlscyIsImNuIl0sInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxOZXJldSBKclxcRG9jdW1lbnRzXFxEZXZcXG5ld1xcc3JjXFxjb21wb25lbnRzXFx1aVxcYmFkZ2UudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGN2YSwgdHlwZSBWYXJpYW50UHJvcHMgfSBmcm9tICdjbGFzcy12YXJpYW5jZS1hdXRob3JpdHknO1xuXG5pbXBvcnQgeyBjbiB9IGZyb20gJ0AvbGliL3V0aWxzJztcblxuY29uc3QgYmFkZ2VWYXJpYW50cyA9IGN2YShcbiAgJ2lubGluZS1mbGV4IGl0ZW1zLWNlbnRlciByb3VuZGVkLWZ1bGwgYm9yZGVyIHB4LTIuNSBweS0wLjUgdGV4dC14cyBmb250LXNlbWlib2xkIHRyYW5zaXRpb24tY29sb3JzIGZvY3VzOm91dGxpbmUtbm9uZSBmb2N1czpyaW5nLTIgZm9jdXM6cmluZy1yaW5nIGZvY3VzOnJpbmctb2Zmc2V0LTInLFxuICB7XG4gICAgdmFyaWFudHM6IHtcbiAgICAgIHZhcmlhbnQ6IHtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAnYm9yZGVyLXRyYW5zcGFyZW50IGJnLXByaW1hcnkgdGV4dC1wcmltYXJ5LWZvcmVncm91bmQgaG92ZXI6YmctcHJpbWFyeS84MCcsXG4gICAgICAgIHNlY29uZGFyeTpcbiAgICAgICAgICAnYm9yZGVyLXRyYW5zcGFyZW50IGJnLXNlY29uZGFyeSB0ZXh0LXNlY29uZGFyeS1mb3JlZ3JvdW5kIGhvdmVyOmJnLXNlY29uZGFyeS84MCcsXG4gICAgICAgIGRlc3RydWN0aXZlOlxuICAgICAgICAgICdib3JkZXItdHJhbnNwYXJlbnQgYmctZGVzdHJ1Y3RpdmUgdGV4dC1kZXN0cnVjdGl2ZS1mb3JlZ3JvdW5kIGhvdmVyOmJnLWRlc3RydWN0aXZlLzgwJyxcbiAgICAgICAgb3V0bGluZTogJ3RleHQtZm9yZWdyb3VuZCcsXG4gICAgICAgIHN1Y2Nlc3M6XG4gICAgICAgICAgJ2JvcmRlci10cmFuc3BhcmVudCBiZy1ncmVlbi01MDAgdGV4dC13aGl0ZSBob3ZlcjpiZy1ncmVlbi02MDAnLFxuICAgICAgICB3YXJuaW5nOlxuICAgICAgICAgICdib3JkZXItdHJhbnNwYXJlbnQgYmcteWVsbG93LTUwMCB0ZXh0LXdoaXRlIGhvdmVyOmJnLXllbGxvdy02MDAnLFxuICAgICAgICBpbmZvOiAnYm9yZGVyLXRyYW5zcGFyZW50IGJnLWJsdWUtNTAwIHRleHQtd2hpdGUgaG92ZXI6YmctYmx1ZS02MDAnLFxuICAgICAgfSxcbiAgICB9LFxuICAgIGRlZmF1bHRWYXJpYW50czoge1xuICAgICAgdmFyaWFudDogJ2RlZmF1bHQnLFxuICAgIH0sXG4gIH1cbik7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQmFkZ2VQcm9wc1xuICBleHRlbmRzIFJlYWN0LkhUTUxBdHRyaWJ1dGVzPEhUTUxEaXZFbGVtZW50PixcbiAgICBWYXJpYW50UHJvcHM8dHlwZW9mIGJhZGdlVmFyaWFudHM+IHt9XG5cbmZ1bmN0aW9uIEJhZGdlKHsgY2xhc3NOYW1lLCB2YXJpYW50LCAuLi5wcm9wcyB9OiBCYWRnZVByb3BzKSB7XG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9e2NuKGJhZGdlVmFyaWFudHMoeyB2YXJpYW50IH0pLCBjbGFzc05hbWUpfSB7Li4ucHJvcHN9IC8+XG4gICk7XG59XG5cbmV4cG9ydCB7IEJhZGdlLCBiYWRnZVZhcmlhbnRzIH07XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztNQXdDU0EsTUFBQTtJQUFBO0lBQUFDLGNBQUEsR0FBQUMsQ0FBQTtJQUFBRCxjQUFBLEdBQUFFLENBQUE7V0FBQUgsS0FBQTs7TUFBT0ksY0FBQTtJQUFBO0lBQUFILGNBQUEsR0FBQUMsQ0FBQTtJQUFBRCxjQUFBLEdBQUFFLENBQUE7V0FBQUMsYUFBQTs7Ozs7Ozs7eUVBeENPOzs7a0NBQ2dCOzs7a0NBRXBCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRW5CLE1BQU1BLGFBQUE7QUFBQTtBQUFBLENBQUFILGNBQUEsR0FBQUUsQ0FBQSxRQUFnQixJQUFBRSx1QkFBQSxDQUFBQyxHQUFHLEVBQ3ZCLDBLQUNBO0VBQ0VDLFFBQUEsRUFBVTtJQUNSQyxPQUFBLEVBQVM7TUFDUEMsT0FBQSxFQUNFO01BQ0ZDLFNBQUEsRUFDRTtNQUNGQyxXQUFBLEVBQ0U7TUFDRkMsT0FBQSxFQUFTO01BQ1RDLE9BQUEsRUFDRTtNQUNGQyxPQUFBLEVBQ0U7TUFDRkMsSUFBQSxFQUFNO0lBQ1I7RUFDRjtFQUNBQyxlQUFBLEVBQWlCO0lBQ2ZSLE9BQUEsRUFBUztFQUNYO0FBQ0Y7QUFPRixTQUFTUixNQUFNO0VBQUVpQixTQUFTO0VBQUVULE9BQU87RUFBRSxHQUFHVTtBQUFBLENBQW1CO0VBQUE7RUFBQWpCLGNBQUEsR0FBQUMsQ0FBQTtFQUFBRCxjQUFBLEdBQUFFLENBQUE7RUFDekQsb0JBQ0UsSUFBQWdCLFdBQUEsQ0FBQUMsR0FBQSxFQUFDO0lBQUlILFNBQUEsRUFBVyxJQUFBSSxNQUFBLENBQUFDLEVBQUUsRUFBQ2xCLGFBQUEsQ0FBYztNQUFFSTtJQUFRLElBQUlTLFNBQUE7SUFBYSxHQUFHQzs7QUFFbkUiLCJpZ25vcmVMaXN0IjpbXX0=