eee16a926cc59ea0a2ced1358bc3dad1
"use strict";

/* istanbul ignore next */
function cov_1nzx2ufhls() {
  var path = "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\atendentes\\route.ts";
  var hash = "30effff003941e85df60dab2f39242faf89b517a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\atendentes\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 19
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 20
        }
      },
      "6": {
        start: {
          line: 19,
          column: 16
        },
        end: {
          line: 19,
          column: 38
        }
      },
      "7": {
        start: {
          line: 20,
          column: 17
        },
        end: {
          line: 20,
          column: 52
        }
      },
      "8": {
        start: {
          line: 21,
          column: 14
        },
        end: {
          line: 21,
          column: 42
        }
      },
      "9": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 46
        }
      },
      "10": {
        start: {
          line: 23,
          column: 18
        },
        end: {
          line: 23,
          column: 37
        }
      },
      "11": {
        start: {
          line: 24,
          column: 20
        },
        end: {
          line: 24,
          column: 66
        }
      },
      "12": {
        start: {
          line: 25,
          column: 13
        },
        end: {
          line: 25,
          column: 27
        }
      },
      "13": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 211,
          column: 5
        }
      },
      "14": {
        start: {
          line: 29,
          column: 24
        },
        end: {
          line: 29,
          column: 79
        }
      },
      "15": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 36,
          column: 9
        }
      },
      "16": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 35,
          column: 15
        }
      },
      "17": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 47,
          column: 9
        }
      },
      "18": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 46,
          column: 15
        }
      },
      "19": {
        start: {
          line: 49,
          column: 33
        },
        end: {
          line: 49,
          column: 53
        }
      },
      "20": {
        start: {
          line: 50,
          column: 28
        },
        end: {
          line: 50,
          column: 70
        }
      },
      "21": {
        start: {
          line: 52,
          column: 36
        },
        end: {
          line: 52,
          column: 89
        }
      },
      "22": {
        start: {
          line: 53,
          column: 134
        },
        end: {
          line: 53,
          column: 153
        }
      },
      "23": {
        start: {
          line: 55,
          column: 24
        },
        end: {
          line: 55,
          column: 26
        }
      },
      "24": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 81,
          column: 9
        }
      },
      "25": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 80,
          column: 14
        }
      },
      "26": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 85,
          column: 9
        }
      },
      "27": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 36
        }
      },
      "28": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 91,
          column: 9
        }
      },
      "29": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 90,
          column: 14
        }
      },
      "30": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 97,
          column: 9
        }
      },
      "31": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 96,
          column: 14
        }
      },
      "32": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 103,
          column: 9
        }
      },
      "33": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 102,
          column: 14
        }
      },
      "34": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 113,
          column: 9
        }
      },
      "35": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 38
        }
      },
      "36": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 109,
          column: 13
        }
      },
      "37": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 108,
          column: 72
        }
      },
      "38": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 112,
          column: 13
        }
      },
      "39": {
        start: {
          line: 111,
          column: 16
        },
        end: {
          line: 111,
          column: 69
        }
      },
      "40": {
        start: {
          line: 115,
          column: 26
        },
        end: {
          line: 115,
          column: 28
        }
      },
      "41": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 122,
          column: 9
        }
      },
      "42": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 119,
          column: 14
        }
      },
      "43": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 42
        }
      },
      "44": {
        start: {
          line: 124,
          column: 23
        },
        end: {
          line: 124,
          column: 44
        }
      },
      "45": {
        start: {
          line: 126,
          column: 36
        },
        end: {
          line: 154,
          column: 10
        }
      },
      "46": {
        start: {
          line: 156,
          column: 29
        },
        end: {
          line: 156,
          column: 54
        }
      },
      "47": {
        start: {
          line: 157,
          column: 33
        },
        end: {
          line: 157,
          column: 54
        }
      },
      "48": {
        start: {
          line: 158,
          column: 34
        },
        end: {
          line: 158,
          column: 44
        }
      },
      "49": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 195,
          column: 11
        }
      },
      "50": {
        start: {
          line: 160,
          column: 53
        },
        end: {
          line: 186,
          column: 17
        }
      },
      "51": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 197,
          column: 59
        }
      },
      "52": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 205,
          column: 9
        }
      },
      "53": {
        start: {
          line: 199,
          column: 12
        },
        end: {
          line: 204,
          column: 15
        }
      },
      "54": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 210,
          column: 11
        }
      },
      "55": {
        start: {
          line: 214,
          column: 4
        },
        end: {
          line: 362,
          column: 5
        }
      },
      "56": {
        start: {
          line: 216,
          column: 24
        },
        end: {
          line: 216,
          column: 79
        }
      },
      "57": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 223,
          column: 9
        }
      },
      "58": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 222,
          column: 15
        }
      },
      "59": {
        start: {
          line: 225,
          column: 8
        },
        end: {
          line: 231,
          column: 9
        }
      },
      "60": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 230,
          column: 15
        }
      },
      "61": {
        start: {
          line: 233,
          column: 32
        },
        end: {
          line: 233,
          column: 52
        }
      },
      "62": {
        start: {
          line: 235,
          column: 31
        },
        end: {
          line: 235,
          column: 86
        }
      },
      "63": {
        start: {
          line: 236,
          column: 61
        },
        end: {
          line: 236,
          column: 75
        }
      },
      "64": {
        start: {
          line: 238,
          column: 28
        },
        end: {
          line: 238,
          column: 103
        }
      },
      "65": {
        start: {
          line: 239,
          column: 8
        },
        end: {
          line: 245,
          column: 9
        }
      },
      "66": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 244,
          column: 15
        }
      },
      "67": {
        start: {
          line: 247,
          column: 26
        },
        end: {
          line: 247,
          column: 99
        }
      },
      "68": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 254,
          column: 9
        }
      },
      "69": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 253,
          column: 15
        }
      },
      "70": {
        start: {
          line: 256,
          column: 26
        },
        end: {
          line: 256,
          column: 75
        }
      },
      "71": {
        start: {
          line: 258,
          column: 25
        },
        end: {
          line: 258,
          column: 62
        }
      },
      "72": {
        start: {
          line: 260,
          column: 26
        },
        end: {
          line: 318,
          column: 10
        }
      },
      "73": {
        start: {
          line: 262,
          column: 32
        },
        end: {
          line: 270,
          column: 14
        }
      },
      "74": {
        start: {
          line: 272,
          column: 34
        },
        end: {
          line: 305,
          column: 14
        }
      },
      "75": {
        start: {
          line: 307,
          column: 12
        },
        end: {
          line: 316,
          column: 15
        }
      },
      "76": {
        start: {
          line: 317,
          column: 12
        },
        end: {
          line: 317,
          column: 33
        }
      },
      "77": {
        start: {
          line: 319,
          column: 8
        },
        end: {
          line: 346,
          column: 11
        }
      },
      "78": {
        start: {
          line: 348,
          column: 8
        },
        end: {
          line: 348,
          column: 57
        }
      },
      "79": {
        start: {
          line: 349,
          column: 8
        },
        end: {
          line: 356,
          column: 9
        }
      },
      "80": {
        start: {
          line: 350,
          column: 12
        },
        end: {
          line: 355,
          column: 15
        }
      },
      "81": {
        start: {
          line: 357,
          column: 8
        },
        end: {
          line: 361,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 15
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 16
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "GET",
        decl: {
          start: {
            line: 26,
            column: 15
          },
          end: {
            line: 26,
            column: 18
          }
        },
        loc: {
          start: {
            line: 26,
            column: 28
          },
          end: {
            line: 212,
            column: 1
          }
        },
        line: 26
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 160,
            column: 39
          },
          end: {
            line: 160,
            column: 40
          }
        },
        loc: {
          start: {
            line: 160,
            column: 53
          },
          end: {
            line: 186,
            column: 17
          }
        },
        line: 160
      },
      "5": {
        name: "POST",
        decl: {
          start: {
            line: 213,
            column: 15
          },
          end: {
            line: 213,
            column: 19
          }
        },
        loc: {
          start: {
            line: 213,
            column: 29
          },
          end: {
            line: 363,
            column: 1
          }
        },
        line: 213
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 260,
            column: 60
          },
          end: {
            line: 260,
            column: 61
          }
        },
        loc: {
          start: {
            line: 260,
            column: 72
          },
          end: {
            line: 318,
            column: 9
          }
        },
        line: 260
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "1": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "2": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 81,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "3": {
        loc: {
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "4": {
        loc: {
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "5": {
        loc: {
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 97,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 97,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "6": {
        loc: {
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 103,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "7": {
        loc: {
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 113,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 105,
            column: 8
          },
          end: {
            line: 113,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 105
      },
      "8": {
        loc: {
          start: {
            line: 105,
            column: 12
          },
          end: {
            line: 105,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 105,
            column: 12
          },
          end: {
            line: 105,
            column: 30
          }
        }, {
          start: {
            line: 105,
            column: 34
          },
          end: {
            line: 105,
            column: 49
          }
        }],
        line: 105
      },
      "9": {
        loc: {
          start: {
            line: 107,
            column: 12
          },
          end: {
            line: 109,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 12
          },
          end: {
            line: 109,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "10": {
        loc: {
          start: {
            line: 110,
            column: 12
          },
          end: {
            line: 112,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 12
          },
          end: {
            line: 112,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "11": {
        loc: {
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 122,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 8
          },
          end: {
            line: 122,
            column: 9
          }
        }, {
          start: {
            line: 120,
            column: 15
          },
          end: {
            line: 122,
            column: 9
          }
        }],
        line: 116
      },
      "12": {
        loc: {
          start: {
            line: 198,
            column: 8
          },
          end: {
            line: 205,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 198,
            column: 8
          },
          end: {
            line: 205,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 198
      },
      "13": {
        loc: {
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 223,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 223,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 217
      },
      "14": {
        loc: {
          start: {
            line: 225,
            column: 8
          },
          end: {
            line: 231,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 225,
            column: 8
          },
          end: {
            line: 231,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 225
      },
      "15": {
        loc: {
          start: {
            line: 239,
            column: 8
          },
          end: {
            line: 245,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 239,
            column: 8
          },
          end: {
            line: 245,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 239
      },
      "16": {
        loc: {
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 254,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 248,
            column: 8
          },
          end: {
            line: 254,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 248
      },
      "17": {
        loc: {
          start: {
            line: 277,
            column: 36
          },
          end: {
            line: 277,
            column: 114
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 277,
            column: 68
          },
          end: {
            line: 277,
            column: 107
          }
        }, {
          start: {
            line: 277,
            column: 110
          },
          end: {
            line: 277,
            column: 114
          }
        }],
        line: 277
      },
      "18": {
        loc: {
          start: {
            line: 314,
            column: 24
          },
          end: {
            line: 314,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 314,
            column: 24
          },
          end: {
            line: 314,
            column: 62
          }
        }, {
          start: {
            line: 314,
            column: 66
          },
          end: {
            line: 314,
            column: 75
          }
        }],
        line: 314
      },
      "19": {
        loc: {
          start: {
            line: 349,
            column: 8
          },
          end: {
            line: 356,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 349,
            column: 8
          },
          end: {
            line: 356,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 349
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\atendentes\\route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { getServerSession } from '@/lib/auth/server';\nimport { authOptions } from '@/lib/auth';\nimport { prisma } from '@/lib/prisma';\nimport { hash } from 'bcryptjs';\nimport {\n  listarAtendentesSchema,\n  criarAtendenteSchema,\n  MENSAGENS_ERRO_ATENDENTES,\n  validacaoAtendentes,\n} from '@/lib/validations/atendentes';\nimport { ZodError } from 'zod';\n\n/**\n * GET /api/atendentes\n * Lista atendentes com pagina\xE7\xE3o e filtros\n */\nexport async function GET(request: NextRequest) {\n  try {\n    // Verificar autentica\xE7\xE3o\n    const session = await getServerSession(authOptions);\n    if (!session?.user) {\n      return NextResponse.json({ erro: 'N\xE3o autorizado' }, { status: 401 });\n    }\n\n    // Verificar permiss\xF5es (apenas ADMIN e GERENTE podem listar atendentes)\n    if (!['ADMIN', 'GERENTE'].includes(session.user.userType)) {\n      return NextResponse.json(\n        { erro: MENSAGENS_ERRO_ATENDENTES.SEM_PERMISSAO },\n        { status: 403 }\n      );\n    }\n\n    // Extrair par\xE2metros da query string\n    const { searchParams } = new URL(request.url);\n    const queryParams = Object.fromEntries(searchParams.entries());\n\n    // Validar par\xE2metros\n    const parametrosValidados = listarAtendentesSchema.parse(queryParams);\n\n    const {\n      pagina,\n      limite,\n      busca,\n      status,\n      setor,\n      cargo,\n      departamento,\n      dataAdmissaoInicio,\n      dataAdmissaoFim,\n      ordenarPor,\n      ordem,\n    } = parametrosValidados;\n\n    // Construir filtros\n    const filtros: any = {};\n\n    // Filtro de busca (nome, CPF, email)\n    if (busca) {\n      filtros.OR = [\n        {\n          usuario: {\n            nome: {\n              contains: busca,\n              mode: 'insensitive',\n            },\n          },\n        },\n        {\n          cpf: {\n            contains: busca.replace(/\\D/g, ''),\n          },\n        },\n        {\n          usuario: {\n            email: {\n              contains: busca,\n              mode: 'insensitive',\n            },\n          },\n        },\n      ];\n    }\n\n    // Filtros espec\xEDficos\n    if (status) {\n      filtros.status = status;\n    }\n\n    if (setor) {\n      filtros.setor = {\n        contains: setor,\n        mode: 'insensitive',\n      };\n    }\n\n    if (cargo) {\n      filtros.cargo = {\n        contains: cargo,\n        mode: 'insensitive',\n      };\n    }\n\n    if (departamento) {\n      filtros.departamento = {\n        contains: departamento,\n        mode: 'insensitive',\n      };\n    }\n\n    // Filtro de data de admiss\xE3o\n    if (dataAdmissaoInicio || dataAdmissaoFim) {\n      filtros.dataAdmissao = {};\n      if (dataAdmissaoInicio) {\n        filtros.dataAdmissao.gte = new Date(dataAdmissaoInicio);\n      }\n      if (dataAdmissaoFim) {\n        filtros.dataAdmissao.lte = new Date(dataAdmissaoFim);\n      }\n    }\n\n    // Configurar ordena\xE7\xE3o\n    const ordenacao: any = {};\n    if (ordenarPor === 'nome') {\n      ordenacao.usuario = { nome: ordem };\n    } else {\n      ordenacao[ordenarPor] = ordem;\n    }\n\n    // Calcular offset\n    const offset = (pagina - 1) * limite;\n\n    // Buscar atendentes\n    const [atendentes, total] = await Promise.all([\n      prisma.atendente.findMany({\n        where: filtros,\n        include: {\n          usuario: {\n            select: {\n              id: true,\n              nome: true,\n              email: true,\n              ativo: true,\n              criadoEm: true,\n              atualizadoEm: true,\n            },\n          },\n          _count: {\n            select: {\n              documentos: true,\n              historicoAlteracoes: true,\n            },\n          },\n        },\n        orderBy: ordenacao,\n        skip: offset,\n        take: limite,\n      }),\n      prisma.atendente.count({ where: filtros }),\n    ]);\n\n    // Calcular metadados de pagina\xE7\xE3o\n    const totalPaginas = Math.ceil(total / limite);\n    const temProximaPagina = pagina < totalPaginas;\n    const temPaginaAnterior = pagina > 1;\n\n    return NextResponse.json({\n      atendentes: atendentes.map(atendente => ({\n        id: atendente.id,\n        cpf: atendente.cpf,\n        rg: atendente.rg,\n        dataNascimento: atendente.dataNascimento,\n        telefone: atendente.telefone,\n        celular: atendente.celular,\n        endereco: atendente.endereco,\n        cep: atendente.cep,\n        cidade: atendente.cidade,\n        estado: atendente.estado,\n        dataAdmissao: atendente.dataAdmissao,\n        cargo: atendente.cargo,\n        setor: atendente.setor,\n        departamento: atendente.departamento,\n        salario: atendente.salario,\n        status: atendente.status,\n        observacoes: atendente.observacoes,\n        foto: atendente.foto,\n        criadoEm: atendente.criadoEm,\n        atualizadoEm: atendente.atualizadoEm,\n        usuario: atendente.usuario,\n        estatisticas: {\n          totalDocumentos: atendente._count.documentos,\n          totalAlteracoes: atendente._count.historicoAlteracoes,\n        },\n      })),\n      paginacao: {\n        paginaAtual: pagina,\n        totalPaginas,\n        totalItens: total,\n        itensPorPagina: limite,\n        temProximaPagina,\n        temPaginaAnterior,\n      },\n    });\n  } catch (error) {\n    console.error('Erro ao listar atendentes:', error);\n\n    if (error instanceof ZodError) {\n      return NextResponse.json(\n        {\n          erro: MENSAGENS_ERRO_ATENDENTES.DADOS_INVALIDOS,\n          detalhes: error.errors,\n        },\n        { status: 400 }\n      );\n    }\n\n    return NextResponse.json(\n      { erro: MENSAGENS_ERRO_ATENDENTES.ERRO_INTERNO },\n      { status: 500 }\n    );\n  }\n}\n\n/**\n * POST /api/atendentes\n * Cria um novo atendente\n */\nexport async function POST(request: NextRequest) {\n  try {\n    // Verificar autentica\xE7\xE3o\n    const session = await getServerSession(authOptions);\n    if (!session?.user) {\n      return NextResponse.json({ erro: 'N\xE3o autorizado' }, { status: 401 });\n    }\n\n    // Verificar permiss\xF5es (apenas ADMIN pode criar atendentes)\n    if (session.user.userType !== 'ADMIN') {\n      return NextResponse.json(\n        { erro: MENSAGENS_ERRO_ATENDENTES.SEM_PERMISSAO },\n        { status: 403 }\n      );\n    }\n\n    // Extrair dados do corpo da requisi\xE7\xE3o\n    const dadosRequisicao = await request.json();\n\n    // Validar dados\n    const dadosValidados = criarAtendenteSchema.parse(dadosRequisicao);\n\n    const { usuario: dadosUsuario, ...dadosAtendente } = dadosValidados;\n\n    // Verificar se o email j\xE1 existe\n    const emailExiste = await validacaoAtendentes.validarEmailUnico(\n      dadosUsuario.email\n    );\n    if (!emailExiste) {\n      return NextResponse.json(\n        { erro: MENSAGENS_ERRO_ATENDENTES.EMAIL_JA_EXISTE },\n        { status: 409 }\n      );\n    }\n\n    // Verificar se o CPF j\xE1 existe\n    const cpfExiste = await validacaoAtendentes.validarCPFUnico(\n      dadosAtendente.cpf\n    );\n    if (!cpfExiste) {\n      return NextResponse.json(\n        { erro: MENSAGENS_ERRO_ATENDENTES.CPF_JA_EXISTE },\n        { status: 409 }\n      );\n    }\n\n    // Hash da senha\n    const senhaHash = await hash(dadosUsuario.senha, 12);\n\n    // Limpar CPF (remover formata\xE7\xE3o)\n    const cpfLimpo = dadosAtendente.cpf.replace(/\\D/g, '');\n\n    // Criar usu\xE1rio e atendente em uma transa\xE7\xE3o\n    const resultado = await prisma.$transaction(async tx => {\n      // Criar usu\xE1rio\n      const novoUsuario = await tx.usuario.create({\n        data: {\n          nome: dadosUsuario.nome,\n          email: dadosUsuario.email,\n          senha: senhaHash,\n          userType: 'ATENDENTE',\n          ativo: true,\n        },\n      });\n\n      // Criar atendente\n      const novoAtendente = await tx.atendente.create({\n        data: {\n          usuarioId: novoUsuario.id,\n          cpf: cpfLimpo,\n          rg: dadosAtendente.rg,\n          dataNascimento: dadosAtendente.dataNascimento\n            ? new Date(dadosAtendente.dataNascimento)\n            : null,\n          telefone: dadosAtendente.telefone,\n          celular: dadosAtendente.celular,\n          endereco: dadosAtendente.endereco,\n          cep: dadosAtendente.cep,\n          cidade: dadosAtendente.cidade,\n          estado: dadosAtendente.estado,\n          dataAdmissao: new Date(dadosAtendente.dataAdmissao),\n          cargo: dadosAtendente.cargo,\n          setor: dadosAtendente.setor,\n          departamento: dadosAtendente.departamento,\n          salario: dadosAtendente.salario,\n          status: dadosAtendente.status,\n          observacoes: dadosAtendente.observacoes,\n          foto: dadosAtendente.foto,\n        },\n        include: {\n          usuario: {\n            select: {\n              id: true,\n              nome: true,\n              email: true,\n              ativo: true,\n              criadoEm: true,\n              atualizadoEm: true,\n            },\n          },\n        },\n      });\n\n      // Registrar no hist\xF3rico de altera\xE7\xF5es\n      await tx.historicoAlteracaoAtendente.create({\n        data: {\n          atendenteId: novoAtendente.id,\n          tipo: 'CRIACAO',\n          descricao: `Atendente ${dadosUsuario.nome} foi criado`,\n          criadoEm: new Date(),\n          criadoPorId: session.user.id,\n          ip: request.headers.get('x-forwarded-for') || 'unknown',\n        },\n      });\n\n      return novoAtendente;\n    });\n\n    return NextResponse.json(\n      {\n        mensagem: 'Atendente criado com sucesso',\n        atendente: {\n          id: resultado.id,\n          cpf: resultado.cpf,\n          rg: resultado.rg,\n          dataNascimento: resultado.dataNascimento,\n          telefone: resultado.telefone,\n          celular: resultado.celular,\n          endereco: resultado.endereco,\n          cep: resultado.cep,\n          cidade: resultado.cidade,\n          estado: resultado.estado,\n          dataAdmissao: resultado.dataAdmissao,\n          cargo: resultado.cargo,\n          setor: resultado.setor,\n          departamento: resultado.departamento,\n          salario: resultado.salario,\n          status: resultado.status,\n          observacoes: resultado.observacoes,\n          foto: resultado.foto,\n          criadoEm: resultado.criadoEm,\n          atualizadoEm: resultado.atualizadoEm,\n          usuario: resultado.usuario,\n        },\n      },\n      { status: 201 }\n    );\n  } catch (error) {\n    console.error('Erro ao criar atendente:', error);\n\n    if (error instanceof ZodError) {\n      return NextResponse.json(\n        {\n          erro: MENSAGENS_ERRO_ATENDENTES.DADOS_INVALIDOS,\n          detalhes: error.errors,\n        },\n        { status: 400 }\n      );\n    }\n\n    return NextResponse.json(\n      { erro: MENSAGENS_ERRO_ATENDENTES.ERRO_INTERNO },\n      { status: 500 }\n    );\n  }\n}\n"],
      names: ["GET", "POST", "request", "session", "getServerSession", "authOptions", "user", "NextResponse", "json", "erro", "status", "includes", "userType", "MENSAGENS_ERRO_ATENDENTES", "SEM_PERMISSAO", "searchParams", "URL", "url", "queryParams", "Object", "fromEntries", "entries", "parametrosValidados", "listarAtendentesSchema", "parse", "pagina", "limite", "busca", "setor", "cargo", "departamento", "dataAdmissaoInicio", "dataAdmissaoFim", "ordenarPor", "ordem", "filtros", "OR", "usuario", "nome", "contains", "mode", "cpf", "replace", "email", "dataAdmissao", "gte", "Date", "lte", "ordenacao", "offset", "atendentes", "total", "Promise", "all", "prisma", "atendente", "findMany", "where", "include", "select", "id", "ativo", "criadoEm", "atualizadoEm", "_count", "documentos", "historicoAlteracoes", "orderBy", "skip", "take", "count", "totalPaginas", "Math", "ceil", "temProximaPagina", "temPaginaAnterior", "map", "rg", "dataNascimento", "telefone", "celular", "endereco", "cep", "cidade", "estado", "salario", "observacoes", "foto", "estatisticas", "totalDocumentos", "totalAlteracoes", "paginacao", "paginaAtual", "totalItens", "itensPorPagina", "error", "console", "ZodError", "DADOS_INVALIDOS", "detalhes", "errors", "ERRO_INTERNO", "dadosRequisicao", "dadosValidados", "criarAtendenteSchema", "dadosUsuario", "dadosAtendente", "emailExiste", "validacaoAtendentes", "validarEmailUnico", "EMAIL_JA_EXISTE", "cpfExiste", "validarCPFUnico", "CPF_JA_EXISTE", "senhaHash", "hash", "senha", "cpfLimpo", "resultado", "$transaction", "tx", "novoUsuario", "create", "data", "novoAtendente", "usuarioId", "historicoAlteracaoAtendente", "atendenteId", "tipo", "descricao", "criadoPorId", "ip", "headers", "get", "mensagem"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "30effff003941e85df60dab2f39242faf89b517a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1nzx2ufhls = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1nzx2ufhls();
cov_1nzx2ufhls().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1nzx2ufhls().f[0]++;
  cov_1nzx2ufhls().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1nzx2ufhls().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1nzx2ufhls().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_1nzx2ufhls().f[1]++;
    cov_1nzx2ufhls().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_1nzx2ufhls().f[2]++;
    cov_1nzx2ufhls().s[5]++;
    return POST;
  }
});
const _server =
/* istanbul ignore next */
(cov_1nzx2ufhls().s[6]++, require("next/server"));
const _server1 =
/* istanbul ignore next */
(cov_1nzx2ufhls().s[7]++, require("../../../lib/auth/server"));
const _auth =
/* istanbul ignore next */
(cov_1nzx2ufhls().s[8]++, require("../../../lib/auth"));
const _prisma =
/* istanbul ignore next */
(cov_1nzx2ufhls().s[9]++, require("../../../lib/prisma"));
const _bcryptjs =
/* istanbul ignore next */
(cov_1nzx2ufhls().s[10]++, require("bcryptjs"));
const _atendentes =
/* istanbul ignore next */
(cov_1nzx2ufhls().s[11]++, require("../../../lib/validations/atendentes"));
const _zod =
/* istanbul ignore next */
(cov_1nzx2ufhls().s[12]++, require("zod"));
async function GET(request) {
  /* istanbul ignore next */
  cov_1nzx2ufhls().f[3]++;
  cov_1nzx2ufhls().s[13]++;
  try {
    // Verificar autenticação
    const session =
    /* istanbul ignore next */
    (cov_1nzx2ufhls().s[14]++, await (0, _server1.getServerSession)(_auth.authOptions));
    /* istanbul ignore next */
    cov_1nzx2ufhls().s[15]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_1nzx2ufhls().b[0][0]++;
      cov_1nzx2ufhls().s[16]++;
      return _server.NextResponse.json({
        erro: 'Não autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_1nzx2ufhls().b[0][1]++;
    }
    // Verificar permissões (apenas ADMIN e GERENTE podem listar atendentes)
    cov_1nzx2ufhls().s[17]++;
    if (!['ADMIN', 'GERENTE'].includes(session.user.userType)) {
      /* istanbul ignore next */
      cov_1nzx2ufhls().b[1][0]++;
      cov_1nzx2ufhls().s[18]++;
      return _server.NextResponse.json({
        erro: _atendentes.MENSAGENS_ERRO_ATENDENTES.SEM_PERMISSAO
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_1nzx2ufhls().b[1][1]++;
    }
    // Extrair parâmetros da query string
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_1nzx2ufhls().s[19]++, new URL(request.url));
    const queryParams =
    /* istanbul ignore next */
    (cov_1nzx2ufhls().s[20]++, Object.fromEntries(searchParams.entries()));
    // Validar parâmetros
    const parametrosValidados =
    /* istanbul ignore next */
    (cov_1nzx2ufhls().s[21]++, _atendentes.listarAtendentesSchema.parse(queryParams));
    const {
      pagina,
      limite,
      busca,
      status,
      setor,
      cargo,
      departamento,
      dataAdmissaoInicio,
      dataAdmissaoFim,
      ordenarPor,
      ordem
    } =
    /* istanbul ignore next */
    (cov_1nzx2ufhls().s[22]++, parametrosValidados);
    // Construir filtros
    const filtros =
    /* istanbul ignore next */
    (cov_1nzx2ufhls().s[23]++, {});
    // Filtro de busca (nome, CPF, email)
    /* istanbul ignore next */
    cov_1nzx2ufhls().s[24]++;
    if (busca) {
      /* istanbul ignore next */
      cov_1nzx2ufhls().b[2][0]++;
      cov_1nzx2ufhls().s[25]++;
      filtros.OR = [{
        usuario: {
          nome: {
            contains: busca,
            mode: 'insensitive'
          }
        }
      }, {
        cpf: {
          contains: busca.replace(/\D/g, '')
        }
      }, {
        usuario: {
          email: {
            contains: busca,
            mode: 'insensitive'
          }
        }
      }];
    } else
    /* istanbul ignore next */
    {
      cov_1nzx2ufhls().b[2][1]++;
    }
    // Filtros específicos
    cov_1nzx2ufhls().s[26]++;
    if (status) {
      /* istanbul ignore next */
      cov_1nzx2ufhls().b[3][0]++;
      cov_1nzx2ufhls().s[27]++;
      filtros.status = status;
    } else
    /* istanbul ignore next */
    {
      cov_1nzx2ufhls().b[3][1]++;
    }
    cov_1nzx2ufhls().s[28]++;
    if (setor) {
      /* istanbul ignore next */
      cov_1nzx2ufhls().b[4][0]++;
      cov_1nzx2ufhls().s[29]++;
      filtros.setor = {
        contains: setor,
        mode: 'insensitive'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1nzx2ufhls().b[4][1]++;
    }
    cov_1nzx2ufhls().s[30]++;
    if (cargo) {
      /* istanbul ignore next */
      cov_1nzx2ufhls().b[5][0]++;
      cov_1nzx2ufhls().s[31]++;
      filtros.cargo = {
        contains: cargo,
        mode: 'insensitive'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1nzx2ufhls().b[5][1]++;
    }
    cov_1nzx2ufhls().s[32]++;
    if (departamento) {
      /* istanbul ignore next */
      cov_1nzx2ufhls().b[6][0]++;
      cov_1nzx2ufhls().s[33]++;
      filtros.departamento = {
        contains: departamento,
        mode: 'insensitive'
      };
    } else
    /* istanbul ignore next */
    {
      cov_1nzx2ufhls().b[6][1]++;
    }
    // Filtro de data de admissão
    cov_1nzx2ufhls().s[34]++;
    if (
    /* istanbul ignore next */
    (cov_1nzx2ufhls().b[8][0]++, dataAdmissaoInicio) ||
    /* istanbul ignore next */
    (cov_1nzx2ufhls().b[8][1]++, dataAdmissaoFim)) {
      /* istanbul ignore next */
      cov_1nzx2ufhls().b[7][0]++;
      cov_1nzx2ufhls().s[35]++;
      filtros.dataAdmissao = {};
      /* istanbul ignore next */
      cov_1nzx2ufhls().s[36]++;
      if (dataAdmissaoInicio) {
        /* istanbul ignore next */
        cov_1nzx2ufhls().b[9][0]++;
        cov_1nzx2ufhls().s[37]++;
        filtros.dataAdmissao.gte = new Date(dataAdmissaoInicio);
      } else
      /* istanbul ignore next */
      {
        cov_1nzx2ufhls().b[9][1]++;
      }
      cov_1nzx2ufhls().s[38]++;
      if (dataAdmissaoFim) {
        /* istanbul ignore next */
        cov_1nzx2ufhls().b[10][0]++;
        cov_1nzx2ufhls().s[39]++;
        filtros.dataAdmissao.lte = new Date(dataAdmissaoFim);
      } else
      /* istanbul ignore next */
      {
        cov_1nzx2ufhls().b[10][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1nzx2ufhls().b[7][1]++;
    }
    // Configurar ordenação
    const ordenacao =
    /* istanbul ignore next */
    (cov_1nzx2ufhls().s[40]++, {});
    /* istanbul ignore next */
    cov_1nzx2ufhls().s[41]++;
    if (ordenarPor === 'nome') {
      /* istanbul ignore next */
      cov_1nzx2ufhls().b[11][0]++;
      cov_1nzx2ufhls().s[42]++;
      ordenacao.usuario = {
        nome: ordem
      };
    } else {
      /* istanbul ignore next */
      cov_1nzx2ufhls().b[11][1]++;
      cov_1nzx2ufhls().s[43]++;
      ordenacao[ordenarPor] = ordem;
    }
    // Calcular offset
    const offset =
    /* istanbul ignore next */
    (cov_1nzx2ufhls().s[44]++, (pagina - 1) * limite);
    // Buscar atendentes
    const [atendentes, total] =
    /* istanbul ignore next */
    (cov_1nzx2ufhls().s[45]++, await Promise.all([_prisma.prisma.atendente.findMany({
      where: filtros,
      include: {
        usuario: {
          select: {
            id: true,
            nome: true,
            email: true,
            ativo: true,
            criadoEm: true,
            atualizadoEm: true
          }
        },
        _count: {
          select: {
            documentos: true,
            historicoAlteracoes: true
          }
        }
      },
      orderBy: ordenacao,
      skip: offset,
      take: limite
    }), _prisma.prisma.atendente.count({
      where: filtros
    })]));
    // Calcular metadados de paginação
    const totalPaginas =
    /* istanbul ignore next */
    (cov_1nzx2ufhls().s[46]++, Math.ceil(total / limite));
    const temProximaPagina =
    /* istanbul ignore next */
    (cov_1nzx2ufhls().s[47]++, pagina < totalPaginas);
    const temPaginaAnterior =
    /* istanbul ignore next */
    (cov_1nzx2ufhls().s[48]++, pagina > 1);
    /* istanbul ignore next */
    cov_1nzx2ufhls().s[49]++;
    return _server.NextResponse.json({
      atendentes: atendentes.map(atendente => {
        /* istanbul ignore next */
        cov_1nzx2ufhls().f[4]++;
        cov_1nzx2ufhls().s[50]++;
        return {
          id: atendente.id,
          cpf: atendente.cpf,
          rg: atendente.rg,
          dataNascimento: atendente.dataNascimento,
          telefone: atendente.telefone,
          celular: atendente.celular,
          endereco: atendente.endereco,
          cep: atendente.cep,
          cidade: atendente.cidade,
          estado: atendente.estado,
          dataAdmissao: atendente.dataAdmissao,
          cargo: atendente.cargo,
          setor: atendente.setor,
          departamento: atendente.departamento,
          salario: atendente.salario,
          status: atendente.status,
          observacoes: atendente.observacoes,
          foto: atendente.foto,
          criadoEm: atendente.criadoEm,
          atualizadoEm: atendente.atualizadoEm,
          usuario: atendente.usuario,
          estatisticas: {
            totalDocumentos: atendente._count.documentos,
            totalAlteracoes: atendente._count.historicoAlteracoes
          }
        };
      }),
      paginacao: {
        paginaAtual: pagina,
        totalPaginas,
        totalItens: total,
        itensPorPagina: limite,
        temProximaPagina,
        temPaginaAnterior
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1nzx2ufhls().s[51]++;
    console.error('Erro ao listar atendentes:', error);
    /* istanbul ignore next */
    cov_1nzx2ufhls().s[52]++;
    if (error instanceof _zod.ZodError) {
      /* istanbul ignore next */
      cov_1nzx2ufhls().b[12][0]++;
      cov_1nzx2ufhls().s[53]++;
      return _server.NextResponse.json({
        erro: _atendentes.MENSAGENS_ERRO_ATENDENTES.DADOS_INVALIDOS,
        detalhes: error.errors
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_1nzx2ufhls().b[12][1]++;
    }
    cov_1nzx2ufhls().s[54]++;
    return _server.NextResponse.json({
      erro: _atendentes.MENSAGENS_ERRO_ATENDENTES.ERRO_INTERNO
    }, {
      status: 500
    });
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_1nzx2ufhls().f[5]++;
  cov_1nzx2ufhls().s[55]++;
  try {
    // Verificar autenticação
    const session =
    /* istanbul ignore next */
    (cov_1nzx2ufhls().s[56]++, await (0, _server1.getServerSession)(_auth.authOptions));
    /* istanbul ignore next */
    cov_1nzx2ufhls().s[57]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_1nzx2ufhls().b[13][0]++;
      cov_1nzx2ufhls().s[58]++;
      return _server.NextResponse.json({
        erro: 'Não autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_1nzx2ufhls().b[13][1]++;
    }
    // Verificar permissões (apenas ADMIN pode criar atendentes)
    cov_1nzx2ufhls().s[59]++;
    if (session.user.userType !== 'ADMIN') {
      /* istanbul ignore next */
      cov_1nzx2ufhls().b[14][0]++;
      cov_1nzx2ufhls().s[60]++;
      return _server.NextResponse.json({
        erro: _atendentes.MENSAGENS_ERRO_ATENDENTES.SEM_PERMISSAO
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_1nzx2ufhls().b[14][1]++;
    }
    // Extrair dados do corpo da requisição
    const dadosRequisicao =
    /* istanbul ignore next */
    (cov_1nzx2ufhls().s[61]++, await request.json());
    // Validar dados
    const dadosValidados =
    /* istanbul ignore next */
    (cov_1nzx2ufhls().s[62]++, _atendentes.criarAtendenteSchema.parse(dadosRequisicao));
    const {
      usuario: dadosUsuario,
      ...dadosAtendente
    } =
    /* istanbul ignore next */
    (cov_1nzx2ufhls().s[63]++, dadosValidados);
    // Verificar se o email já existe
    const emailExiste =
    /* istanbul ignore next */
    (cov_1nzx2ufhls().s[64]++, await _atendentes.validacaoAtendentes.validarEmailUnico(dadosUsuario.email));
    /* istanbul ignore next */
    cov_1nzx2ufhls().s[65]++;
    if (!emailExiste) {
      /* istanbul ignore next */
      cov_1nzx2ufhls().b[15][0]++;
      cov_1nzx2ufhls().s[66]++;
      return _server.NextResponse.json({
        erro: _atendentes.MENSAGENS_ERRO_ATENDENTES.EMAIL_JA_EXISTE
      }, {
        status: 409
      });
    } else
    /* istanbul ignore next */
    {
      cov_1nzx2ufhls().b[15][1]++;
    }
    // Verificar se o CPF já existe
    const cpfExiste =
    /* istanbul ignore next */
    (cov_1nzx2ufhls().s[67]++, await _atendentes.validacaoAtendentes.validarCPFUnico(dadosAtendente.cpf));
    /* istanbul ignore next */
    cov_1nzx2ufhls().s[68]++;
    if (!cpfExiste) {
      /* istanbul ignore next */
      cov_1nzx2ufhls().b[16][0]++;
      cov_1nzx2ufhls().s[69]++;
      return _server.NextResponse.json({
        erro: _atendentes.MENSAGENS_ERRO_ATENDENTES.CPF_JA_EXISTE
      }, {
        status: 409
      });
    } else
    /* istanbul ignore next */
    {
      cov_1nzx2ufhls().b[16][1]++;
    }
    // Hash da senha
    const senhaHash =
    /* istanbul ignore next */
    (cov_1nzx2ufhls().s[70]++, await (0, _bcryptjs.hash)(dadosUsuario.senha, 12));
    // Limpar CPF (remover formatação)
    const cpfLimpo =
    /* istanbul ignore next */
    (cov_1nzx2ufhls().s[71]++, dadosAtendente.cpf.replace(/\D/g, ''));
    // Criar usuário e atendente em uma transação
    const resultado =
    /* istanbul ignore next */
    (cov_1nzx2ufhls().s[72]++, await _prisma.prisma.$transaction(async tx => {
      /* istanbul ignore next */
      cov_1nzx2ufhls().f[6]++;
      // Criar usuário
      const novoUsuario =
      /* istanbul ignore next */
      (cov_1nzx2ufhls().s[73]++, await tx.usuario.create({
        data: {
          nome: dadosUsuario.nome,
          email: dadosUsuario.email,
          senha: senhaHash,
          userType: 'ATENDENTE',
          ativo: true
        }
      }));
      // Criar atendente
      const novoAtendente =
      /* istanbul ignore next */
      (cov_1nzx2ufhls().s[74]++, await tx.atendente.create({
        data: {
          usuarioId: novoUsuario.id,
          cpf: cpfLimpo,
          rg: dadosAtendente.rg,
          dataNascimento: dadosAtendente.dataNascimento ?
          /* istanbul ignore next */
          (cov_1nzx2ufhls().b[17][0]++, new Date(dadosAtendente.dataNascimento)) :
          /* istanbul ignore next */
          (cov_1nzx2ufhls().b[17][1]++, null),
          telefone: dadosAtendente.telefone,
          celular: dadosAtendente.celular,
          endereco: dadosAtendente.endereco,
          cep: dadosAtendente.cep,
          cidade: dadosAtendente.cidade,
          estado: dadosAtendente.estado,
          dataAdmissao: new Date(dadosAtendente.dataAdmissao),
          cargo: dadosAtendente.cargo,
          setor: dadosAtendente.setor,
          departamento: dadosAtendente.departamento,
          salario: dadosAtendente.salario,
          status: dadosAtendente.status,
          observacoes: dadosAtendente.observacoes,
          foto: dadosAtendente.foto
        },
        include: {
          usuario: {
            select: {
              id: true,
              nome: true,
              email: true,
              ativo: true,
              criadoEm: true,
              atualizadoEm: true
            }
          }
        }
      }));
      // Registrar no histórico de alterações
      /* istanbul ignore next */
      cov_1nzx2ufhls().s[75]++;
      await tx.historicoAlteracaoAtendente.create({
        data: {
          atendenteId: novoAtendente.id,
          tipo: 'CRIACAO',
          descricao: `Atendente ${dadosUsuario.nome} foi criado`,
          criadoEm: new Date(),
          criadoPorId: session.user.id,
          ip:
          /* istanbul ignore next */
          (cov_1nzx2ufhls().b[18][0]++, request.headers.get('x-forwarded-for')) ||
          /* istanbul ignore next */
          (cov_1nzx2ufhls().b[18][1]++, 'unknown')
        }
      });
      /* istanbul ignore next */
      cov_1nzx2ufhls().s[76]++;
      return novoAtendente;
    }));
    /* istanbul ignore next */
    cov_1nzx2ufhls().s[77]++;
    return _server.NextResponse.json({
      mensagem: 'Atendente criado com sucesso',
      atendente: {
        id: resultado.id,
        cpf: resultado.cpf,
        rg: resultado.rg,
        dataNascimento: resultado.dataNascimento,
        telefone: resultado.telefone,
        celular: resultado.celular,
        endereco: resultado.endereco,
        cep: resultado.cep,
        cidade: resultado.cidade,
        estado: resultado.estado,
        dataAdmissao: resultado.dataAdmissao,
        cargo: resultado.cargo,
        setor: resultado.setor,
        departamento: resultado.departamento,
        salario: resultado.salario,
        status: resultado.status,
        observacoes: resultado.observacoes,
        foto: resultado.foto,
        criadoEm: resultado.criadoEm,
        atualizadoEm: resultado.atualizadoEm,
        usuario: resultado.usuario
      }
    }, {
      status: 201
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1nzx2ufhls().s[78]++;
    console.error('Erro ao criar atendente:', error);
    /* istanbul ignore next */
    cov_1nzx2ufhls().s[79]++;
    if (error instanceof _zod.ZodError) {
      /* istanbul ignore next */
      cov_1nzx2ufhls().b[19][0]++;
      cov_1nzx2ufhls().s[80]++;
      return _server.NextResponse.json({
        erro: _atendentes.MENSAGENS_ERRO_ATENDENTES.DADOS_INVALIDOS,
        detalhes: error.errors
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_1nzx2ufhls().b[19][1]++;
    }
    cov_1nzx2ufhls().s[81]++;
    return _server.NextResponse.json({
      erro: _atendentes.MENSAGENS_ERRO_ATENDENTES.ERRO_INTERNO
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,