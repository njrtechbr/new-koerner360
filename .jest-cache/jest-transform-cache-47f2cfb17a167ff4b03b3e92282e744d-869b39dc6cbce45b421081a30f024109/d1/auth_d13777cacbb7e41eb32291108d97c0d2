a0c3160d1b7e81faa3d5b173a58015de
"use strict";

/* istanbul ignore next */
function cov_lmu56q2xt() {
  var path = "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\lib\\validations\\auth.ts";
  var hash = "1d3772b20421621c03f2cc19a6807707e99670a1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\lib\\validations\\auth.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 66,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 39
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 35
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 34
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 42
        }
      },
      "8": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 27
        }
      },
      "9": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 28
        }
      },
      "10": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 36
        }
      },
      "11": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 44
        }
      },
      "12": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 36
        }
      },
      "13": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 30
        }
      },
      "14": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 47
        }
      },
      "15": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 40
        }
      },
      "16": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 34
        }
      },
      "17": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 36
        }
      },
      "18": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 35
        }
      },
      "19": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 28
        }
      },
      "20": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 36
        }
      },
      "21": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 36
        }
      },
      "22": {
        start: {
          line: 67,
          column: 13
        },
        end: {
          line: 67,
          column: 27
        }
      },
      "23": {
        start: {
          line: 68,
          column: 18
        },
        end: {
          line: 68,
          column: 39
        }
      },
      "24": {
        start: {
          line: 69,
          column: 20
        },
        end: {
          line: 73,
          column: 2
        }
      },
      "25": {
        start: {
          line: 74,
          column: 23
        },
        end: {
          line: 96,
          column: 2
        }
      },
      "26": {
        start: {
          line: 84,
          column: 23
        },
        end: {
          line: 86,
          column: 13
        }
      },
      "27": {
        start: {
          line: 88,
          column: 50
        },
        end: {
          line: 88,
          column: 62
        }
      },
      "28": {
        start: {
          line: 91,
          column: 18
        },
        end: {
          line: 91,
          column: 52
        }
      },
      "29": {
        start: {
          line: 97,
          column: 40
        },
        end: {
          line: 99,
          column: 2
        }
      },
      "30": {
        start: {
          line: 100,
          column: 37
        },
        end: {
          line: 109,
          column: 2
        }
      },
      "31": {
        start: {
          line: 104,
          column: 18
        },
        end: {
          line: 104,
          column: 56
        }
      },
      "32": {
        start: {
          line: 110,
          column: 29
        },
        end: {
          line: 112,
          column: 2
        }
      },
      "33": {
        start: {
          line: 113,
          column: 35
        },
        end: {
          line: 116,
          column: 2
        }
      },
      "34": {
        start: {
          line: 117,
          column: 29
        },
        end: {
          line: 127,
          column: 2
        }
      },
      "35": {
        start: {
          line: 122,
          column: 18
        },
        end: {
          line: 122,
          column: 56
        }
      },
      "36": {
        start: {
          line: 128,
          column: 28
        },
        end: {
          line: 131,
          column: 2
        }
      },
      "37": {
        start: {
          line: 132,
          column: 21
        },
        end: {
          line: 135,
          column: 2
        }
      },
      "38": {
        start: {
          line: 136,
          column: 27
        },
        end: {
          line: 145,
          column: 2
        }
      },
      "39": {
        start: {
          line: 140,
          column: 18
        },
        end: {
          line: 140,
          column: 52
        }
      },
      "40": {
        start: {
          line: 146,
          column: 29
        },
        end: {
          line: 149,
          column: 2
        }
      },
      "41": {
        start: {
          line: 150,
          column: 29
        },
        end: {
          line: 160,
          column: 2
        }
      },
      "42": {
        start: {
          line: 156,
          column: 23
        },
        end: {
          line: 158,
          column: 13
        }
      },
      "43": {
        start: {
          line: 161,
          column: 27
        },
        end: {
          line: 163,
          column: 1
        }
      },
      "44": {
        start: {
          line: 162,
          column: 4
        },
        end: {
          line: 162,
          column: 40
        }
      },
      "45": {
        start: {
          line: 164,
          column: 29
        },
        end: {
          line: 166,
          column: 1
        }
      },
      "46": {
        start: {
          line: 165,
          column: 4
        },
        end: {
          line: 165,
          column: 43
        }
      },
      "47": {
        start: {
          line: 167,
          column: 21
        },
        end: {
          line: 171,
          column: 1
        }
      },
      "48": {
        start: {
          line: 168,
          column: 4
        },
        end: {
          line: 170,
          column: 7
        }
      },
      "49": {
        start: {
          line: 172,
          column: 28
        },
        end: {
          line: 183,
          column: 1
        }
      },
      "50": {
        start: {
          line: 184,
          column: 32
        },
        end: {
          line: 192,
          column: 1
        }
      },
      "51": {
        start: {
          line: 193,
          column: 33
        },
        end: {
          line: 232,
          column: 1
        }
      },
      "52": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 201,
          column: 10
        }
      },
      "53": {
        start: {
          line: 206,
          column: 26
        },
        end: {
          line: 212,
          column: 9
        }
      },
      "54": {
        start: {
          line: 213,
          column: 26
        },
        end: {
          line: 213,
          column: 73
        }
      },
      "55": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 219,
          column: 10
        }
      },
      "56": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 224,
          column: 69
        }
      },
      "57": {
        start: {
          line: 229,
          column: 23
        },
        end: {
          line: 229,
          column: 39
        }
      },
      "58": {
        start: {
          line: 230,
          column: 8
        },
        end: {
          line: 230,
          column: 35
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 35
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 31
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 30
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 38
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 23
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 24
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 32
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 40
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 32
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 36
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        loc: {
          start: {
            line: 39,
            column: 26
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 39
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        loc: {
          start: {
            line: 42,
            column: 43
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 42
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        loc: {
          start: {
            line: 45,
            column: 36
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 45
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        loc: {
          start: {
            line: 48,
            column: 30
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 48
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        loc: {
          start: {
            line: 51,
            column: 32
          },
          end: {
            line: 53,
            column: 5
          }
        },
        line: 51
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        loc: {
          start: {
            line: 54,
            column: 31
          },
          end: {
            line: 56,
            column: 5
          }
        },
        line: 54
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        loc: {
          start: {
            line: 57,
            column: 24
          },
          end: {
            line: 59,
            column: 5
          }
        },
        line: 57
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 60,
            column: 5
          }
        },
        loc: {
          start: {
            line: 60,
            column: 32
          },
          end: {
            line: 62,
            column: 5
          }
        },
        line: 60
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        },
        loc: {
          start: {
            line: 63,
            column: 32
          },
          end: {
            line: 65,
            column: 5
          }
        },
        line: 63
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 84,
            column: 18
          },
          end: {
            line: 84,
            column: 19
          }
        },
        loc: {
          start: {
            line: 84,
            column: 23
          },
          end: {
            line: 86,
            column: 13
          }
        },
        line: 84
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 88,
            column: 43
          },
          end: {
            line: 88,
            column: 44
          }
        },
        loc: {
          start: {
            line: 88,
            column: 50
          },
          end: {
            line: 88,
            column: 62
          }
        },
        line: 88
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 91,
            column: 10
          },
          end: {
            line: 91,
            column: 11
          }
        },
        loc: {
          start: {
            line: 91,
            column: 18
          },
          end: {
            line: 91,
            column: 52
          }
        },
        line: 91
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 104,
            column: 10
          },
          end: {
            line: 104,
            column: 11
          }
        },
        loc: {
          start: {
            line: 104,
            column: 18
          },
          end: {
            line: 104,
            column: 56
          }
        },
        line: 104
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 122,
            column: 10
          },
          end: {
            line: 122,
            column: 11
          }
        },
        loc: {
          start: {
            line: 122,
            column: 18
          },
          end: {
            line: 122,
            column: 56
          }
        },
        line: 122
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 140,
            column: 10
          },
          end: {
            line: 140,
            column: 11
          }
        },
        loc: {
          start: {
            line: 140,
            column: 18
          },
          end: {
            line: 140,
            column: 52
          }
        },
        line: 140
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 156,
            column: 18
          },
          end: {
            line: 156,
            column: 19
          }
        },
        loc: {
          start: {
            line: 156,
            column: 23
          },
          end: {
            line: 158,
            column: 13
          }
        },
        line: 156
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 161,
            column: 27
          },
          end: {
            line: 161,
            column: 28
          }
        },
        loc: {
          start: {
            line: 161,
            column: 36
          },
          end: {
            line: 163,
            column: 1
          }
        },
        line: 161
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 164,
            column: 29
          },
          end: {
            line: 164,
            column: 30
          }
        },
        loc: {
          start: {
            line: 164,
            column: 38
          },
          end: {
            line: 166,
            column: 1
          }
        },
        line: 164
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 167,
            column: 21
          },
          end: {
            line: 167,
            column: 22
          }
        },
        loc: {
          start: {
            line: 167,
            column: 30
          },
          end: {
            line: 171,
            column: 1
          }
        },
        line: 167
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 196,
            column: 17
          },
          end: {
            line: 196,
            column: 18
          }
        },
        loc: {
          start: {
            line: 196,
            column: 32
          },
          end: {
            line: 202,
            column: 5
          }
        },
        line: 196
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 205,
            column: 25
          },
          end: {
            line: 205,
            column: 26
          }
        },
        loc: {
          start: {
            line: 205,
            column: 34
          },
          end: {
            line: 220,
            column: 5
          }
        },
        line: 205
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 223,
            column: 30
          },
          end: {
            line: 223,
            column: 31
          }
        },
        loc: {
          start: {
            line: 223,
            column: 34
          },
          end: {
            line: 225,
            column: 5
          }
        },
        line: 223
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 228,
            column: 27
          },
          end: {
            line: 228,
            column: 28
          }
        },
        loc: {
          start: {
            line: 228,
            column: 36
          },
          end: {
            line: 231,
            column: 5
          }
        },
        line: 228
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 218,
            column: 19
          },
          end: {
            line: 218,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 218,
            column: 35
          },
          end: {
            line: 218,
            column: 42
          }
        }, {
          start: {
            line: 218,
            column: 45
          },
          end: {
            line: 218,
            column: 78
          }
        }],
        line: 218
      },
      "1": {
        loc: {
          start: {
            line: 218,
            column: 45
          },
          end: {
            line: 218,
            column: 78
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 218,
            column: 61
          },
          end: {
            line: 218,
            column: 68
          }
        }, {
          start: {
            line: 218,
            column: 71
          },
          end: {
            line: 218,
            column: 78
          }
        }],
        line: 218
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\lib\\validations\\auth.ts"],
      sourcesContent: ["import { z } from 'zod';\nimport {\n  emailSchema,\n  senhaSchema,\n  nomeSchema,\n  perfilUsuarioSchema,\n} from './usuarios';\n\n/**\n * Schemas de valida\xE7\xE3o para opera\xE7\xF5es de autentica\xE7\xE3o\n * Centralizando valida\xE7\xF5es de login, registro, recupera\xE7\xE3o de senha, etc.\n */\n\n// Schema para login\nexport const loginSchema = z.object({\n  email: emailSchema,\n  senha: z.string().min(1, 'Senha \xE9 obrigat\xF3ria'),\n  lembrarMe: z.boolean().default(false),\n});\n\n// Schema para registro de usu\xE1rio\nexport const registroSchema = z\n  .object({\n    nome: nomeSchema,\n    email: emailSchema,\n    senha: senhaSchema,\n    confirmarSenha: z.string().min(1, 'Confirma\xE7\xE3o de senha \xE9 obrigat\xF3ria'),\n    userType: z.enum(['ADMIN', 'GESTOR', 'ATENDENTE'], {\n      errorMap: () => ({ message: 'Tipo de usu\xE1rio inv\xE1lido' }),\n    }),\n    aceitarTermos: z.boolean().refine(val => val === true, {\n      message: 'Voc\xEA deve aceitar os termos de uso',\n    }),\n  })\n  .refine(data => data.senha === data.confirmarSenha, {\n    message: 'Senha e confirma\xE7\xE3o devem ser iguais',\n    path: ['confirmarSenha'],\n  });\n\n// Schema para solicita\xE7\xE3o de recupera\xE7\xE3o de senha\nexport const solicitarRecuperacaoSenhaSchema = z.object({\n  email: emailSchema,\n});\n\n// Schema para redefini\xE7\xE3o de senha com token\nexport const redefinirSenhaComTokenSchema = z\n  .object({\n    token: z.string().min(1, 'Token \xE9 obrigat\xF3rio'),\n    novaSenha: senhaSchema,\n    confirmarSenha: z.string().min(1, 'Confirma\xE7\xE3o de senha \xE9 obrigat\xF3ria'),\n  })\n  .refine(data => data.novaSenha === data.confirmarSenha, {\n    message: 'Nova senha e confirma\xE7\xE3o devem ser iguais',\n    path: ['confirmarSenha'],\n  });\n\n// Schema para verifica\xE7\xE3o de token\nexport const verificarTokenSchema = z.object({\n  token: z.string().min(1, 'Token \xE9 obrigat\xF3rio'),\n});\n\n// Schema para gera\xE7\xE3o de senha tempor\xE1ria (admin)\nexport const gerarSenhaTemporariaSchema = z.object({\n  email: emailSchema,\n  adminKey: z.string().min(1, 'Chave de administrador \xE9 obrigat\xF3ria'),\n});\n\n// Schema para primeiro acesso (altera\xE7\xE3o de senha tempor\xE1ria)\nexport const primeiroAcessoSchema = z\n  .object({\n    email: emailSchema,\n    senhaTemporaria: z.string().min(1, 'Senha tempor\xE1ria \xE9 obrigat\xF3ria'),\n    novaSenha: senhaSchema,\n    confirmarSenha: z.string().min(1, 'Confirma\xE7\xE3o de senha \xE9 obrigat\xF3ria'),\n  })\n  .refine(data => data.novaSenha === data.confirmarSenha, {\n    message: 'Nova senha e confirma\xE7\xE3o devem ser iguais',\n    path: ['confirmarSenha'],\n  });\n\n// Schema para valida\xE7\xE3o de sess\xE3o\nexport const validarSessaoSchema = z.object({\n  token: z.string().min(1, 'Token de sess\xE3o \xE9 obrigat\xF3rio'),\n  refreshToken: z.string().optional(),\n});\n\n// Schema para logout\nexport const logoutSchema = z.object({\n  token: z.string().optional(),\n  logoutTodos: z.boolean().default(false),\n});\n\n// Schema para altera\xE7\xE3o de email\nexport const alterarEmailSchema = z\n  .object({\n    emailAtual: emailSchema,\n    novoEmail: emailSchema,\n    senha: z.string().min(1, 'Senha \xE9 obrigat\xF3ria para confirmar a altera\xE7\xE3o'),\n  })\n  .refine(data => data.emailAtual !== data.novoEmail, {\n    message: 'O novo email deve ser diferente do atual',\n    path: ['novoEmail'],\n  });\n\n// Schema para verifica\xE7\xE3o de email\nexport const verificarEmailSchema = z.object({\n  email: emailSchema,\n  codigo: z.string().length(6, 'C\xF3digo deve ter 6 d\xEDgitos'),\n});\n\n// Schema para reenvio de c\xF3digo de verifica\xE7\xE3o\nexport const reenviarCodigoSchema = z.object({\n  email: emailSchema,\n  tipo: z.enum(['verificacao', 'recuperacao'], {\n    errorMap: () => ({ message: 'Tipo deve ser verificacao ou recuperacao' }),\n  }),\n});\n\n// Tipos TypeScript derivados dos schemas\nexport type LoginInput = z.infer<typeof loginSchema>;\nexport type RegistroInput = z.infer<typeof registroSchema>;\nexport type SolicitarRecuperacaoSenhaInput = z.infer<\n  typeof solicitarRecuperacaoSenhaSchema\n>;\nexport type RedefinirSenhaComTokenInput = z.infer<\n  typeof redefinirSenhaComTokenSchema\n>;\nexport type VerificarTokenInput = z.infer<typeof verificarTokenSchema>;\nexport type GerarSenhaTemporariaInput = z.infer<\n  typeof gerarSenhaTemporariaSchema\n>;\nexport type PrimeiroAcessoInput = z.infer<typeof primeiroAcessoSchema>;\nexport type ValidarSessaoInput = z.infer<typeof validarSessaoSchema>;\nexport type LogoutInput = z.infer<typeof logoutSchema>;\nexport type AlterarEmailInput = z.infer<typeof alterarEmailSchema>;\nexport type VerificarEmailInput = z.infer<typeof verificarEmailSchema>;\nexport type ReenviarCodigoInput = z.infer<typeof reenviarCodigoSchema>;\n\n// Utilit\xE1rios de valida\xE7\xE3o para autentica\xE7\xE3o\nexport const validarCredenciais = (dados: unknown) => {\n  return loginSchema.safeParse(dados);\n};\n\nexport const validarDadosRegistro = (dados: unknown) => {\n  return registroSchema.safeParse(dados);\n};\n\nexport const validarToken = (token: string) => {\n  return verificarTokenSchema.safeParse({ token });\n};\n\n// Mensagens de erro espec\xEDficas para autentica\xE7\xE3o\nexport const MENSAGENS_ERRO_AUTH = {\n  CREDENCIAIS_INVALIDAS: 'Email ou senha incorretos',\n  CONTA_INATIVA: 'Sua conta est\xE1 inativa. Entre em contato com o administrador',\n  CONTA_BLOQUEADA:\n    'Sua conta foi bloqueada devido a m\xFAltiplas tentativas de login',\n  TOKEN_INVALIDO: 'Token inv\xE1lido ou expirado',\n  TOKEN_EXPIRADO: 'Token expirado. Solicite um novo',\n  EMAIL_NAO_VERIFICADO: 'Email n\xE3o verificado. Verifique sua caixa de entrada',\n  SENHA_TEMPORARIA_EXPIRADA: 'Senha tempor\xE1ria expirada. Solicite uma nova',\n  SESSAO_EXPIRADA: 'Sua sess\xE3o expirou. Fa\xE7a login novamente',\n  ACESSO_NEGADO:\n    'Acesso negado. Voc\xEA n\xE3o tem permiss\xE3o para acessar este recurso',\n  MUITAS_TENTATIVAS:\n    'Muitas tentativas de login. Tente novamente em alguns minutos',\n} as const;\n\n// Configura\xE7\xF5es de seguran\xE7a\nexport const CONFIGURACOES_SEGURANCA = {\n  MAX_TENTATIVAS_LOGIN: 5,\n  TEMPO_BLOQUEIO_MINUTOS: 15,\n  DURACAO_TOKEN_RECUPERACAO_HORAS: 1,\n  DURACAO_SESSAO_HORAS: 24,\n  DURACAO_REFRESH_TOKEN_DIAS: 7,\n  TAMANHO_CODIGO_VERIFICACAO: 6,\n  DURACAO_CODIGO_VERIFICACAO_MINUTOS: 10,\n} as const;\n\n// Valida\xE7\xF5es customizadas para autentica\xE7\xE3o\nexport const validacaoAuthCustomizada = {\n  /**\n   * Valida se o usu\xE1rio pode fazer login\n   */\n  podeLogar: async (email: string) => {\n    // Verificar se a conta est\xE1 ativa, n\xE3o bloqueada, etc.\n    return { podeLogar: true, motivo: null };\n  },\n\n  /**\n   * Valida for\xE7a da senha\n   */\n  validarForcaSenha: (senha: string) => {\n    const criterios = {\n      tamanho: senha.length >= 8,\n      minuscula: /[a-z]/.test(senha),\n      maiuscula: /[A-Z]/.test(senha),\n      numero: /\\d/.test(senha),\n      especial: /[@$!%*?&]/.test(senha),\n    };\n\n    const pontuacao = Object.values(criterios).filter(Boolean).length;\n\n    return {\n      valida: pontuacao === 5,\n      pontuacao,\n      criterios,\n      nivel: pontuacao < 3 ? 'fraca' : pontuacao < 5 ? 'media' : 'forte',\n    };\n  },\n\n  /**\n   * Gera c\xF3digo de verifica\xE7\xE3o\n   */\n  gerarCodigoVerificacao: () => {\n    return Math.random().toString().slice(2, 8).padStart(6, '0');\n  },\n\n  /**\n   * Valida formato de token JWT\n   */\n  validarFormatoToken: (token: string) => {\n    const partes = token.split('.');\n    return partes.length === 3;\n  },\n};\n"],
      names: ["CONFIGURACOES_SEGURANCA", "MENSAGENS_ERRO_AUTH", "alterarEmailSchema", "gerarSenhaTemporariaSchema", "loginSchema", "logoutSchema", "primeiroAcessoSchema", "redefinirSenhaComTokenSchema", "reenviarCodigoSchema", "registroSchema", "solicitarRecuperacaoSenhaSchema", "validacaoAuthCustomizada", "validarCredenciais", "validarDadosRegistro", "validarSessaoSchema", "validarToken", "verificarEmailSchema", "verificarTokenSchema", "z", "object", "email", "emailSchema", "senha", "string", "min", "lembrarMe", "boolean", "default", "nome", "nomeSchema", "senhaSchema", "confirmarSenha", "userType", "enum", "errorMap", "message", "aceitarTermos", "refine", "val", "data", "path", "token", "novaSenha", "adminKey", "senhaTemporaria", "refreshToken", "optional", "logoutTodos", "emailAtual", "novoEmail", "codigo", "length", "tipo", "dados", "safeParse", "CREDENCIAIS_INVALIDAS", "CONTA_INATIVA", "CONTA_BLOQUEADA", "TOKEN_INVALIDO", "TOKEN_EXPIRADO", "EMAIL_NAO_VERIFICADO", "SENHA_TEMPORARIA_EXPIRADA", "SESSAO_EXPIRADA", "ACESSO_NEGADO", "MUITAS_TENTATIVAS", "MAX_TENTATIVAS_LOGIN", "TEMPO_BLOQUEIO_MINUTOS", "DURACAO_TOKEN_RECUPERACAO_HORAS", "DURACAO_SESSAO_HORAS", "DURACAO_REFRESH_TOKEN_DIAS", "TAMANHO_CODIGO_VERIFICACAO", "DURACAO_CODIGO_VERIFICACAO_MINUTOS", "podeLogar", "motivo", "validarForcaSenha", "criterios", "tamanho", "minuscula", "test", "maiuscula", "numero", "especial", "pontuacao", "Object", "values", "filter", "Boolean", "valida", "nivel", "gerarCodigoVerificacao", "Math", "random", "toString", "slice", "padStart", "validarFormatoToken", "partes", "split"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1d3772b20421621c03f2cc19a6807707e99670a1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_lmu56q2xt = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_lmu56q2xt();
cov_lmu56q2xt().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_lmu56q2xt().f[0]++;
  cov_lmu56q2xt().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_lmu56q2xt().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_lmu56q2xt().s[3]++;
_export(exports, {
  get CONFIGURACOES_SEGURANCA() {
    /* istanbul ignore next */
    cov_lmu56q2xt().f[1]++;
    cov_lmu56q2xt().s[4]++;
    return CONFIGURACOES_SEGURANCA;
  },
  get MENSAGENS_ERRO_AUTH() {
    /* istanbul ignore next */
    cov_lmu56q2xt().f[2]++;
    cov_lmu56q2xt().s[5]++;
    return MENSAGENS_ERRO_AUTH;
  },
  get alterarEmailSchema() {
    /* istanbul ignore next */
    cov_lmu56q2xt().f[3]++;
    cov_lmu56q2xt().s[6]++;
    return alterarEmailSchema;
  },
  get gerarSenhaTemporariaSchema() {
    /* istanbul ignore next */
    cov_lmu56q2xt().f[4]++;
    cov_lmu56q2xt().s[7]++;
    return gerarSenhaTemporariaSchema;
  },
  get loginSchema() {
    /* istanbul ignore next */
    cov_lmu56q2xt().f[5]++;
    cov_lmu56q2xt().s[8]++;
    return loginSchema;
  },
  get logoutSchema() {
    /* istanbul ignore next */
    cov_lmu56q2xt().f[6]++;
    cov_lmu56q2xt().s[9]++;
    return logoutSchema;
  },
  get primeiroAcessoSchema() {
    /* istanbul ignore next */
    cov_lmu56q2xt().f[7]++;
    cov_lmu56q2xt().s[10]++;
    return primeiroAcessoSchema;
  },
  get redefinirSenhaComTokenSchema() {
    /* istanbul ignore next */
    cov_lmu56q2xt().f[8]++;
    cov_lmu56q2xt().s[11]++;
    return redefinirSenhaComTokenSchema;
  },
  get reenviarCodigoSchema() {
    /* istanbul ignore next */
    cov_lmu56q2xt().f[9]++;
    cov_lmu56q2xt().s[12]++;
    return reenviarCodigoSchema;
  },
  get registroSchema() {
    /* istanbul ignore next */
    cov_lmu56q2xt().f[10]++;
    cov_lmu56q2xt().s[13]++;
    return registroSchema;
  },
  get solicitarRecuperacaoSenhaSchema() {
    /* istanbul ignore next */
    cov_lmu56q2xt().f[11]++;
    cov_lmu56q2xt().s[14]++;
    return solicitarRecuperacaoSenhaSchema;
  },
  get validacaoAuthCustomizada() {
    /* istanbul ignore next */
    cov_lmu56q2xt().f[12]++;
    cov_lmu56q2xt().s[15]++;
    return validacaoAuthCustomizada;
  },
  get validarCredenciais() {
    /* istanbul ignore next */
    cov_lmu56q2xt().f[13]++;
    cov_lmu56q2xt().s[16]++;
    return validarCredenciais;
  },
  get validarDadosRegistro() {
    /* istanbul ignore next */
    cov_lmu56q2xt().f[14]++;
    cov_lmu56q2xt().s[17]++;
    return validarDadosRegistro;
  },
  get validarSessaoSchema() {
    /* istanbul ignore next */
    cov_lmu56q2xt().f[15]++;
    cov_lmu56q2xt().s[18]++;
    return validarSessaoSchema;
  },
  get validarToken() {
    /* istanbul ignore next */
    cov_lmu56q2xt().f[16]++;
    cov_lmu56q2xt().s[19]++;
    return validarToken;
  },
  get verificarEmailSchema() {
    /* istanbul ignore next */
    cov_lmu56q2xt().f[17]++;
    cov_lmu56q2xt().s[20]++;
    return verificarEmailSchema;
  },
  get verificarTokenSchema() {
    /* istanbul ignore next */
    cov_lmu56q2xt().f[18]++;
    cov_lmu56q2xt().s[21]++;
    return verificarTokenSchema;
  }
});
const _zod =
/* istanbul ignore next */
(cov_lmu56q2xt().s[22]++, require("zod"));
const _usuarios =
/* istanbul ignore next */
(cov_lmu56q2xt().s[23]++, require("./usuarios"));
const loginSchema =
/* istanbul ignore next */
(cov_lmu56q2xt().s[24]++, _zod.z.object({
  email: _usuarios.emailSchema,
  senha: _zod.z.string().min(1, 'Senha é obrigatória'),
  lembrarMe: _zod.z.boolean().default(false)
}));
const registroSchema =
/* istanbul ignore next */
(cov_lmu56q2xt().s[25]++, _zod.z.object({
  nome: _usuarios.nomeSchema,
  email: _usuarios.emailSchema,
  senha: _usuarios.senhaSchema,
  confirmarSenha: _zod.z.string().min(1, 'Confirmação de senha é obrigatória'),
  userType: _zod.z.enum(['ADMIN', 'GESTOR', 'ATENDENTE'], {
    errorMap: () => {
      /* istanbul ignore next */
      cov_lmu56q2xt().f[19]++;
      cov_lmu56q2xt().s[26]++;
      return {
        message: 'Tipo de usuário inválido'
      };
    }
  }),
  aceitarTermos: _zod.z.boolean().refine(val => {
    /* istanbul ignore next */
    cov_lmu56q2xt().f[20]++;
    cov_lmu56q2xt().s[27]++;
    return val === true;
  }, {
    message: 'Você deve aceitar os termos de uso'
  })
}).refine(data => {
  /* istanbul ignore next */
  cov_lmu56q2xt().f[21]++;
  cov_lmu56q2xt().s[28]++;
  return data.senha === data.confirmarSenha;
}, {
  message: 'Senha e confirmação devem ser iguais',
  path: ['confirmarSenha']
}));
const solicitarRecuperacaoSenhaSchema =
/* istanbul ignore next */
(cov_lmu56q2xt().s[29]++, _zod.z.object({
  email: _usuarios.emailSchema
}));
const redefinirSenhaComTokenSchema =
/* istanbul ignore next */
(cov_lmu56q2xt().s[30]++, _zod.z.object({
  token: _zod.z.string().min(1, 'Token é obrigatório'),
  novaSenha: _usuarios.senhaSchema,
  confirmarSenha: _zod.z.string().min(1, 'Confirmação de senha é obrigatória')
}).refine(data => {
  /* istanbul ignore next */
  cov_lmu56q2xt().f[22]++;
  cov_lmu56q2xt().s[31]++;
  return data.novaSenha === data.confirmarSenha;
}, {
  message: 'Nova senha e confirmação devem ser iguais',
  path: ['confirmarSenha']
}));
const verificarTokenSchema =
/* istanbul ignore next */
(cov_lmu56q2xt().s[32]++, _zod.z.object({
  token: _zod.z.string().min(1, 'Token é obrigatório')
}));
const gerarSenhaTemporariaSchema =
/* istanbul ignore next */
(cov_lmu56q2xt().s[33]++, _zod.z.object({
  email: _usuarios.emailSchema,
  adminKey: _zod.z.string().min(1, 'Chave de administrador é obrigatória')
}));
const primeiroAcessoSchema =
/* istanbul ignore next */
(cov_lmu56q2xt().s[34]++, _zod.z.object({
  email: _usuarios.emailSchema,
  senhaTemporaria: _zod.z.string().min(1, 'Senha temporária é obrigatória'),
  novaSenha: _usuarios.senhaSchema,
  confirmarSenha: _zod.z.string().min(1, 'Confirmação de senha é obrigatória')
}).refine(data => {
  /* istanbul ignore next */
  cov_lmu56q2xt().f[23]++;
  cov_lmu56q2xt().s[35]++;
  return data.novaSenha === data.confirmarSenha;
}, {
  message: 'Nova senha e confirmação devem ser iguais',
  path: ['confirmarSenha']
}));
const validarSessaoSchema =
/* istanbul ignore next */
(cov_lmu56q2xt().s[36]++, _zod.z.object({
  token: _zod.z.string().min(1, 'Token de sessão é obrigatório'),
  refreshToken: _zod.z.string().optional()
}));
const logoutSchema =
/* istanbul ignore next */
(cov_lmu56q2xt().s[37]++, _zod.z.object({
  token: _zod.z.string().optional(),
  logoutTodos: _zod.z.boolean().default(false)
}));
const alterarEmailSchema =
/* istanbul ignore next */
(cov_lmu56q2xt().s[38]++, _zod.z.object({
  emailAtual: _usuarios.emailSchema,
  novoEmail: _usuarios.emailSchema,
  senha: _zod.z.string().min(1, 'Senha é obrigatória para confirmar a alteração')
}).refine(data => {
  /* istanbul ignore next */
  cov_lmu56q2xt().f[24]++;
  cov_lmu56q2xt().s[39]++;
  return data.emailAtual !== data.novoEmail;
}, {
  message: 'O novo email deve ser diferente do atual',
  path: ['novoEmail']
}));
const verificarEmailSchema =
/* istanbul ignore next */
(cov_lmu56q2xt().s[40]++, _zod.z.object({
  email: _usuarios.emailSchema,
  codigo: _zod.z.string().length(6, 'Código deve ter 6 dígitos')
}));
const reenviarCodigoSchema =
/* istanbul ignore next */
(cov_lmu56q2xt().s[41]++, _zod.z.object({
  email: _usuarios.emailSchema,
  tipo: _zod.z.enum(['verificacao', 'recuperacao'], {
    errorMap: () => {
      /* istanbul ignore next */
      cov_lmu56q2xt().f[25]++;
      cov_lmu56q2xt().s[42]++;
      return {
        message: 'Tipo deve ser verificacao ou recuperacao'
      };
    }
  })
}));
/* istanbul ignore next */
cov_lmu56q2xt().s[43]++;
const validarCredenciais = dados => {
  /* istanbul ignore next */
  cov_lmu56q2xt().f[26]++;
  cov_lmu56q2xt().s[44]++;
  return loginSchema.safeParse(dados);
};
/* istanbul ignore next */
cov_lmu56q2xt().s[45]++;
const validarDadosRegistro = dados => {
  /* istanbul ignore next */
  cov_lmu56q2xt().f[27]++;
  cov_lmu56q2xt().s[46]++;
  return registroSchema.safeParse(dados);
};
/* istanbul ignore next */
cov_lmu56q2xt().s[47]++;
const validarToken = token => {
  /* istanbul ignore next */
  cov_lmu56q2xt().f[28]++;
  cov_lmu56q2xt().s[48]++;
  return verificarTokenSchema.safeParse({
    token
  });
};
const MENSAGENS_ERRO_AUTH =
/* istanbul ignore next */
(cov_lmu56q2xt().s[49]++, {
  CREDENCIAIS_INVALIDAS: 'Email ou senha incorretos',
  CONTA_INATIVA: 'Sua conta está inativa. Entre em contato com o administrador',
  CONTA_BLOQUEADA: 'Sua conta foi bloqueada devido a múltiplas tentativas de login',
  TOKEN_INVALIDO: 'Token inválido ou expirado',
  TOKEN_EXPIRADO: 'Token expirado. Solicite um novo',
  EMAIL_NAO_VERIFICADO: 'Email não verificado. Verifique sua caixa de entrada',
  SENHA_TEMPORARIA_EXPIRADA: 'Senha temporária expirada. Solicite uma nova',
  SESSAO_EXPIRADA: 'Sua sessão expirou. Faça login novamente',
  ACESSO_NEGADO: 'Acesso negado. Você não tem permissão para acessar este recurso',
  MUITAS_TENTATIVAS: 'Muitas tentativas de login. Tente novamente em alguns minutos'
});
const CONFIGURACOES_SEGURANCA =
/* istanbul ignore next */
(cov_lmu56q2xt().s[50]++, {
  MAX_TENTATIVAS_LOGIN: 5,
  TEMPO_BLOQUEIO_MINUTOS: 15,
  DURACAO_TOKEN_RECUPERACAO_HORAS: 1,
  DURACAO_SESSAO_HORAS: 24,
  DURACAO_REFRESH_TOKEN_DIAS: 7,
  TAMANHO_CODIGO_VERIFICACAO: 6,
  DURACAO_CODIGO_VERIFICACAO_MINUTOS: 10
});
const validacaoAuthCustomizada =
/* istanbul ignore next */
(cov_lmu56q2xt().s[51]++, {
  /**
  * Valida se o usuário pode fazer login
  */
  podeLogar: async email => {
    /* istanbul ignore next */
    cov_lmu56q2xt().f[29]++;
    cov_lmu56q2xt().s[52]++;
    // Verificar se a conta está ativa, não bloqueada, etc.
    return {
      podeLogar: true,
      motivo: null
    };
  },
  /**
  * Valida força da senha
  */
  validarForcaSenha: senha => {
    /* istanbul ignore next */
    cov_lmu56q2xt().f[30]++;
    const criterios =
    /* istanbul ignore next */
    (cov_lmu56q2xt().s[53]++, {
      tamanho: senha.length >= 8,
      minuscula: /[a-z]/.test(senha),
      maiuscula: /[A-Z]/.test(senha),
      numero: /\d/.test(senha),
      especial: /[@$!%*?&]/.test(senha)
    });
    const pontuacao =
    /* istanbul ignore next */
    (cov_lmu56q2xt().s[54]++, Object.values(criterios).filter(Boolean).length);
    /* istanbul ignore next */
    cov_lmu56q2xt().s[55]++;
    return {
      valida: pontuacao === 5,
      pontuacao,
      criterios,
      nivel: pontuacao < 3 ?
      /* istanbul ignore next */
      (cov_lmu56q2xt().b[0][0]++, 'fraca') :
      /* istanbul ignore next */
      (cov_lmu56q2xt().b[0][1]++, pontuacao < 5 ?
      /* istanbul ignore next */
      (cov_lmu56q2xt().b[1][0]++, 'media') :
      /* istanbul ignore next */
      (cov_lmu56q2xt().b[1][1]++, 'forte'))
    };
  },
  /**
  * Gera código de verificação
  */
  gerarCodigoVerificacao: () => {
    /* istanbul ignore next */
    cov_lmu56q2xt().f[31]++;
    cov_lmu56q2xt().s[56]++;
    return Math.random().toString().slice(2, 8).padStart(6, '0');
  },
  /**
  * Valida formato de token JWT
  */
  validarFormatoToken: token => {
    /* istanbul ignore next */
    cov_lmu56q2xt().f[32]++;
    const partes =
    /* istanbul ignore next */
    (cov_lmu56q2xt().s[57]++, token.split('.'));
    /* istanbul ignore next */
    cov_lmu56q2xt().s[58]++;
    return partes.length === 3;
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,