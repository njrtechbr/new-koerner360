0f52c18a2f0dadc0f11be4d7ef784250
"use strict";

/* istanbul ignore next */
function cov_2743fqcmph() {
  var path = "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\lembretes\\route.ts";
  var hash = "40bbc51192b1d052282857cd27bc66becb1f9f50";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\lembretes\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 22
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 19
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 20
        }
      },
      "7": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 38
        }
      },
      "8": {
        start: {
          line: 23,
          column: 18
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "9": {
        start: {
          line: 24,
          column: 14
        },
        end: {
          line: 24,
          column: 42
        }
      },
      "10": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 46
        }
      },
      "11": {
        start: {
          line: 26,
          column: 13
        },
        end: {
          line: 26,
          column: 27
        }
      },
      "12": {
        start: {
          line: 27,
          column: 17
        },
        end: {
          line: 27,
          column: 36
        }
      },
      "13": {
        start: {
          line: 29,
          column: 31
        },
        end: {
          line: 41,
          column: 2
        }
      },
      "14": {
        start: {
          line: 43,
          column: 28
        },
        end: {
          line: 52,
          column: 2
        }
      },
      "15": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 185,
          column: 5
        }
      },
      "16": {
        start: {
          line: 56,
          column: 24
        },
        end: {
          line: 56,
          column: 80
        }
      },
      "17": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "18": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 62,
          column: 15
        }
      },
      "19": {
        start: {
          line: 65,
          column: 33
        },
        end: {
          line: 65,
          column: 53
        }
      },
      "20": {
        start: {
          line: 66,
          column: 24
        },
        end: {
          line: 75,
          column: 9
        }
      },
      "21": {
        start: {
          line: 77,
          column: 33
        },
        end: {
          line: 77,
          column: 70
        }
      },
      "22": {
        start: {
          line: 79,
          column: 29
        },
        end: {
          line: 82,
          column: 38
        }
      },
      "23": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 86,
          column: 9
        }
      },
      "24": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 57
        }
      },
      "25": {
        start: {
          line: 88,
          column: 22
        },
        end: {
          line: 88,
          column: 24
        }
      },
      "26": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 91,
          column: 9
        }
      },
      "27": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 57
        }
      },
      "28": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 94,
          column: 9
        }
      },
      "29": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 61
        }
      },
      "30": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 97,
          column: 9
        }
      },
      "31": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 47
        }
      },
      "32": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 100,
          column: 9
        }
      },
      "33": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 99,
          column: 53
        }
      },
      "34": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 109,
          column: 9
        }
      },
      "35": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 33
        }
      },
      "36": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 105,
          column: 13
        }
      },
      "37": {
        start: {
          line: 104,
          column: 16
        },
        end: {
          line: 104,
          column: 102
        }
      },
      "38": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 108,
          column: 13
        }
      },
      "39": {
        start: {
          line: 107,
          column: 16
        },
        end: {
          line: 107,
          column: 97
        }
      },
      "40": {
        start: {
          line: 111,
          column: 23
        },
        end: {
          line: 111,
          column: 78
        }
      },
      "41": {
        start: {
          line: 113,
          column: 35
        },
        end: {
          line: 152,
          column: 10
        }
      },
      "42": {
        start: {
          line: 154,
          column: 29
        },
        end: {
          line: 154,
          column: 71
        }
      },
      "43": {
        start: {
          line: 155,
          column: 33
        },
        end: {
          line: 155,
          column: 71
        }
      },
      "44": {
        start: {
          line: 156,
          column: 34
        },
        end: {
          line: 156,
          column: 61
        }
      },
      "45": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 168,
          column: 11
        }
      },
      "46": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 170,
          column: 58
        }
      },
      "47": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "48": {
        start: {
          line: 172,
          column: 12
        },
        end: {
          line: 177,
          column: 15
        }
      },
      "49": {
        start: {
          line: 174,
          column: 48
        },
        end: {
          line: 174,
          column: 83
        }
      },
      "50": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 184,
          column: 11
        }
      },
      "51": {
        start: {
          line: 188,
          column: 4
        },
        end: {
          line: 320,
          column: 5
        }
      },
      "52": {
        start: {
          line: 190,
          column: 24
        },
        end: {
          line: 190,
          column: 80
        }
      },
      "53": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 197,
          column: 9
        }
      },
      "54": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 196,
          column: 15
        }
      },
      "55": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 208,
          column: 9
        }
      },
      "56": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 207,
          column: 15
        }
      },
      "57": {
        start: {
          line: 210,
          column: 21
        },
        end: {
          line: 210,
          column: 41
        }
      },
      "58": {
        start: {
          line: 211,
          column: 31
        },
        end: {
          line: 211,
          column: 62
        }
      },
      "59": {
        start: {
          line: 213,
          column: 26
        },
        end: {
          line: 221,
          column: 10
        }
      },
      "60": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 228,
          column: 9
        }
      },
      "61": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 227,
          column: 15
        }
      },
      "62": {
        start: {
          line: 230,
          column: 24
        },
        end: {
          line: 234,
          column: 10
        }
      },
      "63": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 241,
          column: 9
        }
      },
      "64": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 240,
          column: 15
        }
      },
      "65": {
        start: {
          line: 243,
          column: 26
        },
        end: {
          line: 243,
          column: 60
        }
      },
      "66": {
        start: {
          line: 244,
          column: 34
        },
        end: {
          line: 254,
          column: 10
        }
      },
      "67": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 261,
          column: 9
        }
      },
      "68": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 260,
          column: 15
        }
      },
      "69": {
        start: {
          line: 263,
          column: 29
        },
        end: {
          line: 296,
          column: 10
        }
      },
      "70": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 303,
          column: 11
        }
      },
      "71": {
        start: {
          line: 305,
          column: 8
        },
        end: {
          line: 305,
          column: 56
        }
      },
      "72": {
        start: {
          line: 306,
          column: 8
        },
        end: {
          line: 313,
          column: 9
        }
      },
      "73": {
        start: {
          line: 307,
          column: 12
        },
        end: {
          line: 312,
          column: 15
        }
      },
      "74": {
        start: {
          line: 309,
          column: 48
        },
        end: {
          line: 309,
          column: 83
        }
      },
      "75": {
        start: {
          line: 314,
          column: 8
        },
        end: {
          line: 319,
          column: 11
        }
      },
      "76": {
        start: {
          line: 323,
          column: 4
        },
        end: {
          line: 427,
          column: 5
        }
      },
      "77": {
        start: {
          line: 325,
          column: 24
        },
        end: {
          line: 325,
          column: 80
        }
      },
      "78": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 332,
          column: 9
        }
      },
      "79": {
        start: {
          line: 327,
          column: 12
        },
        end: {
          line: 331,
          column: 15
        }
      },
      "80": {
        start: {
          line: 334,
          column: 8
        },
        end: {
          line: 343,
          column: 9
        }
      },
      "81": {
        start: {
          line: 338,
          column: 12
        },
        end: {
          line: 342,
          column: 15
        }
      },
      "82": {
        start: {
          line: 344,
          column: 33
        },
        end: {
          line: 344,
          column: 53
        }
      },
      "83": {
        start: {
          line: 345,
          column: 21
        },
        end: {
          line: 345,
          column: 45
        }
      },
      "84": {
        start: {
          line: 346,
          column: 20
        },
        end: {
          line: 346,
          column: 61
        }
      },
      "85": {
        start: {
          line: 347,
          column: 26
        },
        end: {
          line: 347,
          column: 55
        }
      },
      "86": {
        start: {
          line: 348,
          column: 28
        },
        end: {
          line: 348,
          column: 59
        }
      },
      "87": {
        start: {
          line: 349,
          column: 24
        },
        end: {
          line: 349,
          column: 26
        }
      },
      "88": {
        start: {
          line: 350,
          column: 20
        },
        end: {
          line: 350,
          column: 22
        }
      },
      "89": {
        start: {
          line: 351,
          column: 8
        },
        end: {
          line: 398,
          column: 9
        }
      },
      "90": {
        start: {
          line: 353,
          column: 16
        },
        end: {
          line: 359,
          column: 17
        }
      },
      "91": {
        start: {
          line: 354,
          column: 20
        },
        end: {
          line: 358,
          column: 23
        }
      },
      "92": {
        start: {
          line: 360,
          column: 16
        },
        end: {
          line: 362,
          column: 18
        }
      },
      "93": {
        start: {
          line: 363,
          column: 16
        },
        end: {
          line: 363,
          column: 22
        }
      },
      "94": {
        start: {
          line: 365,
          column: 16
        },
        end: {
          line: 371,
          column: 17
        }
      },
      "95": {
        start: {
          line: 366,
          column: 20
        },
        end: {
          line: 370,
          column: 23
        }
      },
      "96": {
        start: {
          line: 372,
          column: 16
        },
        end: {
          line: 372,
          column: 44
        }
      },
      "97": {
        start: {
          line: 373,
          column: 16
        },
        end: {
          line: 373,
          column: 38
        }
      },
      "98": {
        start: {
          line: 374,
          column: 16
        },
        end: {
          line: 374,
          column: 22
        }
      },
      "99": {
        start: {
          line: 376,
          column: 16
        },
        end: {
          line: 382,
          column: 17
        }
      },
      "100": {
        start: {
          line: 377,
          column: 20
        },
        end: {
          line: 381,
          column: 23
        }
      },
      "101": {
        start: {
          line: 383,
          column: 16
        },
        end: {
          line: 383,
          column: 48
        }
      },
      "102": {
        start: {
          line: 384,
          column: 16
        },
        end: {
          line: 384,
          column: 38
        }
      },
      "103": {
        start: {
          line: 385,
          column: 16
        },
        end: {
          line: 385,
          column: 22
        }
      },
      "104": {
        start: {
          line: 387,
          column: 16
        },
        end: {
          line: 387,
          column: 38
        }
      },
      "105": {
        start: {
          line: 388,
          column: 16
        },
        end: {
          line: 390,
          column: 18
        }
      },
      "106": {
        start: {
          line: 391,
          column: 16
        },
        end: {
          line: 391,
          column: 22
        }
      },
      "107": {
        start: {
          line: 393,
          column: 16
        },
        end: {
          line: 397,
          column: 19
        }
      },
      "108": {
        start: {
          line: 400,
          column: 33
        },
        end: {
          line: 402,
          column: 10
        }
      },
      "109": {
        start: {
          line: 403,
          column: 8
        },
        end: {
          line: 409,
          column: 9
        }
      },
      "110": {
        start: {
          line: 404,
          column: 12
        },
        end: {
          line: 408,
          column: 15
        }
      },
      "111": {
        start: {
          line: 411,
          column: 33
        },
        end: {
          line: 413,
          column: 10
        }
      },
      "112": {
        start: {
          line: 414,
          column: 8
        },
        end: {
          line: 418,
          column: 11
        }
      },
      "113": {
        start: {
          line: 420,
          column: 8
        },
        end: {
          line: 420,
          column: 59
        }
      },
      "114": {
        start: {
          line: 421,
          column: 8
        },
        end: {
          line: 426,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 18
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 15
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 16
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "GET",
        decl: {
          start: {
            line: 53,
            column: 15
          },
          end: {
            line: 53,
            column: 18
          }
        },
        loc: {
          start: {
            line: 53,
            column: 28
          },
          end: {
            line: 186,
            column: 1
          }
        },
        line: 53
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 174,
            column: 43
          },
          end: {
            line: 174,
            column: 44
          }
        },
        loc: {
          start: {
            line: 174,
            column: 48
          },
          end: {
            line: 174,
            column: 83
          }
        },
        line: 174
      },
      "6": {
        name: "POST",
        decl: {
          start: {
            line: 187,
            column: 15
          },
          end: {
            line: 187,
            column: 19
          }
        },
        loc: {
          start: {
            line: 187,
            column: 29
          },
          end: {
            line: 321,
            column: 1
          }
        },
        line: 187
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 309,
            column: 43
          },
          end: {
            line: 309,
            column: 44
          }
        },
        loc: {
          start: {
            line: 309,
            column: 48
          },
          end: {
            line: 309,
            column: 83
          }
        },
        line: 309
      },
      "8": {
        name: "DELETE",
        decl: {
          start: {
            line: 322,
            column: 15
          },
          end: {
            line: 322,
            column: 21
          }
        },
        loc: {
          start: {
            line: 322,
            column: 31
          },
          end: {
            line: 428,
            column: 1
          }
        },
        line: 322
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "1": {
        loc: {
          start: {
            line: 67,
            column: 23
          },
          end: {
            line: 67,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 23
          },
          end: {
            line: 67,
            column: 52
          }
        }, {
          start: {
            line: 67,
            column: 56
          },
          end: {
            line: 67,
            column: 65
          }
        }],
        line: 67
      },
      "2": {
        loc: {
          start: {
            line: 68,
            column: 25
          },
          end: {
            line: 68,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 25
          },
          end: {
            line: 68,
            column: 56
          }
        }, {
          start: {
            line: 68,
            column: 60
          },
          end: {
            line: 68,
            column: 69
          }
        }],
        line: 68
      },
      "3": {
        loc: {
          start: {
            line: 69,
            column: 18
          },
          end: {
            line: 69,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 18
          },
          end: {
            line: 69,
            column: 42
          }
        }, {
          start: {
            line: 69,
            column: 46
          },
          end: {
            line: 69,
            column: 55
          }
        }],
        line: 69
      },
      "4": {
        loc: {
          start: {
            line: 70,
            column: 21
          },
          end: {
            line: 70,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 70,
            column: 51
          },
          end: {
            line: 70,
            column: 89
          }
        }, {
          start: {
            line: 70,
            column: 92
          },
          end: {
            line: 70,
            column: 101
          }
        }],
        line: 70
      },
      "5": {
        loc: {
          start: {
            line: 71,
            column: 24
          },
          end: {
            line: 71,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 71,
            column: 24
          },
          end: {
            line: 71,
            column: 54
          }
        }, {
          start: {
            line: 71,
            column: 58
          },
          end: {
            line: 71,
            column: 67
          }
        }],
        line: 71
      },
      "6": {
        loc: {
          start: {
            line: 72,
            column: 21
          },
          end: {
            line: 72,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 72,
            column: 21
          },
          end: {
            line: 72,
            column: 48
          }
        }, {
          start: {
            line: 72,
            column: 52
          },
          end: {
            line: 72,
            column: 61
          }
        }],
        line: 72
      },
      "7": {
        loc: {
          start: {
            line: 73,
            column: 29
          },
          end: {
            line: 73,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 29
          },
          end: {
            line: 73,
            column: 55
          }
        }, {
          start: {
            line: 73,
            column: 59
          },
          end: {
            line: 73,
            column: 63
          }
        }],
        line: 73
      },
      "8": {
        loc: {
          start: {
            line: 74,
            column: 29
          },
          end: {
            line: 74,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 74,
            column: 29
          },
          end: {
            line: 74,
            column: 55
          }
        }, {
          start: {
            line: 74,
            column: 59
          },
          end: {
            line: 74,
            column: 62
          }
        }],
        line: 74
      },
      "9": {
        loc: {
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 86,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "10": {
        loc: {
          start: {
            line: 83,
            column: 12
          },
          end: {
            line: 83,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 83,
            column: 12
          },
          end: {
            line: 83,
            column: 25
          }
        }, {
          start: {
            line: 83,
            column: 29
          },
          end: {
            line: 83,
            column: 75
          }
        }],
        line: 83
      },
      "11": {
        loc: {
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "12": {
        loc: {
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "13": {
        loc: {
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 97,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 97,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "14": {
        loc: {
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "15": {
        loc: {
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "16": {
        loc: {
          start: {
            line: 101,
            column: 12
          },
          end: {
            line: 101,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 101,
            column: 12
          },
          end: {
            line: 101,
            column: 39
          }
        }, {
          start: {
            line: 101,
            column: 43
          },
          end: {
            line: 101,
            column: 67
          }
        }],
        line: 101
      },
      "17": {
        loc: {
          start: {
            line: 103,
            column: 12
          },
          end: {
            line: 105,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 12
          },
          end: {
            line: 105,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "18": {
        loc: {
          start: {
            line: 106,
            column: 12
          },
          end: {
            line: 108,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 12
          },
          end: {
            line: 108,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "19": {
        loc: {
          start: {
            line: 171,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 171,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 171
      },
      "20": {
        loc: {
          start: {
            line: 181,
            column: 22
          },
          end: {
            line: 181,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 181,
            column: 47
          },
          end: {
            line: 181,
            column: 60
          }
        }, {
          start: {
            line: 181,
            column: 63
          },
          end: {
            line: 181,
            column: 82
          }
        }],
        line: 181
      },
      "21": {
        loc: {
          start: {
            line: 191,
            column: 8
          },
          end: {
            line: 197,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 8
          },
          end: {
            line: 197,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 191
      },
      "22": {
        loc: {
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 208,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 208,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 199
      },
      "23": {
        loc: {
          start: {
            line: 222,
            column: 8
          },
          end: {
            line: 228,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 222,
            column: 8
          },
          end: {
            line: 228,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 222
      },
      "24": {
        loc: {
          start: {
            line: 235,
            column: 8
          },
          end: {
            line: 241,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 235,
            column: 8
          },
          end: {
            line: 241,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 235
      },
      "25": {
        loc: {
          start: {
            line: 255,
            column: 8
          },
          end: {
            line: 261,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 255,
            column: 8
          },
          end: {
            line: 261,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 255
      },
      "26": {
        loc: {
          start: {
            line: 306,
            column: 8
          },
          end: {
            line: 313,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 306,
            column: 8
          },
          end: {
            line: 313,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 306
      },
      "27": {
        loc: {
          start: {
            line: 316,
            column: 22
          },
          end: {
            line: 316,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 316,
            column: 47
          },
          end: {
            line: 316,
            column: 60
          }
        }, {
          start: {
            line: 316,
            column: 63
          },
          end: {
            line: 316,
            column: 82
          }
        }],
        line: 316
      },
      "28": {
        loc: {
          start: {
            line: 326,
            column: 8
          },
          end: {
            line: 332,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 326,
            column: 8
          },
          end: {
            line: 332,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 326
      },
      "29": {
        loc: {
          start: {
            line: 334,
            column: 8
          },
          end: {
            line: 343,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 334,
            column: 8
          },
          end: {
            line: 343,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 334
      },
      "30": {
        loc: {
          start: {
            line: 346,
            column: 20
          },
          end: {
            line: 346,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 346,
            column: 20
          },
          end: {
            line: 346,
            column: 55
          }
        }, {
          start: {
            line: 346,
            column: 59
          },
          end: {
            line: 346,
            column: 61
          }
        }],
        line: 346
      },
      "31": {
        loc: {
          start: {
            line: 351,
            column: 8
          },
          end: {
            line: 398,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 352,
            column: 12
          },
          end: {
            line: 363,
            column: 22
          }
        }, {
          start: {
            line: 364,
            column: 12
          },
          end: {
            line: 374,
            column: 22
          }
        }, {
          start: {
            line: 375,
            column: 12
          },
          end: {
            line: 385,
            column: 22
          }
        }, {
          start: {
            line: 386,
            column: 12
          },
          end: {
            line: 391,
            column: 22
          }
        }, {
          start: {
            line: 392,
            column: 12
          },
          end: {
            line: 397,
            column: 19
          }
        }],
        line: 351
      },
      "32": {
        loc: {
          start: {
            line: 353,
            column: 16
          },
          end: {
            line: 359,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 353,
            column: 16
          },
          end: {
            line: 359,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 353
      },
      "33": {
        loc: {
          start: {
            line: 365,
            column: 16
          },
          end: {
            line: 371,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 365,
            column: 16
          },
          end: {
            line: 371,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 365
      },
      "34": {
        loc: {
          start: {
            line: 376,
            column: 16
          },
          end: {
            line: 382,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 376,
            column: 16
          },
          end: {
            line: 382,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 376
      },
      "35": {
        loc: {
          start: {
            line: 403,
            column: 8
          },
          end: {
            line: 409,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 403,
            column: 8
          },
          end: {
            line: 409,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 403
      },
      "36": {
        loc: {
          start: {
            line: 423,
            column: 22
          },
          end: {
            line: 423,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 423,
            column: 47
          },
          end: {
            line: 423,
            column: 60
          }
        }, {
          start: {
            line: 423,
            column: 63
          },
          end: {
            line: 423,
            column: 82
          }
        }],
        line: 423
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0, 0, 0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\lembretes\\route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { getServerSession } from 'next-auth';\nimport { authOptions } from '@/lib/auth';\nimport { prisma } from '@/lib/prisma';\nimport { obterAgendadorLembretes } from '@/lib/services/agendador-lembretes';\nimport { z } from 'zod';\nimport { addDays, startOfDay, endOfDay } from 'date-fns';\n\n// Schema de valida\xE7\xE3o para filtros de lembretes\nconst filtrosLembretesSchema = z.object({\n  usuarioId: z.string().optional(),\n  avaliacaoId: z.string().optional(),\n  tipo: z.enum(['lembrete', 'vencimento']).optional(),\n  enviado: z.boolean().optional(),\n  dataInicio: z.string().optional(),\n  dataFim: z.string().optional(),\n  limite: z.number().min(1).max(100).default(50),\n  pagina: z.number().min(1).default(1),\n});\n\n// Schema para cria\xE7\xE3o de lembrete manual\nconst criarLembreteSchema = z.object({\n  avaliacaoId: z.string(),\n  usuarioId: z.string(),\n  tipo: z.enum(['lembrete', 'vencimento']),\n  dataEnvio: z.string(),\n  observacoes: z.string().optional(),\n});\n\n/**\n * GET /api/lembretes\n * Busca lembretes com filtros opcionais\n */\nexport async function GET(request: NextRequest) {\n  try {\n    // Verificar autentica\xE7\xE3o\n    const session = await getServerSession(authOptions);\n    if (!session?.user) {\n      return NextResponse.json(\n        { erro: 'N\xE3o autorizado' },\n        { status: 401 }\n      );\n    }\n\n    // Extrair par\xE2metros da URL\n    const { searchParams } = new URL(request.url);\n    const filtros = {\n      usuarioId: searchParams.get('usuarioId') || undefined,\n      avaliacaoId: searchParams.get('avaliacaoId') || undefined,\n      tipo: searchParams.get('tipo') || undefined,\n      enviado: searchParams.get('enviado') ? searchParams.get('enviado') === 'true' : undefined,\n      dataInicio: searchParams.get('dataInicio') || undefined,\n      dataFim: searchParams.get('dataFim') || undefined,\n      limite: parseInt(searchParams.get('limite') || '50'),\n      pagina: parseInt(searchParams.get('pagina') || '1'),\n    };\n\n    // Validar filtros\n    const filtrosValidados = filtrosLembretesSchema.parse(filtros);\n\n    // Verificar permiss\xF5es\n    const podeVerTodos = ['ADMIN', 'GESTOR'].includes(session.user.papel);\n    if (!podeVerTodos && filtrosValidados.usuarioId !== session.user.id) {\n      // Usu\xE1rios comuns s\xF3 podem ver seus pr\xF3prios lembretes\n      filtrosValidados.usuarioId = session.user.id;\n    }\n\n    // Construir filtros do Prisma\n    const where: any = {};\n    \n    if (filtrosValidados.usuarioId) {\n      where.usuarioId = filtrosValidados.usuarioId;\n    }\n    \n    if (filtrosValidados.avaliacaoId) {\n      where.avaliacaoId = filtrosValidados.avaliacaoId;\n    }\n    \n    if (filtrosValidados.tipo) {\n      where.tipo = filtrosValidados.tipo;\n    }\n    \n    if (filtrosValidados.enviado !== undefined) {\n      where.enviado = filtrosValidados.enviado;\n    }\n    \n    if (filtrosValidados.dataInicio || filtrosValidados.dataFim) {\n      where.dataEnvio = {};\n      if (filtrosValidados.dataInicio) {\n        where.dataEnvio.gte = startOfDay(new Date(filtrosValidados.dataInicio));\n      }\n      if (filtrosValidados.dataFim) {\n        where.dataEnvio.lte = endOfDay(new Date(filtrosValidados.dataFim));\n      }\n    }\n\n    // Calcular offset para pagina\xE7\xE3o\n    const offset = (filtrosValidados.pagina - 1) * filtrosValidados.limite;\n\n    // Buscar lembretes\n    const [lembretes, total] = await Promise.all([\n      prisma.lembreteAgendado.findMany({\n        where,\n        include: {\n          usuario: {\n            select: {\n              id: true,\n              nome: true,\n              email: true,\n            },\n          },\n          avaliacao: {\n            select: {\n              id: true,\n              prazo: true,\n              status: true,\n              avaliado: {\n                select: {\n                  nome: true,\n                  cargo: true,\n                },\n              },\n              periodo: {\n                select: {\n                  nome: true,\n                },\n              },\n            },\n          },\n        },\n        orderBy: {\n          dataEnvio: 'desc',\n        },\n        skip: offset,\n        take: filtrosValidados.limite,\n      }),\n      prisma.lembreteAgendado.count({ where }),\n    ]);\n\n    // Calcular informa\xE7\xF5es de pagina\xE7\xE3o\n    const totalPaginas = Math.ceil(total / filtrosValidados.limite);\n    const temProximaPagina = filtrosValidados.pagina < totalPaginas;\n    const temPaginaAnterior = filtrosValidados.pagina > 1;\n\n    return NextResponse.json({\n      sucesso: true,\n      dados: lembretes,\n      paginacao: {\n        paginaAtual: filtrosValidados.pagina,\n        totalPaginas,\n        totalItens: total,\n        itensPorPagina: filtrosValidados.limite,\n        temProximaPagina,\n        temPaginaAnterior,\n      },\n    });\n\n  } catch (error) {\n    console.error('Erro ao buscar lembretes:', error);\n    \n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        { \n          erro: 'Par\xE2metros inv\xE1lidos',\n          detalhes: error.errors.map(e => `${e.path.join('.')}: ${e.message}`)\n        },\n        { status: 400 }\n      );\n    }\n\n    return NextResponse.json(\n      { \n        erro: 'Erro interno do servidor',\n        detalhes: error instanceof Error ? error.message : 'Erro desconhecido'\n      },\n      { status: 500 }\n    );\n  }\n}\n\n/**\n * POST /api/lembretes\n * Cria um lembrete manual\n */\nexport async function POST(request: NextRequest) {\n  try {\n    // Verificar autentica\xE7\xE3o\n    const session = await getServerSession(authOptions);\n    if (!session?.user) {\n      return NextResponse.json(\n        { erro: 'N\xE3o autorizado' },\n        { status: 401 }\n      );\n    }\n\n    // Verificar permiss\xF5es (apenas ADMIN e GESTOR)\n    if (!['ADMIN', 'GESTOR'].includes(session.user.papel)) {\n      return NextResponse.json(\n        { erro: 'Acesso negado. Apenas administradores e gestores podem criar lembretes.' },\n        { status: 403 }\n      );\n    }\n\n    // Validar dados da requisi\xE7\xE3o\n    const body = await request.json();\n    const dadosValidados = criarLembreteSchema.parse(body);\n\n    // Verificar se a avalia\xE7\xE3o existe\n    const avaliacao = await prisma.avaliacao.findUnique({\n      where: { id: dadosValidados.avaliacaoId },\n      include: {\n        avaliador: true,\n        avaliado: true,\n      },\n    });\n\n    if (!avaliacao) {\n      return NextResponse.json(\n        { erro: 'Avalia\xE7\xE3o n\xE3o encontrada' },\n        { status: 404 }\n      );\n    }\n\n    // Verificar se o usu\xE1rio existe\n    const usuario = await prisma.usuario.findUnique({\n      where: { id: dadosValidados.usuarioId },\n    });\n\n    if (!usuario) {\n      return NextResponse.json(\n        { erro: 'Usu\xE1rio n\xE3o encontrado' },\n        { status: 404 }\n      );\n    }\n\n    // Verificar se j\xE1 existe um lembrete similar\n    const dataEnvio = new Date(dadosValidados.dataEnvio);\n    const lembreteExistente = await prisma.lembreteAgendado.findFirst({\n      where: {\n        avaliacaoId: dadosValidados.avaliacaoId,\n        usuarioId: dadosValidados.usuarioId,\n        tipo: dadosValidados.tipo,\n        dataEnvio: {\n          gte: startOfDay(dataEnvio),\n          lte: endOfDay(dataEnvio),\n        },\n      },\n    });\n\n    if (lembreteExistente) {\n      return NextResponse.json(\n        { erro: 'J\xE1 existe um lembrete similar agendado para esta data' },\n        { status: 409 }\n      );\n    }\n\n    // Criar o lembrete\n    const novoLembrete = await prisma.lembreteAgendado.create({\n      data: {\n        avaliacaoId: dadosValidados.avaliacaoId,\n        usuarioId: dadosValidados.usuarioId,\n        tipo: dadosValidados.tipo,\n        dataEnvio,\n        enviado: false,\n        tentativas: 0,\n        observacoes: dadosValidados.observacoes,\n        criadoPor: session.user.id,\n      },\n      include: {\n        usuario: {\n          select: {\n            id: true,\n            nome: true,\n            email: true,\n          },\n        },\n        avaliacao: {\n          select: {\n            id: true,\n            prazo: true,\n            status: true,\n            avaliado: {\n              select: {\n                nome: true,\n                cargo: true,\n              },\n            },\n          },\n        },\n      },\n    });\n\n    return NextResponse.json({\n      sucesso: true,\n      mensagem: 'Lembrete criado com sucesso',\n      dados: novoLembrete,\n    }, { status: 201 });\n\n  } catch (error) {\n    console.error('Erro ao criar lembrete:', error);\n    \n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        { \n          erro: 'Dados inv\xE1lidos',\n          detalhes: error.errors.map(e => `${e.path.join('.')}: ${e.message}`)\n        },\n        { status: 400 }\n      );\n    }\n\n    return NextResponse.json(\n      { \n        erro: 'Erro interno do servidor',\n        detalhes: error instanceof Error ? error.message : 'Erro desconhecido'\n      },\n      { status: 500 }\n    );\n  }\n}\n\n/**\n * DELETE /api/lembretes\n * Remove lembretes em lote\n */\nexport async function DELETE(request: NextRequest) {\n  try {\n    // Verificar autentica\xE7\xE3o\n    const session = await getServerSession(authOptions);\n    if (!session?.user) {\n      return NextResponse.json(\n        { erro: 'N\xE3o autorizado' },\n        { status: 401 }\n      );\n    }\n\n    // Verificar permiss\xF5es (apenas ADMIN e GESTOR)\n    if (!['ADMIN', 'GESTOR'].includes(session.user.papel)) {\n      return NextResponse.json(\n        { erro: 'Acesso negado. Apenas administradores e gestores podem remover lembretes.' },\n        { status: 403 }\n      );\n    }\n\n    const { searchParams } = new URL(request.url);\n    const acao = searchParams.get('acao');\n    const ids = searchParams.get('ids')?.split(',') || [];\n    const usuarioId = searchParams.get('usuarioId');\n    const avaliacaoId = searchParams.get('avaliacaoId');\n\n    let resultado: any = {};\n    let where: any = {};\n\n    switch (acao) {\n      case 'ids':\n        if (ids.length === 0) {\n          return NextResponse.json(\n            { erro: 'IDs dos lembretes s\xE3o obrigat\xF3rios' },\n            { status: 400 }\n          );\n        }\n        where.id = { in: ids };\n        break;\n\n      case 'usuario':\n        if (!usuarioId) {\n          return NextResponse.json(\n            { erro: 'ID do usu\xE1rio \xE9 obrigat\xF3rio' },\n            { status: 400 }\n          );\n        }\n        where.usuarioId = usuarioId;\n        where.enviado = false; // S\xF3 remove lembretes n\xE3o enviados\n        break;\n\n      case 'avaliacao':\n        if (!avaliacaoId) {\n          return NextResponse.json(\n            { erro: 'ID da avalia\xE7\xE3o \xE9 obrigat\xF3rio' },\n            { status: 400 }\n          );\n        }\n        where.avaliacaoId = avaliacaoId;\n        where.enviado = false; // S\xF3 remove lembretes n\xE3o enviados\n        break;\n\n      case 'nao_enviados':\n        where.enviado = false;\n        where.dataEnvio = {\n          lt: new Date(), // Lembretes n\xE3o enviados que j\xE1 passaram da data\n        };\n        break;\n\n      default:\n        return NextResponse.json(\n          { erro: 'A\xE7\xE3o de remo\xE7\xE3o n\xE3o especificada ou inv\xE1lida' },\n          { status: 400 }\n        );\n    }\n\n    // Contar lembretes que ser\xE3o removidos\n    const totalParaRemover = await prisma.lembreteAgendado.count({ where });\n\n    if (totalParaRemover === 0) {\n      return NextResponse.json({\n        sucesso: true,\n        mensagem: 'Nenhum lembrete encontrado para remo\xE7\xE3o',\n        removidos: 0,\n      });\n    }\n\n    // Remover lembretes\n    const resultadoRemocao = await prisma.lembreteAgendado.deleteMany({ where });\n\n    return NextResponse.json({\n      sucesso: true,\n      mensagem: `${resultadoRemocao.count} lembrete(s) removido(s) com sucesso`,\n      removidos: resultadoRemocao.count,\n    });\n\n  } catch (error) {\n    console.error('Erro ao remover lembretes:', error);\n    return NextResponse.json(\n      { \n        erro: 'Erro interno do servidor',\n        detalhes: error instanceof Error ? error.message : 'Erro desconhecido'\n      },\n      { status: 500 }\n    );\n  }\n}"],
      names: ["DELETE", "GET", "POST", "filtrosLembretesSchema", "z", "object", "usuarioId", "string", "optional", "avaliacaoId", "tipo", "enum", "enviado", "boolean", "dataInicio", "dataFim", "limite", "number", "min", "max", "default", "pagina", "criarLembreteSchema", "dataEnvio", "observacoes", "request", "session", "getServerSession", "authOptions", "user", "NextResponse", "json", "erro", "status", "searchParams", "URL", "url", "filtros", "get", "undefined", "parseInt", "filtrosValidados", "parse", "podeVerTodos", "includes", "papel", "id", "where", "gte", "startOfDay", "Date", "lte", "endOfDay", "offset", "lembretes", "total", "Promise", "all", "prisma", "lembreteAgendado", "findMany", "include", "usuario", "select", "nome", "email", "avaliacao", "prazo", "avaliado", "cargo", "periodo", "orderBy", "skip", "take", "count", "totalPaginas", "Math", "ceil", "temProximaPagina", "temPaginaAnterior", "sucesso", "dados", "paginacao", "paginaAtual", "totalItens", "itensPorPagina", "error", "console", "ZodError", "detalhes", "errors", "map", "e", "path", "join", "message", "Error", "body", "dadosValidados", "findUnique", "avaliador", "lembreteExistente", "findFirst", "novoLembrete", "create", "data", "tentativas", "criadoPor", "mensagem", "acao", "ids", "split", "resultado", "length", "in", "lt", "totalParaRemover", "removidos", "resultadoRemocao", "deleteMany"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "40bbc51192b1d052282857cd27bc66becb1f9f50"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2743fqcmph = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2743fqcmph();
cov_2743fqcmph().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2743fqcmph().f[0]++;
  cov_2743fqcmph().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2743fqcmph().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2743fqcmph().s[3]++;
_export(exports, {
  get DELETE() {
    /* istanbul ignore next */
    cov_2743fqcmph().f[1]++;
    cov_2743fqcmph().s[4]++;
    return DELETE;
  },
  get GET() {
    /* istanbul ignore next */
    cov_2743fqcmph().f[2]++;
    cov_2743fqcmph().s[5]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_2743fqcmph().f[3]++;
    cov_2743fqcmph().s[6]++;
    return POST;
  }
});
const _server =
/* istanbul ignore next */
(cov_2743fqcmph().s[7]++, require("next/server"));
const _nextauth =
/* istanbul ignore next */
(cov_2743fqcmph().s[8]++, require("next-auth"));
const _auth =
/* istanbul ignore next */
(cov_2743fqcmph().s[9]++, require("../../../lib/auth"));
const _prisma =
/* istanbul ignore next */
(cov_2743fqcmph().s[10]++, require("../../../lib/prisma"));
const _zod =
/* istanbul ignore next */
(cov_2743fqcmph().s[11]++, require("zod"));
const _datefns =
/* istanbul ignore next */
(cov_2743fqcmph().s[12]++, require("date-fns"));
// Schema de validação para filtros de lembretes
const filtrosLembretesSchema =
/* istanbul ignore next */
(cov_2743fqcmph().s[13]++, _zod.z.object({
  usuarioId: _zod.z.string().optional(),
  avaliacaoId: _zod.z.string().optional(),
  tipo: _zod.z.enum(['lembrete', 'vencimento']).optional(),
  enviado: _zod.z.boolean().optional(),
  dataInicio: _zod.z.string().optional(),
  dataFim: _zod.z.string().optional(),
  limite: _zod.z.number().min(1).max(100).default(50),
  pagina: _zod.z.number().min(1).default(1)
}));
// Schema para criação de lembrete manual
const criarLembreteSchema =
/* istanbul ignore next */
(cov_2743fqcmph().s[14]++, _zod.z.object({
  avaliacaoId: _zod.z.string(),
  usuarioId: _zod.z.string(),
  tipo: _zod.z.enum(['lembrete', 'vencimento']),
  dataEnvio: _zod.z.string(),
  observacoes: _zod.z.string().optional()
}));
async function GET(request) {
  /* istanbul ignore next */
  cov_2743fqcmph().f[4]++;
  cov_2743fqcmph().s[15]++;
  try {
    // Verificar autenticação
    const session =
    /* istanbul ignore next */
    (cov_2743fqcmph().s[16]++, await (0, _nextauth.getServerSession)(_auth.authOptions));
    /* istanbul ignore next */
    cov_2743fqcmph().s[17]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_2743fqcmph().b[0][0]++;
      cov_2743fqcmph().s[18]++;
      return _server.NextResponse.json({
        erro: 'Não autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_2743fqcmph().b[0][1]++;
    }
    // Extrair parâmetros da URL
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_2743fqcmph().s[19]++, new URL(request.url));
    const filtros =
    /* istanbul ignore next */
    (cov_2743fqcmph().s[20]++, {
      usuarioId:
      /* istanbul ignore next */
      (cov_2743fqcmph().b[1][0]++, searchParams.get('usuarioId')) ||
      /* istanbul ignore next */
      (cov_2743fqcmph().b[1][1]++, undefined),
      avaliacaoId:
      /* istanbul ignore next */
      (cov_2743fqcmph().b[2][0]++, searchParams.get('avaliacaoId')) ||
      /* istanbul ignore next */
      (cov_2743fqcmph().b[2][1]++, undefined),
      tipo:
      /* istanbul ignore next */
      (cov_2743fqcmph().b[3][0]++, searchParams.get('tipo')) ||
      /* istanbul ignore next */
      (cov_2743fqcmph().b[3][1]++, undefined),
      enviado: searchParams.get('enviado') ?
      /* istanbul ignore next */
      (cov_2743fqcmph().b[4][0]++, searchParams.get('enviado') === 'true') :
      /* istanbul ignore next */
      (cov_2743fqcmph().b[4][1]++, undefined),
      dataInicio:
      /* istanbul ignore next */
      (cov_2743fqcmph().b[5][0]++, searchParams.get('dataInicio')) ||
      /* istanbul ignore next */
      (cov_2743fqcmph().b[5][1]++, undefined),
      dataFim:
      /* istanbul ignore next */
      (cov_2743fqcmph().b[6][0]++, searchParams.get('dataFim')) ||
      /* istanbul ignore next */
      (cov_2743fqcmph().b[6][1]++, undefined),
      limite: parseInt(
      /* istanbul ignore next */
      (cov_2743fqcmph().b[7][0]++, searchParams.get('limite')) ||
      /* istanbul ignore next */
      (cov_2743fqcmph().b[7][1]++, '50')),
      pagina: parseInt(
      /* istanbul ignore next */
      (cov_2743fqcmph().b[8][0]++, searchParams.get('pagina')) ||
      /* istanbul ignore next */
      (cov_2743fqcmph().b[8][1]++, '1'))
    });
    // Validar filtros
    const filtrosValidados =
    /* istanbul ignore next */
    (cov_2743fqcmph().s[21]++, filtrosLembretesSchema.parse(filtros));
    // Verificar permissões
    const podeVerTodos =
    /* istanbul ignore next */
    (cov_2743fqcmph().s[22]++, ['ADMIN', 'GESTOR'].includes(session.user.papel));
    /* istanbul ignore next */
    cov_2743fqcmph().s[23]++;
    if (
    /* istanbul ignore next */
    (cov_2743fqcmph().b[10][0]++, !podeVerTodos) &&
    /* istanbul ignore next */
    (cov_2743fqcmph().b[10][1]++, filtrosValidados.usuarioId !== session.user.id)) {
      /* istanbul ignore next */
      cov_2743fqcmph().b[9][0]++;
      cov_2743fqcmph().s[24]++;
      // Usuários comuns só podem ver seus próprios lembretes
      filtrosValidados.usuarioId = session.user.id;
    } else
    /* istanbul ignore next */
    {
      cov_2743fqcmph().b[9][1]++;
    }
    // Construir filtros do Prisma
    const where =
    /* istanbul ignore next */
    (cov_2743fqcmph().s[25]++, {});
    /* istanbul ignore next */
    cov_2743fqcmph().s[26]++;
    if (filtrosValidados.usuarioId) {
      /* istanbul ignore next */
      cov_2743fqcmph().b[11][0]++;
      cov_2743fqcmph().s[27]++;
      where.usuarioId = filtrosValidados.usuarioId;
    } else
    /* istanbul ignore next */
    {
      cov_2743fqcmph().b[11][1]++;
    }
    cov_2743fqcmph().s[28]++;
    if (filtrosValidados.avaliacaoId) {
      /* istanbul ignore next */
      cov_2743fqcmph().b[12][0]++;
      cov_2743fqcmph().s[29]++;
      where.avaliacaoId = filtrosValidados.avaliacaoId;
    } else
    /* istanbul ignore next */
    {
      cov_2743fqcmph().b[12][1]++;
    }
    cov_2743fqcmph().s[30]++;
    if (filtrosValidados.tipo) {
      /* istanbul ignore next */
      cov_2743fqcmph().b[13][0]++;
      cov_2743fqcmph().s[31]++;
      where.tipo = filtrosValidados.tipo;
    } else
    /* istanbul ignore next */
    {
      cov_2743fqcmph().b[13][1]++;
    }
    cov_2743fqcmph().s[32]++;
    if (filtrosValidados.enviado !== undefined) {
      /* istanbul ignore next */
      cov_2743fqcmph().b[14][0]++;
      cov_2743fqcmph().s[33]++;
      where.enviado = filtrosValidados.enviado;
    } else
    /* istanbul ignore next */
    {
      cov_2743fqcmph().b[14][1]++;
    }
    cov_2743fqcmph().s[34]++;
    if (
    /* istanbul ignore next */
    (cov_2743fqcmph().b[16][0]++, filtrosValidados.dataInicio) ||
    /* istanbul ignore next */
    (cov_2743fqcmph().b[16][1]++, filtrosValidados.dataFim)) {
      /* istanbul ignore next */
      cov_2743fqcmph().b[15][0]++;
      cov_2743fqcmph().s[35]++;
      where.dataEnvio = {};
      /* istanbul ignore next */
      cov_2743fqcmph().s[36]++;
      if (filtrosValidados.dataInicio) {
        /* istanbul ignore next */
        cov_2743fqcmph().b[17][0]++;
        cov_2743fqcmph().s[37]++;
        where.dataEnvio.gte = (0, _datefns.startOfDay)(new Date(filtrosValidados.dataInicio));
      } else
      /* istanbul ignore next */
      {
        cov_2743fqcmph().b[17][1]++;
      }
      cov_2743fqcmph().s[38]++;
      if (filtrosValidados.dataFim) {
        /* istanbul ignore next */
        cov_2743fqcmph().b[18][0]++;
        cov_2743fqcmph().s[39]++;
        where.dataEnvio.lte = (0, _datefns.endOfDay)(new Date(filtrosValidados.dataFim));
      } else
      /* istanbul ignore next */
      {
        cov_2743fqcmph().b[18][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_2743fqcmph().b[15][1]++;
    }
    // Calcular offset para paginação
    const offset =
    /* istanbul ignore next */
    (cov_2743fqcmph().s[40]++, (filtrosValidados.pagina - 1) * filtrosValidados.limite);
    // Buscar lembretes
    const [lembretes, total] =
    /* istanbul ignore next */
    (cov_2743fqcmph().s[41]++, await Promise.all([_prisma.prisma.lembreteAgendado.findMany({
      where,
      include: {
        usuario: {
          select: {
            id: true,
            nome: true,
            email: true
          }
        },
        avaliacao: {
          select: {
            id: true,
            prazo: true,
            status: true,
            avaliado: {
              select: {
                nome: true,
                cargo: true
              }
            },
            periodo: {
              select: {
                nome: true
              }
            }
          }
        }
      },
      orderBy: {
        dataEnvio: 'desc'
      },
      skip: offset,
      take: filtrosValidados.limite
    }), _prisma.prisma.lembreteAgendado.count({
      where
    })]));
    // Calcular informações de paginação
    const totalPaginas =
    /* istanbul ignore next */
    (cov_2743fqcmph().s[42]++, Math.ceil(total / filtrosValidados.limite));
    const temProximaPagina =
    /* istanbul ignore next */
    (cov_2743fqcmph().s[43]++, filtrosValidados.pagina < totalPaginas);
    const temPaginaAnterior =
    /* istanbul ignore next */
    (cov_2743fqcmph().s[44]++, filtrosValidados.pagina > 1);
    /* istanbul ignore next */
    cov_2743fqcmph().s[45]++;
    return _server.NextResponse.json({
      sucesso: true,
      dados: lembretes,
      paginacao: {
        paginaAtual: filtrosValidados.pagina,
        totalPaginas,
        totalItens: total,
        itensPorPagina: filtrosValidados.limite,
        temProximaPagina,
        temPaginaAnterior
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2743fqcmph().s[46]++;
    console.error('Erro ao buscar lembretes:', error);
    /* istanbul ignore next */
    cov_2743fqcmph().s[47]++;
    if (error instanceof _zod.z.ZodError) {
      /* istanbul ignore next */
      cov_2743fqcmph().b[19][0]++;
      cov_2743fqcmph().s[48]++;
      return _server.NextResponse.json({
        erro: 'Parâmetros inválidos',
        detalhes: error.errors.map(e => {
          /* istanbul ignore next */
          cov_2743fqcmph().f[5]++;
          cov_2743fqcmph().s[49]++;
          return `${e.path.join('.')}: ${e.message}`;
        })
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_2743fqcmph().b[19][1]++;
    }
    cov_2743fqcmph().s[50]++;
    return _server.NextResponse.json({
      erro: 'Erro interno do servidor',
      detalhes: error instanceof Error ?
      /* istanbul ignore next */
      (cov_2743fqcmph().b[20][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2743fqcmph().b[20][1]++, 'Erro desconhecido')
    }, {
      status: 500
    });
  }
}
async function POST(request) {
  /* istanbul ignore next */
  cov_2743fqcmph().f[6]++;
  cov_2743fqcmph().s[51]++;
  try {
    // Verificar autenticação
    const session =
    /* istanbul ignore next */
    (cov_2743fqcmph().s[52]++, await (0, _nextauth.getServerSession)(_auth.authOptions));
    /* istanbul ignore next */
    cov_2743fqcmph().s[53]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_2743fqcmph().b[21][0]++;
      cov_2743fqcmph().s[54]++;
      return _server.NextResponse.json({
        erro: 'Não autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_2743fqcmph().b[21][1]++;
    }
    // Verificar permissões (apenas ADMIN e GESTOR)
    cov_2743fqcmph().s[55]++;
    if (!['ADMIN', 'GESTOR'].includes(session.user.papel)) {
      /* istanbul ignore next */
      cov_2743fqcmph().b[22][0]++;
      cov_2743fqcmph().s[56]++;
      return _server.NextResponse.json({
        erro: 'Acesso negado. Apenas administradores e gestores podem criar lembretes.'
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_2743fqcmph().b[22][1]++;
    }
    // Validar dados da requisição
    const body =
    /* istanbul ignore next */
    (cov_2743fqcmph().s[57]++, await request.json());
    const dadosValidados =
    /* istanbul ignore next */
    (cov_2743fqcmph().s[58]++, criarLembreteSchema.parse(body));
    // Verificar se a avaliação existe
    const avaliacao =
    /* istanbul ignore next */
    (cov_2743fqcmph().s[59]++, await _prisma.prisma.avaliacao.findUnique({
      where: {
        id: dadosValidados.avaliacaoId
      },
      include: {
        avaliador: true,
        avaliado: true
      }
    }));
    /* istanbul ignore next */
    cov_2743fqcmph().s[60]++;
    if (!avaliacao) {
      /* istanbul ignore next */
      cov_2743fqcmph().b[23][0]++;
      cov_2743fqcmph().s[61]++;
      return _server.NextResponse.json({
        erro: 'Avaliação não encontrada'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_2743fqcmph().b[23][1]++;
    }
    // Verificar se o usuário existe
    const usuario =
    /* istanbul ignore next */
    (cov_2743fqcmph().s[62]++, await _prisma.prisma.usuario.findUnique({
      where: {
        id: dadosValidados.usuarioId
      }
    }));
    /* istanbul ignore next */
    cov_2743fqcmph().s[63]++;
    if (!usuario) {
      /* istanbul ignore next */
      cov_2743fqcmph().b[24][0]++;
      cov_2743fqcmph().s[64]++;
      return _server.NextResponse.json({
        erro: 'Usuário não encontrado'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_2743fqcmph().b[24][1]++;
    }
    // Verificar se já existe um lembrete similar
    const dataEnvio =
    /* istanbul ignore next */
    (cov_2743fqcmph().s[65]++, new Date(dadosValidados.dataEnvio));
    const lembreteExistente =
    /* istanbul ignore next */
    (cov_2743fqcmph().s[66]++, await _prisma.prisma.lembreteAgendado.findFirst({
      where: {
        avaliacaoId: dadosValidados.avaliacaoId,
        usuarioId: dadosValidados.usuarioId,
        tipo: dadosValidados.tipo,
        dataEnvio: {
          gte: (0, _datefns.startOfDay)(dataEnvio),
          lte: (0, _datefns.endOfDay)(dataEnvio)
        }
      }
    }));
    /* istanbul ignore next */
    cov_2743fqcmph().s[67]++;
    if (lembreteExistente) {
      /* istanbul ignore next */
      cov_2743fqcmph().b[25][0]++;
      cov_2743fqcmph().s[68]++;
      return _server.NextResponse.json({
        erro: 'Já existe um lembrete similar agendado para esta data'
      }, {
        status: 409
      });
    } else
    /* istanbul ignore next */
    {
      cov_2743fqcmph().b[25][1]++;
    }
    // Criar o lembrete
    const novoLembrete =
    /* istanbul ignore next */
    (cov_2743fqcmph().s[69]++, await _prisma.prisma.lembreteAgendado.create({
      data: {
        avaliacaoId: dadosValidados.avaliacaoId,
        usuarioId: dadosValidados.usuarioId,
        tipo: dadosValidados.tipo,
        dataEnvio,
        enviado: false,
        tentativas: 0,
        observacoes: dadosValidados.observacoes,
        criadoPor: session.user.id
      },
      include: {
        usuario: {
          select: {
            id: true,
            nome: true,
            email: true
          }
        },
        avaliacao: {
          select: {
            id: true,
            prazo: true,
            status: true,
            avaliado: {
              select: {
                nome: true,
                cargo: true
              }
            }
          }
        }
      }
    }));
    /* istanbul ignore next */
    cov_2743fqcmph().s[70]++;
    return _server.NextResponse.json({
      sucesso: true,
      mensagem: 'Lembrete criado com sucesso',
      dados: novoLembrete
    }, {
      status: 201
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2743fqcmph().s[71]++;
    console.error('Erro ao criar lembrete:', error);
    /* istanbul ignore next */
    cov_2743fqcmph().s[72]++;
    if (error instanceof _zod.z.ZodError) {
      /* istanbul ignore next */
      cov_2743fqcmph().b[26][0]++;
      cov_2743fqcmph().s[73]++;
      return _server.NextResponse.json({
        erro: 'Dados inválidos',
        detalhes: error.errors.map(e => {
          /* istanbul ignore next */
          cov_2743fqcmph().f[7]++;
          cov_2743fqcmph().s[74]++;
          return `${e.path.join('.')}: ${e.message}`;
        })
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_2743fqcmph().b[26][1]++;
    }
    cov_2743fqcmph().s[75]++;
    return _server.NextResponse.json({
      erro: 'Erro interno do servidor',
      detalhes: error instanceof Error ?
      /* istanbul ignore next */
      (cov_2743fqcmph().b[27][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2743fqcmph().b[27][1]++, 'Erro desconhecido')
    }, {
      status: 500
    });
  }
}
async function DELETE(request) {
  /* istanbul ignore next */
  cov_2743fqcmph().f[8]++;
  cov_2743fqcmph().s[76]++;
  try {
    // Verificar autenticação
    const session =
    /* istanbul ignore next */
    (cov_2743fqcmph().s[77]++, await (0, _nextauth.getServerSession)(_auth.authOptions));
    /* istanbul ignore next */
    cov_2743fqcmph().s[78]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_2743fqcmph().b[28][0]++;
      cov_2743fqcmph().s[79]++;
      return _server.NextResponse.json({
        erro: 'Não autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_2743fqcmph().b[28][1]++;
    }
    // Verificar permissões (apenas ADMIN e GESTOR)
    cov_2743fqcmph().s[80]++;
    if (!['ADMIN', 'GESTOR'].includes(session.user.papel)) {
      /* istanbul ignore next */
      cov_2743fqcmph().b[29][0]++;
      cov_2743fqcmph().s[81]++;
      return _server.NextResponse.json({
        erro: 'Acesso negado. Apenas administradores e gestores podem remover lembretes.'
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_2743fqcmph().b[29][1]++;
    }
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_2743fqcmph().s[82]++, new URL(request.url));
    const acao =
    /* istanbul ignore next */
    (cov_2743fqcmph().s[83]++, searchParams.get('acao'));
    const ids =
    /* istanbul ignore next */
    (cov_2743fqcmph().s[84]++,
    /* istanbul ignore next */
    (cov_2743fqcmph().b[30][0]++, searchParams.get('ids')?.split(',')) ||
    /* istanbul ignore next */
    (cov_2743fqcmph().b[30][1]++, []));
    const usuarioId =
    /* istanbul ignore next */
    (cov_2743fqcmph().s[85]++, searchParams.get('usuarioId'));
    const avaliacaoId =
    /* istanbul ignore next */
    (cov_2743fqcmph().s[86]++, searchParams.get('avaliacaoId'));
    let resultado =
    /* istanbul ignore next */
    (cov_2743fqcmph().s[87]++, {});
    let where =
    /* istanbul ignore next */
    (cov_2743fqcmph().s[88]++, {});
    /* istanbul ignore next */
    cov_2743fqcmph().s[89]++;
    switch (acao) {
      case 'ids':
        /* istanbul ignore next */
        cov_2743fqcmph().b[31][0]++;
        cov_2743fqcmph().s[90]++;
        if (ids.length === 0) {
          /* istanbul ignore next */
          cov_2743fqcmph().b[32][0]++;
          cov_2743fqcmph().s[91]++;
          return _server.NextResponse.json({
            erro: 'IDs dos lembretes são obrigatórios'
          }, {
            status: 400
          });
        } else
        /* istanbul ignore next */
        {
          cov_2743fqcmph().b[32][1]++;
        }
        cov_2743fqcmph().s[92]++;
        where.id = {
          in: ids
        };
        /* istanbul ignore next */
        cov_2743fqcmph().s[93]++;
        break;
      case 'usuario':
        /* istanbul ignore next */
        cov_2743fqcmph().b[31][1]++;
        cov_2743fqcmph().s[94]++;
        if (!usuarioId) {
          /* istanbul ignore next */
          cov_2743fqcmph().b[33][0]++;
          cov_2743fqcmph().s[95]++;
          return _server.NextResponse.json({
            erro: 'ID do usuário é obrigatório'
          }, {
            status: 400
          });
        } else
        /* istanbul ignore next */
        {
          cov_2743fqcmph().b[33][1]++;
        }
        cov_2743fqcmph().s[96]++;
        where.usuarioId = usuarioId;
        /* istanbul ignore next */
        cov_2743fqcmph().s[97]++;
        where.enviado = false; // Só remove lembretes não enviados
        /* istanbul ignore next */
        cov_2743fqcmph().s[98]++;
        break;
      case 'avaliacao':
        /* istanbul ignore next */
        cov_2743fqcmph().b[31][2]++;
        cov_2743fqcmph().s[99]++;
        if (!avaliacaoId) {
          /* istanbul ignore next */
          cov_2743fqcmph().b[34][0]++;
          cov_2743fqcmph().s[100]++;
          return _server.NextResponse.json({
            erro: 'ID da avaliação é obrigatório'
          }, {
            status: 400
          });
        } else
        /* istanbul ignore next */
        {
          cov_2743fqcmph().b[34][1]++;
        }
        cov_2743fqcmph().s[101]++;
        where.avaliacaoId = avaliacaoId;
        /* istanbul ignore next */
        cov_2743fqcmph().s[102]++;
        where.enviado = false; // Só remove lembretes não enviados
        /* istanbul ignore next */
        cov_2743fqcmph().s[103]++;
        break;
      case 'nao_enviados':
        /* istanbul ignore next */
        cov_2743fqcmph().b[31][3]++;
        cov_2743fqcmph().s[104]++;
        where.enviado = false;
        /* istanbul ignore next */
        cov_2743fqcmph().s[105]++;
        where.dataEnvio = {
          lt: new Date()
        };
        /* istanbul ignore next */
        cov_2743fqcmph().s[106]++;
        break;
      default:
        /* istanbul ignore next */
        cov_2743fqcmph().b[31][4]++;
        cov_2743fqcmph().s[107]++;
        return _server.NextResponse.json({
          erro: 'Ação de remoção não especificada ou inválida'
        }, {
          status: 400
        });
    }
    // Contar lembretes que serão removidos
    const totalParaRemover =
    /* istanbul ignore next */
    (cov_2743fqcmph().s[108]++, await _prisma.prisma.lembreteAgendado.count({
      where
    }));
    /* istanbul ignore next */
    cov_2743fqcmph().s[109]++;
    if (totalParaRemover === 0) {
      /* istanbul ignore next */
      cov_2743fqcmph().b[35][0]++;
      cov_2743fqcmph().s[110]++;
      return _server.NextResponse.json({
        sucesso: true,
        mensagem: 'Nenhum lembrete encontrado para remoção',
        removidos: 0
      });
    } else
    /* istanbul ignore next */
    {
      cov_2743fqcmph().b[35][1]++;
    }
    // Remover lembretes
    const resultadoRemocao =
    /* istanbul ignore next */
    (cov_2743fqcmph().s[111]++, await _prisma.prisma.lembreteAgendado.deleteMany({
      where
    }));
    /* istanbul ignore next */
    cov_2743fqcmph().s[112]++;
    return _server.NextResponse.json({
      sucesso: true,
      mensagem: `${resultadoRemocao.count} lembrete(s) removido(s) com sucesso`,
      removidos: resultadoRemocao.count
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_2743fqcmph().s[113]++;
    console.error('Erro ao remover lembretes:', error);
    /* istanbul ignore next */
    cov_2743fqcmph().s[114]++;
    return _server.NextResponse.json({
      erro: 'Erro interno do servidor',
      detalhes: error instanceof Error ?
      /* istanbul ignore next */
      (cov_2743fqcmph().b[36][0]++, error.message) :
      /* istanbul ignore next */
      (cov_2743fqcmph().b[36][1]++, 'Erro desconhecido')
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,