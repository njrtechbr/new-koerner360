{"version":3,"names":["cov_1pyrr2l4a3","actualCoverage","s","AuthGuard","f","PermissionGuard","useAuthGuard","children","permissoes","b","tipos","rota","redirecionarPara","mostrarCarregamento","mostrarErro","router","_navigation","useRouter","status","_react1","useSession","temAlgumaPermissao","temTodasPermissoes","ehTipoUsuario","podeAcessarRota","carregando","autenticado","_usepermissions","usePermissions","_react","useEffect","_sonner","toast","error","push","length","some","tipo","_jsxruntime","jsx","className","jsxs","_lucidereact","Loader2","Fragment","podeAcessar","fallback"],"sources":["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\components\\auth\\auth-guard.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, ReactNode } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { useSession } from 'next-auth/react';\nimport { usePermissions } from '@/hooks/use-permissions';\nimport { Loader2 } from 'lucide-react';\nimport { toast } from 'sonner';\n\ninterface AuthGuardProps {\n  children: ReactNode;\n  permissoes?: string[];\n  tipos?: ('ADMIN' | 'GESTOR' | 'ATENDENTE')[];\n  rota?: string;\n  redirecionarPara?: string;\n  mostrarCarregamento?: boolean;\n  mostrarErro?: boolean;\n}\n\n/**\n * Componente para proteger rotas e componentes baseado em permissões\n */\nexport function AuthGuard({\n  children,\n  permissoes = [],\n  tipos = [],\n  rota,\n  redirecionarPara = '/dashboard',\n  mostrarCarregamento = true,\n  mostrarErro = true,\n}: AuthGuardProps) {\n  const router = useRouter();\n  const { status } = useSession();\n  const {\n    temAlgumaPermissao,\n    temTodasPermissoes,\n    ehTipoUsuario,\n    podeAcessarRota,\n    carregando,\n    autenticado,\n  } = usePermissions();\n\n  useEffect(() => {\n    // Aguardar carregamento da sessão\n    if (carregando) return;\n\n    // Verificar se está autenticado\n    if (!autenticado) {\n      if (mostrarErro) {\n        toast.error('Você precisa estar logado para acessar esta página');\n      }\n      router.push('/auth/login');\n      return;\n    }\n\n    // Verificar permissões por rota\n    if (rota && !podeAcessarRota(rota)) {\n      if (mostrarErro) {\n        toast.error('Você não tem permissão para acessar esta página');\n      }\n      router.push(redirecionarPara);\n      return;\n    }\n\n    // Verificar permissões específicas\n    if (permissoes.length > 0 && !temAlgumaPermissao(permissoes)) {\n      if (mostrarErro) {\n        toast.error('Você não tem permissão para acessar esta funcionalidade');\n      }\n      router.push(redirecionarPara);\n      return;\n    }\n\n    // Verificar tipos de usuário\n    if (tipos.length > 0 && !tipos.some(tipo => ehTipoUsuario(tipo))) {\n      if (mostrarErro) {\n        toast.error('Seu perfil não tem acesso a esta funcionalidade');\n      }\n      router.push(redirecionarPara);\n      return;\n    }\n  }, [\n    carregando,\n    autenticado,\n    permissoes,\n    tipos,\n    rota,\n    router,\n    redirecionarPara,\n    mostrarErro,\n  ]);\n\n  // Mostrar carregamento\n  if (carregando && mostrarCarregamento) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"flex flex-col items-center gap-2\">\n          <Loader2 className=\"h-8 w-8 animate-spin\" />\n          <p className=\"text-sm text-muted-foreground\">\n            Verificando permissões...\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  // Não mostrar conteúdo se não estiver autenticado ou sem permissão\n  if (!autenticado) {\n    return null;\n  }\n\n  // Verificar permissões antes de renderizar\n  if (rota && !podeAcessarRota(rota)) {\n    return null;\n  }\n\n  if (permissoes.length > 0 && !temAlgumaPermissao(permissoes)) {\n    return null;\n  }\n\n  if (tipos.length > 0 && !tipos.some(tipo => ehTipoUsuario(tipo))) {\n    return null;\n  }\n\n  return <>{children}</>;\n}\n\n/**\n * Hook para verificar se o usuário pode acessar determinada funcionalidade\n */\nexport function useAuthGuard({\n  permissoes = [],\n  tipos = [],\n  rota,\n}: Omit<\n  AuthGuardProps,\n  'children' | 'redirecionarPara' | 'mostrarCarregamento' | 'mostrarErro'\n>) {\n  const {\n    temAlgumaPermissao,\n    ehTipoUsuario,\n    podeAcessarRota,\n    carregando,\n    autenticado,\n  } = usePermissions();\n\n  const podeAcessar = () => {\n    if (!autenticado) return false;\n\n    if (rota && !podeAcessarRota(rota)) return false;\n\n    if (permissoes.length > 0 && !temAlgumaPermissao(permissoes)) return false;\n\n    if (tipos.length > 0 && !tipos.some(tipo => ehTipoUsuario(tipo)))\n      return false;\n\n    return true;\n  };\n\n  return {\n    podeAcessar: podeAcessar(),\n    carregando,\n    autenticado,\n  };\n}\n\n/**\n * Componente para mostrar/esconder elementos baseado em permissões\n */\nexport function PermissionGuard({\n  children,\n  permissoes = [],\n  tipos = [],\n  rota,\n  fallback = null,\n}: AuthGuardProps & { fallback?: ReactNode }) {\n  const { podeAcessar } = useAuthGuard({ permissoes, tipos, rota });\n\n  if (!podeAcessar) {\n    return <>{fallback}</>;\n  }\n\n  return <>{children}</>;\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAyKgB;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;E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","ignoreList":[]}