{"version":3,"names":["cov_132li8h9sx","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","executarTodosExemplos","exemploConexoesSimultaneas","exemploEstatisticasPool","exemploHealthCheck","exemploQueryComMonitoramento","exemploTesteStress","exemploVerificarConexao","console","log","resultado","_prisma","checkDatabaseConnection","success","message","duration","error","healthCheck","performHealthCheck","JSON","stringify","stats","getConnectionPoolStats","executeWithMonitoring","usuarios","prisma","usuario","findMany","take","include","atendente","avaliacoes","queryName","result","length","promises","Array","from","_","index","Promise","resolve","setTimeout","Math","random","count","resultados","all","forEach","numeroConexoes","startTime","Date","now","operacao","feedback","totalTime","toFixed","statsAposTeste","mediaOperacao","repeat","disconnect","require","main","module","then","process","exit","catch"],"sources":["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\examples\\connection-pooling-demo.ts"],"sourcesContent":["/**\n * Demonstração das funcionalidades de Connection Pooling e Monitoramento\n *\n * Este arquivo mostra como usar as novas funcionalidades de:\n * - Connection pooling\n * - Monitoramento de performance\n * - Health checks\n * - Estatísticas de conexão\n */\n\nimport {\n  prisma,\n  checkDatabaseConnection,\n  getConnectionPoolStats,\n  performHealthCheck,\n  executeWithMonitoring,\n  disconnect,\n} from '../lib/prisma';\n\n// Exemplo 1: Verificar conexão básica\nexport async function exemploVerificarConexao() {\n  console.log('🔍 Verificando conexão com o banco...');\n\n  const resultado = await checkDatabaseConnection();\n\n  if (resultado.success) {\n    console.log('✅', resultado.message);\n    console.log('⏱️ Tempo de resposta:', resultado.duration);\n  } else {\n    console.log('❌', resultado.message);\n    console.log('🔍 Erro:', resultado.error);\n  }\n\n  return resultado;\n}\n\n// Exemplo 2: Executar health check completo\nexport async function exemploHealthCheck() {\n  console.log('🏥 Executando health check completo...');\n\n  const healthCheck = await performHealthCheck();\n\n  console.log('📊 Resultado do Health Check:');\n  console.log(JSON.stringify(healthCheck, null, 2));\n\n  return healthCheck;\n}\n\n// Exemplo 3: Monitorar estatísticas do pool de conexões\nexport function exemploEstatisticasPool() {\n  console.log('📈 Obtendo estatísticas do pool de conexões...');\n\n  const stats = getConnectionPoolStats();\n\n  console.log('📊 Estatísticas do Pool:');\n  console.log(JSON.stringify(stats, null, 2));\n\n  return stats;\n}\n\n// Exemplo 4: Executar query com monitoramento de performance\nexport async function exemploQueryComMonitoramento() {\n  console.log('⚡ Executando query com monitoramento...');\n\n  const resultado = await executeWithMonitoring(async () => {\n    // Simular uma query que pode ser lenta\n    const usuarios = await prisma.usuario.findMany({\n      take: 10,\n      include: {\n        atendente: {\n          include: {\n            avaliacoes: true,\n          },\n        },\n      },\n    });\n    return usuarios;\n  }, 'buscar_usuarios_com_avaliacoes');\n\n  console.log(`✅ Query executada em ${resultado.duration}ms`);\n  console.log(`📝 Query: ${resultado.queryName}`);\n  console.log(`📊 Resultados encontrados: ${resultado.result.length}`);\n\n  return resultado;\n}\n\n// Exemplo 5: Simular múltiplas conexões simultâneas\nexport async function exemploConexoesSimultaneas() {\n  console.log('🔄 Testando múltiplas conexões simultâneas...');\n\n  const promises = Array.from({ length: 5 }, (_, index) =>\n    executeWithMonitoring(\n      async () => {\n        await new Promise(resolve => setTimeout(resolve, Math.random() * 1000));\n        return await prisma.usuario.count();\n      },\n      `conexao_simultanea_${index + 1}`\n    )\n  );\n\n  const resultados = await Promise.all(promises);\n\n  console.log('📊 Resultados das conexões simultâneas:');\n  resultados.forEach((resultado, index) => {\n    console.log(\n      `  Conexão ${index + 1}: ${resultado.duration}ms - ${resultado.result} usuários`\n    );\n  });\n\n  return resultados;\n}\n\n// Exemplo 6: Teste de stress do pool de conexões\nexport async function exemploTesteStress() {\n  console.log('💪 Iniciando teste de stress do pool...');\n\n  const numeroConexoes = 20;\n  const startTime = Date.now();\n\n  try {\n    const promises = Array.from({ length: numeroConexoes }, (_, index) =>\n      executeWithMonitoring(\n        async () => {\n          // Simular operações variadas\n          const operacao = index % 3;\n\n          switch (operacao) {\n            case 0:\n              return await prisma.usuario.count();\n            case 1:\n              return await prisma.atendente.count();\n            case 2:\n              return await prisma.feedback.count();\n            default:\n              return 0;\n          }\n        },\n        `stress_test_${index + 1}`\n      )\n    );\n\n    const resultados = await Promise.all(promises);\n    const totalTime = Date.now() - startTime;\n\n    console.log(`✅ Teste de stress concluído em ${totalTime}ms`);\n    console.log(`📊 ${numeroConexoes} operações executadas`);\n    console.log(\n      `⚡ Média: ${(totalTime / numeroConexoes).toFixed(2)}ms por operação`\n    );\n\n    // Mostrar estatísticas do pool após o teste\n    const statsAposTeste = getConnectionPoolStats();\n    console.log('📈 Estatísticas do pool após teste:');\n    console.log(JSON.stringify(statsAposTeste, null, 2));\n\n    return {\n      totalTime,\n      numeroConexoes,\n      mediaOperacao: totalTime / numeroConexoes,\n      resultados,\n      statsAposTeste,\n    };\n  } catch (error) {\n    console.error('❌ Erro durante teste de stress:', error);\n    throw error;\n  }\n}\n\n// Função principal para executar todos os exemplos\nexport async function executarTodosExemplos() {\n  console.log('🚀 Iniciando demonstração de Connection Pooling...');\n  console.log('='.repeat(60));\n\n  try {\n    // 1. Verificar conexão\n    await exemploVerificarConexao();\n    console.log('\\n' + '-'.repeat(40) + '\\n');\n\n    // 2. Health check\n    await exemploHealthCheck();\n    console.log('\\n' + '-'.repeat(40) + '\\n');\n\n    // 3. Estatísticas do pool\n    exemploEstatisticasPool();\n    console.log('\\n' + '-'.repeat(40) + '\\n');\n\n    // 4. Query com monitoramento\n    await exemploQueryComMonitoramento();\n    console.log('\\n' + '-'.repeat(40) + '\\n');\n\n    // 5. Conexões simultâneas\n    await exemploConexoesSimultaneas();\n    console.log('\\n' + '-'.repeat(40) + '\\n');\n\n    // 6. Teste de stress\n    await exemploTesteStress();\n\n    console.log('\\n' + '='.repeat(60));\n    console.log('✅ Demonstração concluída com sucesso!');\n  } catch (error) {\n    console.error('❌ Erro durante a demonstração:', error);\n  } finally {\n    // Sempre desconectar ao final\n    await disconnect();\n    console.log('🔌 Conexão com banco encerrada');\n  }\n}\n\n// Executar se chamado diretamente\nif (require.main === module) {\n  executarTodosExemplos()\n    .then(() => process.exit(0))\n    .catch(error => {\n      console.error('💥 Erro fatal:', error);\n      process.exit(1);\n    });\n}\n"],"mappings":"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","ignoreList":[]}