6484e23599710d7251ed222f9a2ddf83
"use strict";

/* istanbul ignore next */
function cov_7txbbm2yy() {
  var path = "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\avaliacoes\\[id]\\route.ts";
  var hash = "82a9cb3a5981f6c5b5f22e3dfe41a4cbae4ba1f0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\avaliacoes\\[id]\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 22
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 19
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 19
        }
      },
      "7": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 38
        }
      },
      "8": {
        start: {
          line: 23,
          column: 18
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "9": {
        start: {
          line: 24,
          column: 14
        },
        end: {
          line: 24,
          column: 45
        }
      },
      "10": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 49
        }
      },
      "11": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 41
        }
      },
      "12": {
        start: {
          line: 27,
          column: 20
        },
        end: {
          line: 27,
          column: 69
        }
      },
      "13": {
        start: {
          line: 28,
          column: 30
        },
        end: {
          line: 28,
          column: 85
        }
      },
      "14": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 136,
          column: 5
        }
      },
      "15": {
        start: {
          line: 31,
          column: 24
        },
        end: {
          line: 31,
          column: 80
        }
      },
      "16": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 38,
          column: 9
        }
      },
      "17": {
        start: {
          line: 33,
          column: 12
        },
        end: {
          line: 37,
          column: 15
        }
      },
      "18": {
        start: {
          line: 40,
          column: 35
        },
        end: {
          line: 40,
          column: 99
        }
      },
      "19": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 48,
          column: 9
        }
      },
      "20": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 47,
          column: 15
        }
      },
      "21": {
        start: {
          line: 49,
          column: 23
        },
        end: {
          line: 49,
          column: 47
        }
      },
      "22": {
        start: {
          line: 51,
          column: 24
        },
        end: {
          line: 63,
          column: 10
        }
      },
      "23": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "24": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 69,
          column: 15
        }
      },
      "25": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 71
        }
      },
      "26": {
        start: {
          line: 74,
          column: 26
        },
        end: {
          line: 111,
          column: 10
        }
      },
      "27": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 118,
          column: 9
        }
      },
      "28": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 117,
          column: 15
        }
      },
      "29": {
        start: {
          line: 120,
          column: 24
        },
        end: {
          line: 120,
          column: 236
        }
      },
      "30": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 127,
          column: 9
        }
      },
      "31": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 126,
          column: 15
        }
      },
      "32": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 52
        }
      },
      "33": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 130,
          column: 58
        }
      },
      "34": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 135,
          column: 11
        }
      },
      "35": {
        start: {
          line: 139,
          column: 4
        },
        end: {
          line: 284,
          column: 5
        }
      },
      "36": {
        start: {
          line: 140,
          column: 24
        },
        end: {
          line: 140,
          column: 80
        }
      },
      "37": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 147,
          column: 9
        }
      },
      "38": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 146,
          column: 15
        }
      },
      "39": {
        start: {
          line: 149,
          column: 37
        },
        end: {
          line: 149,
          column: 101
        }
      },
      "40": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 157,
          column: 9
        }
      },
      "41": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 156,
          column: 15
        }
      },
      "42": {
        start: {
          line: 158,
          column: 23
        },
        end: {
          line: 158,
          column: 49
        }
      },
      "43": {
        start: {
          line: 159,
          column: 21
        },
        end: {
          line: 159,
          column: 41
        }
      },
      "44": {
        start: {
          line: 161,
          column: 35
        },
        end: {
          line: 161,
          column: 107
        }
      },
      "45": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 169,
          column: 9
        }
      },
      "46": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 168,
          column: 15
        }
      },
      "47": {
        start: {
          line: 170,
          column: 31
        },
        end: {
          line: 170,
          column: 55
        }
      },
      "48": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 71
        }
      },
      "49": {
        start: {
          line: 174,
          column: 35
        },
        end: {
          line: 187,
          column: 10
        }
      },
      "50": {
        start: {
          line: 188,
          column: 8
        },
        end: {
          line: 194,
          column: 9
        }
      },
      "51": {
        start: {
          line: 189,
          column: 12
        },
        end: {
          line: 193,
          column: 15
        }
      },
      "52": {
        start: {
          line: 196,
          column: 24
        },
        end: {
          line: 203,
          column: 10
        }
      },
      "53": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 210,
          column: 9
        }
      },
      "54": {
        start: {
          line: 205,
          column: 12
        },
        end: {
          line: 209,
          column: 15
        }
      },
      "55": {
        start: {
          line: 212,
          column: 27
        },
        end: {
          line: 212,
          column: 244
        }
      },
      "56": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 219,
          column: 9
        }
      },
      "57": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 218,
          column: 15
        }
      },
      "58": {
        start: {
          line: 221,
          column: 8
        },
        end: {
          line: 237,
          column: 9
        }
      },
      "59": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 228,
          column: 13
        }
      },
      "60": {
        start: {
          line: 223,
          column: 16
        },
        end: {
          line: 227,
          column: 19
        }
      },
      "61": {
        start: {
          line: 229,
          column: 26
        },
        end: {
          line: 229,
          column: 36
        }
      },
      "62": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 236,
          column: 13
        }
      },
      "63": {
        start: {
          line: 231,
          column: 16
        },
        end: {
          line: 235,
          column: 19
        }
      },
      "64": {
        start: {
          line: 239,
          column: 36
        },
        end: {
          line: 275,
          column: 10
        }
      },
      "65": {
        start: {
          line: 276,
          column: 8
        },
        end: {
          line: 276,
          column: 62
        }
      },
      "66": {
        start: {
          line: 278,
          column: 8
        },
        end: {
          line: 278,
          column: 61
        }
      },
      "67": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 283,
          column: 11
        }
      },
      "68": {
        start: {
          line: 287,
          column: 4
        },
        end: {
          line: 367,
          column: 5
        }
      },
      "69": {
        start: {
          line: 288,
          column: 24
        },
        end: {
          line: 288,
          column: 80
        }
      },
      "70": {
        start: {
          line: 289,
          column: 8
        },
        end: {
          line: 295,
          column: 9
        }
      },
      "71": {
        start: {
          line: 290,
          column: 12
        },
        end: {
          line: 294,
          column: 15
        }
      },
      "72": {
        start: {
          line: 297,
          column: 35
        },
        end: {
          line: 297,
          column: 99
        }
      },
      "73": {
        start: {
          line: 298,
          column: 8
        },
        end: {
          line: 305,
          column: 9
        }
      },
      "74": {
        start: {
          line: 299,
          column: 12
        },
        end: {
          line: 304,
          column: 15
        }
      },
      "75": {
        start: {
          line: 306,
          column: 23
        },
        end: {
          line: 306,
          column: 47
        }
      },
      "76": {
        start: {
          line: 308,
          column: 24
        },
        end: {
          line: 315,
          column: 10
        }
      },
      "77": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 322,
          column: 9
        }
      },
      "78": {
        start: {
          line: 317,
          column: 12
        },
        end: {
          line: 321,
          column: 15
        }
      },
      "79": {
        start: {
          line: 324,
          column: 8
        },
        end: {
          line: 330,
          column: 9
        }
      },
      "80": {
        start: {
          line: 325,
          column: 12
        },
        end: {
          line: 329,
          column: 15
        }
      },
      "81": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 332,
          column: 71
        }
      },
      "82": {
        start: {
          line: 334,
          column: 35
        },
        end: {
          line: 341,
          column: 10
        }
      },
      "83": {
        start: {
          line: 342,
          column: 8
        },
        end: {
          line: 348,
          column: 9
        }
      },
      "84": {
        start: {
          line: 343,
          column: 12
        },
        end: {
          line: 347,
          column: 15
        }
      },
      "85": {
        start: {
          line: 350,
          column: 8
        },
        end: {
          line: 354,
          column: 11
        }
      },
      "86": {
        start: {
          line: 355,
          column: 8
        },
        end: {
          line: 359,
          column: 11
        }
      },
      "87": {
        start: {
          line: 361,
          column: 8
        },
        end: {
          line: 361,
          column: 59
        }
      },
      "88": {
        start: {
          line: 362,
          column: 8
        },
        end: {
          line: 366,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 18
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 15
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 15
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "GET",
        decl: {
          start: {
            line: 29,
            column: 15
          },
          end: {
            line: 29,
            column: 18
          }
        },
        loc: {
          start: {
            line: 29,
            column: 40
          },
          end: {
            line: 137,
            column: 1
          }
        },
        line: 29
      },
      "5": {
        name: "PUT",
        decl: {
          start: {
            line: 138,
            column: 15
          },
          end: {
            line: 138,
            column: 18
          }
        },
        loc: {
          start: {
            line: 138,
            column: 40
          },
          end: {
            line: 285,
            column: 1
          }
        },
        line: 138
      },
      "6": {
        name: "DELETE",
        decl: {
          start: {
            line: 286,
            column: 15
          },
          end: {
            line: 286,
            column: 21
          }
        },
        loc: {
          start: {
            line: 286,
            column: 43
          },
          end: {
            line: 368,
            column: 1
          }
        },
        line: 286
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "1": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 48,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "2": {
        loc: {
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 64,
            column: 8
          },
          end: {
            line: 70,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 64
      },
      "3": {
        loc: {
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 8
          },
          end: {
            line: 118,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 112
      },
      "4": {
        loc: {
          start: {
            line: 120,
            column: 24
          },
          end: {
            line: 120,
            column: 236
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 120,
            column: 24
          },
          end: {
            line: 120,
            column: 70
          }
        }, {
          start: {
            line: 120,
            column: 74
          },
          end: {
            line: 120,
            column: 121
          }
        }, {
          start: {
            line: 120,
            column: 125
          },
          end: {
            line: 120,
            column: 166
          }
        }, {
          start: {
            line: 120,
            column: 170
          },
          end: {
            line: 120,
            column: 187
          }
        }, {
          start: {
            line: 120,
            column: 191
          },
          end: {
            line: 120,
            column: 236
          }
        }],
        line: 120
      },
      "5": {
        loc: {
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "6": {
        loc: {
          start: {
            line: 141,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 141,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 141
      },
      "7": {
        loc: {
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 157,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 157,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "8": {
        loc: {
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 169,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 162,
            column: 8
          },
          end: {
            line: 169,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 162
      },
      "9": {
        loc: {
          start: {
            line: 188,
            column: 8
          },
          end: {
            line: 194,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 188,
            column: 8
          },
          end: {
            line: 194,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 188
      },
      "10": {
        loc: {
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 210,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 210,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 204
      },
      "11": {
        loc: {
          start: {
            line: 212,
            column: 27
          },
          end: {
            line: 212,
            column: 244
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 212,
            column: 27
          },
          end: {
            line: 212,
            column: 73
          }
        }, {
          start: {
            line: 212,
            column: 77
          },
          end: {
            line: 212,
            column: 124
          }
        }, {
          start: {
            line: 212,
            column: 128
          },
          end: {
            line: 212,
            column: 178
          }
        }, {
          start: {
            line: 212,
            column: 182
          },
          end: {
            line: 212,
            column: 244
          }
        }],
        line: 212
      },
      "12": {
        loc: {
          start: {
            line: 213,
            column: 8
          },
          end: {
            line: 219,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 213,
            column: 8
          },
          end: {
            line: 219,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 213
      },
      "13": {
        loc: {
          start: {
            line: 221,
            column: 8
          },
          end: {
            line: 237,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 221,
            column: 8
          },
          end: {
            line: 237,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 221
      },
      "14": {
        loc: {
          start: {
            line: 222,
            column: 12
          },
          end: {
            line: 228,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 222,
            column: 12
          },
          end: {
            line: 228,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 222
      },
      "15": {
        loc: {
          start: {
            line: 230,
            column: 12
          },
          end: {
            line: 236,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 230,
            column: 12
          },
          end: {
            line: 236,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 230
      },
      "16": {
        loc: {
          start: {
            line: 230,
            column: 16
          },
          end: {
            line: 230,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 230,
            column: 16
          },
          end: {
            line: 230,
            column: 61
          }
        }, {
          start: {
            line: 230,
            column: 65
          },
          end: {
            line: 230,
            column: 107
          }
        }],
        line: 230
      },
      "17": {
        loc: {
          start: {
            line: 289,
            column: 8
          },
          end: {
            line: 295,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 289,
            column: 8
          },
          end: {
            line: 295,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 289
      },
      "18": {
        loc: {
          start: {
            line: 298,
            column: 8
          },
          end: {
            line: 305,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 298,
            column: 8
          },
          end: {
            line: 305,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 298
      },
      "19": {
        loc: {
          start: {
            line: 316,
            column: 8
          },
          end: {
            line: 322,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 316,
            column: 8
          },
          end: {
            line: 322,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 316
      },
      "20": {
        loc: {
          start: {
            line: 324,
            column: 8
          },
          end: {
            line: 330,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 324,
            column: 8
          },
          end: {
            line: 330,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 324
      },
      "21": {
        loc: {
          start: {
            line: 324,
            column: 12
          },
          end: {
            line: 324,
            column: 109
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 324,
            column: 12
          },
          end: {
            line: 324,
            column: 58
          }
        }, {
          start: {
            line: 324,
            column: 62
          },
          end: {
            line: 324,
            column: 109
          }
        }],
        line: 324
      },
      "22": {
        loc: {
          start: {
            line: 342,
            column: 8
          },
          end: {
            line: 348,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 342,
            column: 8
          },
          end: {
            line: 348,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 342
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0, 0, 0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0, 0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\avaliacoes\\[id]\\route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { getServerSession } from 'next-auth';\nimport { authOptions } from '@/lib/auth';\nimport { prisma } from '@/lib/prisma';\nimport { TipoUsuario, StatusAvaliacao } from '@prisma/client';\nimport {\n  atualizarAvaliacaoSchema,\n  idParamSchema,\n  validarBody,\n  validarDados\n} from '@/lib/validations/avaliacoes';\nimport { middlewareAtualizacaoStatus } from '@/lib/utils/periodo-status-updater';\n\ninterface RouteParams {\n  params: {\n    id: string;\n  };\n}\n\n// GET /api/avaliacoes/[id] - Buscar avalia\xE7\xE3o espec\xEDfica\nexport async function GET(\n  request: NextRequest,\n  { params }: RouteParams\n) {\n  try {\n    const session = await getServerSession(authOptions);\n    \n    if (!session?.user?.id) {\n      return NextResponse.json(\n        { error: 'N\xE3o autorizado' },\n        { status: 401 }\n      );\n    }\n\n    // Validar par\xE2metro ID\n    const resultadoValidacao = validarDados(idParamSchema, params);\n    if (!resultadoValidacao.sucesso) {\n      return NextResponse.json(\n        { \n          error: 'ID inv\xE1lido', \n          details: resultadoValidacao.erro?.details \n        },\n        { status: 400 }\n      );\n    }\n\n    const { id } = resultadoValidacao.dados;\n\n    // Verificar permiss\xF5es do usu\xE1rio\n    const usuario = await prisma.usuario.findUnique({\n      where: { id: session.user.id },\n      select: { userType: true, atendente: { select: { id: true } } }\n    });\n\n    if (!usuario) {\n      return NextResponse.json(\n        { error: 'Usu\xE1rio n\xE3o encontrado' },\n        { status: 404 }\n      );\n    }\n\n    // Atualizar automaticamente os status dos per\xEDodos antes de buscar avalia\xE7\xE3o\n    await middlewareAtualizacaoStatus();\n\n    // Buscar a avalia\xE7\xE3o\n    const avaliacao = await prisma.avaliacao.findUnique({\n      where: { id },\n      include: {\n        avaliador: {\n          select: {\n            id: true,\n            nome: true,\n            email: true\n          }\n        },\n        avaliado: {\n          select: {\n            id: true,\n            usuario: {\n              select: {\n                nome: true,\n                email: true\n              }\n            },\n            cargo: true,\n            setor: true,\n            departamento: true\n          }\n        },\n        periodo: {\n          select: {\n            id: true,\n            nome: true,\n            descricao: true,\n            dataInicio: true,\n            dataFim: true,\n            status: true\n          }\n        }\n      }\n    });\n\n    if (!avaliacao) {\n      return NextResponse.json(\n        { error: 'Avalia\xE7\xE3o n\xE3o encontrada' },\n        { status: 404 }\n      );\n    }\n\n    // Verificar se o usu\xE1rio tem permiss\xE3o para ver esta avalia\xE7\xE3o\n    const podeVer = \n      usuario.userType === TipoUsuario.ADMIN ||\n      usuario.userType === TipoUsuario.GESTOR ||\n      avaliacao.avaliadorId === session.user.id ||\n      (usuario.atendente && avaliacao.avaliadoId === usuario.atendente.id);\n\n    if (!podeVer) {\n      return NextResponse.json(\n        { error: 'Sem permiss\xE3o para visualizar esta avalia\xE7\xE3o' },\n        { status: 403 }\n      );\n    }\n\n    return NextResponse.json(avaliacao);\n\n  } catch (error) {\n    console.error('Erro ao buscar avalia\xE7\xE3o:', error);\n    return NextResponse.json(\n      { error: 'Erro interno do servidor' },\n      { status: 500 }\n    );\n  }\n}\n\n// PUT /api/avaliacoes/[id] - Atualizar avalia\xE7\xE3o\nexport async function PUT(\n  request: NextRequest,\n  { params }: RouteParams\n) {\n  try {\n    const session = await getServerSession(authOptions);\n    \n    if (!session?.user?.id) {\n      return NextResponse.json(\n        { error: 'N\xE3o autorizado' },\n        { status: 401 }\n      );\n    }\n\n    // Validar par\xE2metro ID\n    const resultadoValidacaoId = validarDados(idParamSchema, params);\n    if (!resultadoValidacaoId.sucesso) {\n      return NextResponse.json(\n        { \n          error: 'ID inv\xE1lido', \n          details: resultadoValidacaoId.erro?.details \n        },\n        { status: 400 }\n      );\n    }\n\n    const { id } = resultadoValidacaoId.dados;\n    const body = await request.json();\n    \n    // Validar dados de atualiza\xE7\xE3o\n    const resultadoValidacao = validarBody(atualizarAvaliacaoSchema, body);\n    if (!resultadoValidacao.sucesso) {\n      return NextResponse.json(\n        { \n          error: 'Dados inv\xE1lidos', \n          details: resultadoValidacao.erro?.details \n        },\n        { status: 400 }\n      );\n    }\n    \n    const dadosValidados = resultadoValidacao.dados;\n\n    // Atualizar automaticamente os status dos per\xEDodos antes de verificar avalia\xE7\xE3o\n    await middlewareAtualizacaoStatus();\n\n    // Verificar se a avalia\xE7\xE3o existe\n    const avaliacaoExistente = await prisma.avaliacao.findUnique({\n      where: { id },\n      include: {\n        periodo: {\n          select: {\n            status: true,\n            dataInicio: true,\n            dataFim: true\n          }\n        }\n      }\n    });\n\n    if (!avaliacaoExistente) {\n      return NextResponse.json(\n        { error: 'Avalia\xE7\xE3o n\xE3o encontrada' },\n        { status: 404 }\n      );\n    }\n\n    // Verificar permiss\xF5es do usu\xE1rio\n    const usuario = await prisma.usuario.findUnique({\n      where: { id: session.user.id },\n      select: { userType: true }\n    });\n\n    if (!usuario) {\n      return NextResponse.json(\n        { error: 'Usu\xE1rio n\xE3o encontrado' },\n        { status: 404 }\n      );\n    }\n\n    // Verificar se o usu\xE1rio tem permiss\xE3o para editar esta avalia\xE7\xE3o\n    const podeEditar = \n      usuario.userType === TipoUsuario.ADMIN ||\n      usuario.userType === TipoUsuario.GESTOR ||\n      (avaliacaoExistente.avaliadorId === session.user.id && avaliacaoExistente.status === StatusAvaliacao.PENDENTE);\n\n    if (!podeEditar) {\n      return NextResponse.json(\n        { error: 'Sem permiss\xE3o para editar esta avalia\xE7\xE3o' },\n        { status: 403 }\n      );\n    }\n\n    // Verificar se o per\xEDodo ainda est\xE1 ativo (para avaliadores comuns)\n    if (usuario.userType === TipoUsuario.ATENDENTE) {\n      if (avaliacaoExistente.periodo.status !== 'ATIVO') {\n        return NextResponse.json(\n          { error: 'Per\xEDodo de avalia\xE7\xE3o n\xE3o est\xE1 mais ativo' },\n          { status: 400 }\n        );\n      }\n\n      const agora = new Date();\n      if (agora < avaliacaoExistente.periodo.dataInicio || agora > avaliacaoExistente.periodo.dataFim) {\n        return NextResponse.json(\n          { error: 'Fora do per\xEDodo de avalia\xE7\xE3o' },\n          { status: 400 }\n        );\n      }\n    }\n\n    // Atualizar a avalia\xE7\xE3o\n    const avaliacaoAtualizada = await prisma.avaliacao.update({\n      where: { id },\n      data: {\n        ...dadosValidados,\n        atualizadoEm: new Date()\n      },\n      include: {\n        avaliador: {\n          select: {\n            id: true,\n            nome: true,\n            email: true\n          }\n        },\n        avaliado: {\n          select: {\n            id: true,\n            usuario: {\n              select: {\n                nome: true,\n                email: true\n              }\n            },\n            cargo: true,\n            setor: true\n          }\n        },\n        periodo: {\n          select: {\n            id: true,\n            nome: true\n          }\n        }\n      }\n    });\n\n    return NextResponse.json(avaliacaoAtualizada);\n\n  } catch (error) {\n    console.error('Erro ao atualizar avalia\xE7\xE3o:', error);\n    \n\n\n    return NextResponse.json(\n      { error: 'Erro interno do servidor' },\n      { status: 500 }\n    );\n  }\n}\n\n// DELETE /api/avaliacoes/[id] - Deletar avalia\xE7\xE3o\nexport async function DELETE(\n  request: NextRequest,\n  { params }: RouteParams\n) {\n  try {\n    const session = await getServerSession(authOptions);\n    \n    if (!session?.user?.id) {\n      return NextResponse.json(\n        { error: 'N\xE3o autorizado' },\n        { status: 401 }\n      );\n    }\n\n    // Validar par\xE2metro ID\n    const resultadoValidacao = validarDados(idParamSchema, params);\n    if (!resultadoValidacao.sucesso) {\n      return NextResponse.json(\n        { \n          error: 'ID inv\xE1lido', \n          details: resultadoValidacao.erro?.details \n        },\n        { status: 400 }\n      );\n    }\n\n    const { id } = resultadoValidacao.dados;\n\n    // Verificar permiss\xF5es do usu\xE1rio\n    const usuario = await prisma.usuario.findUnique({\n      where: { id: session.user.id },\n      select: { userType: true }\n    });\n\n    if (!usuario) {\n      return NextResponse.json(\n        { error: 'Usu\xE1rio n\xE3o encontrado' },\n        { status: 404 }\n      );\n    }\n\n    // Apenas ADMIN e GESTOR podem deletar avalia\xE7\xF5es\n    if (usuario.userType !== TipoUsuario.ADMIN && usuario.userType !== TipoUsuario.GESTOR) {\n      return NextResponse.json(\n        { error: 'Sem permiss\xE3o para deletar avalia\xE7\xF5es' },\n        { status: 403 }\n      );\n    }\n\n    // Atualizar automaticamente os status dos per\xEDodos antes de deletar avalia\xE7\xE3o\n    await middlewareAtualizacaoStatus();\n\n    // Verificar se a avalia\xE7\xE3o existe\n    const avaliacaoExistente = await prisma.avaliacao.findUnique({\n      where: { id },\n      select: { id: true }\n    });\n\n    if (!avaliacaoExistente) {\n      return NextResponse.json(\n        { error: 'Avalia\xE7\xE3o n\xE3o encontrada' },\n        { status: 404 }\n      );\n    }\n\n    // Deletar a avalia\xE7\xE3o\n    await prisma.avaliacao.delete({\n      where: { id }\n    });\n\n    return NextResponse.json(\n      { message: 'Avalia\xE7\xE3o deletada com sucesso' },\n      { status: 200 }\n    );\n\n  } catch (error) {\n    console.error('Erro ao deletar avalia\xE7\xE3o:', error);\n    return NextResponse.json(\n      { error: 'Erro interno do servidor' },\n      { status: 500 }\n    );\n  }\n}"],
      names: ["DELETE", "GET", "PUT", "request", "params", "session", "getServerSession", "authOptions", "user", "id", "NextResponse", "json", "error", "status", "resultadoValidacao", "validarDados", "idParamSchema", "sucesso", "details", "erro", "dados", "usuario", "prisma", "findUnique", "where", "select", "userType", "atendente", "middlewareAtualizacaoStatus", "avaliacao", "include", "avaliador", "nome", "email", "avaliado", "cargo", "setor", "departamento", "periodo", "descricao", "dataInicio", "dataFim", "podeVer", "TipoUsuario", "ADMIN", "GESTOR", "avaliadorId", "avaliadoId", "console", "resultadoValidacaoId", "body", "validarBody", "atualizarAvaliacaoSchema", "dadosValidados", "avaliacaoExistente", "podeEditar", "StatusAvaliacao", "PENDENTE", "ATENDENTE", "agora", "Date", "avaliacaoAtualizada", "update", "data", "atualizadoEm", "delete", "message"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "82a9cb3a5981f6c5b5f22e3dfe41a4cbae4ba1f0"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_7txbbm2yy = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_7txbbm2yy();
cov_7txbbm2yy().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_7txbbm2yy().f[0]++;
  cov_7txbbm2yy().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_7txbbm2yy().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_7txbbm2yy().s[3]++;
_export(exports, {
  get DELETE() {
    /* istanbul ignore next */
    cov_7txbbm2yy().f[1]++;
    cov_7txbbm2yy().s[4]++;
    return DELETE;
  },
  get GET() {
    /* istanbul ignore next */
    cov_7txbbm2yy().f[2]++;
    cov_7txbbm2yy().s[5]++;
    return GET;
  },
  get PUT() {
    /* istanbul ignore next */
    cov_7txbbm2yy().f[3]++;
    cov_7txbbm2yy().s[6]++;
    return PUT;
  }
});
const _server =
/* istanbul ignore next */
(cov_7txbbm2yy().s[7]++, require("next/server"));
const _nextauth =
/* istanbul ignore next */
(cov_7txbbm2yy().s[8]++, require("next-auth"));
const _auth =
/* istanbul ignore next */
(cov_7txbbm2yy().s[9]++, require("../../../../lib/auth"));
const _prisma =
/* istanbul ignore next */
(cov_7txbbm2yy().s[10]++, require("../../../../lib/prisma"));
const _client =
/* istanbul ignore next */
(cov_7txbbm2yy().s[11]++, require("@prisma/client"));
const _avaliacoes =
/* istanbul ignore next */
(cov_7txbbm2yy().s[12]++, require("../../../../lib/validations/avaliacoes"));
const _periodostatusupdater =
/* istanbul ignore next */
(cov_7txbbm2yy().s[13]++, require("../../../../lib/utils/periodo-status-updater"));
async function GET(request, {
  params
}) {
  /* istanbul ignore next */
  cov_7txbbm2yy().f[4]++;
  cov_7txbbm2yy().s[14]++;
  try {
    const session =
    /* istanbul ignore next */
    (cov_7txbbm2yy().s[15]++, await (0, _nextauth.getServerSession)(_auth.authOptions));
    /* istanbul ignore next */
    cov_7txbbm2yy().s[16]++;
    if (!session?.user?.id) {
      /* istanbul ignore next */
      cov_7txbbm2yy().b[0][0]++;
      cov_7txbbm2yy().s[17]++;
      return _server.NextResponse.json({
        error: 'Não autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_7txbbm2yy().b[0][1]++;
    }
    // Validar parâmetro ID
    const resultadoValidacao =
    /* istanbul ignore next */
    (cov_7txbbm2yy().s[18]++, (0, _avaliacoes.validarDados)(_avaliacoes.idParamSchema, params));
    /* istanbul ignore next */
    cov_7txbbm2yy().s[19]++;
    if (!resultadoValidacao.sucesso) {
      /* istanbul ignore next */
      cov_7txbbm2yy().b[1][0]++;
      cov_7txbbm2yy().s[20]++;
      return _server.NextResponse.json({
        error: 'ID inválido',
        details: resultadoValidacao.erro?.details
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_7txbbm2yy().b[1][1]++;
    }
    const {
      id
    } =
    /* istanbul ignore next */
    (cov_7txbbm2yy().s[21]++, resultadoValidacao.dados);
    // Verificar permissões do usuário
    const usuario =
    /* istanbul ignore next */
    (cov_7txbbm2yy().s[22]++, await _prisma.prisma.usuario.findUnique({
      where: {
        id: session.user.id
      },
      select: {
        userType: true,
        atendente: {
          select: {
            id: true
          }
        }
      }
    }));
    /* istanbul ignore next */
    cov_7txbbm2yy().s[23]++;
    if (!usuario) {
      /* istanbul ignore next */
      cov_7txbbm2yy().b[2][0]++;
      cov_7txbbm2yy().s[24]++;
      return _server.NextResponse.json({
        error: 'Usuário não encontrado'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_7txbbm2yy().b[2][1]++;
    }
    // Atualizar automaticamente os status dos períodos antes de buscar avaliação
    cov_7txbbm2yy().s[25]++;
    await (0, _periodostatusupdater.middlewareAtualizacaoStatus)();
    // Buscar a avaliação
    const avaliacao =
    /* istanbul ignore next */
    (cov_7txbbm2yy().s[26]++, await _prisma.prisma.avaliacao.findUnique({
      where: {
        id
      },
      include: {
        avaliador: {
          select: {
            id: true,
            nome: true,
            email: true
          }
        },
        avaliado: {
          select: {
            id: true,
            usuario: {
              select: {
                nome: true,
                email: true
              }
            },
            cargo: true,
            setor: true,
            departamento: true
          }
        },
        periodo: {
          select: {
            id: true,
            nome: true,
            descricao: true,
            dataInicio: true,
            dataFim: true,
            status: true
          }
        }
      }
    }));
    /* istanbul ignore next */
    cov_7txbbm2yy().s[27]++;
    if (!avaliacao) {
      /* istanbul ignore next */
      cov_7txbbm2yy().b[3][0]++;
      cov_7txbbm2yy().s[28]++;
      return _server.NextResponse.json({
        error: 'Avaliação não encontrada'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_7txbbm2yy().b[3][1]++;
    }
    // Verificar se o usuário tem permissão para ver esta avaliação
    const podeVer =
    /* istanbul ignore next */
    (cov_7txbbm2yy().s[29]++,
    /* istanbul ignore next */
    (cov_7txbbm2yy().b[4][0]++, usuario.userType === _client.TipoUsuario.ADMIN) ||
    /* istanbul ignore next */
    (cov_7txbbm2yy().b[4][1]++, usuario.userType === _client.TipoUsuario.GESTOR) ||
    /* istanbul ignore next */
    (cov_7txbbm2yy().b[4][2]++, avaliacao.avaliadorId === session.user.id) ||
    /* istanbul ignore next */
    (cov_7txbbm2yy().b[4][3]++, usuario.atendente) &&
    /* istanbul ignore next */
    (cov_7txbbm2yy().b[4][4]++, avaliacao.avaliadoId === usuario.atendente.id));
    /* istanbul ignore next */
    cov_7txbbm2yy().s[30]++;
    if (!podeVer) {
      /* istanbul ignore next */
      cov_7txbbm2yy().b[5][0]++;
      cov_7txbbm2yy().s[31]++;
      return _server.NextResponse.json({
        error: 'Sem permissão para visualizar esta avaliação'
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_7txbbm2yy().b[5][1]++;
    }
    cov_7txbbm2yy().s[32]++;
    return _server.NextResponse.json(avaliacao);
  } catch (error) {
    /* istanbul ignore next */
    cov_7txbbm2yy().s[33]++;
    console.error('Erro ao buscar avaliação:', error);
    /* istanbul ignore next */
    cov_7txbbm2yy().s[34]++;
    return _server.NextResponse.json({
      error: 'Erro interno do servidor'
    }, {
      status: 500
    });
  }
}
async function PUT(request, {
  params
}) {
  /* istanbul ignore next */
  cov_7txbbm2yy().f[5]++;
  cov_7txbbm2yy().s[35]++;
  try {
    const session =
    /* istanbul ignore next */
    (cov_7txbbm2yy().s[36]++, await (0, _nextauth.getServerSession)(_auth.authOptions));
    /* istanbul ignore next */
    cov_7txbbm2yy().s[37]++;
    if (!session?.user?.id) {
      /* istanbul ignore next */
      cov_7txbbm2yy().b[6][0]++;
      cov_7txbbm2yy().s[38]++;
      return _server.NextResponse.json({
        error: 'Não autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_7txbbm2yy().b[6][1]++;
    }
    // Validar parâmetro ID
    const resultadoValidacaoId =
    /* istanbul ignore next */
    (cov_7txbbm2yy().s[39]++, (0, _avaliacoes.validarDados)(_avaliacoes.idParamSchema, params));
    /* istanbul ignore next */
    cov_7txbbm2yy().s[40]++;
    if (!resultadoValidacaoId.sucesso) {
      /* istanbul ignore next */
      cov_7txbbm2yy().b[7][0]++;
      cov_7txbbm2yy().s[41]++;
      return _server.NextResponse.json({
        error: 'ID inválido',
        details: resultadoValidacaoId.erro?.details
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_7txbbm2yy().b[7][1]++;
    }
    const {
      id
    } =
    /* istanbul ignore next */
    (cov_7txbbm2yy().s[42]++, resultadoValidacaoId.dados);
    const body =
    /* istanbul ignore next */
    (cov_7txbbm2yy().s[43]++, await request.json());
    // Validar dados de atualização
    const resultadoValidacao =
    /* istanbul ignore next */
    (cov_7txbbm2yy().s[44]++, (0, _avaliacoes.validarBody)(_avaliacoes.atualizarAvaliacaoSchema, body));
    /* istanbul ignore next */
    cov_7txbbm2yy().s[45]++;
    if (!resultadoValidacao.sucesso) {
      /* istanbul ignore next */
      cov_7txbbm2yy().b[8][0]++;
      cov_7txbbm2yy().s[46]++;
      return _server.NextResponse.json({
        error: 'Dados inválidos',
        details: resultadoValidacao.erro?.details
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_7txbbm2yy().b[8][1]++;
    }
    const dadosValidados =
    /* istanbul ignore next */
    (cov_7txbbm2yy().s[47]++, resultadoValidacao.dados);
    // Atualizar automaticamente os status dos períodos antes de verificar avaliação
    /* istanbul ignore next */
    cov_7txbbm2yy().s[48]++;
    await (0, _periodostatusupdater.middlewareAtualizacaoStatus)();
    // Verificar se a avaliação existe
    const avaliacaoExistente =
    /* istanbul ignore next */
    (cov_7txbbm2yy().s[49]++, await _prisma.prisma.avaliacao.findUnique({
      where: {
        id
      },
      include: {
        periodo: {
          select: {
            status: true,
            dataInicio: true,
            dataFim: true
          }
        }
      }
    }));
    /* istanbul ignore next */
    cov_7txbbm2yy().s[50]++;
    if (!avaliacaoExistente) {
      /* istanbul ignore next */
      cov_7txbbm2yy().b[9][0]++;
      cov_7txbbm2yy().s[51]++;
      return _server.NextResponse.json({
        error: 'Avaliação não encontrada'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_7txbbm2yy().b[9][1]++;
    }
    // Verificar permissões do usuário
    const usuario =
    /* istanbul ignore next */
    (cov_7txbbm2yy().s[52]++, await _prisma.prisma.usuario.findUnique({
      where: {
        id: session.user.id
      },
      select: {
        userType: true
      }
    }));
    /* istanbul ignore next */
    cov_7txbbm2yy().s[53]++;
    if (!usuario) {
      /* istanbul ignore next */
      cov_7txbbm2yy().b[10][0]++;
      cov_7txbbm2yy().s[54]++;
      return _server.NextResponse.json({
        error: 'Usuário não encontrado'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_7txbbm2yy().b[10][1]++;
    }
    // Verificar se o usuário tem permissão para editar esta avaliação
    const podeEditar =
    /* istanbul ignore next */
    (cov_7txbbm2yy().s[55]++,
    /* istanbul ignore next */
    (cov_7txbbm2yy().b[11][0]++, usuario.userType === _client.TipoUsuario.ADMIN) ||
    /* istanbul ignore next */
    (cov_7txbbm2yy().b[11][1]++, usuario.userType === _client.TipoUsuario.GESTOR) ||
    /* istanbul ignore next */
    (cov_7txbbm2yy().b[11][2]++, avaliacaoExistente.avaliadorId === session.user.id) &&
    /* istanbul ignore next */
    (cov_7txbbm2yy().b[11][3]++, avaliacaoExistente.status === _client.StatusAvaliacao.PENDENTE));
    /* istanbul ignore next */
    cov_7txbbm2yy().s[56]++;
    if (!podeEditar) {
      /* istanbul ignore next */
      cov_7txbbm2yy().b[12][0]++;
      cov_7txbbm2yy().s[57]++;
      return _server.NextResponse.json({
        error: 'Sem permissão para editar esta avaliação'
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_7txbbm2yy().b[12][1]++;
    }
    // Verificar se o período ainda está ativo (para avaliadores comuns)
    cov_7txbbm2yy().s[58]++;
    if (usuario.userType === _client.TipoUsuario.ATENDENTE) {
      /* istanbul ignore next */
      cov_7txbbm2yy().b[13][0]++;
      cov_7txbbm2yy().s[59]++;
      if (avaliacaoExistente.periodo.status !== 'ATIVO') {
        /* istanbul ignore next */
        cov_7txbbm2yy().b[14][0]++;
        cov_7txbbm2yy().s[60]++;
        return _server.NextResponse.json({
          error: 'Período de avaliação não está mais ativo'
        }, {
          status: 400
        });
      } else
      /* istanbul ignore next */
      {
        cov_7txbbm2yy().b[14][1]++;
      }
      const agora =
      /* istanbul ignore next */
      (cov_7txbbm2yy().s[61]++, new Date());
      /* istanbul ignore next */
      cov_7txbbm2yy().s[62]++;
      if (
      /* istanbul ignore next */
      (cov_7txbbm2yy().b[16][0]++, agora < avaliacaoExistente.periodo.dataInicio) ||
      /* istanbul ignore next */
      (cov_7txbbm2yy().b[16][1]++, agora > avaliacaoExistente.periodo.dataFim)) {
        /* istanbul ignore next */
        cov_7txbbm2yy().b[15][0]++;
        cov_7txbbm2yy().s[63]++;
        return _server.NextResponse.json({
          error: 'Fora do período de avaliação'
        }, {
          status: 400
        });
      } else
      /* istanbul ignore next */
      {
        cov_7txbbm2yy().b[15][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_7txbbm2yy().b[13][1]++;
    }
    // Atualizar a avaliação
    const avaliacaoAtualizada =
    /* istanbul ignore next */
    (cov_7txbbm2yy().s[64]++, await _prisma.prisma.avaliacao.update({
      where: {
        id
      },
      data: {
        ...dadosValidados,
        atualizadoEm: new Date()
      },
      include: {
        avaliador: {
          select: {
            id: true,
            nome: true,
            email: true
          }
        },
        avaliado: {
          select: {
            id: true,
            usuario: {
              select: {
                nome: true,
                email: true
              }
            },
            cargo: true,
            setor: true
          }
        },
        periodo: {
          select: {
            id: true,
            nome: true
          }
        }
      }
    }));
    /* istanbul ignore next */
    cov_7txbbm2yy().s[65]++;
    return _server.NextResponse.json(avaliacaoAtualizada);
  } catch (error) {
    /* istanbul ignore next */
    cov_7txbbm2yy().s[66]++;
    console.error('Erro ao atualizar avaliação:', error);
    /* istanbul ignore next */
    cov_7txbbm2yy().s[67]++;
    return _server.NextResponse.json({
      error: 'Erro interno do servidor'
    }, {
      status: 500
    });
  }
}
async function DELETE(request, {
  params
}) {
  /* istanbul ignore next */
  cov_7txbbm2yy().f[6]++;
  cov_7txbbm2yy().s[68]++;
  try {
    const session =
    /* istanbul ignore next */
    (cov_7txbbm2yy().s[69]++, await (0, _nextauth.getServerSession)(_auth.authOptions));
    /* istanbul ignore next */
    cov_7txbbm2yy().s[70]++;
    if (!session?.user?.id) {
      /* istanbul ignore next */
      cov_7txbbm2yy().b[17][0]++;
      cov_7txbbm2yy().s[71]++;
      return _server.NextResponse.json({
        error: 'Não autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_7txbbm2yy().b[17][1]++;
    }
    // Validar parâmetro ID
    const resultadoValidacao =
    /* istanbul ignore next */
    (cov_7txbbm2yy().s[72]++, (0, _avaliacoes.validarDados)(_avaliacoes.idParamSchema, params));
    /* istanbul ignore next */
    cov_7txbbm2yy().s[73]++;
    if (!resultadoValidacao.sucesso) {
      /* istanbul ignore next */
      cov_7txbbm2yy().b[18][0]++;
      cov_7txbbm2yy().s[74]++;
      return _server.NextResponse.json({
        error: 'ID inválido',
        details: resultadoValidacao.erro?.details
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_7txbbm2yy().b[18][1]++;
    }
    const {
      id
    } =
    /* istanbul ignore next */
    (cov_7txbbm2yy().s[75]++, resultadoValidacao.dados);
    // Verificar permissões do usuário
    const usuario =
    /* istanbul ignore next */
    (cov_7txbbm2yy().s[76]++, await _prisma.prisma.usuario.findUnique({
      where: {
        id: session.user.id
      },
      select: {
        userType: true
      }
    }));
    /* istanbul ignore next */
    cov_7txbbm2yy().s[77]++;
    if (!usuario) {
      /* istanbul ignore next */
      cov_7txbbm2yy().b[19][0]++;
      cov_7txbbm2yy().s[78]++;
      return _server.NextResponse.json({
        error: 'Usuário não encontrado'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_7txbbm2yy().b[19][1]++;
    }
    // Apenas ADMIN e GESTOR podem deletar avaliações
    cov_7txbbm2yy().s[79]++;
    if (
    /* istanbul ignore next */
    (cov_7txbbm2yy().b[21][0]++, usuario.userType !== _client.TipoUsuario.ADMIN) &&
    /* istanbul ignore next */
    (cov_7txbbm2yy().b[21][1]++, usuario.userType !== _client.TipoUsuario.GESTOR)) {
      /* istanbul ignore next */
      cov_7txbbm2yy().b[20][0]++;
      cov_7txbbm2yy().s[80]++;
      return _server.NextResponse.json({
        error: 'Sem permissão para deletar avaliações'
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_7txbbm2yy().b[20][1]++;
    }
    // Atualizar automaticamente os status dos períodos antes de deletar avaliação
    cov_7txbbm2yy().s[81]++;
    await (0, _periodostatusupdater.middlewareAtualizacaoStatus)();
    // Verificar se a avaliação existe
    const avaliacaoExistente =
    /* istanbul ignore next */
    (cov_7txbbm2yy().s[82]++, await _prisma.prisma.avaliacao.findUnique({
      where: {
        id
      },
      select: {
        id: true
      }
    }));
    /* istanbul ignore next */
    cov_7txbbm2yy().s[83]++;
    if (!avaliacaoExistente) {
      /* istanbul ignore next */
      cov_7txbbm2yy().b[22][0]++;
      cov_7txbbm2yy().s[84]++;
      return _server.NextResponse.json({
        error: 'Avaliação não encontrada'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_7txbbm2yy().b[22][1]++;
    }
    // Deletar a avaliação
    cov_7txbbm2yy().s[85]++;
    await _prisma.prisma.avaliacao.delete({
      where: {
        id
      }
    });
    /* istanbul ignore next */
    cov_7txbbm2yy().s[86]++;
    return _server.NextResponse.json({
      message: 'Avaliação deletada com sucesso'
    }, {
      status: 200
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_7txbbm2yy().s[87]++;
    console.error('Erro ao deletar avaliação:', error);
    /* istanbul ignore next */
    cov_7txbbm2yy().s[88]++;
    return _server.NextResponse.json({
      error: 'Erro interno do servidor'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,