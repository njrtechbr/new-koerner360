{"version":3,"names":["GET","cov_1yzwznys2e","f","s","POST","filtrosSchema","_zod","z","object","filtros","periodoIds","array","string","optional","atendenteIds","setores","departamentos","dataInicio","transform","str","b","Date","undefined","dataFim","notaMinima","number","min","max","notaMaxima","request","session","_nextauth","getServerSession","_auth","authOptions","_server","NextResponse","json","error","status","includes","user","userType","body","validacao","safeParse","success","details","errors","data","metricas","_metricasavaliacoes","buscarMetricasConsolidadas","message","console"],"sources":["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\avaliacoes\\metricas\\consolidadas\\route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { getServerSession } from 'next-auth';\nimport { authOptions } from '@/lib/auth';\nimport { buscarMetricasConsolidadas, FiltrosMetricas } from '@/lib/utils/metricas-avaliacoes';\nimport { z } from 'zod';\n\n// Schema de validação para os filtros\nconst filtrosSchema = z.object({\n  filtros: z.object({\n    periodoIds: z.array(z.string()).optional(),\n    atendenteIds: z.array(z.string()).optional(),\n    setores: z.array(z.string()).optional(),\n    departamentos: z.array(z.string()).optional(),\n    dataInicio: z.string().transform(str => str ? new Date(str) : undefined).optional(),\n    dataFim: z.string().transform(str => str ? new Date(str) : undefined).optional(),\n    notaMinima: z.number().min(1).max(5).optional(),\n    notaMaxima: z.number().min(1).max(5).optional()\n  }).optional()\n});\n\n/**\n * POST /api/avaliacoes/metricas/consolidadas\n * Busca métricas consolidadas das avaliações com filtros opcionais\n */\nexport async function POST(request: NextRequest) {\n  try {\n    // Verificar autenticação\n    const session = await getServerSession(authOptions);\n    if (!session) {\n      return NextResponse.json(\n        { error: 'Não autorizado' },\n        { status: 401 }\n      );\n    }\n\n    // Verificar permissões (apenas ADMIN e GESTOR podem acessar métricas)\n    if (!['ADMIN', 'GESTOR'].includes(session.user.userType)) {\n      return NextResponse.json(\n        { error: 'Acesso negado. Apenas administradores e gestores podem acessar métricas.' },\n        { status: 403 }\n      );\n    }\n\n    // Validar dados da requisição\n    const body = await request.json();\n    const validacao = filtrosSchema.safeParse(body);\n    \n    if (!validacao.success) {\n      return NextResponse.json(\n        { \n          error: 'Dados inválidos',\n          details: validacao.error.errors\n        },\n        { status: 400 }\n      );\n    }\n\n    const { filtros = {} } = validacao.data;\n\n    // Buscar métricas consolidadas\n    const metricas = await buscarMetricasConsolidadas(filtros);\n\n    return NextResponse.json({\n      success: true,\n      data: metricas,\n      message: 'Métricas consolidadas obtidas com sucesso'\n    });\n\n  } catch (error) {\n    console.error('Erro ao buscar métricas consolidadas:', error);\n    return NextResponse.json(\n      { \n        error: 'Erro interno do servidor',\n        message: 'Não foi possível buscar as métricas consolidadas'\n      },\n      { status: 500 }\n    );\n  }\n}\n\n/**\n * GET /api/avaliacoes/metricas/consolidadas\n * Busca métricas consolidadas sem filtros (para compatibilidade)\n */\nexport async function GET(request: NextRequest) {\n  try {\n    // Verificar autenticação\n    const session = await getServerSession(authOptions);\n    if (!session) {\n      return NextResponse.json(\n        { error: 'Não autorizado' },\n        { status: 401 }\n      );\n    }\n\n    // Verificar permissões\n    if (!['ADMIN', 'GESTOR'].includes(session.user.userType)) {\n      return NextResponse.json(\n        { error: 'Acesso negado. Apenas administradores e gestores podem acessar métricas.' },\n        { status: 403 }\n      );\n    }\n\n    // Buscar métricas sem filtros\n    const metricas = await buscarMetricasConsolidadas();\n\n    return NextResponse.json({\n      success: true,\n      data: metricas,\n      message: 'Métricas consolidadas obtidas com sucesso'\n    });\n\n  } catch (error) {\n    console.error('Erro ao buscar métricas consolidadas:', error);\n    return NextResponse.json(\n      { \n        error: 'Erro interno do servidor',\n        message: 'Não foi possível buscar as métricas consolidadas'\n      },\n      { status: 500 }\n    );\n  }\n}"],"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","ignoreList":[]}