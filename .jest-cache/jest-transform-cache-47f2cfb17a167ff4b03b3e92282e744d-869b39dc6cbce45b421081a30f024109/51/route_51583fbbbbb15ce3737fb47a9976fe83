535a27e8a64e2f8c789c9f6945923d08
"use strict";

/* istanbul ignore next */
function cov_1yzwznys2e() {
  var path = "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\avaliacoes\\metricas\\consolidadas\\route.ts";
  var hash = "04f7d97f98b59ce95f5e31ae374edc128e60735a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\avaliacoes\\metricas\\consolidadas\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 18,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 19
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 20
        }
      },
      "6": {
        start: {
          line: 19,
          column: 16
        },
        end: {
          line: 19,
          column: 38
        }
      },
      "7": {
        start: {
          line: 20,
          column: 18
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "8": {
        start: {
          line: 21,
          column: 14
        },
        end: {
          line: 21,
          column: 48
        }
      },
      "9": {
        start: {
          line: 22,
          column: 28
        },
        end: {
          line: 22,
          column: 83
        }
      },
      "10": {
        start: {
          line: 23,
          column: 13
        },
        end: {
          line: 23,
          column: 27
        }
      },
      "11": {
        start: {
          line: 25,
          column: 22
        },
        end: {
          line: 36,
          column: 2
        }
      },
      "12": {
        start: {
          line: 31,
          column: 53
        },
        end: {
          line: 31,
          column: 84
        }
      },
      "13": {
        start: {
          line: 32,
          column: 50
        },
        end: {
          line: 32,
          column: 81
        }
      },
      "14": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 86,
          column: 5
        }
      },
      "15": {
        start: {
          line: 40,
          column: 24
        },
        end: {
          line: 40,
          column: 80
        }
      },
      "16": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 47,
          column: 9
        }
      },
      "17": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 46,
          column: 15
        }
      },
      "18": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 58,
          column: 9
        }
      },
      "19": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 57,
          column: 15
        }
      },
      "20": {
        start: {
          line: 60,
          column: 21
        },
        end: {
          line: 60,
          column: 41
        }
      },
      "21": {
        start: {
          line: 61,
          column: 26
        },
        end: {
          line: 61,
          column: 55
        }
      },
      "22": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 69,
          column: 9
        }
      },
      "23": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 68,
          column: 15
        }
      },
      "24": {
        start: {
          line: 70,
          column: 33
        },
        end: {
          line: 70,
          column: 47
        }
      },
      "25": {
        start: {
          line: 72,
          column: 25
        },
        end: {
          line: 72,
          column: 91
        }
      },
      "26": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 77,
          column: 11
        }
      },
      "27": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 70
        }
      },
      "28": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 85,
          column: 11
        }
      },
      "29": {
        start: {
          line: 89,
          column: 4
        },
        end: {
          line: 125,
          column: 5
        }
      },
      "30": {
        start: {
          line: 91,
          column: 24
        },
        end: {
          line: 91,
          column: 80
        }
      },
      "31": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 98,
          column: 9
        }
      },
      "32": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 97,
          column: 15
        }
      },
      "33": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 109,
          column: 9
        }
      },
      "34": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 108,
          column: 15
        }
      },
      "35": {
        start: {
          line: 111,
          column: 25
        },
        end: {
          line: 111,
          column: 84
        }
      },
      "36": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 116,
          column: 11
        }
      },
      "37": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 70
        }
      },
      "38": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 124,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 15
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 16
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 31,
            column: 46
          },
          end: {
            line: 31,
            column: 47
          }
        },
        loc: {
          start: {
            line: 31,
            column: 53
          },
          end: {
            line: 31,
            column: 84
          }
        },
        line: 31
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 32,
            column: 43
          },
          end: {
            line: 32,
            column: 44
          }
        },
        loc: {
          start: {
            line: 32,
            column: 50
          },
          end: {
            line: 32,
            column: 81
          }
        },
        line: 32
      },
      "5": {
        name: "POST",
        decl: {
          start: {
            line: 37,
            column: 15
          },
          end: {
            line: 37,
            column: 19
          }
        },
        loc: {
          start: {
            line: 37,
            column: 29
          },
          end: {
            line: 87,
            column: 1
          }
        },
        line: 37
      },
      "6": {
        name: "GET",
        decl: {
          start: {
            line: 88,
            column: 15
          },
          end: {
            line: 88,
            column: 18
          }
        },
        loc: {
          start: {
            line: 88,
            column: 28
          },
          end: {
            line: 126,
            column: 1
          }
        },
        line: 88
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 31,
            column: 53
          },
          end: {
            line: 31,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 31,
            column: 59
          },
          end: {
            line: 31,
            column: 72
          }
        }, {
          start: {
            line: 31,
            column: 75
          },
          end: {
            line: 31,
            column: 84
          }
        }],
        line: 31
      },
      "1": {
        loc: {
          start: {
            line: 32,
            column: 50
          },
          end: {
            line: 32,
            column: 81
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 32,
            column: 56
          },
          end: {
            line: 32,
            column: 69
          }
        }, {
          start: {
            line: 32,
            column: 72
          },
          end: {
            line: 32,
            column: 81
          }
        }],
        line: 32
      },
      "2": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "3": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "4": {
        loc: {
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 69,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 69,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "5": {
        loc: {
          start: {
            line: 70,
            column: 16
          },
          end: {
            line: 70,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 70,
            column: 26
          },
          end: {
            line: 70,
            column: 28
          }
        }],
        line: 70
      },
      "6": {
        loc: {
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "7": {
        loc: {
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 100
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\avaliacoes\\metricas\\consolidadas\\route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { getServerSession } from 'next-auth';\nimport { authOptions } from '@/lib/auth';\nimport { buscarMetricasConsolidadas, FiltrosMetricas } from '@/lib/utils/metricas-avaliacoes';\nimport { z } from 'zod';\n\n// Schema de valida\xE7\xE3o para os filtros\nconst filtrosSchema = z.object({\n  filtros: z.object({\n    periodoIds: z.array(z.string()).optional(),\n    atendenteIds: z.array(z.string()).optional(),\n    setores: z.array(z.string()).optional(),\n    departamentos: z.array(z.string()).optional(),\n    dataInicio: z.string().transform(str => str ? new Date(str) : undefined).optional(),\n    dataFim: z.string().transform(str => str ? new Date(str) : undefined).optional(),\n    notaMinima: z.number().min(1).max(5).optional(),\n    notaMaxima: z.number().min(1).max(5).optional()\n  }).optional()\n});\n\n/**\n * POST /api/avaliacoes/metricas/consolidadas\n * Busca m\xE9tricas consolidadas das avalia\xE7\xF5es com filtros opcionais\n */\nexport async function POST(request: NextRequest) {\n  try {\n    // Verificar autentica\xE7\xE3o\n    const session = await getServerSession(authOptions);\n    if (!session) {\n      return NextResponse.json(\n        { error: 'N\xE3o autorizado' },\n        { status: 401 }\n      );\n    }\n\n    // Verificar permiss\xF5es (apenas ADMIN e GESTOR podem acessar m\xE9tricas)\n    if (!['ADMIN', 'GESTOR'].includes(session.user.userType)) {\n      return NextResponse.json(\n        { error: 'Acesso negado. Apenas administradores e gestores podem acessar m\xE9tricas.' },\n        { status: 403 }\n      );\n    }\n\n    // Validar dados da requisi\xE7\xE3o\n    const body = await request.json();\n    const validacao = filtrosSchema.safeParse(body);\n    \n    if (!validacao.success) {\n      return NextResponse.json(\n        { \n          error: 'Dados inv\xE1lidos',\n          details: validacao.error.errors\n        },\n        { status: 400 }\n      );\n    }\n\n    const { filtros = {} } = validacao.data;\n\n    // Buscar m\xE9tricas consolidadas\n    const metricas = await buscarMetricasConsolidadas(filtros);\n\n    return NextResponse.json({\n      success: true,\n      data: metricas,\n      message: 'M\xE9tricas consolidadas obtidas com sucesso'\n    });\n\n  } catch (error) {\n    console.error('Erro ao buscar m\xE9tricas consolidadas:', error);\n    return NextResponse.json(\n      { \n        error: 'Erro interno do servidor',\n        message: 'N\xE3o foi poss\xEDvel buscar as m\xE9tricas consolidadas'\n      },\n      { status: 500 }\n    );\n  }\n}\n\n/**\n * GET /api/avaliacoes/metricas/consolidadas\n * Busca m\xE9tricas consolidadas sem filtros (para compatibilidade)\n */\nexport async function GET(request: NextRequest) {\n  try {\n    // Verificar autentica\xE7\xE3o\n    const session = await getServerSession(authOptions);\n    if (!session) {\n      return NextResponse.json(\n        { error: 'N\xE3o autorizado' },\n        { status: 401 }\n      );\n    }\n\n    // Verificar permiss\xF5es\n    if (!['ADMIN', 'GESTOR'].includes(session.user.userType)) {\n      return NextResponse.json(\n        { error: 'Acesso negado. Apenas administradores e gestores podem acessar m\xE9tricas.' },\n        { status: 403 }\n      );\n    }\n\n    // Buscar m\xE9tricas sem filtros\n    const metricas = await buscarMetricasConsolidadas();\n\n    return NextResponse.json({\n      success: true,\n      data: metricas,\n      message: 'M\xE9tricas consolidadas obtidas com sucesso'\n    });\n\n  } catch (error) {\n    console.error('Erro ao buscar m\xE9tricas consolidadas:', error);\n    return NextResponse.json(\n      { \n        error: 'Erro interno do servidor',\n        message: 'N\xE3o foi poss\xEDvel buscar as m\xE9tricas consolidadas'\n      },\n      { status: 500 }\n    );\n  }\n}"],
      names: ["GET", "POST", "filtrosSchema", "z", "object", "filtros", "periodoIds", "array", "string", "optional", "atendenteIds", "setores", "departamentos", "dataInicio", "transform", "str", "Date", "undefined", "dataFim", "notaMinima", "number", "min", "max", "notaMaxima", "request", "session", "getServerSession", "authOptions", "NextResponse", "json", "error", "status", "includes", "user", "userType", "body", "validacao", "safeParse", "success", "details", "errors", "data", "metricas", "buscarMetricasConsolidadas", "message", "console"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "04f7d97f98b59ce95f5e31ae374edc128e60735a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1yzwznys2e = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1yzwznys2e();
cov_1yzwznys2e().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1yzwznys2e().f[0]++;
  cov_1yzwznys2e().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1yzwznys2e().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1yzwznys2e().s[3]++;
_export(exports, {
  get GET() {
    /* istanbul ignore next */
    cov_1yzwznys2e().f[1]++;
    cov_1yzwznys2e().s[4]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_1yzwznys2e().f[2]++;
    cov_1yzwznys2e().s[5]++;
    return POST;
  }
});
const _server =
/* istanbul ignore next */
(cov_1yzwznys2e().s[6]++, require("next/server"));
const _nextauth =
/* istanbul ignore next */
(cov_1yzwznys2e().s[7]++, require("next-auth"));
const _auth =
/* istanbul ignore next */
(cov_1yzwznys2e().s[8]++, require("../../../../../lib/auth"));
const _metricasavaliacoes =
/* istanbul ignore next */
(cov_1yzwznys2e().s[9]++, require("../../../../../lib/utils/metricas-avaliacoes"));
const _zod =
/* istanbul ignore next */
(cov_1yzwznys2e().s[10]++, require("zod"));
// Schema de validação para os filtros
const filtrosSchema =
/* istanbul ignore next */
(cov_1yzwznys2e().s[11]++, _zod.z.object({
  filtros: _zod.z.object({
    periodoIds: _zod.z.array(_zod.z.string()).optional(),
    atendenteIds: _zod.z.array(_zod.z.string()).optional(),
    setores: _zod.z.array(_zod.z.string()).optional(),
    departamentos: _zod.z.array(_zod.z.string()).optional(),
    dataInicio: _zod.z.string().transform(str => {
      /* istanbul ignore next */
      cov_1yzwznys2e().f[3]++;
      cov_1yzwznys2e().s[12]++;
      return str ?
      /* istanbul ignore next */
      (cov_1yzwznys2e().b[0][0]++, new Date(str)) :
      /* istanbul ignore next */
      (cov_1yzwznys2e().b[0][1]++, undefined);
    }).optional(),
    dataFim: _zod.z.string().transform(str => {
      /* istanbul ignore next */
      cov_1yzwznys2e().f[4]++;
      cov_1yzwznys2e().s[13]++;
      return str ?
      /* istanbul ignore next */
      (cov_1yzwznys2e().b[1][0]++, new Date(str)) :
      /* istanbul ignore next */
      (cov_1yzwznys2e().b[1][1]++, undefined);
    }).optional(),
    notaMinima: _zod.z.number().min(1).max(5).optional(),
    notaMaxima: _zod.z.number().min(1).max(5).optional()
  }).optional()
}));
async function POST(request) {
  /* istanbul ignore next */
  cov_1yzwznys2e().f[5]++;
  cov_1yzwznys2e().s[14]++;
  try {
    // Verificar autenticação
    const session =
    /* istanbul ignore next */
    (cov_1yzwznys2e().s[15]++, await (0, _nextauth.getServerSession)(_auth.authOptions));
    /* istanbul ignore next */
    cov_1yzwznys2e().s[16]++;
    if (!session) {
      /* istanbul ignore next */
      cov_1yzwznys2e().b[2][0]++;
      cov_1yzwznys2e().s[17]++;
      return _server.NextResponse.json({
        error: 'Não autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_1yzwznys2e().b[2][1]++;
    }
    // Verificar permissões (apenas ADMIN e GESTOR podem acessar métricas)
    cov_1yzwznys2e().s[18]++;
    if (!['ADMIN', 'GESTOR'].includes(session.user.userType)) {
      /* istanbul ignore next */
      cov_1yzwznys2e().b[3][0]++;
      cov_1yzwznys2e().s[19]++;
      return _server.NextResponse.json({
        error: 'Acesso negado. Apenas administradores e gestores podem acessar métricas.'
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_1yzwznys2e().b[3][1]++;
    }
    // Validar dados da requisição
    const body =
    /* istanbul ignore next */
    (cov_1yzwznys2e().s[20]++, await request.json());
    const validacao =
    /* istanbul ignore next */
    (cov_1yzwznys2e().s[21]++, filtrosSchema.safeParse(body));
    /* istanbul ignore next */
    cov_1yzwznys2e().s[22]++;
    if (!validacao.success) {
      /* istanbul ignore next */
      cov_1yzwznys2e().b[4][0]++;
      cov_1yzwznys2e().s[23]++;
      return _server.NextResponse.json({
        error: 'Dados inválidos',
        details: validacao.error.errors
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_1yzwznys2e().b[4][1]++;
    }
    const {
      filtros =
      /* istanbul ignore next */
      (cov_1yzwznys2e().b[5][0]++, {})
    } =
    /* istanbul ignore next */
    (cov_1yzwznys2e().s[24]++, validacao.data);
    // Buscar métricas consolidadas
    const metricas =
    /* istanbul ignore next */
    (cov_1yzwznys2e().s[25]++, await (0, _metricasavaliacoes.buscarMetricasConsolidadas)(filtros));
    /* istanbul ignore next */
    cov_1yzwznys2e().s[26]++;
    return _server.NextResponse.json({
      success: true,
      data: metricas,
      message: 'Métricas consolidadas obtidas com sucesso'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1yzwznys2e().s[27]++;
    console.error('Erro ao buscar métricas consolidadas:', error);
    /* istanbul ignore next */
    cov_1yzwznys2e().s[28]++;
    return _server.NextResponse.json({
      error: 'Erro interno do servidor',
      message: 'Não foi possível buscar as métricas consolidadas'
    }, {
      status: 500
    });
  }
}
async function GET(request) {
  /* istanbul ignore next */
  cov_1yzwznys2e().f[6]++;
  cov_1yzwznys2e().s[29]++;
  try {
    // Verificar autenticação
    const session =
    /* istanbul ignore next */
    (cov_1yzwznys2e().s[30]++, await (0, _nextauth.getServerSession)(_auth.authOptions));
    /* istanbul ignore next */
    cov_1yzwznys2e().s[31]++;
    if (!session) {
      /* istanbul ignore next */
      cov_1yzwznys2e().b[6][0]++;
      cov_1yzwznys2e().s[32]++;
      return _server.NextResponse.json({
        error: 'Não autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_1yzwznys2e().b[6][1]++;
    }
    // Verificar permissões
    cov_1yzwznys2e().s[33]++;
    if (!['ADMIN', 'GESTOR'].includes(session.user.userType)) {
      /* istanbul ignore next */
      cov_1yzwznys2e().b[7][0]++;
      cov_1yzwznys2e().s[34]++;
      return _server.NextResponse.json({
        error: 'Acesso negado. Apenas administradores e gestores podem acessar métricas.'
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_1yzwznys2e().b[7][1]++;
    }
    // Buscar métricas sem filtros
    const metricas =
    /* istanbul ignore next */
    (cov_1yzwznys2e().s[35]++, await (0, _metricasavaliacoes.buscarMetricasConsolidadas)());
    /* istanbul ignore next */
    cov_1yzwznys2e().s[36]++;
    return _server.NextResponse.json({
      success: true,
      data: metricas,
      message: 'Métricas consolidadas obtidas com sucesso'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1yzwznys2e().s[37]++;
    console.error('Erro ao buscar métricas consolidadas:', error);
    /* istanbul ignore next */
    cov_1yzwznys2e().s[38]++;
    return _server.NextResponse.json({
      error: 'Erro interno do servidor',
      message: 'Não foi possível buscar as métricas consolidadas'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,