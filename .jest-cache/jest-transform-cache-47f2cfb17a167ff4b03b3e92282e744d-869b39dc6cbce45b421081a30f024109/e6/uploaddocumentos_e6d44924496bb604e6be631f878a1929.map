{"version":3,"names":["cov_1qxq4bk8y5","actualCoverage","s","UploadDocumentos","f","default","_default","TIPOS_DOCUMENTO","value","label","onUploadCompleto","onErro","className","maxArquivos","b","permitirFotos","arquivos","setArquivos","_react","useState","configuracao","setConfiguracao","carregandoConfig","setCarregandoConfig","inputRef","useRef","carregarConfiguracoes","useCallback","response","fetch","ok","data","json","error","console","validarArquivo","arquivo","categoria","config","tiposPermitidos","imagem","documento","maxSize","parseFloat","tamanhoMaximo","includes","type","join","size","maxSizeStr","gerarPreview","Promise","resolve","reader","FileReader","onload","e","target","result","readAsDataURL","adicionarArquivos","novosArquivos","length","arquivosParaAdicionar","i","startsWith","erro","arquivoUpload","id","Date","now","progresso","status","preview","push","prev","removerArquivo","filter","atualizarTipoDocumento","tipo","map","fazerUploadArquivo","formData","FormData","append","a","method","body","errorData","Error","resultado","url","mensagemErro","message","fazerUploadTodos","arquivosPendentes","arquivosComSucesso","handleDragOver","preventDefault","handleDrop","files","dataTransfer","handleFileSelect","current","renderizarIconeArquivo","_jsxruntime","jsx","_lucidereact","Image","FileText","renderizarStatusArquivo","_badge","Badge","variant","jsxs","_card","Card","_utils","cn","CardHeader","CardTitle","Upload","CardContent","onDragOver","onDrop","onClick","click","ref","multiple","accept","onChange","_button","Button","disabled","every","src","alt","name","X","toFixed","_label","Label","htmlFor","_select","Select","onValueChange","valor","SelectTrigger","SelectValue","placeholder","SelectContent","SelectItem","_progress","Progress","_alert","Alert","AlertCircle","AlertDescription","window","open","Eye","link","document","createElement","href","download","Download","extensoesPermitidas"],"sources":["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\components\\upload\\upload-documentos.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useRef, useCallback } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport {\n  Upload,\n  X,\n  FileText,\n  Image as ImageIcon,\n  CheckCircle,\n  AlertCircle,\n  Download,\n  Eye,\n} from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport {\n  ArquivoUpload,\n  ConfiguracaoUpload,\n  UploadDocumentosProps,\n} from '@/types/documentos';\n\n/**\n * Tipos de documento permitidos\n */\nconst TIPOS_DOCUMENTO = [\n  { value: 'RG', label: 'RG' },\n  { value: 'CPF', label: 'CPF' },\n  { value: 'CNH', label: 'CNH' },\n  { value: 'CTPS', label: 'Carteira de Trabalho' },\n  { value: 'TITULO_ELEITOR', label: 'Título de Eleitor' },\n  { value: 'CERTIFICADO', label: 'Certificado' },\n  { value: 'DIPLOMA', label: 'Diploma' },\n  { value: 'OUTRO', label: 'Outro' },\n] as const;\n\n/**\n * Componente para upload de documentos e fotos\n */\nexport function UploadDocumentos({\n  onUploadCompleto,\n  onErro,\n  className,\n  maxArquivos = 10,\n  permitirFotos = true,\n}: UploadDocumentosProps) {\n  const [arquivos, setArquivos] = useState<ArquivoUpload[]>([]);\n  const [configuracao, setConfiguracao] = useState<ConfiguracaoUpload | null>(\n    null\n  );\n  const [carregandoConfig, setCarregandoConfig] = useState(false);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  /**\n   * Carrega configurações de upload\n   */\n  const carregarConfiguracoes = useCallback(async () => {\n    if (configuracao) return;\n\n    setCarregandoConfig(true);\n    try {\n      const response = await fetch('/api/upload/documentos');\n      if (response.ok) {\n        const data = await response.json();\n        setConfiguracao(data.configuracao);\n      }\n    } catch (error) {\n      console.error('Erro ao carregar configurações:', error);\n    } finally {\n      setCarregandoConfig(false);\n    }\n  }, [configuracao]);\n\n  /**\n   * Valida arquivo antes do upload\n   */\n  const validarArquivo = (\n    arquivo: File,\n    categoria: 'documento' | 'foto'\n  ): string | null => {\n    if (!configuracao) return 'Configurações não carregadas';\n\n    const config =\n      categoria === 'foto'\n        ? configuracao.tiposPermitidos.imagem\n        : configuracao.tiposPermitidos.documento;\n    const maxSize =\n      categoria === 'foto'\n        ? parseFloat(configuracao.tamanhoMaximo.imagem) * 1024 * 1024\n        : parseFloat(configuracao.tamanhoMaximo.documento) * 1024 * 1024;\n\n    if (!config.includes(arquivo.type)) {\n      return `Tipo de arquivo não permitido. Tipos aceitos: ${config.join(', ')}`;\n    }\n\n    if (arquivo.size > maxSize) {\n      const maxSizeStr =\n        categoria === 'foto'\n          ? configuracao.tamanhoMaximo.imagem\n          : configuracao.tamanhoMaximo.documento;\n      return `Arquivo muito grande. Tamanho máximo: ${maxSizeStr}`;\n    }\n\n    return null;\n  };\n\n  /**\n   * Gera preview para imagens\n   */\n  const gerarPreview = (arquivo: File): Promise<string> => {\n    return new Promise(resolve => {\n      const reader = new FileReader();\n      reader.onload = e => resolve(e.target?.result as string);\n      reader.readAsDataURL(arquivo);\n    });\n  };\n\n  /**\n   * Adiciona arquivos para upload\n   */\n  const adicionarArquivos = async (novosArquivos: FileList) => {\n    await carregarConfiguracoes();\n\n    if (arquivos.length + novosArquivos.length > maxArquivos) {\n      onErro?.(`Máximo de ${maxArquivos} arquivos permitidos`);\n      return;\n    }\n\n    const arquivosParaAdicionar: ArquivoUpload[] = [];\n\n    for (let i = 0; i < novosArquivos.length; i++) {\n      const arquivo = novosArquivos[i];\n      const categoria = arquivo.type.startsWith('image/')\n        ? 'foto'\n        : 'documento';\n\n      if (categoria === 'foto' && !permitirFotos) {\n        onErro?.('Upload de fotos não permitido');\n        continue;\n      }\n\n      const erro = validarArquivo(arquivo, categoria);\n      if (erro) {\n        onErro?.(erro);\n        continue;\n      }\n\n      const arquivoUpload: ArquivoUpload = {\n        id: `${Date.now()}-${i}`,\n        arquivo,\n        categoria,\n        progresso: 0,\n        status: 'pendente',\n      };\n\n      // Gerar preview para imagens\n      if (categoria === 'foto') {\n        arquivoUpload.preview = await gerarPreview(arquivo);\n      }\n\n      arquivosParaAdicionar.push(arquivoUpload);\n    }\n\n    setArquivos(prev => [...prev, ...arquivosParaAdicionar]);\n  };\n\n  /**\n   * Remove arquivo da lista\n   */\n  const removerArquivo = (id: string) => {\n    setArquivos(prev => prev.filter(arquivo => arquivo.id !== id));\n  };\n\n  /**\n   * Atualiza tipo do documento\n   */\n  const atualizarTipoDocumento = (id: string, tipo: string) => {\n    setArquivos(prev =>\n      prev.map(arquivo => (arquivo.id === id ? { ...arquivo, tipo } : arquivo))\n    );\n  };\n\n  /**\n   * Faz upload de um arquivo\n   */\n  const fazerUploadArquivo = async (arquivo: ArquivoUpload): Promise<void> => {\n    const formData = new FormData();\n    formData.append('arquivo', arquivo.arquivo);\n    formData.append('categoria', arquivo.categoria);\n\n    if (arquivo.tipo) {\n      formData.append('tipo', arquivo.tipo);\n    }\n\n    try {\n      setArquivos(prev =>\n        prev.map(a =>\n          a.id === arquivo.id ? { ...a, status: 'enviando', progresso: 0 } : a\n        )\n      );\n\n      const response = await fetch('/api/upload/documentos', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.erro || 'Erro no upload');\n      }\n\n      const resultado = await response.json();\n\n      setArquivos(prev =>\n        prev.map(a =>\n          a.id === arquivo.id\n            ? {\n                ...a,\n                status: 'sucesso',\n                progresso: 100,\n                url: resultado.arquivo.url,\n              }\n            : a\n        )\n      );\n    } catch (error) {\n      const mensagemErro =\n        error instanceof Error ? error.message : 'Erro desconhecido';\n\n      setArquivos(prev =>\n        prev.map(a =>\n          a.id === arquivo.id\n            ? {\n                ...a,\n                status: 'erro',\n                erro: mensagemErro,\n              }\n            : a\n        )\n      );\n\n      onErro?.(mensagemErro);\n    }\n  };\n\n  /**\n   * Faz upload de todos os arquivos pendentes\n   */\n  const fazerUploadTodos = async () => {\n    const arquivosPendentes = arquivos.filter(a => a.status === 'pendente');\n\n    for (const arquivo of arquivosPendentes) {\n      if (arquivo.categoria === 'documento' && !arquivo.tipo) {\n        onErro?.('Selecione o tipo do documento antes de fazer upload');\n        return;\n      }\n\n      await fazerUploadArquivo(arquivo);\n    }\n\n    const arquivosComSucesso = arquivos.filter(a => a.status === 'sucesso');\n    if (arquivosComSucesso.length > 0) {\n      onUploadCompleto?.(arquivosComSucesso);\n    }\n  };\n\n  /**\n   * Manipula drag and drop\n   */\n  const handleDragOver = (e: React.DragEvent) => {\n    e.preventDefault();\n  };\n\n  const handleDrop = (e: React.DragEvent) => {\n    e.preventDefault();\n    const files = e.dataTransfer.files;\n    if (files.length > 0) {\n      adicionarArquivos(files);\n    }\n  };\n\n  /**\n   * Manipula seleção de arquivos\n   */\n  const handleFileSelect = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const files = e.target.files;\n    if (files && files.length > 0) {\n      adicionarArquivos(files);\n    }\n    // Limpar input para permitir selecionar o mesmo arquivo novamente\n    if (inputRef.current) {\n      inputRef.current.value = '';\n    }\n  };\n\n  /**\n   * Renderiza ícone do arquivo\n   */\n  const renderizarIconeArquivo = (arquivo: ArquivoUpload) => {\n    if (arquivo.categoria === 'foto') {\n      return <ImageIcon className=\"h-8 w-8 text-blue-500\" />;\n    }\n    return <FileText className=\"h-8 w-8 text-gray-500\" />;\n  };\n\n  /**\n   * Renderiza status do arquivo\n   */\n  const renderizarStatusArquivo = (arquivo: ArquivoUpload) => {\n    switch (arquivo.status) {\n      case 'pendente':\n        return <Badge variant=\"secondary\">Pendente</Badge>;\n      case 'enviando':\n        return <Badge variant=\"default\">Enviando...</Badge>;\n      case 'sucesso':\n        return (\n          <Badge variant=\"default\" className=\"bg-green-500\">\n            Sucesso\n          </Badge>\n        );\n      case 'erro':\n        return <Badge variant=\"destructive\">Erro</Badge>;\n    }\n  };\n\n  return (\n    <Card className={cn('w-full', className)}>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Upload className=\"h-5 w-5\" />\n          Upload de Documentos\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-6\">\n        {/* Área de upload */}\n        <div\n          className=\"border-2 border-dashed border-gray-300 rounded-lg p-8 text-center hover:border-gray-400 transition-colors cursor-pointer\"\n          onDragOver={handleDragOver}\n          onDrop={handleDrop}\n          onClick={() => inputRef.current?.click()}\n        >\n          <Upload className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n          <p className=\"text-lg font-medium text-gray-600 mb-2\">\n            Arraste arquivos aqui ou clique para selecionar\n          </p>\n          <p className=\"text-sm text-gray-500\">\n            {permitirFotos\n              ? 'Documentos (PDF, JPG, PNG) e fotos'\n              : 'Apenas documentos (PDF, JPG, PNG)'}\n          </p>\n          {configuracao && (\n            <p className=\"text-xs text-gray-400 mt-2\">\n              Máximo: {configuracao.tamanhoMaximo.documento} por documento,{' '}\n              {configuracao.tamanhoMaximo.imagem} por foto\n            </p>\n          )}\n        </div>\n\n        <input\n          ref={inputRef}\n          type=\"file\"\n          multiple\n          accept={\n            configuracao\n              ? [\n                  ...configuracao.tiposPermitidos.documento,\n                  ...(permitirFotos ? configuracao.tiposPermitidos.imagem : []),\n                ].join(',')\n              : '*'\n          }\n          onChange={handleFileSelect}\n          className=\"hidden\"\n        />\n\n        {/* Lista de arquivos */}\n        {arquivos.length > 0 && (\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <h3 className=\"text-lg font-medium\">Arquivos Selecionados</h3>\n              <Button\n                onClick={fazerUploadTodos}\n                disabled={\n                  arquivos.every(a => a.status !== 'pendente') ||\n                  carregandoConfig\n                }\n                className=\"flex items-center gap-2\"\n              >\n                <Upload className=\"h-4 w-4\" />\n                Fazer Upload\n              </Button>\n            </div>\n\n            <div className=\"space-y-3\">\n              {arquivos.map(arquivo => (\n                <div key={arquivo.id} className=\"border rounded-lg p-4\">\n                  <div className=\"flex items-start gap-4\">\n                    {/* Ícone/Preview */}\n                    <div className=\"flex-shrink-0\">\n                      {arquivo.preview ? (\n                        <img\n                          src={arquivo.preview}\n                          alt=\"Preview\"\n                          className=\"h-16 w-16 object-cover rounded\"\n                        />\n                      ) : (\n                        renderizarIconeArquivo(arquivo)\n                      )}\n                    </div>\n\n                    {/* Informações do arquivo */}\n                    <div className=\"flex-1 min-w-0\">\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <p className=\"text-sm font-medium truncate\">\n                          {arquivo.arquivo.name}\n                        </p>\n                        <div className=\"flex items-center gap-2\">\n                          {renderizarStatusArquivo(arquivo)}\n                          <Button\n                            variant=\"ghost\"\n                            size=\"sm\"\n                            onClick={() => removerArquivo(arquivo.id)}\n                            disabled={arquivo.status === 'enviando'}\n                          >\n                            <X className=\"h-4 w-4\" />\n                          </Button>\n                        </div>\n                      </div>\n\n                      <p className=\"text-xs text-gray-500 mb-2\">\n                        {(arquivo.arquivo.size / 1024 / 1024).toFixed(2)} MB •{' '}\n                        {arquivo.categoria}\n                      </p>\n\n                      {/* Seleção de tipo para documentos */}\n                      {arquivo.categoria === 'documento' &&\n                        arquivo.status === 'pendente' && (\n                          <div className=\"mb-2\">\n                            <Label\n                              htmlFor={`tipo-${arquivo.id}`}\n                              className=\"text-xs\"\n                            >\n                              Tipo do Documento\n                            </Label>\n                            <Select\n                              value={arquivo.tipo || ''}\n                              onValueChange={valor =>\n                                atualizarTipoDocumento(arquivo.id, valor)\n                              }\n                            >\n                              <SelectTrigger className=\"h-8 text-xs\">\n                                <SelectValue placeholder=\"Selecione o tipo\" />\n                              </SelectTrigger>\n                              <SelectContent>\n                                {TIPOS_DOCUMENTO.map(tipo => (\n                                  <SelectItem\n                                    key={tipo.value}\n                                    value={tipo.value}\n                                  >\n                                    {tipo.label}\n                                  </SelectItem>\n                                ))}\n                              </SelectContent>\n                            </Select>\n                          </div>\n                        )}\n\n                      {/* Barra de progresso */}\n                      {arquivo.status === 'enviando' && (\n                        <Progress value={arquivo.progresso} className=\"h-2\" />\n                      )}\n\n                      {/* Erro */}\n                      {arquivo.status === 'erro' && arquivo.erro && (\n                        <Alert className=\"mt-2\">\n                          <AlertCircle className=\"h-4 w-4\" />\n                          <AlertDescription className=\"text-xs\">\n                            {arquivo.erro}\n                          </AlertDescription>\n                        </Alert>\n                      )}\n\n                      {/* Ações para arquivos com sucesso */}\n                      {arquivo.status === 'sucesso' && arquivo.url && (\n                        <div className=\"flex gap-2 mt-2\">\n                          <Button\n                            variant=\"outline\"\n                            size=\"sm\"\n                            onClick={() => window.open(arquivo.url, '_blank')}\n                            className=\"text-xs\"\n                          >\n                            <Eye className=\"h-3 w-3 mr-1\" />\n                            Visualizar\n                          </Button>\n                          <Button\n                            variant=\"outline\"\n                            size=\"sm\"\n                            onClick={() => {\n                              const link = document.createElement('a');\n                              link.href = arquivo.url!;\n                              link.download = arquivo.arquivo.name;\n                              link.click();\n                            }}\n                            className=\"text-xs\"\n                          >\n                            <Download className=\"h-3 w-3 mr-1\" />\n                            Baixar\n                          </Button>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Informações sobre limites */}\n        {configuracao && (\n          <div className=\"text-xs text-gray-500 space-y-1\">\n            <p>\n              <strong>Tipos permitidos:</strong>\n            </p>\n            <p>\n              • Documentos:{' '}\n              {configuracao.extensoesPermitidas.documento.join(', ')}\n            </p>\n            {permitirFotos && (\n              <p>\n                • Fotos: {configuracao.extensoesPermitidas.imagem.join(', ')}\n              </p>\n            )}\n            <p>\n              <strong>Tamanhos máximos:</strong>\n            </p>\n            <p>• Documentos: {configuracao.tamanhoMaximo.documento}</p>\n            {permitirFotos && (\n              <p>• Fotos: {configuracao.tamanhoMaximo.imagem}</p>\n            )}\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default UploadDocumentos;\n"],"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","ignoreList":[]}