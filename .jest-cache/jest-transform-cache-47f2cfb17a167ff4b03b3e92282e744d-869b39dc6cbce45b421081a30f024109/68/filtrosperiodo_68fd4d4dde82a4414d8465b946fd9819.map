{"version":3,"names":["cov_1tlaafgumf","actualCoverage","s","FiltrosPeriodo","f","default","_default","PERIODOS_PREDEFINIDOS","valor","label","descricao","STATUS_OPCOES","cor","calcularDatasPeriodo","periodo","hoje","Date","dataFim","toISOString","split","dataInicio","b","getTime","getFullYear","getMonth","getDate","filtros","onFiltrosChange","setores","cargos","compacto","mostrarFiltrosAvancados","className","mostrarAvancados","setMostrarAvancados","_react","useState","handlePeriodoChange","handleDataChange","campo","limparFiltros","filtrosAtivos","Object","entries","filter","key","value","undefined","length","_jsxruntime","jsxs","_utils","cn","_select","Select","onValueChange","SelectTrigger","jsx","_lucidereact","Calendar","SelectValue","placeholder","SelectContent","map","SelectItem","Fragment","_input","Input","type","onChange","e","target","_button","Button","variant","size","onClick","Filter","_badge","Badge","X","_card","Card","CardHeader","CardTitle","CalendarDays","CardDescription","CardContent","_label","Label","htmlFor","id","setor","nome","cargo","status","find","c"],"sources":["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\components\\metricas\\filtros-periodo.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { Badge } from '@/components/ui/badge';\nimport { Calendar, Filter, X, CalendarDays } from 'lucide-react';\nimport { cn } from '@/lib/utils';\n\n/**\n * Interface para filtros de período\n */\nexport interface FiltrosPeriodo {\n  dataInicio?: string;\n  dataFim?: string;\n  periodo?:\n    | 'hoje'\n    | '7dias'\n    | '30dias'\n    | '90dias'\n    | '6meses'\n    | '1ano'\n    | 'personalizado';\n  setor?: string;\n  cargo?: string;\n  status?: 'ativo' | 'inativo' | 'pendente' | 'suspenso';\n}\n\n/**\n * Props do componente\n */\ninterface FiltrosPeriodoProps {\n  filtros: FiltrosPeriodo;\n  onFiltrosChange: (filtros: FiltrosPeriodo) => void;\n  setores?: Array<{ id: string; nome: string }>;\n  cargos?: Array<{ id: string; nome: string }>;\n  compacto?: boolean;\n  mostrarFiltrosAvancados?: boolean;\n  className?: string;\n}\n\n/**\n * Períodos predefinidos\n */\nconst PERIODOS_PREDEFINIDOS = [\n  { valor: 'hoje', label: 'Hoje', descricao: 'Apenas hoje' },\n  { valor: '7dias', label: 'Últimos 7 dias', descricao: 'Uma semana' },\n  { valor: '30dias', label: 'Últimos 30 dias', descricao: 'Um mês' },\n  { valor: '90dias', label: 'Últimos 90 dias', descricao: 'Três meses' },\n  { valor: '6meses', label: 'Últimos 6 meses', descricao: 'Semestre' },\n  { valor: '1ano', label: 'Último ano', descricao: 'Doze meses' },\n  {\n    valor: 'personalizado',\n    label: 'Período personalizado',\n    descricao: 'Escolher datas',\n  },\n] as const;\n\n/**\n * Status disponíveis\n */\nconst STATUS_OPCOES = [\n  { valor: 'ativo', label: 'Ativo', cor: 'bg-green-100 text-green-800' },\n  { valor: 'inativo', label: 'Inativo', cor: 'bg-red-100 text-red-800' },\n  {\n    valor: 'pendente',\n    label: 'Pendente',\n    cor: 'bg-yellow-100 text-yellow-800',\n  },\n  { valor: 'suspenso', label: 'Suspenso', cor: 'bg-gray-100 text-gray-800' },\n] as const;\n\n/**\n * Função para calcular datas baseadas no período\n */\nfunction calcularDatasPeriodo(periodo: string): {\n  dataInicio: string;\n  dataFim: string;\n} {\n  const hoje = new Date();\n  const dataFim = hoje.toISOString().split('T')[0];\n\n  let dataInicio: string;\n\n  switch (periodo) {\n    case 'hoje':\n      dataInicio = dataFim;\n      break;\n    case '7dias':\n      dataInicio = new Date(hoje.getTime() - 7 * 24 * 60 * 60 * 1000)\n        .toISOString()\n        .split('T')[0];\n      break;\n    case '30dias':\n      dataInicio = new Date(hoje.getTime() - 30 * 24 * 60 * 60 * 1000)\n        .toISOString()\n        .split('T')[0];\n      break;\n    case '90dias':\n      dataInicio = new Date(hoje.getTime() - 90 * 24 * 60 * 60 * 1000)\n        .toISOString()\n        .split('T')[0];\n      break;\n    case '6meses':\n      dataInicio = new Date(\n        hoje.getFullYear(),\n        hoje.getMonth() - 6,\n        hoje.getDate()\n      )\n        .toISOString()\n        .split('T')[0];\n      break;\n    case '1ano':\n      dataInicio = new Date(\n        hoje.getFullYear() - 1,\n        hoje.getMonth(),\n        hoje.getDate()\n      )\n        .toISOString()\n        .split('T')[0];\n      break;\n    default:\n      dataInicio = new Date(hoje.getTime() - 30 * 24 * 60 * 60 * 1000)\n        .toISOString()\n        .split('T')[0];\n  }\n\n  return { dataInicio, dataFim };\n}\n\n/**\n * Componente principal de filtros por período\n */\nexport function FiltrosPeriodo({\n  filtros,\n  onFiltrosChange,\n  setores = [],\n  cargos = [],\n  compacto = false,\n  mostrarFiltrosAvancados = true,\n  className,\n}: FiltrosPeriodoProps) {\n  const [mostrarAvancados, setMostrarAvancados] = useState(false);\n\n  // Função para atualizar período predefinido\n  const handlePeriodoChange = (periodo: string) => {\n    if (periodo === 'personalizado') {\n      onFiltrosChange({\n        ...filtros,\n        periodo: 'personalizado',\n        dataInicio: filtros.dataInicio || '',\n        dataFim: filtros.dataFim || '',\n      });\n    } else {\n      const { dataInicio, dataFim } = calcularDatasPeriodo(periodo);\n      onFiltrosChange({\n        ...filtros,\n        periodo: periodo as any,\n        dataInicio,\n        dataFim,\n      });\n    }\n  };\n\n  // Função para atualizar data específica\n  const handleDataChange = (campo: 'dataInicio' | 'dataFim', valor: string) => {\n    onFiltrosChange({\n      ...filtros,\n      [campo]: valor,\n      periodo: 'personalizado',\n    });\n  };\n\n  // Função para limpar filtros\n  const limparFiltros = () => {\n    const { dataInicio, dataFim } = calcularDatasPeriodo('30dias');\n    onFiltrosChange({\n      dataInicio,\n      dataFim,\n      periodo: '30dias',\n    });\n    setMostrarAvancados(false);\n  };\n\n  // Contar filtros ativos\n  const filtrosAtivos = Object.entries(filtros).filter(([key, value]) => {\n    if (key === 'dataInicio' || key === 'dataFim' || key === 'periodo')\n      return false;\n    return value !== undefined && value !== '';\n  }).length;\n\n  if (compacto) {\n    return (\n      <div className={cn('flex flex-wrap items-center gap-2', className)}>\n        <Select\n          value={filtros.periodo || '30dias'}\n          onValueChange={handlePeriodoChange}\n        >\n          <SelectTrigger className=\"w-48\">\n            <Calendar className=\"h-4 w-4 mr-2\" />\n            <SelectValue placeholder=\"Selecionar período\" />\n          </SelectTrigger>\n          <SelectContent>\n            {PERIODOS_PREDEFINIDOS.map(periodo => (\n              <SelectItem key={periodo.valor} value={periodo.valor}>\n                <div>\n                  <div className=\"font-medium\">{periodo.label}</div>\n                  <div className=\"text-xs text-gray-500\">\n                    {periodo.descricao}\n                  </div>\n                </div>\n              </SelectItem>\n            ))}\n          </SelectContent>\n        </Select>\n\n        {filtros.periodo === 'personalizado' && (\n          <>\n            <Input\n              type=\"date\"\n              value={filtros.dataInicio || ''}\n              onChange={e => handleDataChange('dataInicio', e.target.value)}\n              className=\"w-40\"\n            />\n            <span className=\"text-gray-500\">até</span>\n            <Input\n              type=\"date\"\n              value={filtros.dataFim || ''}\n              onChange={e => handleDataChange('dataFim', e.target.value)}\n              className=\"w-40\"\n            />\n          </>\n        )}\n\n        {mostrarFiltrosAvancados && (\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => setMostrarAvancados(!mostrarAvancados)}\n          >\n            <Filter className=\"h-4 w-4 mr-1\" />\n            Filtros\n            {filtrosAtivos > 0 && (\n              <Badge variant=\"secondary\" className=\"ml-1 h-5 w-5 p-0 text-xs\">\n                {filtrosAtivos}\n              </Badge>\n            )}\n          </Button>\n        )}\n\n        {filtrosAtivos > 0 && (\n          <Button variant=\"ghost\" size=\"sm\" onClick={limparFiltros}>\n            <X className=\"h-4 w-4 mr-1\" />\n            Limpar\n          </Button>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <Card className={className}>\n      <CardHeader className=\"pb-4\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <CardTitle className=\"flex items-center space-x-2\">\n              <CalendarDays className=\"h-5 w-5\" />\n              <span>Filtros de Período</span>\n            </CardTitle>\n            <CardDescription>\n              Selecione o período e critérios para análise\n            </CardDescription>\n          </div>\n          {filtrosAtivos > 0 && (\n            <Button variant=\"outline\" size=\"sm\" onClick={limparFiltros}>\n              <X className=\"h-4 w-4 mr-1\" />\n              Limpar Filtros\n            </Button>\n          )}\n        </div>\n      </CardHeader>\n      <CardContent className=\"space-y-6\">\n        {/* Seleção de período */}\n        <div className=\"space-y-3\">\n          <Label className=\"text-sm font-medium\">Período</Label>\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-2\">\n            {PERIODOS_PREDEFINIDOS.map(periodo => (\n              <Button\n                key={periodo.valor}\n                variant={\n                  filtros.periodo === periodo.valor ? 'default' : 'outline'\n                }\n                size=\"sm\"\n                onClick={() => handlePeriodoChange(periodo.valor)}\n                className=\"justify-start h-auto p-3\"\n              >\n                <div className=\"text-left\">\n                  <div className=\"font-medium text-xs\">{periodo.label}</div>\n                  <div className=\"text-xs opacity-70\">{periodo.descricao}</div>\n                </div>\n              </Button>\n            ))}\n          </div>\n        </div>\n\n        {/* Datas personalizadas */}\n        {filtros.periodo === 'personalizado' && (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"dataInicio\">Data de Início</Label>\n              <Input\n                id=\"dataInicio\"\n                type=\"date\"\n                value={filtros.dataInicio || ''}\n                onChange={e => handleDataChange('dataInicio', e.target.value)}\n              />\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"dataFim\">Data de Fim</Label>\n              <Input\n                id=\"dataFim\"\n                type=\"date\"\n                value={filtros.dataFim || ''}\n                onChange={e => handleDataChange('dataFim', e.target.value)}\n              />\n            </div>\n          </div>\n        )}\n\n        {/* Filtros avançados */}\n        {mostrarFiltrosAvancados && (\n          <>\n            <div className=\"flex items-center justify-between\">\n              <Label className=\"text-sm font-medium\">Filtros Avançados</Label>\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => setMostrarAvancados(!mostrarAvancados)}\n              >\n                {mostrarAvancados ? 'Ocultar' : 'Mostrar'}\n              </Button>\n            </div>\n\n            {mostrarAvancados && (\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 pt-4 border-t\">\n                {/* Filtro por setor */}\n                {setores.length > 0 && (\n                  <div className=\"space-y-2\">\n                    <Label>Setor</Label>\n                    <Select\n                      value={filtros.setor || ''}\n                      onValueChange={valor =>\n                        onFiltrosChange({\n                          ...filtros,\n                          setor: valor || undefined,\n                        })\n                      }\n                    >\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Todos os setores\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"\">Todos os setores</SelectItem>\n                        {setores.map(setor => (\n                          <SelectItem key={setor.id} value={setor.id}>\n                            {setor.nome}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                  </div>\n                )}\n\n                {/* Filtro por cargo */}\n                {cargos.length > 0 && (\n                  <div className=\"space-y-2\">\n                    <Label>Cargo</Label>\n                    <Select\n                      value={filtros.cargo || ''}\n                      onValueChange={valor =>\n                        onFiltrosChange({\n                          ...filtros,\n                          cargo: valor || undefined,\n                        })\n                      }\n                    >\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Todos os cargos\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"\">Todos os cargos</SelectItem>\n                        {cargos.map(cargo => (\n                          <SelectItem key={cargo.id} value={cargo.id}>\n                            {cargo.nome}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                  </div>\n                )}\n\n                {/* Filtro por status */}\n                <div className=\"space-y-2\">\n                  <Label>Status</Label>\n                  <Select\n                    value={filtros.status || ''}\n                    onValueChange={valor =>\n                      onFiltrosChange({\n                        ...filtros,\n                        status: (valor as any) || undefined,\n                      })\n                    }\n                  >\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"Todos os status\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"\">Todos os status</SelectItem>\n                      {STATUS_OPCOES.map(status => (\n                        <SelectItem key={status.valor} value={status.valor}>\n                          <div className=\"flex items-center space-x-2\">\n                            <div\n                              className={cn('w-2 h-2 rounded-full', status.cor)}\n                            />\n                            <span>{status.label}</span>\n                          </div>\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n              </div>\n            )}\n          </>\n        )}\n\n        {/* Resumo dos filtros ativos */}\n        {filtrosAtivos > 0 && (\n          <div className=\"pt-4 border-t\">\n            <Label className=\"text-sm font-medium mb-2 block\">\n              Filtros Ativos\n            </Label>\n            <div className=\"flex flex-wrap gap-2\">\n              {filtros.setor && (\n                <Badge variant=\"secondary\">\n                  Setor:{' '}\n                  {setores.find(s => s.id === filtros.setor)?.nome ||\n                    filtros.setor}\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"h-auto p-0 ml-1\"\n                    onClick={() =>\n                      onFiltrosChange({ ...filtros, setor: undefined })\n                    }\n                  >\n                    <X className=\"h-3 w-3\" />\n                  </Button>\n                </Badge>\n              )}\n              {filtros.cargo && (\n                <Badge variant=\"secondary\">\n                  Cargo:{' '}\n                  {cargos.find(c => c.id === filtros.cargo)?.nome ||\n                    filtros.cargo}\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"h-auto p-0 ml-1\"\n                    onClick={() =>\n                      onFiltrosChange({ ...filtros, cargo: undefined })\n                    }\n                  >\n                    <X className=\"h-3 w-3\" />\n                  </Button>\n                </Badge>\n              )}\n              {filtros.status && (\n                <Badge variant=\"secondary\">\n                  Status:{' '}\n                  {STATUS_OPCOES.find(s => s.valor === filtros.status)?.label ||\n                    filtros.status}\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"h-auto p-0 ml-1\"\n                    onClick={() =>\n                      onFiltrosChange({ ...filtros, status: undefined })\n                    }\n                  >\n                    <X className=\"h-3 w-3\" />\n                  </Button>\n                </Badge>\n              )}\n            </div>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default FiltrosPeriodo;\n"],"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","ignoreList":[]}