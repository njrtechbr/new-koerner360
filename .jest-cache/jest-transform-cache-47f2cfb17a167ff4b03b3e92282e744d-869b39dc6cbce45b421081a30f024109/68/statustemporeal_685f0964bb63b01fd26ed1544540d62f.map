{"version":3,"names":["cov_25ru9igdin","actualCoverage","s","IndicadorStatusSimples","f","StatusTempoReal","default","_default","status","carregando","b","ativo","intervalo","onForcarAtualizacao","onReconectar","onToggleAtivo","className","compacto","obterCorStatus","conectado","erro","obterIconeStatus","_jsxruntime","jsx","_lucidereact","Pause","RefreshCw","Wifi","WifiOff","AlertTriangle","obterTextoStatus","obterDescricaoStatus","ultimaAtualizacao","tempoDecorrido","_datefns","formatDistanceToNow","addSuffix","locale","_locale","ptBR","formatarIntervalo","ms","segundos","Math","floor","minutos","_tooltip","TooltipProvider","jsxs","Tooltip","TooltipTrigger","asChild","_badge","Badge","variant","TooltipContent","tentativasReconexao","_button","Button","size","onClick","disabled","Play","_card","Card","CardContent","Fragment","Clock","toLocaleTimeString"],"sources":["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\components\\metricas\\status-tempo-real.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Card, CardContent } from '@/components/ui/card';\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from '@/components/ui/tooltip';\nimport {\n  Wifi,\n  WifiOff,\n  RefreshCw,\n  Clock,\n  AlertTriangle,\n  CheckCircle,\n  XCircle,\n  Pause,\n  Play,\n} from 'lucide-react';\nimport { StatusConexao } from '@/hooks/use-metricas-tempo-real';\nimport { formatDistanceToNow } from 'date-fns';\nimport { ptBR } from 'date-fns/locale';\n\n/**\n * Props do componente de status em tempo real\n */\nexport interface StatusTempoRealProps {\n  status: StatusConexao;\n  carregando?: boolean;\n  ativo?: boolean;\n  intervalo?: number;\n  onForcarAtualizacao?: () => void;\n  onReconectar?: () => void;\n  onToggleAtivo?: (ativo: boolean) => void;\n  className?: string;\n  compacto?: boolean;\n}\n\n/**\n * Componente para exibir status de conexão em tempo real\n */\nexport function StatusTempoReal({\n  status,\n  carregando = false,\n  ativo = true,\n  intervalo = 30000,\n  onForcarAtualizacao,\n  onReconectar,\n  onToggleAtivo,\n  className = '',\n  compacto = false,\n}: StatusTempoRealProps) {\n  // Função para obter cor do status\n  const obterCorStatus = () => {\n    if (!ativo) return 'secondary';\n    if (carregando) return 'default';\n    if (status.conectado) return 'success';\n    if (status.erro) return 'destructive';\n    return 'warning';\n  };\n\n  // Função para obter ícone do status\n  const obterIconeStatus = () => {\n    if (!ativo) return <Pause className=\"h-3 w-3\" />;\n    if (carregando) return <RefreshCw className=\"h-3 w-3 animate-spin\" />;\n    if (status.conectado) return <Wifi className=\"h-3 w-3\" />;\n    if (status.erro) return <WifiOff className=\"h-3 w-3\" />;\n    return <AlertTriangle className=\"h-3 w-3\" />;\n  };\n\n  // Função para obter texto do status\n  const obterTextoStatus = () => {\n    if (!ativo) return 'Pausado';\n    if (carregando) return 'Atualizando...';\n    if (status.conectado) return 'Conectado';\n    if (status.erro) return 'Desconectado';\n    return 'Aguardando...';\n  };\n\n  // Função para obter descrição detalhada\n  const obterDescricaoStatus = () => {\n    if (!ativo) {\n      return 'Atualização automática pausada';\n    }\n\n    if (carregando) {\n      return 'Buscando dados atualizados...';\n    }\n\n    if (status.conectado && status.ultimaAtualizacao) {\n      const tempoDecorrido = formatDistanceToNow(status.ultimaAtualizacao, {\n        addSuffix: true,\n        locale: ptBR,\n      });\n      return `Última atualização ${tempoDecorrido}`;\n    }\n\n    if (status.erro) {\n      return `Erro: ${status.erro}`;\n    }\n\n    return 'Aguardando primeira atualização';\n  };\n\n  // Função para formatar intervalo\n  const formatarIntervalo = (ms: number) => {\n    const segundos = Math.floor(ms / 1000);\n    if (segundos < 60) return `${segundos}s`;\n    const minutos = Math.floor(segundos / 60);\n    return `${minutos}m`;\n  };\n\n  // Renderização compacta\n  if (compacto) {\n    return (\n      <TooltipProvider>\n        <div className={`flex items-center gap-2 ${className}`}>\n          <Tooltip>\n            <TooltipTrigger asChild>\n              <Badge\n                variant={obterCorStatus() as any}\n                className=\"flex items-center gap-1 cursor-help\"\n              >\n                {obterIconeStatus()}\n                <span className=\"text-xs\">{obterTextoStatus()}</span>\n              </Badge>\n            </TooltipTrigger>\n            <TooltipContent>\n              <div className=\"text-sm\">\n                <p className=\"font-medium\">{obterTextoStatus()}</p>\n                <p className=\"text-muted-foreground\">\n                  {obterDescricaoStatus()}\n                </p>\n                <p className=\"text-xs mt-1\">\n                  Intervalo: {formatarIntervalo(intervalo)}\n                </p>\n                {status.tentativasReconexao > 0 && (\n                  <p className=\"text-xs text-yellow-600\">\n                    Tentativas de reconexão: {status.tentativasReconexao}\n                  </p>\n                )}\n              </div>\n            </TooltipContent>\n          </Tooltip>\n\n          {/* Botões de ação */}\n          <div className=\"flex items-center gap-1\">\n            {onForcarAtualizacao && (\n              <Tooltip>\n                <TooltipTrigger asChild>\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={onForcarAtualizacao}\n                    disabled={carregando}\n                    className=\"h-6 w-6 p-0\"\n                  >\n                    <RefreshCw\n                      className={`h-3 w-3 ${carregando ? 'animate-spin' : ''}`}\n                    />\n                  </Button>\n                </TooltipTrigger>\n                <TooltipContent>\n                  <p>Forçar atualização</p>\n                </TooltipContent>\n              </Tooltip>\n            )}\n\n            {onToggleAtivo && (\n              <Tooltip>\n                <TooltipTrigger asChild>\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={() => onToggleAtivo(!ativo)}\n                    className=\"h-6 w-6 p-0\"\n                  >\n                    {ativo ? (\n                      <Pause className=\"h-3 w-3\" />\n                    ) : (\n                      <Play className=\"h-3 w-3\" />\n                    )}\n                  </Button>\n                </TooltipTrigger>\n                <TooltipContent>\n                  <p>{ativo ? 'Pausar' : 'Retomar'} atualização automática</p>\n                </TooltipContent>\n              </Tooltip>\n            )}\n          </div>\n        </div>\n      </TooltipProvider>\n    );\n  }\n\n  // Renderização completa\n  return (\n    <Card className={className}>\n      <CardContent className=\"p-4\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-3\">\n            {/* Indicador de status */}\n            <div className=\"flex items-center gap-2\">\n              <div\n                className={`\n                w-3 h-3 rounded-full flex items-center justify-center\n                ${status.conectado && ativo ? 'bg-green-500' : ''}\n                ${!status.conectado && ativo ? 'bg-red-500' : ''}\n                ${!ativo ? 'bg-gray-400' : ''}\n                ${carregando ? 'bg-blue-500 animate-pulse' : ''}\n              `}\n              >\n                {carregando && (\n                  <RefreshCw className=\"h-2 w-2 text-white animate-spin\" />\n                )}\n              </div>\n\n              <div>\n                <div className=\"flex items-center gap-2\">\n                  <span className=\"font-medium text-sm\">\n                    {obterTextoStatus()}\n                  </span>\n                  <Badge variant={obterCorStatus() as any} className=\"text-xs\">\n                    {formatarIntervalo(intervalo)}\n                  </Badge>\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  {obterDescricaoStatus()}\n                </p>\n              </div>\n            </div>\n          </div>\n\n          {/* Botões de ação */}\n          <div className=\"flex items-center gap-2\">\n            {status.erro && onReconectar && (\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={onReconectar}\n                className=\"text-xs\"\n              >\n                <Wifi className=\"h-3 w-3 mr-1\" />\n                Reconectar\n              </Button>\n            )}\n\n            {onForcarAtualizacao && (\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={onForcarAtualizacao}\n                disabled={carregando}\n                className=\"text-xs\"\n              >\n                <RefreshCw\n                  className={`h-3 w-3 mr-1 ${carregando ? 'animate-spin' : ''}`}\n                />\n                Atualizar\n              </Button>\n            )}\n\n            {onToggleAtivo && (\n              <Button\n                variant={ativo ? 'secondary' : 'default'}\n                size=\"sm\"\n                onClick={() => onToggleAtivo(!ativo)}\n                className=\"text-xs\"\n              >\n                {ativo ? (\n                  <>\n                    <Pause className=\"h-3 w-3 mr-1\" />\n                    Pausar\n                  </>\n                ) : (\n                  <>\n                    <Play className=\"h-3 w-3 mr-1\" />\n                    Retomar\n                  </>\n                )}\n              </Button>\n            )}\n          </div>\n        </div>\n\n        {/* Informações adicionais */}\n        {(status.tentativasReconexao > 0 || status.ultimaAtualizacao) && (\n          <div className=\"mt-3 pt-3 border-t border-border\">\n            <div className=\"flex items-center justify-between text-xs text-muted-foreground\">\n              {status.ultimaAtualizacao && (\n                <div className=\"flex items-center gap-1\">\n                  <Clock className=\"h-3 w-3\" />\n                  <span>\n                    Última atualização:{' '}\n                    {status.ultimaAtualizacao.toLocaleTimeString('pt-BR')}\n                  </span>\n                </div>\n              )}\n\n              {status.tentativasReconexao > 0 && (\n                <div className=\"flex items-center gap-1 text-yellow-600\">\n                  <AlertTriangle className=\"h-3 w-3\" />\n                  <span>Tentativas: {status.tentativasReconexao}</span>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n\n/**\n * Componente de indicador simples de status\n */\nexport function IndicadorStatusSimples({\n  conectado,\n  carregando,\n  ativo = true,\n  className = '',\n}: {\n  conectado: boolean;\n  carregando?: boolean;\n  ativo?: boolean;\n  className?: string;\n}) {\n  return (\n    <TooltipProvider>\n      <Tooltip>\n        <TooltipTrigger asChild>\n          <div className={`flex items-center gap-1 ${className}`}>\n            <div\n              className={`\n              w-2 h-2 rounded-full\n              ${!ativo ? 'bg-gray-400' : ''}\n              ${ativo && conectado && !carregando ? 'bg-green-500' : ''}\n              ${ativo && !conectado && !carregando ? 'bg-red-500' : ''}\n              ${carregando ? 'bg-blue-500 animate-pulse' : ''}\n            `}\n            />\n            <span className=\"text-xs text-muted-foreground\">\n              {!ativo\n                ? 'Pausado'\n                : carregando\n                  ? 'Atualizando'\n                  : conectado\n                    ? 'Online'\n                    : 'Offline'}\n            </span>\n          </div>\n        </TooltipTrigger>\n        <TooltipContent>\n          <p>\n            {!ativo\n              ? 'Atualização pausada'\n              : carregando\n                ? 'Buscando dados...'\n                : conectado\n                  ? 'Conectado e atualizado'\n                  : 'Desconectado'}\n          </p>\n        </TooltipContent>\n      </Tooltip>\n    </TooltipProvider>\n  );\n}\n\nexport default StatusTempoReal;\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","ignoreList":[]}