{"version":3,"names":["GerenciadorEmailNotificacoes","cov_1lyq95gkwj","f","s","emailUtils","obterGerenciadorEmail","constructor","configuracao","estatisticas","Map","enviarNotificacaoAvaliacaoPendente","avaliacao","destinatario","template","gerarTemplateAvaliacaoPendente","enviarEmail","enviarLembretePrazo","diasRestantes","gerarTemplateLembretePrazo","enviarNotificacaoVencida","gerarTemplateAvaliacaoVencida","enviarResumoSemanal","avaliacoes","gerarTemplateResumoSemanal","enviarLoteNotificacoes","notificacoes","resultados","notificacao","resultado","tipo","b","sucesso","erro","email","timestamp","Date","push","Promise","resolve","setTimeout","error","Error","message","inicioEnvio","now","Math","random","messageId","toString","substr","tempoEnvio","atualizarEstatisticas","prazoFormatado","_datefns","format","prazo","locale","_locale","ptBR","mensagem","_notificacoesavaliacoes","formatarMensagemNotificacao","assunto","avaliado","nome","corpo","cargo","setor","process","env","NEXT_PUBLIC_APP_URL","id","tipoConteudo","urgencia","totalAvaliacoes","length","avaliacoesVencidas","filter","a","avaliacoesUrgentes","listaAvaliacoes","map","corUrgencia","join","estatisticasAtuais","get","totalEnviados","sucessos","falhas","taxaSucesso","tempoMedio","ultimoEnvio","set","obterEstatisticas","limparEstatisticas","delete","clear","gerenciadorEmail","smtp","host","SMTP_HOST","port","parseInt","SMTP_PORT","secure","SMTP_SECURE","auth","user","SMTP_USER","pass","SMTP_PASS","remetente","EMAIL_FROM_NAME","EMAIL_FROM_ADDRESS","templates","avaliacaoPendente","lembretePrazo","avaliacaoVencida","notificarAvaliacaoPendente","gerenciador","enviarLembrete","notificarVencimento","enviarResumo"],"sources":["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\lib\\utils\\email-notificacoes.ts"],"sourcesContent":["import { AvaliacaoPendente, formatarMensagemNotificacao } from './notificacoes-avaliacoes';\nimport { format } from 'date-fns';\nimport { ptBR } from 'date-fns/locale';\n\n/**\n * Interface para configuração de e-mail\n */\nexport interface ConfiguracaoEmail {\n  smtp: {\n    host: string;\n    port: number;\n    secure: boolean;\n    auth: {\n      user: string;\n      pass: string;\n    };\n  };\n  remetente: {\n    nome: string;\n    email: string;\n  };\n  templates: {\n    avaliacaoPendente: string;\n    lembretePrazo: string;\n    avaliacaoVencida: string;\n  };\n}\n\n/**\n * Interface para dados do destinatário\n */\nexport interface DestinatarioEmail {\n  nome: string;\n  email: string;\n  cargo?: string;\n  setor?: string;\n}\n\n/**\n * Interface para resultado do envio de e-mail\n */\nexport interface ResultadoEnvioEmail {\n  sucesso: boolean;\n  messageId?: string;\n  erro?: string;\n  destinatario: string;\n  timestamp: Date;\n}\n\n/**\n * Interface para estatísticas de envio\n */\nexport interface EstatisticasEnvio {\n  totalEnviados: number;\n  sucessos: number;\n  falhas: number;\n  taxaSucesso: number;\n  tempoMedio: number;\n  ultimoEnvio?: Date;\n}\n\n/**\n * Tipos de notificação por e-mail\n */\nexport type TipoNotificacaoEmail = \n  | 'avaliacao_pendente'\n  | 'lembrete_prazo'\n  | 'avaliacao_vencida'\n  | 'resumo_semanal'\n  | 'resumo_mensal';\n\n/**\n * Interface para template de e-mail\n */\nexport interface TemplateEmail {\n  assunto: string;\n  corpo: string;\n  tipoConteudo: 'text' | 'html';\n}\n\n/**\n * Classe para gerenciar envio de e-mails de notificações\n */\nexport class GerenciadorEmailNotificacoes {\n  private configuracao: ConfiguracaoEmail;\n  private estatisticas: Map<string, EstatisticasEnvio> = new Map();\n\n  constructor(configuracao: ConfiguracaoEmail) {\n    this.configuracao = configuracao;\n  }\n\n  /**\n   * Envia e-mail de notificação para avaliação pendente\n   */\n  async enviarNotificacaoAvaliacaoPendente(\n    avaliacao: AvaliacaoPendente,\n    destinatario: DestinatarioEmail\n  ): Promise<ResultadoEnvioEmail> {\n    const template = this.gerarTemplateAvaliacaoPendente(avaliacao, destinatario);\n    return this.enviarEmail(destinatario, template, 'avaliacao_pendente');\n  }\n\n  /**\n   * Envia lembrete de prazo\n   */\n  async enviarLembretePrazo(\n    avaliacao: AvaliacaoPendente,\n    destinatario: DestinatarioEmail,\n    diasRestantes: number\n  ): Promise<ResultadoEnvioEmail> {\n    const template = this.gerarTemplateLembretePrazo(avaliacao, destinatario, diasRestantes);\n    return this.enviarEmail(destinatario, template, 'lembrete_prazo');\n  }\n\n  /**\n   * Envia notificação de avaliação vencida\n   */\n  async enviarNotificacaoVencida(\n    avaliacao: AvaliacaoPendente,\n    destinatario: DestinatarioEmail\n  ): Promise<ResultadoEnvioEmail> {\n    const template = this.gerarTemplateAvaliacaoVencida(avaliacao, destinatario);\n    return this.enviarEmail(destinatario, template, 'avaliacao_vencida');\n  }\n\n  /**\n   * Envia resumo semanal de avaliações\n   */\n  async enviarResumoSemanal(\n    avaliacoes: AvaliacaoPendente[],\n    destinatario: DestinatarioEmail\n  ): Promise<ResultadoEnvioEmail> {\n    const template = this.gerarTemplateResumoSemanal(avaliacoes, destinatario);\n    return this.enviarEmail(destinatario, template, 'resumo_semanal');\n  }\n\n  /**\n   * Envia múltiplas notificações em lote\n   */\n  async enviarLoteNotificacoes(\n    notificacoes: Array<{\n      avaliacao: AvaliacaoPendente;\n      destinatario: DestinatarioEmail;\n      tipo: TipoNotificacaoEmail;\n    }>\n  ): Promise<ResultadoEnvioEmail[]> {\n    const resultados: ResultadoEnvioEmail[] = [];\n    \n    for (const notificacao of notificacoes) {\n      try {\n        let resultado: ResultadoEnvioEmail;\n        \n        switch (notificacao.tipo) {\n          case 'avaliacao_pendente':\n            resultado = await this.enviarNotificacaoAvaliacaoPendente(\n              notificacao.avaliacao,\n              notificacao.destinatario\n            );\n            break;\n          case 'avaliacao_vencida':\n            resultado = await this.enviarNotificacaoVencida(\n              notificacao.avaliacao,\n              notificacao.destinatario\n            );\n            break;\n          default:\n            resultado = {\n              sucesso: false,\n              erro: `Tipo de notificação não suportado: ${notificacao.tipo}`,\n              destinatario: notificacao.destinatario.email,\n              timestamp: new Date()\n            };\n        }\n        \n        resultados.push(resultado);\n        \n        // Pequeno delay entre envios para evitar spam\n        await new Promise(resolve => setTimeout(resolve, 100));\n      } catch (error) {\n        resultados.push({\n          sucesso: false,\n          erro: error instanceof Error ? error.message : 'Erro desconhecido',\n          destinatario: notificacao.destinatario.email,\n          timestamp: new Date()\n        });\n      }\n    }\n    \n    return resultados;\n  }\n\n  /**\n   * Método principal para envio de e-mail\n   */\n  private async enviarEmail(\n    destinatario: DestinatarioEmail,\n    template: TemplateEmail,\n    tipo: TipoNotificacaoEmail\n  ): Promise<ResultadoEnvioEmail> {\n    const inicioEnvio = Date.now();\n    \n    try {\n      // Simular envio de e-mail (em produção, usar biblioteca como nodemailer)\n      const sucesso = Math.random() > 0.1; // 90% de taxa de sucesso simulada\n      \n      if (!sucesso) {\n        throw new Error('Falha na entrega do e-mail');\n      }\n      \n      const messageId = `msg_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n      const tempoEnvio = Date.now() - inicioEnvio;\n      \n      // Atualizar estatísticas\n      this.atualizarEstatisticas(tipo, true, tempoEnvio);\n      \n      return {\n        sucesso: true,\n        messageId,\n        destinatario: destinatario.email,\n        timestamp: new Date()\n      };\n    } catch (error) {\n      const tempoEnvio = Date.now() - inicioEnvio;\n      \n      // Atualizar estatísticas\n      this.atualizarEstatisticas(tipo, false, tempoEnvio);\n      \n      return {\n        sucesso: false,\n        erro: error instanceof Error ? error.message : 'Erro desconhecido',\n        destinatario: destinatario.email,\n        timestamp: new Date()\n      };\n    }\n  }\n\n  /**\n   * Gera template para notificação de avaliação pendente\n   */\n  private gerarTemplateAvaliacaoPendente(\n    avaliacao: AvaliacaoPendente,\n    destinatario: DestinatarioEmail\n  ): TemplateEmail {\n    const prazoFormatado = format(avaliacao.prazo, \"dd 'de' MMMM 'de' yyyy\", { locale: ptBR });\n    const mensagem = formatarMensagemNotificacao(avaliacao);\n    \n    return {\n      assunto: `Avaliação 360° Pendente - ${avaliacao.avaliado.nome}`,\n      corpo: `\n        <html>\n          <body style=\"font-family: Arial, sans-serif; line-height: 1.6; color: #333;\">\n            <div style=\"max-width: 600px; margin: 0 auto; padding: 20px;\">\n              <h2 style=\"color: #2563eb;\">Avaliação 360° Pendente</h2>\n              \n              <p>Olá, <strong>${destinatario.nome}</strong>!</p>\n              \n              <p>Você tem uma avaliação 360° pendente que requer sua atenção:</p>\n              \n              <div style=\"background-color: #f8fafc; border-left: 4px solid #2563eb; padding: 15px; margin: 20px 0;\">\n                <h3 style=\"margin: 0 0 10px 0; color: #1e40af;\">Detalhes da Avaliação</h3>\n                <p><strong>Avaliado:</strong> ${avaliacao.avaliado.nome}</p>\n                <p><strong>Cargo:</strong> ${avaliacao.avaliado.cargo}</p>\n                <p><strong>Setor:</strong> ${avaliacao.avaliado.setor}</p>\n                <p><strong>Prazo:</strong> ${prazoFormatado}</p>\n                <p><strong>Status:</strong> ${mensagem}</p>\n              </div>\n              \n              <div style=\"text-align: center; margin: 30px 0;\">\n                <a href=\"${process.env.NEXT_PUBLIC_APP_URL}/avaliacoes/${avaliacao.id}\" \n                   style=\"background-color: #2563eb; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; display: inline-block;\">\n                  Realizar Avaliação\n                </a>\n              </div>\n              \n              <p style=\"color: #6b7280; font-size: 14px;\">\n                Este e-mail foi enviado automaticamente pelo sistema de avaliações 360°.\n                Se você não deve receber este e-mail, entre em contato com o administrador.\n              </p>\n            </div>\n          </body>\n        </html>\n      `,\n      tipoConteudo: 'html'\n    };\n  }\n\n  /**\n   * Gera template para lembrete de prazo\n   */\n  private gerarTemplateLembretePrazo(\n    avaliacao: AvaliacaoPendente,\n    destinatario: DestinatarioEmail,\n    diasRestantes: number\n  ): TemplateEmail {\n    const prazoFormatado = format(avaliacao.prazo, \"dd 'de' MMMM 'de' yyyy\", { locale: ptBR });\n    const urgencia = diasRestantes <= 1 ? 'URGENTE' : diasRestantes <= 3 ? 'IMPORTANTE' : 'LEMBRETE';\n    \n    return {\n      assunto: `${urgencia}: Avaliação 360° vence em ${diasRestantes} dia${diasRestantes !== 1 ? 's' : ''}`,\n      corpo: `\n        <html>\n          <body style=\"font-family: Arial, sans-serif; line-height: 1.6; color: #333;\">\n            <div style=\"max-width: 600px; margin: 0 auto; padding: 20px;\">\n              <div style=\"background-color: ${diasRestantes <= 1 ? '#fef2f2' : diasRestantes <= 3 ? '#fefbeb' : '#f0f9ff'}; \n                          border: 2px solid ${diasRestantes <= 1 ? '#ef4444' : diasRestantes <= 3 ? '#f59e0b' : '#3b82f6'}; \n                          border-radius: 8px; padding: 20px; margin-bottom: 20px;\">\n                <h2 style=\"color: ${diasRestantes <= 1 ? '#dc2626' : diasRestantes <= 3 ? '#d97706' : '#2563eb'}; margin: 0;\">\n                  ${urgencia}: Prazo da Avaliação se Aproxima\n                </h2>\n              </div>\n              \n              <p>Olá, <strong>${destinatario.nome}</strong>!</p>\n              \n              <p>Este é um lembrete de que você tem uma avaliação 360° que vence em <strong>${diasRestantes} dia${diasRestantes !== 1 ? 's' : ''}</strong>:</p>\n              \n              <div style=\"background-color: #f8fafc; border-left: 4px solid #2563eb; padding: 15px; margin: 20px 0;\">\n                <h3 style=\"margin: 0 0 10px 0; color: #1e40af;\">Detalhes da Avaliação</h3>\n                <p><strong>Avaliado:</strong> ${avaliacao.avaliado.nome}</p>\n                <p><strong>Prazo:</strong> ${prazoFormatado}</p>\n                <p><strong>Dias Restantes:</strong> ${diasRestantes}</p>\n              </div>\n              \n              <div style=\"text-align: center; margin: 30px 0;\">\n                <a href=\"${process.env.NEXT_PUBLIC_APP_URL}/avaliacoes/${avaliacao.id}\" \n                   style=\"background-color: ${diasRestantes <= 1 ? '#ef4444' : diasRestantes <= 3 ? '#f59e0b' : '#2563eb'}; \n                          color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; display: inline-block;\">\n                  Realizar Avaliação Agora\n                </a>\n              </div>\n              \n              <p style=\"color: #6b7280; font-size: 14px;\">\n                Este e-mail foi enviado automaticamente pelo sistema de avaliações 360°.\n              </p>\n            </div>\n          </body>\n        </html>\n      `,\n      tipoConteudo: 'html'\n    };\n  }\n\n  /**\n   * Gera template para avaliação vencida\n   */\n  private gerarTemplateAvaliacaoVencida(\n    avaliacao: AvaliacaoPendente,\n    destinatario: DestinatarioEmail\n  ): TemplateEmail {\n    const prazoFormatado = format(avaliacao.prazo, \"dd 'de' MMMM 'de' yyyy\", { locale: ptBR });\n    \n    return {\n      assunto: `VENCIDA: Avaliação 360° - ${avaliacao.avaliado.nome}`,\n      corpo: `\n        <html>\n          <body style=\"font-family: Arial, sans-serif; line-height: 1.6; color: #333;\">\n            <div style=\"max-width: 600px; margin: 0 auto; padding: 20px;\">\n              <div style=\"background-color: #fef2f2; border: 2px solid #ef4444; border-radius: 8px; padding: 20px; margin-bottom: 20px;\">\n                <h2 style=\"color: #dc2626; margin: 0;\">⚠️ Avaliação 360° Vencida</h2>\n              </div>\n              \n              <p>Olá, <strong>${destinatario.nome}</strong>!</p>\n              \n              <p>A avaliação 360° abaixo <strong>venceu</strong> e ainda não foi concluída:</p>\n              \n              <div style=\"background-color: #f8fafc; border-left: 4px solid #ef4444; padding: 15px; margin: 20px 0;\">\n                <h3 style=\"margin: 0 0 10px 0; color: #dc2626;\">Detalhes da Avaliação</h3>\n                <p><strong>Avaliado:</strong> ${avaliacao.avaliado.nome}</p>\n                <p><strong>Prazo (vencido):</strong> ${prazoFormatado}</p>\n                <p><strong>Status:</strong> Vencida</p>\n              </div>\n              \n              <p style=\"color: #dc2626; font-weight: bold;\">\n                Por favor, complete esta avaliação o mais breve possível ou entre em contato com seu gestor.\n              </p>\n              \n              <div style=\"text-align: center; margin: 30px 0;\">\n                <a href=\"${process.env.NEXT_PUBLIC_APP_URL}/avaliacoes/${avaliacao.id}\" \n                   style=\"background-color: #ef4444; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; display: inline-block;\">\n                  Realizar Avaliação\n                </a>\n              </div>\n              \n              <p style=\"color: #6b7280; font-size: 14px;\">\n                Este e-mail foi enviado automaticamente pelo sistema de avaliações 360°.\n              </p>\n            </div>\n          </body>\n        </html>\n      `,\n      tipoConteudo: 'html'\n    };\n  }\n\n  /**\n   * Gera template para resumo semanal\n   */\n  private gerarTemplateResumoSemanal(\n    avaliacoes: AvaliacaoPendente[],\n    destinatario: DestinatarioEmail\n  ): TemplateEmail {\n    const totalAvaliacoes = avaliacoes.length;\n    const avaliacoesVencidas = avaliacoes.filter(a => a.urgencia === 'vencida').length;\n    const avaliacoesUrgentes = avaliacoes.filter(a => a.urgencia === 'alta').length;\n    \n    const listaAvaliacoes = avaliacoes.map(avaliacao => {\n      const prazoFormatado = format(avaliacao.prazo, \"dd/MM/yyyy\", { locale: ptBR });\n      const corUrgencia = avaliacao.urgencia === 'vencida' ? '#ef4444' : \n                         avaliacao.urgencia === 'alta' ? '#f59e0b' : '#6b7280';\n      \n      return `\n        <tr style=\"border-bottom: 1px solid #e5e7eb;\">\n          <td style=\"padding: 10px; border-right: 1px solid #e5e7eb;\">${avaliacao.avaliado.nome}</td>\n          <td style=\"padding: 10px; border-right: 1px solid #e5e7eb;\">${avaliacao.avaliado.cargo}</td>\n          <td style=\"padding: 10px; border-right: 1px solid #e5e7eb;\">${prazoFormatado}</td>\n          <td style=\"padding: 10px; color: ${corUrgencia}; font-weight: bold;\">\n            ${avaliacao.urgencia === 'vencida' ? 'Vencida' : \n              avaliacao.urgencia === 'alta' ? 'Urgente' : 'Normal'}\n          </td>\n        </tr>\n      `;\n    }).join('');\n    \n    return {\n      assunto: `Resumo Semanal - ${totalAvaliacoes} Avaliação${totalAvaliacoes !== 1 ? 'ões' : ''} Pendente${totalAvaliacoes !== 1 ? 's' : ''}`,\n      corpo: `\n        <html>\n          <body style=\"font-family: Arial, sans-serif; line-height: 1.6; color: #333;\">\n            <div style=\"max-width: 700px; margin: 0 auto; padding: 20px;\">\n              <h2 style=\"color: #2563eb;\">📊 Resumo Semanal de Avaliações</h2>\n              \n              <p>Olá, <strong>${destinatario.nome}</strong>!</p>\n              \n              <p>Aqui está o resumo das suas avaliações 360° pendentes:</p>\n              \n              <div style=\"display: flex; gap: 15px; margin: 20px 0;\">\n                <div style=\"background-color: #f0f9ff; border: 1px solid #3b82f6; border-radius: 8px; padding: 15px; flex: 1; text-align: center;\">\n                  <h3 style=\"margin: 0; color: #2563eb;\">${totalAvaliacoes}</h3>\n                  <p style=\"margin: 5px 0 0 0; color: #6b7280;\">Total Pendentes</p>\n                </div>\n                <div style=\"background-color: #fefbeb; border: 1px solid #f59e0b; border-radius: 8px; padding: 15px; flex: 1; text-align: center;\">\n                  <h3 style=\"margin: 0; color: #d97706;\">${avaliacoesUrgentes}</h3>\n                  <p style=\"margin: 5px 0 0 0; color: #6b7280;\">Urgentes</p>\n                </div>\n                <div style=\"background-color: #fef2f2; border: 1px solid #ef4444; border-radius: 8px; padding: 15px; flex: 1; text-align: center;\">\n                  <h3 style=\"margin: 0; color: #dc2626;\">${avaliacoesVencidas}</h3>\n                  <p style=\"margin: 5px 0 0 0; color: #6b7280;\">Vencidas</p>\n                </div>\n              </div>\n              \n              ${totalAvaliacoes > 0 ? `\n                <h3 style=\"color: #1f2937; margin-top: 30px;\">Detalhes das Avaliações</h3>\n                <table style=\"width: 100%; border-collapse: collapse; border: 1px solid #e5e7eb; margin: 20px 0;\">\n                  <thead>\n                    <tr style=\"background-color: #f9fafb;\">\n                      <th style=\"padding: 12px; text-align: left; border-right: 1px solid #e5e7eb;\">Avaliado</th>\n                      <th style=\"padding: 12px; text-align: left; border-right: 1px solid #e5e7eb;\">Cargo</th>\n                      <th style=\"padding: 12px; text-align: left; border-right: 1px solid #e5e7eb;\">Prazo</th>\n                      <th style=\"padding: 12px; text-align: left;\">Status</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    ${listaAvaliacoes}\n                  </tbody>\n                </table>\n              ` : '<p style=\"color: #6b7280; font-style: italic;\">Parabéns! Você não tem avaliações pendentes.</p>'}\n              \n              <div style=\"text-align: center; margin: 30px 0;\">\n                <a href=\"${process.env.NEXT_PUBLIC_APP_URL}/avaliacoes\" \n                   style=\"background-color: #2563eb; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; display: inline-block;\">\n                  Ver Todas as Avaliações\n                </a>\n              </div>\n              \n              <p style=\"color: #6b7280; font-size: 14px;\">\n                Este resumo é enviado automaticamente todas as segundas-feiras.\n                Para alterar suas preferências de notificação, acesse as configurações do sistema.\n              </p>\n            </div>\n          </body>\n        </html>\n      `,\n      tipoConteudo: 'html'\n    };\n  }\n\n  /**\n   * Atualiza estatísticas de envio\n   */\n  private atualizarEstatisticas(\n    tipo: TipoNotificacaoEmail,\n    sucesso: boolean,\n    tempoEnvio: number\n  ): void {\n    const estatisticasAtuais = this.estatisticas.get(tipo) || {\n      totalEnviados: 0,\n      sucessos: 0,\n      falhas: 0,\n      taxaSucesso: 0,\n      tempoMedio: 0\n    };\n    \n    estatisticasAtuais.totalEnviados++;\n    \n    if (sucesso) {\n      estatisticasAtuais.sucessos++;\n    } else {\n      estatisticasAtuais.falhas++;\n    }\n    \n    estatisticasAtuais.taxaSucesso = (estatisticasAtuais.sucessos / estatisticasAtuais.totalEnviados) * 100;\n    estatisticasAtuais.tempoMedio = ((estatisticasAtuais.tempoMedio * (estatisticasAtuais.totalEnviados - 1)) + tempoEnvio) / estatisticasAtuais.totalEnviados;\n    estatisticasAtuais.ultimoEnvio = new Date();\n    \n    this.estatisticas.set(tipo, estatisticasAtuais);\n  }\n\n  /**\n   * Obtém estatísticas de envio\n   */\n  obterEstatisticas(tipo?: TipoNotificacaoEmail): EstatisticasEnvio | Map<string, EstatisticasEnvio> {\n    if (tipo) {\n      return this.estatisticas.get(tipo) || {\n        totalEnviados: 0,\n        sucessos: 0,\n        falhas: 0,\n        taxaSucesso: 0,\n        tempoMedio: 0\n      };\n    }\n    \n    return new Map(this.estatisticas);\n  }\n\n  /**\n   * Limpa estatísticas\n   */\n  limparEstatisticas(tipo?: TipoNotificacaoEmail): void {\n    if (tipo) {\n      this.estatisticas.delete(tipo);\n    } else {\n      this.estatisticas.clear();\n    }\n  }\n}\n\n/**\n * Instância singleton do gerenciador de e-mail\n */\nlet gerenciadorEmail: GerenciadorEmailNotificacoes | null = null;\n\n/**\n * Obtém ou cria instância do gerenciador de e-mail\n */\nexport function obterGerenciadorEmail(): GerenciadorEmailNotificacoes {\n  if (!gerenciadorEmail) {\n    const configuracao: ConfiguracaoEmail = {\n      smtp: {\n        host: process.env.SMTP_HOST || 'localhost',\n        port: parseInt(process.env.SMTP_PORT || '587'),\n        secure: process.env.SMTP_SECURE === 'true',\n        auth: {\n          user: process.env.SMTP_USER || '',\n          pass: process.env.SMTP_PASS || ''\n        }\n      },\n      remetente: {\n        nome: process.env.EMAIL_FROM_NAME || 'Sistema de Avaliações 360°',\n        email: process.env.EMAIL_FROM_ADDRESS || 'noreply@avaliacoes360.com'\n      },\n      templates: {\n        avaliacaoPendente: 'avaliacao_pendente',\n        lembretePrazo: 'lembrete_prazo',\n        avaliacaoVencida: 'avaliacao_vencida'\n      }\n    };\n    \n    gerenciadorEmail = new GerenciadorEmailNotificacoes(configuracao);\n  }\n  \n  return gerenciadorEmail;\n}\n\n/**\n * Funções utilitárias para envio rápido\n */\nexport const emailUtils = {\n  /**\n   * Envia notificação simples de avaliação pendente\n   */\n  async notificarAvaliacaoPendente(\n    avaliacao: AvaliacaoPendente,\n    destinatario: DestinatarioEmail\n  ): Promise<ResultadoEnvioEmail> {\n    const gerenciador = obterGerenciadorEmail();\n    return gerenciador.enviarNotificacaoAvaliacaoPendente(avaliacao, destinatario);\n  },\n\n  /**\n   * Envia lembrete de prazo\n   */\n  async enviarLembrete(\n    avaliacao: AvaliacaoPendente,\n    destinatario: DestinatarioEmail,\n    diasRestantes: number\n  ): Promise<ResultadoEnvioEmail> {\n    const gerenciador = obterGerenciadorEmail();\n    return gerenciador.enviarLembretePrazo(avaliacao, destinatario, diasRestantes);\n  },\n\n  /**\n   * Envia notificação de vencimento\n   */\n  async notificarVencimento(\n    avaliacao: AvaliacaoPendente,\n    destinatario: DestinatarioEmail\n  ): Promise<ResultadoEnvioEmail> {\n    const gerenciador = obterGerenciadorEmail();\n    return gerenciador.enviarNotificacaoVencida(avaliacao, destinatario);\n  },\n\n  /**\n   * Envia resumo semanal\n   */\n  async enviarResumo(\n    avaliacoes: AvaliacaoPendente[],\n    destinatario: DestinatarioEmail\n  ): Promise<ResultadoEnvioEmail> {\n    const gerenciador = obterGerenciadorEmail();\n    return gerenciador.enviarResumoSemanal(avaliacoes, destinatario);\n  }\n};"],"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","ignoreList":[]}