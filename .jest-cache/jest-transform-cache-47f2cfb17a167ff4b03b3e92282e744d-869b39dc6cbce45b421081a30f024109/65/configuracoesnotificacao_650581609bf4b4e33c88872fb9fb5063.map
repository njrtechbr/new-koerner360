{"version":3,"sources":["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\components\\preferencias\\configuracoes-notificacao.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Switch } from '@/components/ui/switch';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Separator } from '@/components/ui/separator';\nimport { Badge } from '@/components/ui/badge';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';\nimport { Calendar } from '@/components/ui/calendar';\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components/ui/popover';\nimport { \n  Bell, \n  Mail, \n  Clock, \n  Filter, \n  Pause, \n  Play, \n  RotateCcw, \n  Save, \n  Calendar as CalendarIcon,\n  AlertTriangle,\n  Info,\n  Settings\n} from 'lucide-react';\nimport { usePreferenciasNotificacao } from '@/hooks/use-preferencias-notificacao';\nimport { PreferenciasNotificacaoInput } from '@/lib/types/preferencias-notificacao';\nimport { format } from 'date-fns';\nimport { ptBR } from 'date-fns/locale';\nimport { cn } from '@/lib/utils';\n\ninterface ConfiguracoesNotificacaoProps {\n  className?: string;\n}\n\nexport function ConfiguracoesNotificacao({ className }: ConfiguracoesNotificacaoProps) {\n  const {\n    preferencias,\n    carregando,\n    erro,\n    atualizarPreferencias,\n    resetarPreferencias,\n    pausarNotificacoes,\n    retomarNotificacoes,\n  } = usePreferenciasNotificacao();\n\n  const [configuracoes, setConfiguracoes] = useState<PreferenciasNotificacaoInput>({});\n  const [salvando, setSalvando] = useState(false);\n  const [dialogPausa, setDialogPausa] = useState(false);\n  const [dataFimPausa, setDataFimPausa] = useState<Date>();\n  const [motivoPausa, setMotivoPausa] = useState('');\n\n  // Atualiza configurações locais quando preferências carregam\n  React.useEffect(() => {\n    if (preferencias) {\n      setConfiguracoes({\n        notificacoesAtivas: preferencias.notificacoesAtivas,\n        emailAtivo: preferencias.emailAtivo,\n        diasAntecedenciaLembrete: preferencias.diasAntecedenciaLembrete,\n        horarioEnvio: preferencias.horarioEnvio,\n        incluirFinsDeSemanaSemana: preferencias.incluirFinsDeSemanaSemana,\n        incluirFeriados: preferencias.incluirFeriados,\n        tiposNotificacao: { ...preferencias.tiposNotificacao },\n        urgenciaMinima: preferencias.urgenciaMinima,\n        frequenciaLembretes: { ...preferencias.frequenciaLembretes },\n        incluirDetalhesAvaliacao: preferencias.incluirDetalhesAvaliacao,\n        incluirLinkDireto: preferencias.incluirLinkDireto,\n        incluirResumoEstatisticas: preferencias.incluirResumoEstatisticas,\n        formatoEmail: preferencias.formatoEmail,\n        idiomaNotificacao: preferencias.idiomaNotificacao,\n        filtros: { ...preferencias.filtros },\n      });\n    }\n  }, [preferencias]);\n\n  const handleSalvar = async () => {\n    setSalvando(true);\n    await atualizarPreferencias(configuracoes);\n    setSalvando(false);\n  };\n\n  const handleResetar = async () => {\n    if (confirm('Tem certeza que deseja resetar todas as configurações para os valores padrão?')) {\n      await resetarPreferencias();\n    }\n  };\n\n  const handlePausarNotificacoes = async () => {\n    if (!dataFimPausa) return;\n    \n    const sucesso = await pausarNotificacoes(dataFimPausa, new Date(), motivoPausa);\n    if (sucesso) {\n      setDialogPausa(false);\n      setDataFimPausa(undefined);\n      setMotivoPausa('');\n    }\n  };\n\n  const handleRetomarNotificacoes = async () => {\n    if (confirm('Tem certeza que deseja retomar as notificações?')) {\n      await retomarNotificacoes();\n    }\n  };\n\n  const updateConfig = (key: string, value: any) => {\n    setConfiguracoes(prev => ({ ...prev, [key]: value }));\n  };\n\n  const updateNestedConfig = (parent: string, key: string, value: any) => {\n    setConfiguracoes(prev => ({\n      ...prev,\n      [parent]: {\n        ...prev[parent as keyof PreferenciasNotificacaoInput],\n        [key]: value,\n      },\n    }));\n  };\n\n  if (carregando && !preferencias) {\n    return (\n      <Card className={className}>\n        <CardContent className=\"flex items-center justify-center p-8\">\n          <div className=\"text-center\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary mx-auto mb-4\"></div>\n            <p className=\"text-muted-foreground\">Carregando configurações...</p>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (erro) {\n    return (\n      <Card className={className}>\n        <CardContent className=\"p-8\">\n          <Alert variant=\"destructive\">\n            <AlertTriangle className=\"h-4 w-4\" />\n            <AlertDescription>{erro}</AlertDescription>\n          </Alert>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  const notificacoesPausadas = preferencias?.pausarNotificacoes?.ativo;\n\n  return (\n    <div className={cn('space-y-6', className)}>\n      {/* Status das Notificações */}\n      {notificacoesPausadas && (\n        <Alert>\n          <Pause className=\"h-4 w-4\" />\n          <AlertDescription className=\"flex items-center justify-between\">\n            <span>\n              Notificações pausadas até{' '}\n              {preferencias?.pausarNotificacoes?.dataFim && \n                format(new Date(preferencias.pausarNotificacoes.dataFim), 'dd/MM/yyyy', { locale: ptBR })\n              }\n              {preferencias?.pausarNotificacoes?.motivo && (\n                <span className=\"text-muted-foreground ml-2\">\n                  - {preferencias.pausarNotificacoes.motivo}\n                </span>\n              )}\n            </span>\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={handleRetomarNotificacoes}\n              className=\"ml-4\"\n            >\n              <Play className=\"h-4 w-4 mr-2\" />\n              Retomar\n            </Button>\n          </AlertDescription>\n        </Alert>\n      )}\n\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Settings className=\"h-5 w-5\" />\n            Configurações de Notificação\n          </CardTitle>\n          <CardDescription>\n            Configure como e quando você deseja receber notificações sobre avaliações.\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <Tabs defaultValue=\"geral\" className=\"space-y-6\">\n            <TabsList className=\"grid w-full grid-cols-4\">\n              <TabsTrigger value=\"geral\">Geral</TabsTrigger>\n              <TabsTrigger value=\"tipos\">Tipos</TabsTrigger>\n              <TabsTrigger value=\"timing\">Timing</TabsTrigger>\n              <TabsTrigger value=\"filtros\">Filtros</TabsTrigger>\n            </TabsList>\n\n            {/* Configurações Gerais */}\n            <TabsContent value=\"geral\" className=\"space-y-6\">\n              <div className=\"grid gap-6\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"space-y-0.5\">\n                    <Label className=\"text-base\">Notificações Ativas</Label>\n                    <p className=\"text-sm text-muted-foreground\">\n                      Ativar ou desativar todas as notificações\n                    </p>\n                  </div>\n                  <Switch\n                    checked={configuracoes.notificacoesAtivas ?? false}\n                    onCheckedChange={(checked) => updateConfig('notificacoesAtivas', checked)}\n                  />\n                </div>\n\n                <Separator />\n\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"space-y-0.5\">\n                    <Label className=\"text-base flex items-center gap-2\">\n                      <Mail className=\"h-4 w-4\" />\n                      Notificações por E-mail\n                    </Label>\n                    <p className=\"text-sm text-muted-foreground\">\n                      Receber notificações por e-mail\n                    </p>\n                  </div>\n                  <Switch\n                    checked={configuracoes.emailAtivo ?? false}\n                    onCheckedChange={(checked) => updateConfig('emailAtivo', checked)}\n                    disabled={!configuracoes.notificacoesAtivas}\n                  />\n                </div>\n\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label>Formato do E-mail</Label>\n                    <Select\n                      value={configuracoes.formatoEmail || 'HTML'}\n                      onValueChange={(value) => updateConfig('formatoEmail', value)}\n                      disabled={!configuracoes.emailAtivo}\n                    >\n                      <SelectTrigger>\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"HTML\">HTML (Rico)</SelectItem>\n                        <SelectItem value=\"TEXTO\">Texto Simples</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label>Idioma</Label>\n                    <Select\n                      value={configuracoes.idiomaNotificacao || 'PT_BR'}\n                      onValueChange={(value) => updateConfig('idiomaNotificacao', value)}\n                    >\n                      <SelectTrigger>\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"PT_BR\">Português (BR)</SelectItem>\n                        <SelectItem value=\"EN\">English</SelectItem>\n                        <SelectItem value=\"ES\">Español</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                </div>\n\n                <Separator />\n\n                <div className=\"space-y-4\">\n                  <Label className=\"text-base\">Conteúdo das Notificações</Label>\n                  \n                  <div className=\"space-y-3\">\n                    <div className=\"flex items-center justify-between\">\n                      <Label className=\"text-sm font-normal\">Incluir detalhes da avaliação</Label>\n                      <Switch\n                        checked={configuracoes.incluirDetalhesAvaliacao ?? true}\n                        onCheckedChange={(checked) => updateConfig('incluirDetalhesAvaliacao', checked)}\n                      />\n                    </div>\n                    \n                    <div className=\"flex items-center justify-between\">\n                      <Label className=\"text-sm font-normal\">Incluir link direto</Label>\n                      <Switch\n                        checked={configuracoes.incluirLinkDireto ?? true}\n                        onCheckedChange={(checked) => updateConfig('incluirLinkDireto', checked)}\n                      />\n                    </div>\n                    \n                    <div className=\"flex items-center justify-between\">\n                      <Label className=\"text-sm font-normal\">Incluir resumo de estatísticas</Label>\n                      <Switch\n                        checked={configuracoes.incluirResumoEstatisticas ?? false}\n                        onCheckedChange={(checked) => updateConfig('incluirResumoEstatisticas', checked)}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </TabsContent>\n\n            {/* Tipos de Notificação */}\n            <TabsContent value=\"tipos\" className=\"space-y-6\">\n              <div className=\"space-y-4\">\n                <div className=\"space-y-2\">\n                  <Label className=\"text-base\">Urgência Mínima</Label>\n                  <Select\n                    value={configuracoes.urgenciaMinima || 'BAIXA'}\n                    onValueChange={(value) => updateConfig('urgenciaMinima', value)}\n                  >\n                    <SelectTrigger className=\"w-full\">\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"BAIXA\">Baixa</SelectItem>\n                      <SelectItem value=\"MEDIA\">Média</SelectItem>\n                      <SelectItem value=\"ALTA\">Alta</SelectItem>\n                    </SelectContent>\n                  </Select>\n                  <p className=\"text-sm text-muted-foreground\">\n                    Receber apenas notificações com urgência igual ou superior\n                  </p>\n                </div>\n\n                <Separator />\n\n                <div className=\"space-y-4\">\n                  <Label className=\"text-base\">Tipos de Notificação</Label>\n                  \n                  <div className=\"space-y-3\">\n                    {[\n                      { key: 'avaliacaoPendente', label: 'Avaliação Pendente', desc: 'Quando há avaliações aguardando' },\n                      { key: 'avaliacaoVencida', label: 'Avaliação Vencida', desc: 'Quando uma avaliação passou do prazo' },\n                      { key: 'avaliacaoProximaVencimento', label: 'Próxima do Vencimento', desc: 'Quando uma avaliação está próxima do prazo' },\n                      { key: 'novaAvaliacaoRecebida', label: 'Nova Avaliação', desc: 'Quando recebe uma nova avaliação' },\n                      { key: 'avaliacaoCompletada', label: 'Avaliação Completada', desc: 'Quando uma avaliação é finalizada' },\n                      { key: 'lembretePersonalizado', label: 'Lembrete Personalizado', desc: 'Lembretes criados manualmente' },\n                    ].map(({ key, label, desc }) => (\n                      <div key={key} className=\"flex items-center justify-between\">\n                        <div className=\"space-y-0.5\">\n                          <Label className=\"text-sm font-normal\">{label}</Label>\n                          <p className=\"text-xs text-muted-foreground\">{desc}</p>\n                        </div>\n                        <Switch\n                          checked={configuracoes.tiposNotificacao?.[key as keyof typeof configuracoes.tiposNotificacao] ?? true}\n                          onCheckedChange={(checked) => updateNestedConfig('tiposNotificacao', key, checked)}\n                        />\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                <Separator />\n\n                <div className=\"space-y-4\">\n                  <Label className=\"text-base\">Frequência de Lembretes</Label>\n                  \n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div className=\"space-y-2\">\n                      <Label className=\"text-sm\">Avaliações Pendentes</Label>\n                      <Select\n                        value={configuracoes.frequenciaLembretes?.avaliacaoPendente || 'SEMANAL'}\n                        onValueChange={(value) => updateNestedConfig('frequenciaLembretes', 'avaliacaoPendente', value)}\n                      >\n                        <SelectTrigger>\n                          <SelectValue />\n                        </SelectTrigger>\n                        <SelectContent>\n                          <SelectItem value=\"DIARIO\">Diário</SelectItem>\n                          <SelectItem value=\"SEMANAL\">Semanal</SelectItem>\n                          <SelectItem value=\"QUINZENAL\">Quinzenal</SelectItem>\n                          <SelectItem value=\"MENSAL\">Mensal</SelectItem>\n                          <SelectItem value=\"NUNCA\">Nunca</SelectItem>\n                        </SelectContent>\n                      </Select>\n                    </div>\n                    \n                    <div className=\"space-y-2\">\n                      <Label className=\"text-sm\">Avaliações Vencidas</Label>\n                      <Select\n                        value={configuracoes.frequenciaLembretes?.avaliacaoVencida || 'DIARIO'}\n                        onValueChange={(value) => updateNestedConfig('frequenciaLembretes', 'avaliacaoVencida', value)}\n                      >\n                        <SelectTrigger>\n                          <SelectValue />\n                        </SelectTrigger>\n                        <SelectContent>\n                          <SelectItem value=\"DIARIO\">Diário</SelectItem>\n                          <SelectItem value=\"SEMANAL\">Semanal</SelectItem>\n                          <SelectItem value=\"NUNCA\">Nunca</SelectItem>\n                        </SelectContent>\n                      </Select>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </TabsContent>\n\n            {/* Configurações de Timing */}\n            <TabsContent value=\"timing\" className=\"space-y-6\">\n              <div className=\"space-y-6\">\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label>Dias de Antecedência</Label>\n                    <Input\n                      type=\"number\"\n                      min=\"0\"\n                      max=\"30\"\n                      value={configuracoes.diasAntecedenciaLembrete || 3}\n                      onChange={(e) => updateConfig('diasAntecedenciaLembrete', parseInt(e.target.value))}\n                    />\n                    <p className=\"text-xs text-muted-foreground\">\n                      Quantos dias antes do prazo enviar lembretes\n                    </p>\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label>Horário de Envio</Label>\n                    <Input\n                      type=\"time\"\n                      value={configuracoes.horarioEnvio || '09:00'}\n                      onChange={(e) => updateConfig('horarioEnvio', e.target.value)}\n                    />\n                    <p className=\"text-xs text-muted-foreground\">\n                      Horário preferido para receber notificações\n                    </p>\n                  </div>\n                </div>\n\n                <Separator />\n\n                <div className=\"space-y-4\">\n                  <Label className=\"text-base\">Configurações de Calendário</Label>\n                  \n                  <div className=\"space-y-3\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"space-y-0.5\">\n                        <Label className=\"text-sm font-normal\">Incluir fins de semana</Label>\n                        <p className=\"text-xs text-muted-foreground\">\n                          Enviar notificações aos sábados e domingos\n                        </p>\n                      </div>\n                      <Switch\n                        checked={configuracoes.incluirFinsDeSemanaSemana ?? false}\n                        onCheckedChange={(checked) => updateConfig('incluirFinsDeSemanaSemana', checked)}\n                      />\n                    </div>\n                    \n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"space-y-0.5\">\n                        <Label className=\"text-sm font-normal\">Incluir feriados</Label>\n                        <p className=\"text-xs text-muted-foreground\">\n                          Enviar notificações em feriados nacionais\n                        </p>\n                      </div>\n                      <Switch\n                        checked={configuracoes.incluirFeriados ?? false}\n                        onCheckedChange={(checked) => updateConfig('incluirFeriados', checked)}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </TabsContent>\n\n            {/* Filtros */}\n            <TabsContent value=\"filtros\" className=\"space-y-6\">\n              <div className=\"space-y-6\">\n                <div className=\"space-y-4\">\n                  <Label className=\"text-base flex items-center gap-2\">\n                    <Filter className=\"h-4 w-4\" />\n                    Filtros de Conteúdo\n                  </Label>\n                  \n                  <div className=\"space-y-3\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"space-y-0.5\">\n                        <Label className=\"text-sm font-normal\">Apenas minhas avaliações</Label>\n                        <p className=\"text-xs text-muted-foreground\">\n                          Receber apenas notificações sobre avaliações que preciso fazer\n                        </p>\n                      </div>\n                      <Switch\n                        checked={configuracoes.filtros?.apenasMinhasAvaliacoes ?? false}\n                        onCheckedChange={(checked) => updateNestedConfig('filtros', 'apenasMinhasAvaliacoes', checked)}\n                      />\n                    </div>\n                    \n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"space-y-0.5\">\n                        <Label className=\"text-sm font-normal\">Apenas avaliações que eu avalio</Label>\n                        <p className=\"text-xs text-muted-foreground\">\n                          Receber apenas notificações sobre pessoas que avalio\n                        </p>\n                      </div>\n                      <Switch\n                        checked={configuracoes.filtros?.apenasAvaliacoesQueEuAvalio ?? false}\n                        onCheckedChange={(checked) => updateNestedConfig('filtros', 'apenasAvaliacoesQueEuAvalio', checked)}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <Separator />\n\n                <div className=\"space-y-4\">\n                  <Label className=\"text-base\">Filtros por Departamento/Cargo</Label>\n                  <Alert>\n                    <Info className=\"h-4 w-4\" />\n                    <AlertDescription>\n                      Funcionalidade em desenvolvimento. Em breve você poderá filtrar notificações por departamentos e cargos específicos.\n                    </AlertDescription>\n                  </Alert>\n                </div>\n              </div>\n            </TabsContent>\n          </Tabs>\n\n          {/* Ações */}\n          <div className=\"flex items-center justify-between pt-6 border-t\">\n            <div className=\"flex gap-2\">\n              {!notificacoesPausadas ? (\n                <Dialog open={dialogPausa} onOpenChange={setDialogPausa}>\n                  <DialogTrigger asChild>\n                    <Button variant=\"outline\" size=\"sm\">\n                      <Pause className=\"h-4 w-4 mr-2\" />\n                      Pausar Notificações\n                    </Button>\n                  </DialogTrigger>\n                  <DialogContent>\n                    <DialogHeader>\n                      <DialogTitle>Pausar Notificações</DialogTitle>\n                      <DialogDescription>\n                        Escolha até quando deseja pausar as notificações.\n                      </DialogDescription>\n                    </DialogHeader>\n                    <div className=\"space-y-4\">\n                      <div className=\"space-y-2\">\n                        <Label>Data de Retomada</Label>\n                        <Popover>\n                          <PopoverTrigger asChild>\n                            <Button\n                              variant=\"outline\"\n                              className={cn(\n                                'w-full justify-start text-left font-normal',\n                                !dataFimPausa && 'text-muted-foreground'\n                              )}\n                            >\n                              <CalendarIcon className=\"mr-2 h-4 w-4\" />\n                              {dataFimPausa ? format(dataFimPausa, 'dd/MM/yyyy', { locale: ptBR }) : 'Selecione uma data'}\n                            </Button>\n                          </PopoverTrigger>\n                          <PopoverContent className=\"w-auto p-0\">\n                            <Calendar\n                              mode=\"single\"\n                              selected={dataFimPausa}\n                              onSelect={setDataFimPausa}\n                              disabled={(date) => date < new Date()}\n                              initialFocus\n                            />\n                          </PopoverContent>\n                        </Popover>\n                      </div>\n                      <div className=\"space-y-2\">\n                        <Label>Motivo (opcional)</Label>\n                        <Textarea\n                          placeholder=\"Ex: Férias, licença médica, etc.\"\n                          value={motivoPausa}\n                          onChange={(e) => setMotivoPausa(e.target.value)}\n                        />\n                      </div>\n                    </div>\n                    <DialogFooter>\n                      <Button variant=\"outline\" onClick={() => setDialogPausa(false)}>\n                        Cancelar\n                      </Button>\n                      <Button onClick={handlePausarNotificacoes} disabled={!dataFimPausa}>\n                        Pausar\n                      </Button>\n                    </DialogFooter>\n                  </DialogContent>\n                </Dialog>\n              ) : (\n                <Button variant=\"outline\" size=\"sm\" onClick={handleRetomarNotificacoes}>\n                  <Play className=\"h-4 w-4 mr-2\" />\n                  Retomar Notificações\n                </Button>\n              )}\n              \n              <Button variant=\"outline\" size=\"sm\" onClick={handleResetar}>\n                <RotateCcw className=\"h-4 w-4 mr-2\" />\n                Resetar\n              </Button>\n            </div>\n            \n            <Button onClick={handleSalvar} disabled={salvando}>\n              {salvando ? (\n                <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n              ) : (\n                <Save className=\"h-4 w-4 mr-2\" />\n              )}\n              Salvar Configurações\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}"],"names":["ConfiguracoesNotificacao","className","preferencias","carregando","erro","atualizarPreferencias","resetarPreferencias","pausarNotificacoes","retomarNotificacoes","usePreferenciasNotificacao","configuracoes","setConfiguracoes","useState","salvando","setSalvando","dialogPausa","setDialogPausa","dataFimPausa","setDataFimPausa","motivoPausa","setMotivoPausa","React","useEffect","notificacoesAtivas","emailAtivo","diasAntecedenciaLembrete","horarioEnvio","incluirFinsDeSemanaSemana","incluirFeriados","tiposNotificacao","urgenciaMinima","frequenciaLembretes","incluirDetalhesAvaliacao","incluirLinkDireto","incluirResumoEstatisticas","formatoEmail","idiomaNotificacao","filtros","handleSalvar","handleResetar","confirm","handlePausarNotificacoes","sucesso","Date","undefined","handleRetomarNotificacoes","updateConfig","key","value","prev","updateNestedConfig","parent","Card","CardContent","div","p","Alert","variant","AlertTriangle","AlertDescription","notificacoesPausadas","ativo","cn","Pause","span","dataFim","format","locale","ptBR","motivo","Button","size","onClick","Play","CardHeader","CardTitle","Settings","CardDescription","Tabs","defaultValue","TabsList","TabsTrigger","TabsContent","Label","Switch","checked","onCheckedChange","Separator","Mail","disabled","Select","onValueChange","SelectTrigger","SelectValue","SelectContent","SelectItem","label","desc","map","avaliacaoPendente","avaliacaoVencida","Input","type","min","max","onChange","e","parseInt","target","Filter","apenasMinhasAvaliacoes","apenasAvaliacoesQueEuAvalio","Info","Dialog","open","onOpenChange","DialogTrigger","asChild","DialogContent","DialogHeader","DialogTitle","DialogDescription","Popover","PopoverTrigger","CalendarIcon","PopoverContent","Calendar","mode","selected","onSelect","date","initialFocus","Textarea","placeholder","DialogFooter","RotateCcw","Save"],"mappings":"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"}