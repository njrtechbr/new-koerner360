{"version":3,"names":["DashboardAtendentesTab","cov_z8s63jzn8","f","filtros","setFiltros","s","_react","useState","periodo","mostrarFiltros","setMostrarFiltros","dados","dadosDashboard","carregando","status","forcarAtualizacao","reconectar","toggleAtivo","_usemetricastemporeal","useMetricasDashboardTempoReal","endpoint","parametros","intervalo","handleFiltrosChange","novosFiltros","prev","obterCorIndicador","valor","tipo","b","_jsxruntime","jsxs","className","jsx","_metricas","StatusTempoReal","onForcarAtualizacao","onReconectar","onToggleAtivo","compacto","_button","Button","variant","size","onClick","_card","Card","CardHeader","CardTitle","CardContent","FiltrosPeriodo","onFiltrosChange","_lucidereact","Users","resumo","totalAtendentes","tendencias","_utils","cn","Star","avaliacoes","mediaGeral","toFixed","total","FileText","documentosCriados","Activity","alteracoes","metricas","Target","CardDescription","produtividade","qualidade","pontualidade","satisfacao","CheckCircle","atendentesPorStatus","Object","entries","map","quantidade","percentual","_badge","Badge","BarChart3","desempenho","nivel","cores","excelente","bom","regular","ruim","topPerformers","length","Award","slice","atendente","index","nome","cargo","setor","pontuacao","avaliacaoMedia","id","alertas","AlertTriangle","alerta","mensagem","DashboardMetricas","tempoReal"],"sources":["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\components\\atendentes\\dashboard-atendentes-tab.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport {\n  BarChart3,\n  TrendingUp,\n  Users,\n  Clock,\n  Star,\n  FileText,\n  AlertTriangle,\n  CheckCircle,\n  Activity,\n  Target,\n  Zap,\n  Award,\n} from 'lucide-react';\nimport {\n  DashboardMetricas,\n  StatusTempoReal,\n  FiltrosPeriodo,\n} from '@/components/metricas';\nimport { useMetricasDashboardTempoReal } from '@/hooks/use-metricas-tempo-real';\nimport { cn } from '@/lib/utils';\n\n/**\n * Interface para dados do dashboard\n */\ninterface DadosDashboard {\n  resumo: {\n    totalAtendentes: number;\n    atendentesPorStatus: Record<string, number>;\n    atendentesPorSetor: Record<string, number>;\n    atendentesPorCargo: Record<string, number>;\n    documentosCriados: number;\n    avaliacoes: {\n      total: number;\n      mediaGeral: number;\n    };\n    alteracoes: number;\n    desempenho: {\n      excelente: number;\n      bom: number;\n      regular: number;\n      ruim: number;\n    };\n    alertas: Array<{\n      tipo: 'warning' | 'error' | 'info';\n      mensagem: string;\n    }>;\n  };\n  tendencias: Record<string, number>;\n  topPerformers: Array<{\n    id: string;\n    nome: string;\n    cargo: string;\n    setor: string;\n    pontuacao: number;\n    avaliacaoMedia: number;\n  }>;\n  metricas: {\n    produtividade: number;\n    qualidade: number;\n    pontualidade: number;\n    satisfacao: number;\n  };\n}\n\n/**\n * Componente da aba de dashboard de atendentes\n */\nexport function DashboardAtendentesTab() {\n  const [filtros, setFiltros] = useState({\n    periodo: '30dias',\n  });\n  const [mostrarFiltros, setMostrarFiltros] = useState(false);\n\n  // Hook para dados em tempo real\n  const {\n    dados: dadosDashboard,\n    carregando,\n    status,\n    forcarAtualizacao,\n    reconectar,\n    toggleAtivo,\n  } = useMetricasDashboardTempoReal({\n    endpoint: '/api/atendentes/dashboard',\n    parametros: filtros,\n    intervalo: 30000,\n  });\n\n  // Função para atualizar filtros\n  const handleFiltrosChange = (novosFiltros: any) => {\n    setFiltros(prev => ({ ...prev, ...novosFiltros }));\n  };\n\n  // Função para obter cor do indicador baseado no valor\n  const obterCorIndicador = (\n    valor: number,\n    tipo: 'percentual' | 'nota' = 'percentual'\n  ) => {\n    if (tipo === 'nota') {\n      if (valor >= 4.5) return 'text-green-600';\n      if (valor >= 3.5) return 'text-yellow-600';\n      return 'text-red-600';\n    }\n\n    if (valor >= 80) return 'text-green-600';\n    if (valor >= 60) return 'text-yellow-600';\n    return 'text-red-600';\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Cabeçalho com Status */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h2 className=\"text-2xl font-bold tracking-tight\">\n            Dashboard de Atendentes\n          </h2>\n          <p className=\"text-muted-foreground\">\n            Visão geral em tempo real do desempenho dos atendentes\n          </p>\n        </div>\n        <div className=\"flex items-center gap-2\">\n          <StatusTempoReal\n            status={status}\n            carregando={carregando}\n            onForcarAtualizacao={forcarAtualizacao}\n            onReconectar={reconectar}\n            onToggleAtivo={toggleAtivo}\n            compacto\n          />\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => setMostrarFiltros(!mostrarFiltros)}\n          >\n            Filtros\n          </Button>\n        </div>\n      </div>\n\n      {/* Filtros */}\n      {mostrarFiltros && (\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-lg\">Filtros</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <FiltrosPeriodo\n              filtros={filtros}\n              onFiltrosChange={handleFiltrosChange}\n              compacto\n            />\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Métricas Principais */}\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n        {/* Total de Atendentes */}\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">\n              Total de Atendentes\n            </CardTitle>\n            <Users className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n              {dadosDashboard?.resumo?.totalAtendentes || 0}\n            </div>\n            {dadosDashboard?.tendencias?.totalAtendentes && (\n              <p className=\"text-xs text-muted-foreground\">\n                <span\n                  className={cn(\n                    dadosDashboard.tendencias.totalAtendentes > 0\n                      ? 'text-green-600'\n                      : 'text-red-600'\n                  )}\n                >\n                  {dadosDashboard.tendencias.totalAtendentes > 0 ? '+' : ''}\n                  {dadosDashboard.tendencias.totalAtendentes}%\n                </span>{' '}\n                em relação ao período anterior\n              </p>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Avaliação Média */}\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">\n              Avaliação Média\n            </CardTitle>\n            <Star className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n              {dadosDashboard?.resumo?.avaliacoes?.mediaGeral?.toFixed(1) ||\n                '0.0'}\n            </div>\n            <p className=\"text-xs text-muted-foreground\">\n              {dadosDashboard?.resumo?.avaliacoes?.total || 0} avaliações\n            </p>\n          </CardContent>\n        </Card>\n\n        {/* Documentos Criados */}\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">\n              Documentos Criados\n            </CardTitle>\n            <FileText className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n              {dadosDashboard?.resumo?.documentosCriados || 0}\n            </div>\n            {dadosDashboard?.tendencias?.documentosCriados && (\n              <p className=\"text-xs text-muted-foreground\">\n                <span\n                  className={cn(\n                    dadosDashboard.tendencias.documentosCriados > 0\n                      ? 'text-green-600'\n                      : 'text-red-600'\n                  )}\n                >\n                  {dadosDashboard.tendencias.documentosCriados > 0 ? '+' : ''}\n                  {dadosDashboard.tendencias.documentosCriados}%\n                </span>{' '}\n                vs período anterior\n              </p>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Alterações */}\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Alterações</CardTitle>\n            <Activity className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n              {dadosDashboard?.resumo?.alteracoes || 0}\n            </div>\n            <p className=\"text-xs text-muted-foreground\">\n              Modificações no período\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Indicadores de Performance */}\n      {dadosDashboard?.metricas && (\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Target className=\"h-5 w-5\" />\n              Indicadores de Performance\n            </CardTitle>\n            <CardDescription>\n              Métricas consolidadas de desempenho\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n              <div className=\"text-center\">\n                <div\n                  className={cn(\n                    'text-2xl font-bold',\n                    obterCorIndicador(dadosDashboard.metricas.produtividade)\n                  )}\n                >\n                  {dadosDashboard.metricas.produtividade}%\n                </div>\n                <div className=\"text-sm text-muted-foreground\">\n                  Produtividade\n                </div>\n              </div>\n              <div className=\"text-center\">\n                <div\n                  className={cn(\n                    'text-2xl font-bold',\n                    obterCorIndicador(dadosDashboard.metricas.qualidade)\n                  )}\n                >\n                  {dadosDashboard.metricas.qualidade}%\n                </div>\n                <div className=\"text-sm text-muted-foreground\">Qualidade</div>\n              </div>\n              <div className=\"text-center\">\n                <div\n                  className={cn(\n                    'text-2xl font-bold',\n                    obterCorIndicador(dadosDashboard.metricas.pontualidade)\n                  )}\n                >\n                  {dadosDashboard.metricas.pontualidade}%\n                </div>\n                <div className=\"text-sm text-muted-foreground\">\n                  Pontualidade\n                </div>\n              </div>\n              <div className=\"text-center\">\n                <div\n                  className={cn(\n                    'text-2xl font-bold',\n                    obterCorIndicador(\n                      dadosDashboard.metricas.satisfacao,\n                      'nota'\n                    )\n                  )}\n                >\n                  {dadosDashboard.metricas.satisfacao.toFixed(1)}\n                </div>\n                <div className=\"text-sm text-muted-foreground\">Satisfação</div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Grid Principal */}\n      <div className=\"grid gap-6 lg:grid-cols-2\">\n        {/* Distribuição por Status */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <CheckCircle className=\"h-5 w-5\" />\n              Distribuição por Status\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            {dadosDashboard?.resumo?.atendentesPorStatus && (\n              <div className=\"space-y-3\">\n                {Object.entries(dadosDashboard.resumo.atendentesPorStatus).map(\n                  ([status, quantidade]) => {\n                    const total = dadosDashboard.resumo.totalAtendentes;\n                    const percentual =\n                      total > 0 ? ((quantidade as number) / total) * 100 : 0;\n\n                    return (\n                      <div\n                        key={status}\n                        className=\"flex items-center justify-between\"\n                      >\n                        <div className=\"flex items-center gap-2\">\n                          <Badge\n                            variant={\n                              status === 'ativo'\n                                ? 'default'\n                                : status === 'inativo'\n                                  ? 'destructive'\n                                  : 'secondary'\n                            }\n                          >\n                            {status}\n                          </Badge>\n                        </div>\n                        <div className=\"text-right\">\n                          <div className=\"font-semibold\">\n                            {quantidade as number}\n                          </div>\n                          <div className=\"text-xs text-muted-foreground\">\n                            {percentual.toFixed(1)}%\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  }\n                )}\n              </div>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Distribuição de Desempenho */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <BarChart3 className=\"h-5 w-5\" />\n              Distribuição de Desempenho\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            {dadosDashboard?.resumo?.desempenho && (\n              <div className=\"space-y-3\">\n                {Object.entries(dadosDashboard.resumo.desempenho).map(\n                  ([nivel, quantidade]) => {\n                    const cores = {\n                      excelente: 'bg-green-100 text-green-800',\n                      bom: 'bg-blue-100 text-blue-800',\n                      regular: 'bg-yellow-100 text-yellow-800',\n                      ruim: 'bg-red-100 text-red-800',\n                    };\n\n                    return (\n                      <div\n                        key={nivel}\n                        className=\"flex items-center justify-between\"\n                      >\n                        <div className=\"flex items-center gap-2\">\n                          <Badge className={cores[nivel as keyof typeof cores]}>\n                            {nivel}\n                          </Badge>\n                        </div>\n                        <span className=\"font-semibold\">\n                          {quantidade as number}\n                        </span>\n                      </div>\n                    );\n                  }\n                )}\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Top Performers */}\n      {dadosDashboard?.topPerformers &&\n        dadosDashboard.topPerformers.length > 0 && (\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Award className=\"h-5 w-5\" />\n                Top Performers\n              </CardTitle>\n              <CardDescription>\n                Atendentes com melhor desempenho no período\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                {dadosDashboard.topPerformers\n                  .slice(0, 5)\n                  .map((atendente, index) => (\n                    <div\n                      key={atendente.id}\n                      className=\"flex items-center justify-between p-3 rounded-lg border\"\n                    >\n                      <div className=\"flex items-center gap-3\">\n                        <div className=\"flex items-center justify-center w-8 h-8 rounded-full bg-primary text-primary-foreground text-sm font-bold\">\n                          {index + 1}\n                        </div>\n                        <div>\n                          <div className=\"font-semibold\">{atendente.nome}</div>\n                          <div className=\"text-sm text-muted-foreground\">\n                            {atendente.cargo} • {atendente.setor}\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"text-right\">\n                        <div className=\"font-semibold\">\n                          {atendente.pontuacao}\n                        </div>\n                        <div className=\"text-sm text-muted-foreground\">\n                          ⭐ {atendente.avaliacaoMedia.toFixed(1)}\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n              </div>\n            </CardContent>\n          </Card>\n        )}\n\n      {/* Alertas */}\n      {dadosDashboard?.resumo?.alertas &&\n        dadosDashboard.resumo.alertas.length > 0 && (\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <AlertTriangle className=\"h-5 w-5\" />\n                Alertas e Notificações\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-2\">\n                {dadosDashboard.resumo.alertas.map((alerta, index) => (\n                  <div\n                    key={index}\n                    className={cn(\n                      'p-3 rounded-lg border-l-4',\n                      alerta.tipo === 'error' && 'border-l-red-500 bg-red-50',\n                      alerta.tipo === 'warning' &&\n                        'border-l-yellow-500 bg-yellow-50',\n                      alerta.tipo === 'info' && 'border-l-blue-500 bg-blue-50'\n                    )}\n                  >\n                    <p className=\"text-sm\">{alerta.mensagem}</p>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        )}\n\n      {/* Dashboard Principal */}\n      <DashboardMetricas\n        dados={dadosDashboard}\n        periodo={filtros.periodo}\n        tempoReal\n      />\n    </div>\n  );\n}\n"],"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","ignoreList":[]}