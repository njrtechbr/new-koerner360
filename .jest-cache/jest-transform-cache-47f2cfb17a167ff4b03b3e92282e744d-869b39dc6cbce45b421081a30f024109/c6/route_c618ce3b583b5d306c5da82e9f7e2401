0394fc86e83c7da237b5a877fa503d49
"use strict";

/* istanbul ignore next */
function cov_z25nl6kx9() {
  var path = "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\atendentes\\[id]\\documentos\\[documentoId]\\route.ts";
  var hash = "f29b8277239852632b02d77976c45f1cd358705a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\atendentes\\[id]\\documentos\\[documentoId]\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 22
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 19
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 19
        }
      },
      "7": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 38
        }
      },
      "8": {
        start: {
          line: 23,
          column: 18
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "9": {
        start: {
          line: 24,
          column: 14
        },
        end: {
          line: 24,
          column: 51
        }
      },
      "10": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 55
        }
      },
      "11": {
        start: {
          line: 26,
          column: 13
        },
        end: {
          line: 26,
          column: 27
        }
      },
      "12": {
        start: {
          line: 27,
          column: 20
        },
        end: {
          line: 27,
          column: 75
        }
      },
      "13": {
        start: {
          line: 30,
          column: 30
        },
        end: {
          line: 30,
          column: 93
        }
      },
      "14": {
        start: {
          line: 33,
          column: 37
        },
        end: {
          line: 49,
          column: 2
        }
      },
      "15": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 143,
          column: 5
        }
      },
      "16": {
        start: {
          line: 53,
          column: 24
        },
        end: {
          line: 53,
          column: 80
        }
      },
      "17": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 60,
          column: 9
        }
      },
      "18": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 59,
          column: 15
        }
      },
      "19": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 72,
          column: 9
        }
      },
      "20": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 71,
          column: 15
        }
      },
      "21": {
        start: {
          line: 74,
          column: 28
        },
        end: {
          line: 74,
          column: 74
        }
      },
      "22": {
        start: {
          line: 75,
          column: 28
        },
        end: {
          line: 75,
          column: 71
        }
      },
      "23": {
        start: {
          line: 77,
          column: 26
        },
        end: {
          line: 85,
          column: 10
        }
      },
      "24": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 92,
          column: 9
        }
      },
      "25": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 91,
          column: 15
        }
      },
      "26": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 100,
          column: 9
        }
      },
      "27": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 99,
          column: 15
        }
      },
      "28": {
        start: {
          line: 102,
          column: 26
        },
        end: {
          line: 107,
          column: 10
        }
      },
      "29": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 114,
          column: 9
        }
      },
      "30": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 113,
          column: 15
        }
      },
      "31": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 127,
          column: 11
        }
      },
      "32": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 129,
          column: 71
        }
      },
      "33": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 137,
          column: 9
        }
      },
      "34": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 136,
          column: 15
        }
      },
      "35": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 142,
          column: 11
        }
      },
      "36": {
        start: {
          line: 146,
          column: 4
        },
        end: {
          line: 308,
          column: 5
        }
      },
      "37": {
        start: {
          line: 148,
          column: 24
        },
        end: {
          line: 148,
          column: 80
        }
      },
      "38": {
        start: {
          line: 149,
          column: 8
        },
        end: {
          line: 155,
          column: 9
        }
      },
      "39": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 154,
          column: 15
        }
      },
      "40": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 166,
          column: 9
        }
      },
      "41": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 165,
          column: 15
        }
      },
      "42": {
        start: {
          line: 168,
          column: 28
        },
        end: {
          line: 168,
          column: 74
        }
      },
      "43": {
        start: {
          line: 169,
          column: 28
        },
        end: {
          line: 169,
          column: 71
        }
      },
      "44": {
        start: {
          line: 171,
          column: 26
        },
        end: {
          line: 178,
          column: 10
        }
      },
      "45": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 185,
          column: 9
        }
      },
      "46": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 184,
          column: 15
        }
      },
      "47": {
        start: {
          line: 187,
          column: 31
        },
        end: {
          line: 192,
          column: 10
        }
      },
      "48": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 199,
          column: 9
        }
      },
      "49": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 198,
          column: 15
        }
      },
      "50": {
        start: {
          line: 201,
          column: 32
        },
        end: {
          line: 201,
          column: 52
        }
      },
      "51": {
        start: {
          line: 203,
          column: 31
        },
        end: {
          line: 203,
          column: 78
        }
      },
      "52": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 211,
          column: 9
        }
      },
      "53": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 210,
          column: 15
        }
      },
      "54": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 233,
          column: 9
        }
      },
      "55": {
        start: {
          line: 214,
          column: 34
        },
        end: {
          line: 214,
          column: 76
        }
      },
      "56": {
        start: {
          line: 215,
          column: 36
        },
        end: {
          line: 215,
          column: 82
        }
      },
      "57": {
        start: {
          line: 216,
          column: 39
        },
        end: {
          line: 225,
          column: 14
        }
      },
      "58": {
        start: {
          line: 226,
          column: 12
        },
        end: {
          line: 232,
          column: 13
        }
      },
      "59": {
        start: {
          line: 227,
          column: 16
        },
        end: {
          line: 231,
          column: 19
        }
      },
      "60": {
        start: {
          line: 235,
          column: 33
        },
        end: {
          line: 235,
          column: 35
        }
      },
      "61": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 236,
          column: 77
        }
      },
      "62": {
        start: {
          line: 236,
          column: 33
        },
        end: {
          line: 236,
          column: 77
        }
      },
      "63": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 237,
          column: 83
        }
      },
      "64": {
        start: {
          line: 237,
          column: 35
        },
        end: {
          line: 237,
          column: 83
        }
      },
      "65": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 240,
          column: 9
        }
      },
      "66": {
        start: {
          line: 239,
          column: 12
        },
        end: {
          line: 239,
          column: 116
        }
      },
      "67": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 241,
          column: 115
        }
      },
      "68": {
        start: {
          line: 241,
          column: 55
        },
        end: {
          line: 241,
          column: 115
        }
      },
      "69": {
        start: {
          line: 242,
          column: 8
        },
        end: {
          line: 242,
          column: 100
        }
      },
      "70": {
        start: {
          line: 242,
          column: 50
        },
        end: {
          line: 242,
          column: 100
        }
      },
      "71": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 243,
          column: 112
        }
      },
      "72": {
        start: {
          line: 243,
          column: 54
        },
        end: {
          line: 243,
          column: 112
        }
      },
      "73": {
        start: {
          line: 245,
          column: 36
        },
        end: {
          line: 250,
          column: 10
        }
      },
      "74": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 278,
          column: 11
        }
      },
      "75": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 292,
          column: 11
        }
      },
      "76": {
        start: {
          line: 294,
          column: 8
        },
        end: {
          line: 294,
          column: 74
        }
      },
      "77": {
        start: {
          line: 295,
          column: 8
        },
        end: {
          line: 302,
          column: 9
        }
      },
      "78": {
        start: {
          line: 296,
          column: 12
        },
        end: {
          line: 301,
          column: 15
        }
      },
      "79": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 307,
          column: 11
        }
      },
      "80": {
        start: {
          line: 311,
          column: 4
        },
        end: {
          line: 400,
          column: 5
        }
      },
      "81": {
        start: {
          line: 313,
          column: 24
        },
        end: {
          line: 313,
          column: 80
        }
      },
      "82": {
        start: {
          line: 314,
          column: 8
        },
        end: {
          line: 320,
          column: 9
        }
      },
      "83": {
        start: {
          line: 315,
          column: 12
        },
        end: {
          line: 319,
          column: 15
        }
      },
      "84": {
        start: {
          line: 322,
          column: 8
        },
        end: {
          line: 328,
          column: 9
        }
      },
      "85": {
        start: {
          line: 323,
          column: 12
        },
        end: {
          line: 327,
          column: 15
        }
      },
      "86": {
        start: {
          line: 330,
          column: 28
        },
        end: {
          line: 330,
          column: 74
        }
      },
      "87": {
        start: {
          line: 331,
          column: 28
        },
        end: {
          line: 331,
          column: 71
        }
      },
      "88": {
        start: {
          line: 333,
          column: 26
        },
        end: {
          line: 340,
          column: 10
        }
      },
      "89": {
        start: {
          line: 341,
          column: 8
        },
        end: {
          line: 347,
          column: 9
        }
      },
      "90": {
        start: {
          line: 342,
          column: 12
        },
        end: {
          line: 346,
          column: 15
        }
      },
      "91": {
        start: {
          line: 349,
          column: 26
        },
        end: {
          line: 354,
          column: 10
        }
      },
      "92": {
        start: {
          line: 355,
          column: 8
        },
        end: {
          line: 361,
          column: 9
        }
      },
      "93": {
        start: {
          line: 356,
          column: 12
        },
        end: {
          line: 360,
          column: 15
        }
      },
      "94": {
        start: {
          line: 363,
          column: 8
        },
        end: {
          line: 367,
          column: 11
        }
      },
      "95": {
        start: {
          line: 369,
          column: 8
        },
        end: {
          line: 381,
          column: 11
        }
      },
      "96": {
        start: {
          line: 382,
          column: 8
        },
        end: {
          line: 384,
          column: 11
        }
      },
      "97": {
        start: {
          line: 386,
          column: 8
        },
        end: {
          line: 386,
          column: 72
        }
      },
      "98": {
        start: {
          line: 387,
          column: 8
        },
        end: {
          line: 394,
          column: 9
        }
      },
      "99": {
        start: {
          line: 388,
          column: 12
        },
        end: {
          line: 393,
          column: 15
        }
      },
      "100": {
        start: {
          line: 395,
          column: 8
        },
        end: {
          line: 399,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 18
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 15
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 15
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "GET",
        decl: {
          start: {
            line: 50,
            column: 15
          },
          end: {
            line: 50,
            column: 18
          }
        },
        loc: {
          start: {
            line: 50,
            column: 40
          },
          end: {
            line: 144,
            column: 1
          }
        },
        line: 50
      },
      "5": {
        name: "PUT",
        decl: {
          start: {
            line: 145,
            column: 15
          },
          end: {
            line: 145,
            column: 18
          }
        },
        loc: {
          start: {
            line: 145,
            column: 40
          },
          end: {
            line: 309,
            column: 1
          }
        },
        line: 145
      },
      "6": {
        name: "DELETE",
        decl: {
          start: {
            line: 310,
            column: 15
          },
          end: {
            line: 310,
            column: 21
          }
        },
        loc: {
          start: {
            line: 310,
            column: 43
          },
          end: {
            line: 401,
            column: 1
          }
        },
        line: 310
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "1": {
        loc: {
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 8
          },
          end: {
            line: 72,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "2": {
        loc: {
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 92,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "3": {
        loc: {
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 100,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "4": {
        loc: {
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 94,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 12
          },
          end: {
            line: 94,
            column: 49
          }
        }, {
          start: {
            line: 94,
            column: 53
          },
          end: {
            line: 94,
            column: 92
          }
        }],
        line: 94
      },
      "5": {
        loc: {
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 8
          },
          end: {
            line: 114,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "6": {
        loc: {
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 137,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 137,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 130
      },
      "7": {
        loc: {
          start: {
            line: 149,
            column: 8
          },
          end: {
            line: 155,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 8
          },
          end: {
            line: 155,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 149
      },
      "8": {
        loc: {
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 166,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 166,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 157
      },
      "9": {
        loc: {
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 185,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 179,
            column: 8
          },
          end: {
            line: 185,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 179
      },
      "10": {
        loc: {
          start: {
            line: 193,
            column: 8
          },
          end: {
            line: 199,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 193,
            column: 8
          },
          end: {
            line: 199,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 193
      },
      "11": {
        loc: {
          start: {
            line: 205,
            column: 8
          },
          end: {
            line: 211,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 205,
            column: 8
          },
          end: {
            line: 211,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 205
      },
      "12": {
        loc: {
          start: {
            line: 213,
            column: 8
          },
          end: {
            line: 233,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 213,
            column: 8
          },
          end: {
            line: 233,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 213
      },
      "13": {
        loc: {
          start: {
            line: 213,
            column: 12
          },
          end: {
            line: 213,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 213,
            column: 12
          },
          end: {
            line: 213,
            column: 31
          }
        }, {
          start: {
            line: 213,
            column: 35
          },
          end: {
            line: 213,
            column: 56
          }
        }],
        line: 213
      },
      "14": {
        loc: {
          start: {
            line: 214,
            column: 34
          },
          end: {
            line: 214,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 214,
            column: 34
          },
          end: {
            line: 214,
            column: 53
          }
        }, {
          start: {
            line: 214,
            column: 57
          },
          end: {
            line: 214,
            column: 76
          }
        }],
        line: 214
      },
      "15": {
        loc: {
          start: {
            line: 215,
            column: 36
          },
          end: {
            line: 215,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 215,
            column: 36
          },
          end: {
            line: 215,
            column: 57
          }
        }, {
          start: {
            line: 215,
            column: 61
          },
          end: {
            line: 215,
            column: 82
          }
        }],
        line: 215
      },
      "16": {
        loc: {
          start: {
            line: 226,
            column: 12
          },
          end: {
            line: 232,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 12
          },
          end: {
            line: 232,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 226
      },
      "17": {
        loc: {
          start: {
            line: 236,
            column: 8
          },
          end: {
            line: 236,
            column: 77
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 236,
            column: 8
          },
          end: {
            line: 236,
            column: 77
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 236
      },
      "18": {
        loc: {
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 237,
            column: 83
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 237,
            column: 83
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 237
      },
      "19": {
        loc: {
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 240,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 240,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 238
      },
      "20": {
        loc: {
          start: {
            line: 239,
            column: 43
          },
          end: {
            line: 239,
            column: 115
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 239,
            column: 72
          },
          end: {
            line: 239,
            column: 108
          }
        }, {
          start: {
            line: 239,
            column: 111
          },
          end: {
            line: 239,
            column: 115
          }
        }],
        line: 239
      },
      "21": {
        loc: {
          start: {
            line: 241,
            column: 8
          },
          end: {
            line: 241,
            column: 115
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 241,
            column: 8
          },
          end: {
            line: 241,
            column: 115
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 241
      },
      "22": {
        loc: {
          start: {
            line: 242,
            column: 8
          },
          end: {
            line: 242,
            column: 100
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 242,
            column: 8
          },
          end: {
            line: 242,
            column: 100
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 242
      },
      "23": {
        loc: {
          start: {
            line: 243,
            column: 8
          },
          end: {
            line: 243,
            column: 112
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 243,
            column: 8
          },
          end: {
            line: 243,
            column: 112
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 243
      },
      "24": {
        loc: {
          start: {
            line: 295,
            column: 8
          },
          end: {
            line: 302,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 295,
            column: 8
          },
          end: {
            line: 302,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 295
      },
      "25": {
        loc: {
          start: {
            line: 314,
            column: 8
          },
          end: {
            line: 320,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 314,
            column: 8
          },
          end: {
            line: 320,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 314
      },
      "26": {
        loc: {
          start: {
            line: 322,
            column: 8
          },
          end: {
            line: 328,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 322,
            column: 8
          },
          end: {
            line: 328,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 322
      },
      "27": {
        loc: {
          start: {
            line: 341,
            column: 8
          },
          end: {
            line: 347,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 341,
            column: 8
          },
          end: {
            line: 347,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 341
      },
      "28": {
        loc: {
          start: {
            line: 355,
            column: 8
          },
          end: {
            line: 361,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 355,
            column: 8
          },
          end: {
            line: 361,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 355
      },
      "29": {
        loc: {
          start: {
            line: 387,
            column: 8
          },
          end: {
            line: 394,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 387,
            column: 8
          },
          end: {
            line: 394,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 387
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\atendentes\\[id]\\documentos\\[documentoId]\\route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { getServerSession } from 'next-auth';\nimport { authOptions } from '@/lib/auth';\nimport { prisma } from '@/lib/prisma';\nimport { z } from 'zod';\nimport {\n  idAtendenteSchema,\n  MENSAGENS_ERRO_ATENDENTES,\n} from '@/lib/validations/atendentes';\nimport { ZodError } from 'zod';\n\ninterface RouteParams {\n  params: {\n    id: string;\n    documentoId: string;\n  };\n}\n\n/**\n * Schema para valida\xE7\xE3o de ID de documento\n */\nconst idDocumentoSchema = z\n  .string()\n  .uuid('ID do documento deve ser um UUID v\xE1lido');\n\n/**\n * Schema para atualiza\xE7\xE3o de documento\n */\nconst atualizarDocumentoSchema = z.object({\n  tipo: z\n    .enum([\n      'RG',\n      'CPF',\n      'CNH',\n      'CTPS',\n      'TITULO_ELEITOR',\n      'CERTIFICADO',\n      'DIPLOMA',\n      'OUTRO',\n    ])\n    .optional(),\n  numero: z\n    .string()\n    .min(1, 'N\xFAmero do documento \xE9 obrigat\xF3rio')\n    .max(50, 'N\xFAmero deve ter no m\xE1ximo 50 caracteres')\n    .optional(),\n  dataEmissao: z\n    .string()\n    .datetime('Data de emiss\xE3o deve ser uma data v\xE1lida')\n    .optional(),\n  orgaoEmissor: z\n    .string()\n    .max(100, '\xD3rg\xE3o emissor deve ter no m\xE1ximo 100 caracteres')\n    .optional(),\n  arquivo: z.string().url('URL do arquivo deve ser v\xE1lida').optional(),\n  observacoes: z\n    .string()\n    .max(500, 'Observa\xE7\xF5es devem ter no m\xE1ximo 500 caracteres')\n    .optional(),\n});\n\n/**\n * GET /api/atendentes/[id]/documentos/[documentoId]\n * Busca um documento espec\xEDfico do atendente\n */\nexport async function GET(request: NextRequest, { params }: RouteParams) {\n  try {\n    // Verificar autentica\xE7\xE3o\n    const session = await getServerSession(authOptions);\n    if (!session?.user) {\n      return NextResponse.json({ erro: 'N\xE3o autorizado' }, { status: 401 });\n    }\n\n    // Verificar permiss\xF5es\n    if (!['ADMIN', 'GERENTE', 'ATENDENTE'].includes(session.user.userType)) {\n      return NextResponse.json(\n        { erro: MENSAGENS_ERRO_ATENDENTES.SEM_PERMISSAO },\n        { status: 403 }\n      );\n    }\n\n    // Validar IDs\n    const atendenteId = idAtendenteSchema.parse(params.id);\n    const documentoId = idDocumentoSchema.parse(params.documentoId);\n\n    // Verificar se o atendente existe\n    const atendente = await prisma.atendente.findUnique({\n      where: { id: atendenteId },\n      select: { id: true, usuarioId: true },\n    });\n\n    if (!atendente) {\n      return NextResponse.json(\n        { erro: MENSAGENS_ERRO_ATENDENTES.ATENDENTE_NAO_ENCONTRADO },\n        { status: 404 }\n      );\n    }\n\n    // Verificar se o atendente pode ver apenas seus pr\xF3prios documentos\n    if (\n      session.user.userType === 'ATENDENTE' &&\n      atendente.usuarioId !== session.user.id\n    ) {\n      return NextResponse.json(\n        { erro: MENSAGENS_ERRO_ATENDENTES.SEM_PERMISSAO },\n        { status: 403 }\n      );\n    }\n\n    // Buscar documento\n    const documento = await prisma.documentoAtendente.findFirst({\n      where: {\n        id: documentoId,\n        atendenteId,\n      },\n    });\n\n    if (!documento) {\n      return NextResponse.json(\n        { erro: 'Documento n\xE3o encontrado' },\n        { status: 404 }\n      );\n    }\n\n    return NextResponse.json({\n      documento: {\n        id: documento.id,\n        tipo: documento.tipo,\n        numero: documento.numero,\n        dataEmissao: documento.dataEmissao,\n        orgaoEmissor: documento.orgaoEmissor,\n        arquivo: documento.arquivo,\n        observacoes: documento.observacoes,\n        criadoEm: documento.criadoEm,\n        atualizadoEm: documento.atualizadoEm,\n      },\n    });\n  } catch (error) {\n    console.error('Erro ao buscar documento do atendente:', error);\n\n    if (error instanceof ZodError) {\n      return NextResponse.json(\n        {\n          erro: MENSAGENS_ERRO_ATENDENTES.DADOS_INVALIDOS,\n          detalhes: error.errors,\n        },\n        { status: 400 }\n      );\n    }\n\n    return NextResponse.json(\n      { erro: MENSAGENS_ERRO_ATENDENTES.ERRO_INTERNO },\n      { status: 500 }\n    );\n  }\n}\n\n/**\n * PUT /api/atendentes/[id]/documentos/[documentoId]\n * Atualiza um documento espec\xEDfico do atendente\n */\nexport async function PUT(request: NextRequest, { params }: RouteParams) {\n  try {\n    // Verificar autentica\xE7\xE3o\n    const session = await getServerSession(authOptions);\n    if (!session?.user) {\n      return NextResponse.json({ erro: 'N\xE3o autorizado' }, { status: 401 });\n    }\n\n    // Verificar permiss\xF5es (apenas ADMIN e GERENTE podem atualizar documentos)\n    if (!['ADMIN', 'GERENTE'].includes(session.user.userType)) {\n      return NextResponse.json(\n        { erro: MENSAGENS_ERRO_ATENDENTES.SEM_PERMISSAO },\n        { status: 403 }\n      );\n    }\n\n    // Validar IDs\n    const atendenteId = idAtendenteSchema.parse(params.id);\n    const documentoId = idDocumentoSchema.parse(params.documentoId);\n\n    // Verificar se o atendente existe\n    const atendente = await prisma.atendente.findUnique({\n      where: { id: atendenteId },\n      select: { id: true },\n    });\n\n    if (!atendente) {\n      return NextResponse.json(\n        { erro: MENSAGENS_ERRO_ATENDENTES.ATENDENTE_NAO_ENCONTRADO },\n        { status: 404 }\n      );\n    }\n\n    // Buscar documento atual\n    const documentoAtual = await prisma.documentoAtendente.findFirst({\n      where: {\n        id: documentoId,\n        atendenteId,\n      },\n    });\n\n    if (!documentoAtual) {\n      return NextResponse.json(\n        { erro: 'Documento n\xE3o encontrado' },\n        { status: 404 }\n      );\n    }\n\n    // Extrair dados do corpo da requisi\xE7\xE3o\n    const dadosRequisicao = await request.json();\n\n    // Validar dados\n    const dadosValidados = atualizarDocumentoSchema.parse(dadosRequisicao);\n\n    // Verificar se h\xE1 dados para atualizar\n    if (Object.keys(dadosValidados).length === 0) {\n      return NextResponse.json(\n        { erro: 'Nenhum dado fornecido para atualiza\xE7\xE3o' },\n        { status: 400 }\n      );\n    }\n\n    // Verificar se j\xE1 existe outro documento com o mesmo tipo e n\xFAmero (se estiver sendo alterado)\n    if (dadosValidados.tipo || dadosValidados.numero) {\n      const tipoVerificar = dadosValidados.tipo || documentoAtual.tipo;\n      const numeroVerificar = dadosValidados.numero || documentoAtual.numero;\n\n      const documentoExistente = await prisma.documentoAtendente.findFirst({\n        where: {\n          atendenteId,\n          tipo: tipoVerificar,\n          numero: numeroVerificar,\n          id: { not: documentoId },\n        },\n      });\n\n      if (documentoExistente) {\n        return NextResponse.json(\n          {\n            erro: `Documento ${tipoVerificar} com n\xFAmero ${numeroVerificar} j\xE1 existe para este atendente`,\n          },\n          { status: 409 }\n        );\n      }\n    }\n\n    // Preparar dados para atualiza\xE7\xE3o\n    const dadosAtualizacao: any = {};\n\n    if (dadosValidados.tipo) dadosAtualizacao.tipo = dadosValidados.tipo;\n    if (dadosValidados.numero) dadosAtualizacao.numero = dadosValidados.numero;\n    if (dadosValidados.dataEmissao !== undefined) {\n      dadosAtualizacao.dataEmissao = dadosValidados.dataEmissao\n        ? new Date(dadosValidados.dataEmissao)\n        : null;\n    }\n    if (dadosValidados.orgaoEmissor !== undefined)\n      dadosAtualizacao.orgaoEmissor = dadosValidados.orgaoEmissor;\n    if (dadosValidados.arquivo !== undefined)\n      dadosAtualizacao.arquivo = dadosValidados.arquivo;\n    if (dadosValidados.observacoes !== undefined)\n      dadosAtualizacao.observacoes = dadosValidados.observacoes;\n\n    // Atualizar documento\n    const documentoAtualizado = await prisma.documentoAtendente.update({\n      where: { id: documentoId },\n      data: dadosAtualizacao,\n    });\n\n    // Registrar no hist\xF3rico de altera\xE7\xF5es\n    await prisma.historicoAlteracaoAtendente.create({\n      data: {\n        atendenteId,\n        tipo: 'ATUALIZACAO',\n        campo: 'documento',\n        descricao: `Documento ${documentoAtual.tipo} atualizado`,\n        valorAnterior: JSON.stringify({\n          documentoId: documentoAtual.id,\n          tipo: documentoAtual.tipo,\n          numero: documentoAtual.numero,\n          dataEmissao: documentoAtual.dataEmissao,\n          orgaoEmissor: documentoAtual.orgaoEmissor,\n          arquivo: documentoAtual.arquivo,\n          observacoes: documentoAtual.observacoes,\n        }),\n        valorNovo: JSON.stringify({\n          documentoId: documentoAtualizado.id,\n          tipo: documentoAtualizado.tipo,\n          numero: documentoAtualizado.numero,\n          dataEmissao: documentoAtualizado.dataEmissao,\n          orgaoEmissor: documentoAtualizado.orgaoEmissor,\n          arquivo: documentoAtualizado.arquivo,\n          observacoes: documentoAtualizado.observacoes,\n        }),\n        criadoPorId: session.user.id,\n      },\n    });\n\n    return NextResponse.json({\n      mensagem: 'Documento atualizado com sucesso',\n      documento: {\n        id: documentoAtualizado.id,\n        tipo: documentoAtualizado.tipo,\n        numero: documentoAtualizado.numero,\n        dataEmissao: documentoAtualizado.dataEmissao,\n        orgaoEmissor: documentoAtualizado.orgaoEmissor,\n        arquivo: documentoAtualizado.arquivo,\n        observacoes: documentoAtualizado.observacoes,\n        criadoEm: documentoAtualizado.criadoEm,\n        atualizadoEm: documentoAtualizado.atualizadoEm,\n      },\n    });\n  } catch (error) {\n    console.error('Erro ao atualizar documento do atendente:', error);\n\n    if (error instanceof ZodError) {\n      return NextResponse.json(\n        {\n          erro: MENSAGENS_ERRO_ATENDENTES.DADOS_INVALIDOS,\n          detalhes: error.errors,\n        },\n        { status: 400 }\n      );\n    }\n\n    return NextResponse.json(\n      { erro: MENSAGENS_ERRO_ATENDENTES.ERRO_INTERNO },\n      { status: 500 }\n    );\n  }\n}\n\n/**\n * DELETE /api/atendentes/[id]/documentos/[documentoId]\n * Remove um documento espec\xEDfico do atendente\n */\nexport async function DELETE(request: NextRequest, { params }: RouteParams) {\n  try {\n    // Verificar autentica\xE7\xE3o\n    const session = await getServerSession(authOptions);\n    if (!session?.user) {\n      return NextResponse.json({ erro: 'N\xE3o autorizado' }, { status: 401 });\n    }\n\n    // Verificar permiss\xF5es (apenas ADMIN pode remover documentos)\n    if (session.user.userType !== 'ADMIN') {\n      return NextResponse.json(\n        { erro: MENSAGENS_ERRO_ATENDENTES.SEM_PERMISSAO },\n        { status: 403 }\n      );\n    }\n\n    // Validar IDs\n    const atendenteId = idAtendenteSchema.parse(params.id);\n    const documentoId = idDocumentoSchema.parse(params.documentoId);\n\n    // Verificar se o atendente existe\n    const atendente = await prisma.atendente.findUnique({\n      where: { id: atendenteId },\n      select: { id: true },\n    });\n\n    if (!atendente) {\n      return NextResponse.json(\n        { erro: MENSAGENS_ERRO_ATENDENTES.ATENDENTE_NAO_ENCONTRADO },\n        { status: 404 }\n      );\n    }\n\n    // Buscar documento\n    const documento = await prisma.documentoAtendente.findFirst({\n      where: {\n        id: documentoId,\n        atendenteId,\n      },\n    });\n\n    if (!documento) {\n      return NextResponse.json(\n        { erro: 'Documento n\xE3o encontrado' },\n        { status: 404 }\n      );\n    }\n\n    // Remover documento\n    await prisma.documentoAtendente.delete({\n      where: { id: documentoId },\n    });\n\n    // Registrar no hist\xF3rico de altera\xE7\xF5es\n    await prisma.historicoAlteracaoAtendente.create({\n      data: {\n        atendenteId,\n        tipo: 'REMOCAO_DOCUMENTO',\n        descricao: `Documento ${documento.tipo} removido`,\n        valorAnterior: JSON.stringify({\n          documentoId: documento.id,\n          tipo: documento.tipo,\n          numero: documento.numero,\n        }),\n        criadoPorId: session.user.id,\n      },\n    });\n\n    return NextResponse.json({\n      mensagem: 'Documento removido com sucesso',\n    });\n  } catch (error) {\n    console.error('Erro ao remover documento do atendente:', error);\n\n    if (error instanceof ZodError) {\n      return NextResponse.json(\n        {\n          erro: MENSAGENS_ERRO_ATENDENTES.DADOS_INVALIDOS,\n          detalhes: error.errors,\n        },\n        { status: 400 }\n      );\n    }\n\n    return NextResponse.json(\n      { erro: MENSAGENS_ERRO_ATENDENTES.ERRO_INTERNO },\n      { status: 500 }\n    );\n  }\n}\n"],
      names: ["DELETE", "GET", "PUT", "idDocumentoSchema", "z", "string", "uuid", "atualizarDocumentoSchema", "object", "tipo", "enum", "optional", "numero", "min", "max", "dataEmissao", "datetime", "orgaoEmissor", "arquivo", "url", "observacoes", "request", "params", "session", "getServerSession", "authOptions", "user", "NextResponse", "json", "erro", "status", "includes", "userType", "MENSAGENS_ERRO_ATENDENTES", "SEM_PERMISSAO", "atendenteId", "idAtendenteSchema", "parse", "id", "documentoId", "atendente", "prisma", "findUnique", "where", "select", "usuarioId", "ATENDENTE_NAO_ENCONTRADO", "documento", "documentoAtendente", "findFirst", "criadoEm", "atualizadoEm", "error", "console", "ZodError", "DADOS_INVALIDOS", "detalhes", "errors", "ERRO_INTERNO", "documentoAtual", "dadosRequisicao", "dadosValidados", "Object", "keys", "length", "tipoVerificar", "numeroVerificar", "documentoExistente", "not", "dadosAtualizacao", "undefined", "Date", "documentoAtualizado", "update", "data", "historicoAlteracaoAtendente", "create", "campo", "descricao", "valorAnterior", "JSON", "stringify", "valorNovo", "criadoPorId", "mensagem", "delete"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f29b8277239852632b02d77976c45f1cd358705a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_z25nl6kx9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_z25nl6kx9();
cov_z25nl6kx9().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_z25nl6kx9().f[0]++;
  cov_z25nl6kx9().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_z25nl6kx9().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_z25nl6kx9().s[3]++;
_export(exports, {
  get DELETE() {
    /* istanbul ignore next */
    cov_z25nl6kx9().f[1]++;
    cov_z25nl6kx9().s[4]++;
    return DELETE;
  },
  get GET() {
    /* istanbul ignore next */
    cov_z25nl6kx9().f[2]++;
    cov_z25nl6kx9().s[5]++;
    return GET;
  },
  get PUT() {
    /* istanbul ignore next */
    cov_z25nl6kx9().f[3]++;
    cov_z25nl6kx9().s[6]++;
    return PUT;
  }
});
const _server =
/* istanbul ignore next */
(cov_z25nl6kx9().s[7]++, require("next/server"));
const _nextauth =
/* istanbul ignore next */
(cov_z25nl6kx9().s[8]++, require("next-auth"));
const _auth =
/* istanbul ignore next */
(cov_z25nl6kx9().s[9]++, require("../../../../../../lib/auth"));
const _prisma =
/* istanbul ignore next */
(cov_z25nl6kx9().s[10]++, require("../../../../../../lib/prisma"));
const _zod =
/* istanbul ignore next */
(cov_z25nl6kx9().s[11]++, require("zod"));
const _atendentes =
/* istanbul ignore next */
(cov_z25nl6kx9().s[12]++, require("../../../../../../lib/validations/atendentes"));
/**
 * Schema para validação de ID de documento
 */
const idDocumentoSchema =
/* istanbul ignore next */
(cov_z25nl6kx9().s[13]++, _zod.z.string().uuid('ID do documento deve ser um UUID válido'));
/**
 * Schema para atualização de documento
 */
const atualizarDocumentoSchema =
/* istanbul ignore next */
(cov_z25nl6kx9().s[14]++, _zod.z.object({
  tipo: _zod.z.enum(['RG', 'CPF', 'CNH', 'CTPS', 'TITULO_ELEITOR', 'CERTIFICADO', 'DIPLOMA', 'OUTRO']).optional(),
  numero: _zod.z.string().min(1, 'Número do documento é obrigatório').max(50, 'Número deve ter no máximo 50 caracteres').optional(),
  dataEmissao: _zod.z.string().datetime('Data de emissão deve ser uma data válida').optional(),
  orgaoEmissor: _zod.z.string().max(100, 'Órgão emissor deve ter no máximo 100 caracteres').optional(),
  arquivo: _zod.z.string().url('URL do arquivo deve ser válida').optional(),
  observacoes: _zod.z.string().max(500, 'Observações devem ter no máximo 500 caracteres').optional()
}));
async function GET(request, {
  params
}) {
  /* istanbul ignore next */
  cov_z25nl6kx9().f[4]++;
  cov_z25nl6kx9().s[15]++;
  try {
    // Verificar autenticação
    const session =
    /* istanbul ignore next */
    (cov_z25nl6kx9().s[16]++, await (0, _nextauth.getServerSession)(_auth.authOptions));
    /* istanbul ignore next */
    cov_z25nl6kx9().s[17]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_z25nl6kx9().b[0][0]++;
      cov_z25nl6kx9().s[18]++;
      return _server.NextResponse.json({
        erro: 'Não autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_z25nl6kx9().b[0][1]++;
    }
    // Verificar permissões
    cov_z25nl6kx9().s[19]++;
    if (!['ADMIN', 'GERENTE', 'ATENDENTE'].includes(session.user.userType)) {
      /* istanbul ignore next */
      cov_z25nl6kx9().b[1][0]++;
      cov_z25nl6kx9().s[20]++;
      return _server.NextResponse.json({
        erro: _atendentes.MENSAGENS_ERRO_ATENDENTES.SEM_PERMISSAO
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_z25nl6kx9().b[1][1]++;
    }
    // Validar IDs
    const atendenteId =
    /* istanbul ignore next */
    (cov_z25nl6kx9().s[21]++, _atendentes.idAtendenteSchema.parse(params.id));
    const documentoId =
    /* istanbul ignore next */
    (cov_z25nl6kx9().s[22]++, idDocumentoSchema.parse(params.documentoId));
    // Verificar se o atendente existe
    const atendente =
    /* istanbul ignore next */
    (cov_z25nl6kx9().s[23]++, await _prisma.prisma.atendente.findUnique({
      where: {
        id: atendenteId
      },
      select: {
        id: true,
        usuarioId: true
      }
    }));
    /* istanbul ignore next */
    cov_z25nl6kx9().s[24]++;
    if (!atendente) {
      /* istanbul ignore next */
      cov_z25nl6kx9().b[2][0]++;
      cov_z25nl6kx9().s[25]++;
      return _server.NextResponse.json({
        erro: _atendentes.MENSAGENS_ERRO_ATENDENTES.ATENDENTE_NAO_ENCONTRADO
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_z25nl6kx9().b[2][1]++;
    }
    // Verificar se o atendente pode ver apenas seus próprios documentos
    cov_z25nl6kx9().s[26]++;
    if (
    /* istanbul ignore next */
    (cov_z25nl6kx9().b[4][0]++, session.user.userType === 'ATENDENTE') &&
    /* istanbul ignore next */
    (cov_z25nl6kx9().b[4][1]++, atendente.usuarioId !== session.user.id)) {
      /* istanbul ignore next */
      cov_z25nl6kx9().b[3][0]++;
      cov_z25nl6kx9().s[27]++;
      return _server.NextResponse.json({
        erro: _atendentes.MENSAGENS_ERRO_ATENDENTES.SEM_PERMISSAO
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_z25nl6kx9().b[3][1]++;
    }
    // Buscar documento
    const documento =
    /* istanbul ignore next */
    (cov_z25nl6kx9().s[28]++, await _prisma.prisma.documentoAtendente.findFirst({
      where: {
        id: documentoId,
        atendenteId
      }
    }));
    /* istanbul ignore next */
    cov_z25nl6kx9().s[29]++;
    if (!documento) {
      /* istanbul ignore next */
      cov_z25nl6kx9().b[5][0]++;
      cov_z25nl6kx9().s[30]++;
      return _server.NextResponse.json({
        erro: 'Documento não encontrado'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_z25nl6kx9().b[5][1]++;
    }
    cov_z25nl6kx9().s[31]++;
    return _server.NextResponse.json({
      documento: {
        id: documento.id,
        tipo: documento.tipo,
        numero: documento.numero,
        dataEmissao: documento.dataEmissao,
        orgaoEmissor: documento.orgaoEmissor,
        arquivo: documento.arquivo,
        observacoes: documento.observacoes,
        criadoEm: documento.criadoEm,
        atualizadoEm: documento.atualizadoEm
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_z25nl6kx9().s[32]++;
    console.error('Erro ao buscar documento do atendente:', error);
    /* istanbul ignore next */
    cov_z25nl6kx9().s[33]++;
    if (error instanceof _zod.ZodError) {
      /* istanbul ignore next */
      cov_z25nl6kx9().b[6][0]++;
      cov_z25nl6kx9().s[34]++;
      return _server.NextResponse.json({
        erro: _atendentes.MENSAGENS_ERRO_ATENDENTES.DADOS_INVALIDOS,
        detalhes: error.errors
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_z25nl6kx9().b[6][1]++;
    }
    cov_z25nl6kx9().s[35]++;
    return _server.NextResponse.json({
      erro: _atendentes.MENSAGENS_ERRO_ATENDENTES.ERRO_INTERNO
    }, {
      status: 500
    });
  }
}
async function PUT(request, {
  params
}) {
  /* istanbul ignore next */
  cov_z25nl6kx9().f[5]++;
  cov_z25nl6kx9().s[36]++;
  try {
    // Verificar autenticação
    const session =
    /* istanbul ignore next */
    (cov_z25nl6kx9().s[37]++, await (0, _nextauth.getServerSession)(_auth.authOptions));
    /* istanbul ignore next */
    cov_z25nl6kx9().s[38]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_z25nl6kx9().b[7][0]++;
      cov_z25nl6kx9().s[39]++;
      return _server.NextResponse.json({
        erro: 'Não autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_z25nl6kx9().b[7][1]++;
    }
    // Verificar permissões (apenas ADMIN e GERENTE podem atualizar documentos)
    cov_z25nl6kx9().s[40]++;
    if (!['ADMIN', 'GERENTE'].includes(session.user.userType)) {
      /* istanbul ignore next */
      cov_z25nl6kx9().b[8][0]++;
      cov_z25nl6kx9().s[41]++;
      return _server.NextResponse.json({
        erro: _atendentes.MENSAGENS_ERRO_ATENDENTES.SEM_PERMISSAO
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_z25nl6kx9().b[8][1]++;
    }
    // Validar IDs
    const atendenteId =
    /* istanbul ignore next */
    (cov_z25nl6kx9().s[42]++, _atendentes.idAtendenteSchema.parse(params.id));
    const documentoId =
    /* istanbul ignore next */
    (cov_z25nl6kx9().s[43]++, idDocumentoSchema.parse(params.documentoId));
    // Verificar se o atendente existe
    const atendente =
    /* istanbul ignore next */
    (cov_z25nl6kx9().s[44]++, await _prisma.prisma.atendente.findUnique({
      where: {
        id: atendenteId
      },
      select: {
        id: true
      }
    }));
    /* istanbul ignore next */
    cov_z25nl6kx9().s[45]++;
    if (!atendente) {
      /* istanbul ignore next */
      cov_z25nl6kx9().b[9][0]++;
      cov_z25nl6kx9().s[46]++;
      return _server.NextResponse.json({
        erro: _atendentes.MENSAGENS_ERRO_ATENDENTES.ATENDENTE_NAO_ENCONTRADO
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_z25nl6kx9().b[9][1]++;
    }
    // Buscar documento atual
    const documentoAtual =
    /* istanbul ignore next */
    (cov_z25nl6kx9().s[47]++, await _prisma.prisma.documentoAtendente.findFirst({
      where: {
        id: documentoId,
        atendenteId
      }
    }));
    /* istanbul ignore next */
    cov_z25nl6kx9().s[48]++;
    if (!documentoAtual) {
      /* istanbul ignore next */
      cov_z25nl6kx9().b[10][0]++;
      cov_z25nl6kx9().s[49]++;
      return _server.NextResponse.json({
        erro: 'Documento não encontrado'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_z25nl6kx9().b[10][1]++;
    }
    // Extrair dados do corpo da requisição
    const dadosRequisicao =
    /* istanbul ignore next */
    (cov_z25nl6kx9().s[50]++, await request.json());
    // Validar dados
    const dadosValidados =
    /* istanbul ignore next */
    (cov_z25nl6kx9().s[51]++, atualizarDocumentoSchema.parse(dadosRequisicao));
    // Verificar se há dados para atualizar
    /* istanbul ignore next */
    cov_z25nl6kx9().s[52]++;
    if (Object.keys(dadosValidados).length === 0) {
      /* istanbul ignore next */
      cov_z25nl6kx9().b[11][0]++;
      cov_z25nl6kx9().s[53]++;
      return _server.NextResponse.json({
        erro: 'Nenhum dado fornecido para atualização'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_z25nl6kx9().b[11][1]++;
    }
    // Verificar se já existe outro documento com o mesmo tipo e número (se estiver sendo alterado)
    cov_z25nl6kx9().s[54]++;
    if (
    /* istanbul ignore next */
    (cov_z25nl6kx9().b[13][0]++, dadosValidados.tipo) ||
    /* istanbul ignore next */
    (cov_z25nl6kx9().b[13][1]++, dadosValidados.numero)) {
      /* istanbul ignore next */
      cov_z25nl6kx9().b[12][0]++;
      const tipoVerificar =
      /* istanbul ignore next */
      (cov_z25nl6kx9().s[55]++,
      /* istanbul ignore next */
      (cov_z25nl6kx9().b[14][0]++, dadosValidados.tipo) ||
      /* istanbul ignore next */
      (cov_z25nl6kx9().b[14][1]++, documentoAtual.tipo));
      const numeroVerificar =
      /* istanbul ignore next */
      (cov_z25nl6kx9().s[56]++,
      /* istanbul ignore next */
      (cov_z25nl6kx9().b[15][0]++, dadosValidados.numero) ||
      /* istanbul ignore next */
      (cov_z25nl6kx9().b[15][1]++, documentoAtual.numero));
      const documentoExistente =
      /* istanbul ignore next */
      (cov_z25nl6kx9().s[57]++, await _prisma.prisma.documentoAtendente.findFirst({
        where: {
          atendenteId,
          tipo: tipoVerificar,
          numero: numeroVerificar,
          id: {
            not: documentoId
          }
        }
      }));
      /* istanbul ignore next */
      cov_z25nl6kx9().s[58]++;
      if (documentoExistente) {
        /* istanbul ignore next */
        cov_z25nl6kx9().b[16][0]++;
        cov_z25nl6kx9().s[59]++;
        return _server.NextResponse.json({
          erro: `Documento ${tipoVerificar} com número ${numeroVerificar} já existe para este atendente`
        }, {
          status: 409
        });
      } else
      /* istanbul ignore next */
      {
        cov_z25nl6kx9().b[16][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_z25nl6kx9().b[12][1]++;
    }
    // Preparar dados para atualização
    const dadosAtualizacao =
    /* istanbul ignore next */
    (cov_z25nl6kx9().s[60]++, {});
    /* istanbul ignore next */
    cov_z25nl6kx9().s[61]++;
    if (dadosValidados.tipo) {
      /* istanbul ignore next */
      cov_z25nl6kx9().b[17][0]++;
      cov_z25nl6kx9().s[62]++;
      dadosAtualizacao.tipo = dadosValidados.tipo;
    } else
    /* istanbul ignore next */
    {
      cov_z25nl6kx9().b[17][1]++;
    }
    cov_z25nl6kx9().s[63]++;
    if (dadosValidados.numero) {
      /* istanbul ignore next */
      cov_z25nl6kx9().b[18][0]++;
      cov_z25nl6kx9().s[64]++;
      dadosAtualizacao.numero = dadosValidados.numero;
    } else
    /* istanbul ignore next */
    {
      cov_z25nl6kx9().b[18][1]++;
    }
    cov_z25nl6kx9().s[65]++;
    if (dadosValidados.dataEmissao !== undefined) {
      /* istanbul ignore next */
      cov_z25nl6kx9().b[19][0]++;
      cov_z25nl6kx9().s[66]++;
      dadosAtualizacao.dataEmissao = dadosValidados.dataEmissao ?
      /* istanbul ignore next */
      (cov_z25nl6kx9().b[20][0]++, new Date(dadosValidados.dataEmissao)) :
      /* istanbul ignore next */
      (cov_z25nl6kx9().b[20][1]++, null);
    } else
    /* istanbul ignore next */
    {
      cov_z25nl6kx9().b[19][1]++;
    }
    cov_z25nl6kx9().s[67]++;
    if (dadosValidados.orgaoEmissor !== undefined) {
      /* istanbul ignore next */
      cov_z25nl6kx9().b[21][0]++;
      cov_z25nl6kx9().s[68]++;
      dadosAtualizacao.orgaoEmissor = dadosValidados.orgaoEmissor;
    } else
    /* istanbul ignore next */
    {
      cov_z25nl6kx9().b[21][1]++;
    }
    cov_z25nl6kx9().s[69]++;
    if (dadosValidados.arquivo !== undefined) {
      /* istanbul ignore next */
      cov_z25nl6kx9().b[22][0]++;
      cov_z25nl6kx9().s[70]++;
      dadosAtualizacao.arquivo = dadosValidados.arquivo;
    } else
    /* istanbul ignore next */
    {
      cov_z25nl6kx9().b[22][1]++;
    }
    cov_z25nl6kx9().s[71]++;
    if (dadosValidados.observacoes !== undefined) {
      /* istanbul ignore next */
      cov_z25nl6kx9().b[23][0]++;
      cov_z25nl6kx9().s[72]++;
      dadosAtualizacao.observacoes = dadosValidados.observacoes;
    } else
    /* istanbul ignore next */
    {
      cov_z25nl6kx9().b[23][1]++;
    }
    // Atualizar documento
    const documentoAtualizado =
    /* istanbul ignore next */
    (cov_z25nl6kx9().s[73]++, await _prisma.prisma.documentoAtendente.update({
      where: {
        id: documentoId
      },
      data: dadosAtualizacao
    }));
    // Registrar no histórico de alterações
    /* istanbul ignore next */
    cov_z25nl6kx9().s[74]++;
    await _prisma.prisma.historicoAlteracaoAtendente.create({
      data: {
        atendenteId,
        tipo: 'ATUALIZACAO',
        campo: 'documento',
        descricao: `Documento ${documentoAtual.tipo} atualizado`,
        valorAnterior: JSON.stringify({
          documentoId: documentoAtual.id,
          tipo: documentoAtual.tipo,
          numero: documentoAtual.numero,
          dataEmissao: documentoAtual.dataEmissao,
          orgaoEmissor: documentoAtual.orgaoEmissor,
          arquivo: documentoAtual.arquivo,
          observacoes: documentoAtual.observacoes
        }),
        valorNovo: JSON.stringify({
          documentoId: documentoAtualizado.id,
          tipo: documentoAtualizado.tipo,
          numero: documentoAtualizado.numero,
          dataEmissao: documentoAtualizado.dataEmissao,
          orgaoEmissor: documentoAtualizado.orgaoEmissor,
          arquivo: documentoAtualizado.arquivo,
          observacoes: documentoAtualizado.observacoes
        }),
        criadoPorId: session.user.id
      }
    });
    /* istanbul ignore next */
    cov_z25nl6kx9().s[75]++;
    return _server.NextResponse.json({
      mensagem: 'Documento atualizado com sucesso',
      documento: {
        id: documentoAtualizado.id,
        tipo: documentoAtualizado.tipo,
        numero: documentoAtualizado.numero,
        dataEmissao: documentoAtualizado.dataEmissao,
        orgaoEmissor: documentoAtualizado.orgaoEmissor,
        arquivo: documentoAtualizado.arquivo,
        observacoes: documentoAtualizado.observacoes,
        criadoEm: documentoAtualizado.criadoEm,
        atualizadoEm: documentoAtualizado.atualizadoEm
      }
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_z25nl6kx9().s[76]++;
    console.error('Erro ao atualizar documento do atendente:', error);
    /* istanbul ignore next */
    cov_z25nl6kx9().s[77]++;
    if (error instanceof _zod.ZodError) {
      /* istanbul ignore next */
      cov_z25nl6kx9().b[24][0]++;
      cov_z25nl6kx9().s[78]++;
      return _server.NextResponse.json({
        erro: _atendentes.MENSAGENS_ERRO_ATENDENTES.DADOS_INVALIDOS,
        detalhes: error.errors
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_z25nl6kx9().b[24][1]++;
    }
    cov_z25nl6kx9().s[79]++;
    return _server.NextResponse.json({
      erro: _atendentes.MENSAGENS_ERRO_ATENDENTES.ERRO_INTERNO
    }, {
      status: 500
    });
  }
}
async function DELETE(request, {
  params
}) {
  /* istanbul ignore next */
  cov_z25nl6kx9().f[6]++;
  cov_z25nl6kx9().s[80]++;
  try {
    // Verificar autenticação
    const session =
    /* istanbul ignore next */
    (cov_z25nl6kx9().s[81]++, await (0, _nextauth.getServerSession)(_auth.authOptions));
    /* istanbul ignore next */
    cov_z25nl6kx9().s[82]++;
    if (!session?.user) {
      /* istanbul ignore next */
      cov_z25nl6kx9().b[25][0]++;
      cov_z25nl6kx9().s[83]++;
      return _server.NextResponse.json({
        erro: 'Não autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_z25nl6kx9().b[25][1]++;
    }
    // Verificar permissões (apenas ADMIN pode remover documentos)
    cov_z25nl6kx9().s[84]++;
    if (session.user.userType !== 'ADMIN') {
      /* istanbul ignore next */
      cov_z25nl6kx9().b[26][0]++;
      cov_z25nl6kx9().s[85]++;
      return _server.NextResponse.json({
        erro: _atendentes.MENSAGENS_ERRO_ATENDENTES.SEM_PERMISSAO
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_z25nl6kx9().b[26][1]++;
    }
    // Validar IDs
    const atendenteId =
    /* istanbul ignore next */
    (cov_z25nl6kx9().s[86]++, _atendentes.idAtendenteSchema.parse(params.id));
    const documentoId =
    /* istanbul ignore next */
    (cov_z25nl6kx9().s[87]++, idDocumentoSchema.parse(params.documentoId));
    // Verificar se o atendente existe
    const atendente =
    /* istanbul ignore next */
    (cov_z25nl6kx9().s[88]++, await _prisma.prisma.atendente.findUnique({
      where: {
        id: atendenteId
      },
      select: {
        id: true
      }
    }));
    /* istanbul ignore next */
    cov_z25nl6kx9().s[89]++;
    if (!atendente) {
      /* istanbul ignore next */
      cov_z25nl6kx9().b[27][0]++;
      cov_z25nl6kx9().s[90]++;
      return _server.NextResponse.json({
        erro: _atendentes.MENSAGENS_ERRO_ATENDENTES.ATENDENTE_NAO_ENCONTRADO
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_z25nl6kx9().b[27][1]++;
    }
    // Buscar documento
    const documento =
    /* istanbul ignore next */
    (cov_z25nl6kx9().s[91]++, await _prisma.prisma.documentoAtendente.findFirst({
      where: {
        id: documentoId,
        atendenteId
      }
    }));
    /* istanbul ignore next */
    cov_z25nl6kx9().s[92]++;
    if (!documento) {
      /* istanbul ignore next */
      cov_z25nl6kx9().b[28][0]++;
      cov_z25nl6kx9().s[93]++;
      return _server.NextResponse.json({
        erro: 'Documento não encontrado'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_z25nl6kx9().b[28][1]++;
    }
    // Remover documento
    cov_z25nl6kx9().s[94]++;
    await _prisma.prisma.documentoAtendente.delete({
      where: {
        id: documentoId
      }
    });
    // Registrar no histórico de alterações
    /* istanbul ignore next */
    cov_z25nl6kx9().s[95]++;
    await _prisma.prisma.historicoAlteracaoAtendente.create({
      data: {
        atendenteId,
        tipo: 'REMOCAO_DOCUMENTO',
        descricao: `Documento ${documento.tipo} removido`,
        valorAnterior: JSON.stringify({
          documentoId: documento.id,
          tipo: documento.tipo,
          numero: documento.numero
        }),
        criadoPorId: session.user.id
      }
    });
    /* istanbul ignore next */
    cov_z25nl6kx9().s[96]++;
    return _server.NextResponse.json({
      mensagem: 'Documento removido com sucesso'
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_z25nl6kx9().s[97]++;
    console.error('Erro ao remover documento do atendente:', error);
    /* istanbul ignore next */
    cov_z25nl6kx9().s[98]++;
    if (error instanceof _zod.ZodError) {
      /* istanbul ignore next */
      cov_z25nl6kx9().b[29][0]++;
      cov_z25nl6kx9().s[99]++;
      return _server.NextResponse.json({
        erro: _atendentes.MENSAGENS_ERRO_ATENDENTES.DADOS_INVALIDOS,
        detalhes: error.errors
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_z25nl6kx9().b[29][1]++;
    }
    cov_z25nl6kx9().s[100]++;
    return _server.NextResponse.json({
      erro: _atendentes.MENSAGENS_ERRO_ATENDENTES.ERRO_INTERNO
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,