{"version":3,"sources":["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\test\\setup.ts"],"sourcesContent":["// Setup para Jest e Vitest\nimport '@testing-library/jest-dom';\nimport { cleanup } from '@testing-library/react';\n\n// Detectar ambiente de teste\nconst isVitest = typeof global.vitest !== 'undefined' || process.env.VITEST === 'true';\nconst isJest = typeof jest !== 'undefined';\n\n// Configurar mocks baseado no ambiente\nconst mockFn = isVitest ? (global as any).vi?.fn || (() => {}) : jest.fn;\nconst clearMocks = isVitest ? (global as any).vi?.clearAllMocks || (() => {}) : jest.clearAllMocks;\n\n// Limpar após cada teste\nafterEach(() => {\n  cleanup();\n  if (isVitest && (global as any).vi) {\n    (global as any).vi.clearAllMocks();\n  } else if (isJest) {\n    jest.clearAllMocks();\n  }\n});\n\n// Mock do fetch global\nif (isVitest) {\n  if ((global as any).vi) {\n    global.fetch = (global as any).vi.fn();\n  }\n} else {\n  global.fetch = jest.fn();\n}\n\n// Mock do localStorage\nconst localStorageMock = {\n  getItem: mockFn(),\n  setItem: mockFn(),\n  removeItem: mockFn(),\n  clear: mockFn(),\n  length: 0,\n  key: mockFn(),\n};\n\nObject.defineProperty(window, 'localStorage', {\n  value: localStorageMock,\n});\n\n// Mock do sessionStorage\nconst sessionStorageMock = {\n  getItem: mockFn(),\n  setItem: mockFn(),\n  removeItem: mockFn(),\n  clear: mockFn(),\n  length: 0,\n  key: mockFn(),\n};\n\nObject.defineProperty(window, 'sessionStorage', {\n  value: sessionStorageMock,\n});\n\n// Mock do window.location\nObject.defineProperty(window, 'location', {\n  value: {\n    href: 'http://localhost:3000',\n    origin: 'http://localhost:3000',\n    protocol: 'http:',\n    host: 'localhost:3000',\n    hostname: 'localhost',\n    port: '3000',\n    pathname: '/',\n    search: '',\n    hash: '',\n    assign: mockFn(),\n    replace: mockFn(),\n    reload: mockFn(),\n  },\n  writable: true,\n});\n\n// Mock do window.matchMedia\nObject.defineProperty(window, 'matchMedia', {\n  writable: true,\n  value: mockFn().mockImplementation ? mockFn().mockImplementation(query => ({\n    matches: false,\n    media: query,\n    onchange: null,\n    addListener: mockFn(), // deprecated\n    removeListener: mockFn(), // deprecated\n    addEventListener: mockFn(),\n    removeEventListener: mockFn(),\n    dispatchEvent: mockFn(),\n  })) : () => ({\n    matches: false,\n    media: '',\n    onchange: null,\n    addListener: () => {},\n    removeListener: () => {},\n    addEventListener: () => {},\n    removeEventListener: () => {},\n    dispatchEvent: () => {},\n  }),\n});\n\n// Mock do ResizeObserver\nglobal.ResizeObserver = mockFn().mockImplementation ? mockFn().mockImplementation(() => ({\n  observe: mockFn(),\n  unobserve: mockFn(),\n  disconnect: mockFn(),\n})) : class ResizeObserver {\n  observe() {}\n  unobserve() {}\n  disconnect() {}\n};\n\n// Mock do IntersectionObserver\nglobal.IntersectionObserver = mockFn().mockImplementation ? mockFn().mockImplementation(() => ({\n  observe: mockFn(),\n  unobserve: mockFn(),\n  disconnect: mockFn(),\n})) : class IntersectionObserver {\n  observe() {}\n  unobserve() {}\n  disconnect() {}\n};\n\n// Mock do console para testes mais limpos (apenas para Jest)\nif (isJest) {\n  const originalConsoleError = console.error;\n  const originalConsoleWarn = console.warn;\n\n  beforeEach(() => {\n    console.error = jest.fn();\n    console.warn = jest.fn();\n  });\n\n  afterEach(() => {\n    console.error = originalConsoleError;\n    console.warn = originalConsoleWarn;\n  });\n}\n\n// Mock de variáveis de ambiente para testes\nprocess.env.NODE_ENV = 'test';\nprocess.env.NEXT_PUBLIC_API_URL = 'http://localhost:3000/api';\n\n// Helpers para testes\nexport const createMockResponse = (data: any, status = 200) => {\n  return {\n    ok: status >= 200 && status < 300,\n    status,\n    statusText: status === 200 ? 'OK' : 'Error',\n    json: () => Promise.resolve(data),\n    text: () => Promise.resolve(JSON.stringify(data)),\n    headers: new Headers(),\n    redirected: false,\n    type: 'basic' as ResponseType,\n    url: '',\n    clone: mockFn(),\n    body: null,\n    bodyUsed: false,\n    arrayBuffer: () => Promise.resolve(new ArrayBuffer(0)),\n    blob: () => Promise.resolve(new Blob()),\n    formData: () => Promise.resolve(new FormData()),\n  } as Response;\n};\n\nexport const createMockFetch = (responses: any[]) => {\n  let callCount = 0;\n  return mockFn().mockImplementation ? mockFn().mockImplementation(() => {\n    const response = responses[callCount] || responses[responses.length - 1];\n    callCount++;\n    return Promise.resolve(createMockResponse(response));\n  }) : () => Promise.resolve(createMockResponse(responses[0] || {}));\n};\n\nexport const createMockToast = () => ({\n  toast: mockFn(),\n  success: mockFn(),\n  error: mockFn(),\n  warning: mockFn(),\n  info: mockFn(),\n  loading: mockFn(),\n  dismiss: mockFn(),\n});\n\n// Mock de dados comuns para testes\nexport const mockUsuario = {\n  id: 'user1',\n  nome: 'João Silva',\n  email: 'joao@empresa.com',\n  cargo: 'Desenvolvedor',\n  departamento: 'TI',\n  ativo: true,\n  criadoEm: new Date().toISOString(),\n  atualizadoEm: new Date().toISOString(),\n};\n\nexport const mockAvaliacao = {\n  id: 'aval1',\n  titulo: 'Avaliação Anual 2024',\n  descricao: 'Avaliação de desempenho anual',\n  tipo: 'anual',\n  status: 'pendente',\n  prazo: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString(),\n  usuarioId: 'user1',\n  avaliadorId: 'user2',\n  criadaEm: new Date().toISOString(),\n  atualizadaEm: new Date().toISOString(),\n};\n\nexport const mockNotificacao = {\n  id: 'notif1',\n  usuarioId: 'user1',\n  avaliacaoId: 'aval1',\n  tipo: 'pendente',\n  titulo: 'Avaliação Pendente',\n  mensagem: 'Você tem uma avaliação pendente para completar.',\n  urgencia: 'media',\n  lida: false,\n  criadaEm: new Date().toISOString(),\n  leituraEm: null,\n};\n\nexport const mockLembrete = {\n  id: 'lembrete1',\n  usuarioId: 'user1',\n  avaliacaoId: 'aval1',\n  tipo: 'prazo_vencimento',\n  titulo: 'Lembrete de Prazo',\n  mensagem: 'Sua avaliação vence em 3 dias.',\n  dataEnvio: new Date().toISOString(),\n  status: 'pendente',\n  tentativas: 0,\n  ultimaTentativa: null,\n  erro: null,\n  metadados: {\n    nomeAvaliacao: 'Avaliação Anual 2024',\n    diasAntecedencia: 3,\n  },\n  criadoEm: new Date().toISOString(),\n  atualizadoEm: new Date().toISOString(),\n};\n\n// Utilitários para testes assíncronos\nexport const waitFor = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\n\nexport const flushPromises = () => new Promise(resolve => setImmediate(resolve));\n\n// Mock de hooks do Next.js para Jest\nif (isJest) {\n  jest.mock('next/router', () => ({\n    useRouter: () => ({\n      push: jest.fn(),\n      replace: jest.fn(),\n      back: jest.fn(),\n      forward: jest.fn(),\n      refresh: jest.fn(),\n      prefetch: jest.fn(),\n      pathname: '/',\n      query: {},\n      asPath: '/',\n      route: '/',\n      events: {\n        on: jest.fn(),\n        off: jest.fn(),\n        emit: jest.fn(),\n      },\n    }),\n  }));\n\n  jest.mock('next/navigation', () => ({\n    useRouter: () => ({\n      push: jest.fn(),\n      replace: jest.fn(),\n      back: jest.fn(),\n      forward: jest.fn(),\n      refresh: jest.fn(),\n      prefetch: jest.fn(),\n    }),\n    usePathname: () => '/',\n    useSearchParams: () => new URLSearchParams(),\n  }));\n}"],"names":["createMockFetch","createMockResponse","createMockToast","flushPromises","mockAvaliacao","mockLembrete","mockNotificacao","mockUsuario","waitFor","isVitest","global","vitest","process","env","VITEST","isJest","jest","mockFn","vi","fn","clearMocks","clearAllMocks","afterEach","cleanup","fetch","localStorageMock","getItem","setItem","removeItem","clear","length","key","Object","defineProperty","window","value","sessionStorageMock","href","origin","protocol","host","hostname","port","pathname","search","hash","assign","replace","reload","writable","mockImplementation","query","matches","media","onchange","addListener","removeListener","addEventListener","removeEventListener","dispatchEvent","ResizeObserver","observe","unobserve","disconnect","IntersectionObserver","originalConsoleError","console","error","originalConsoleWarn","warn","beforeEach","NODE_ENV","NEXT_PUBLIC_API_URL","data","status","ok","statusText","json","Promise","resolve","text","JSON","stringify","headers","Headers","redirected","type","url","clone","body","bodyUsed","arrayBuffer","ArrayBuffer","blob","Blob","formData","FormData","responses","callCount","response","toast","success","warning","info","loading","dismiss","id","nome","email","cargo","departamento","ativo","criadoEm","Date","toISOString","atualizadoEm","titulo","descricao","tipo","prazo","now","usuarioId","avaliadorId","criadaEm","atualizadaEm","avaliacaoId","mensagem","urgencia","lida","leituraEm","dataEnvio","tentativas","ultimaTentativa","erro","metadados","nomeAvaliacao","diasAntecedencia","ms","setTimeout","setImmediate","mock","useRouter","push","back","forward","refresh","prefetch","asPath","route","events","on","off","emit","usePathname","useSearchParams","URLSearchParams"],"mappings":"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"}