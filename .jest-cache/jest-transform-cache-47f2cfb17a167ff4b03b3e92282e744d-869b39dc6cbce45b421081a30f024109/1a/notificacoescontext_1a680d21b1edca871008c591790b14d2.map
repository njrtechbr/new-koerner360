{"version":3,"names":["cov_hnetyf1d","actualCoverage","s","NotificacoesProvider","f","useNotificacoes","NotificacoesContext","_react","createContext","undefined","children","usuarioId","diasAntecedencia","b","intervaloVerificacao","toast","_usetoast","useToast","avaliacoesPendentes","carregando","buscarAvaliacoesPendentes","marcarNotificacaoLida","_usenotificacoesavaliacoes","useNotificacoesAvaliacoes","intervalId","setIntervalId","default","useState","notificacoesExibidas","setNotificacoesExibidas","Set","exibirNotificacaoToast","useCallback","notificacao","urgenciaColors","baixa","media","alta","urgenciaLabels","variant","urgencia","title","description","avaliado","nome","tipo","Date","prazoFinal","toLocaleDateString","action","_jsxruntime","jsx","onClick","window","location","href","avaliacaoId","className","marcarComoLida","notificacaoId","prev","error","console","atualizarNotificacoes","incluirEstatisticas","verificarNovasNotificacoes","length","forEach","has","id","configurarNotificacoesAutomaticas","intervaloMinutos","clearInterval","novoIntervalId","setInterval","pararNotificacoesAutomaticas","useEffect","contextValue","notificacoesPendentes","carregandoNotificacoes","Provider","value","context","useContext","Error"],"sources":["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\contexts\\notificacoes-context.tsx"],"sourcesContent":["'use client';\n\nimport React, { createContext, useContext, useCallback, useEffect } from 'react';\nimport { useToast } from '@/hooks/use-toast';\nimport { useNotificacoesAvaliacoes } from '@/hooks/use-notificacoes-avaliacoes';\nimport type { AvaliacaoPendente } from '@/lib/utils/notificacoes-avaliacoes';\n\ninterface NotificacoesContextData {\n  notificacoesPendentes: AvaliacaoPendente[];\n  carregandoNotificacoes: boolean;\n  marcarComoLida: (notificacaoId: string) => Promise<void>;\n  atualizarNotificacoes: () => Promise<void>;\n  exibirNotificacaoToast: (notificacao: AvaliacaoPendente) => void;\n  configurarNotificacoesAutomaticas: (intervaloMinutos?: number) => void;\n  pararNotificacoesAutomaticas: () => void;\n}\n\nconst NotificacoesContext = createContext<NotificacoesContextData | undefined>(undefined);\n\ninterface NotificacoesProviderProps {\n  children: React.ReactNode;\n  usuarioId?: string;\n  diasAntecedencia?: number;\n  intervaloVerificacao?: number; // em minutos\n}\n\nexport function NotificacoesProvider({\n  children,\n  usuarioId,\n  diasAntecedencia = 7,\n  intervaloVerificacao = 30,\n}: NotificacoesProviderProps) {\n  const { toast } = useToast();\n  const {\n    avaliacoesPendentes,\n    carregando,\n    buscarAvaliacoesPendentes,\n    marcarNotificacaoLida,\n  } = useNotificacoesAvaliacoes();\n\n  const [intervalId, setIntervalId] = React.useState<NodeJS.Timeout | null>(null);\n  const [notificacoesExibidas, setNotificacoesExibidas] = React.useState<Set<string>>(new Set());\n\n  // Função para exibir notificação toast\n  const exibirNotificacaoToast = useCallback((notificacao: AvaliacaoPendente) => {\n    const urgenciaColors = {\n      baixa: 'info' as const,\n      media: 'warning' as const,\n      alta: 'destructive' as const,\n    };\n\n    const urgenciaLabels = {\n      baixa: 'Baixa',\n      media: 'Média',\n      alta: 'Alta',\n    };\n\n    toast({\n      variant: urgenciaColors[notificacao.urgencia],\n      title: `Avaliação Pendente - Urgência ${urgenciaLabels[notificacao.urgencia]}`,\n      description: `${notificacao.avaliado.nome} - ${notificacao.tipo} (Prazo: ${new Date(notificacao.prazoFinal).toLocaleDateString('pt-BR')})`,\n      action: (\n        <button\n          onClick={() => {\n            // Navegar para a avaliação\n            window.location.href = `/avaliacoes/${notificacao.avaliacaoId}`;\n          }}\n          className=\"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\"\n        >\n          Ver Avaliação\n        </button>\n      ),\n    });\n  }, [toast]);\n\n  // Função para marcar notificação como lida\n  const marcarComoLida = useCallback(async (notificacaoId: string) => {\n    try {\n      await marcarNotificacaoLida(notificacaoId);\n      setNotificacoesExibidas(prev => new Set([...prev, notificacaoId]));\n    } catch (error) {\n      console.error('Erro ao marcar notificação como lida:', error);\n      toast({\n        variant: 'destructive',\n        title: 'Erro',\n        description: 'Não foi possível marcar a notificação como lida.',\n      });\n    }\n  }, [marcarNotificacaoLida, toast]);\n\n  // Função para atualizar notificações\n  const atualizarNotificacoes = useCallback(async () => {\n    if (!usuarioId) return;\n    \n    try {\n      await buscarAvaliacoesPendentes({\n        usuarioId,\n        diasAntecedencia,\n        incluirEstatisticas: false,\n      });\n    } catch (error) {\n      console.error('Erro ao atualizar notificações:', error);\n    }\n  }, [usuarioId, diasAntecedencia, buscarAvaliacoesPendentes]);\n\n  // Função para verificar novas notificações e exibir toasts\n  const verificarNovasNotificacoes = useCallback(() => {\n    if (!avaliacoesPendentes.length) return;\n\n    avaliacoesPendentes.forEach(notificacao => {\n      // Só exibe toast para notificações não exibidas e de alta urgência\n      if (!notificacoesExibidas.has(notificacao.id) && notificacao.urgencia === 'alta') {\n        exibirNotificacaoToast(notificacao);\n        setNotificacoesExibidas(prev => new Set([...prev, notificacao.id]));\n      }\n    });\n  }, [avaliacoesPendentes, notificacoesExibidas, exibirNotificacaoToast]);\n\n  // Configurar notificações automáticas\n  const configurarNotificacoesAutomaticas = useCallback((intervaloMinutos = intervaloVerificacao) => {\n    // Limpar intervalo anterior se existir\n    if (intervalId) {\n      clearInterval(intervalId);\n    }\n\n    // Configurar novo intervalo\n    const novoIntervalId = setInterval(() => {\n      atualizarNotificacoes();\n    }, intervaloMinutos * 60 * 1000);\n\n    setIntervalId(novoIntervalId);\n  }, [intervalId, intervaloVerificacao, atualizarNotificacoes]);\n\n  // Parar notificações automáticas\n  const pararNotificacoesAutomaticas = useCallback(() => {\n    if (intervalId) {\n      clearInterval(intervalId);\n      setIntervalId(null);\n    }\n  }, [intervalId]);\n\n  // Efeito para carregar notificações iniciais\n  useEffect(() => {\n    if (usuarioId) {\n      atualizarNotificacoes();\n    }\n  }, [usuarioId, atualizarNotificacoes]);\n\n  // Efeito para verificar novas notificações\n  useEffect(() => {\n    verificarNovasNotificacoes();\n  }, [verificarNovasNotificacoes]);\n\n  // Efeito para configurar notificações automáticas\n  useEffect(() => {\n    if (usuarioId) {\n      configurarNotificacoesAutomaticas();\n    }\n\n    return () => {\n      pararNotificacoesAutomaticas();\n    };\n  }, [usuarioId, configurarNotificacoesAutomaticas, pararNotificacoesAutomaticas]);\n\n  const contextValue: NotificacoesContextData = {\n    notificacoesPendentes: avaliacoesPendentes,\n    carregandoNotificacoes: carregando,\n    marcarComoLida,\n    atualizarNotificacoes,\n    exibirNotificacaoToast,\n    configurarNotificacoesAutomaticas,\n    pararNotificacoesAutomaticas,\n  };\n\n  return (\n    <NotificacoesContext.Provider value={contextValue}>\n      {children}\n    </NotificacoesContext.Provider>\n  );\n}\n\nexport function useNotificacoes() {\n  const context = useContext(NotificacoesContext);\n  if (context === undefined) {\n    throw new Error('useNotificacoes deve ser usado dentro de um NotificacoesProvider');\n  }\n  return context;\n}"],"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","ignoreList":[]}