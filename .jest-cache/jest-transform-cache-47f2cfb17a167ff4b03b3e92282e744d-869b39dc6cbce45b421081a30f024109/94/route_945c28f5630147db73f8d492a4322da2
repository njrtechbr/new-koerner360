d0a0186f0aa3836da1748e958c4fb38a
"use strict";

/* istanbul ignore next */
function cov_zh3ogwmdy() {
  var path = "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\auth\\generate-temp-password\\route.ts";
  var hash = "c6d4be2f3eade1060c97b886c7ea5810159a3d0a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\auth\\generate-temp-password\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 20
        }
      },
      "3": {
        start: {
          line: 11,
          column: 16
        },
        end: {
          line: 11,
          column: 38
        }
      },
      "4": {
        start: {
          line: 12,
          column: 13
        },
        end: {
          line: 12,
          column: 27
        }
      },
      "5": {
        start: {
          line: 13,
          column: 16
        },
        end: {
          line: 13,
          column: 49
        }
      },
      "6": {
        start: {
          line: 14,
          column: 32
        },
        end: {
          line: 14,
          column: 77
        }
      },
      "7": {
        start: {
          line: 15,
          column: 30
        },
        end: {
          line: 15,
          column: 73
        }
      },
      "8": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 19,
          column: 6
        }
      },
      "9": {
        start: {
          line: 22,
          column: 36
        },
        end: {
          line: 25,
          column: 2
        }
      },
      "10": {
        start: {
          line: 28,
          column: 23
        },
        end: {
          line: 28,
          column: 61
        }
      },
      "11": {
        start: {
          line: 29,
          column: 16
        },
        end: {
          line: 29,
          column: 18
        }
      },
      "12": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "13": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 30,
          column: 17
        }
      },
      "14": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 82
        }
      },
      "15": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 17
        }
      },
      "16": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 103,
          column: 5
        }
      },
      "17": {
        start: {
          line: 37,
          column: 21
        },
        end: {
          line: 37,
          column: 41
        }
      },
      "18": {
        start: {
          line: 39,
          column: 36
        },
        end: {
          line: 39,
          column: 75
        }
      },
      "19": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 47,
          column: 9
        }
      },
      "20": {
        start: {
          line: 42,
          column: 12
        },
        end: {
          line: 46,
          column: 15
        }
      },
      "21": {
        start: {
          line: 49,
          column: 24
        },
        end: {
          line: 53,
          column: 10
        }
      },
      "22": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 60,
          column: 9
        }
      },
      "23": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 59,
          column: 15
        }
      },
      "24": {
        start: {
          line: 62,
          column: 32
        },
        end: {
          line: 62,
          column: 54
        }
      },
      "25": {
        start: {
          line: 63,
          column: 26
        },
        end: {
          line: 63,
          column: 75
        }
      },
      "26": {
        start: {
          line: 65,
          column: 31
        },
        end: {
          line: 65,
          column: 73
        }
      },
      "27": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 76,
          column: 11
        }
      },
      "28": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 74
        }
      },
      "29": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 84
        }
      },
      "30": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 87,
          column: 11
        }
      },
      "31": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 69
        }
      },
      "32": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 97,
          column: 9
        }
      },
      "33": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 96,
          column: 15
        }
      },
      "34": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 102,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 16,
            column: 9
          },
          end: {
            line: 16,
            column: 33
          }
        },
        loc: {
          start: {
            line: 16,
            column: 39
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 16
      },
      "2": {
        name: "gerarSenhaTemporaria",
        decl: {
          start: {
            line: 27,
            column: 9
          },
          end: {
            line: 27,
            column: 29
          }
        },
        loc: {
          start: {
            line: 27,
            column: 32
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 27
      },
      "3": {
        name: "POST",
        decl: {
          start: {
            line: 35,
            column: 15
          },
          end: {
            line: 35,
            column: 19
          }
        },
        loc: {
          start: {
            line: 35,
            column: 29
          },
          end: {
            line: 104,
            column: 1
          }
        },
        line: 35
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 19,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 17,
            column: 35
          },
          end: {
            line: 17,
            column: 38
          }
        }, {
          start: {
            line: 17,
            column: 41
          },
          end: {
            line: 19,
            column: 5
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 17,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 17,
            column: 14
          }
        }, {
          start: {
            line: 17,
            column: 18
          },
          end: {
            line: 17,
            column: 32
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 47,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "3": {
        loc: {
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 8
          },
          end: {
            line: 60,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 54
      },
      "4": {
        loc: {
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 97,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 97,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\auth\\generate-temp-password\\route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { z } from 'zod';\nimport { prisma } from '@/lib/prisma';\nimport bcrypt from 'bcryptjs';\nimport crypto from 'crypto';\n\n// Schema de valida\xE7\xE3o para gera\xE7\xE3o de senha tempor\xE1ria\nconst esquemaGerarSenhaTemporaria = z.object({\n  email: z.string().email('Email inv\xE1lido'),\n  adminKey: z.string().min(1, 'Chave de administrador \xE9 obrigat\xF3ria'),\n});\n\n// Fun\xE7\xE3o para gerar senha tempor\xE1ria\nfunction gerarSenhaTemporaria(): string {\n  const caracteres = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  let senha = '';\n  for (let i = 0; i < 8; i++) {\n    senha += caracteres.charAt(Math.floor(Math.random() * caracteres.length));\n  }\n  return senha;\n}\n\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json();\n\n    // Validar entrada\n    const { email, adminKey } = esquemaGerarSenhaTemporaria.parse(body);\n\n    // Verificar chave de administrador (em produ\xE7\xE3o, usar uma chave mais segura)\n    if (adminKey !== process.env.ADMIN_TEMP_PASSWORD_KEY) {\n      return NextResponse.json({ message: 'Acesso negado' }, { status: 403 });\n    }\n\n    // Verificar se o usu\xE1rio existe\n    const usuario = await prisma.usuario.findUnique({\n      where: { email },\n    });\n\n    if (!usuario) {\n      return NextResponse.json(\n        { message: 'Usu\xE1rio n\xE3o encontrado' },\n        { status: 404 }\n      );\n    }\n\n    // Gerar senha tempor\xE1ria\n    const senhaTemporaria = gerarSenhaTemporaria();\n    const senhaHash = await bcrypt.hash(senhaTemporaria, 12);\n\n    // Gerar token de expira\xE7\xE3o (24 horas)\n    const tokenExpiracao = new Date(Date.now() + 24 * 60 * 60 * 1000);\n\n    // Atualizar usu\xE1rio com senha tempor\xE1ria\n    await prisma.usuario.update({\n      where: { id: usuario.id },\n      data: {\n        senha: senhaHash,\n        tokenRecuperacao: crypto.randomBytes(16).toString('hex'), // Usar como flag de senha tempor\xE1ria\n        expiracaoTokenRecuperacao: tokenExpiracao,\n      },\n    });\n\n    // TODO: Implementar envio de email com a senha tempor\xE1ria\n    // Por enquanto, apenas logamos a senha (em produ\xE7\xE3o, isso deve ser removido)\n    console.log(`Senha tempor\xE1ria para ${email}: ${senhaTemporaria}`);\n    console.log(`A senha expira em: ${tokenExpiracao.toLocaleString('pt-BR')}`);\n\n    return NextResponse.json(\n      {\n        message: 'Senha tempor\xE1ria gerada com sucesso',\n        senhaTemporaria, // Em produ\xE7\xE3o, remover este campo\n        expiraEm: tokenExpiracao,\n      },\n      { status: 200 }\n    );\n  } catch (error) {\n    console.error('Erro na gera\xE7\xE3o de senha tempor\xE1ria:', error);\n\n    if (error instanceof z.ZodError) {\n      return NextResponse.json(\n        { message: 'Dados inv\xE1lidos', errors: error.errors },\n        { status: 400 }\n      );\n    }\n\n    return NextResponse.json(\n      { message: 'Erro interno do servidor' },\n      { status: 500 }\n    );\n  }\n}\n"],
      names: ["POST", "esquemaGerarSenhaTemporaria", "z", "object", "email", "string", "adminKey", "min", "gerarSenhaTemporaria", "caracteres", "senha", "i", "charAt", "Math", "floor", "random", "length", "request", "body", "json", "parse", "process", "env", "ADMIN_TEMP_PASSWORD_KEY", "NextResponse", "message", "status", "usuario", "prisma", "findUnique", "where", "senhaTemporaria", "senhaHash", "bcrypt", "hash", "tokenExpiracao", "Date", "now", "update", "id", "data", "tokenRecuperacao", "crypto", "randomBytes", "toString", "expiracaoTokenRecuperacao", "console", "log", "toLocaleString", "expiraEm", "error", "ZodError", "errors"],
      mappings: ";;;;+BAsBsBA;;;eAAAA;;;wBAtBoB;qBACxB;wBACK;iEACJ;+DACA;;;;;;AAEnB,uDAAuD;AACvD,MAAMC,8BAA8BC,MAAC,CAACC,MAAM,CAAC;IAC3CC,OAAOF,MAAC,CAACG,MAAM,GAAGD,KAAK,CAAC;IACxBE,UAAUJ,MAAC,CAACG,MAAM,GAAGE,GAAG,CAAC,GAAG;AAC9B;AAEA,qCAAqC;AACrC,SAASC;IACP,MAAMC,aAAa;IACnB,IAAIC,QAAQ;IACZ,IAAK,IAAIC,IAAI,GAAGA,IAAI,GAAGA,IAAK;QAC1BD,SAASD,WAAWG,MAAM,CAACC,KAAKC,KAAK,CAACD,KAAKE,MAAM,KAAKN,WAAWO,MAAM;IACzE;IACA,OAAON;AACT;AAEO,eAAeV,KAAKiB,OAAoB;IAC7C,IAAI;QACF,MAAMC,OAAO,MAAMD,QAAQE,IAAI;QAE/B,kBAAkB;QAClB,MAAM,EAAEf,KAAK,EAAEE,QAAQ,EAAE,GAAGL,4BAA4BmB,KAAK,CAACF;QAE9D,6EAA6E;QAC7E,IAAIZ,aAAae,QAAQC,GAAG,CAACC,uBAAuB,EAAE;YACpD,OAAOC,oBAAY,CAACL,IAAI,CAAC;gBAAEM,SAAS;YAAgB,GAAG;gBAAEC,QAAQ;YAAI;QACvE;QAEA,gCAAgC;QAChC,MAAMC,UAAU,MAAMC,cAAM,CAACD,OAAO,CAACE,UAAU,CAAC;YAC9CC,OAAO;gBAAE1B;YAAM;QACjB;QAEA,IAAI,CAACuB,SAAS;YACZ,OAAOH,oBAAY,CAACL,IAAI,CACtB;gBAAEM,SAAS;YAAyB,GACpC;gBAAEC,QAAQ;YAAI;QAElB;QAEA,yBAAyB;QACzB,MAAMK,kBAAkBvB;QACxB,MAAMwB,YAAY,MAAMC,iBAAM,CAACC,IAAI,CAACH,iBAAiB;QAErD,sCAAsC;QACtC,MAAMI,iBAAiB,IAAIC,KAAKA,KAAKC,GAAG,KAAK,KAAK,KAAK,KAAK;QAE5D,yCAAyC;QACzC,MAAMT,cAAM,CAACD,OAAO,CAACW,MAAM,CAAC;YAC1BR,OAAO;gBAAES,IAAIZ,QAAQY,EAAE;YAAC;YACxBC,MAAM;gBACJ9B,OAAOsB;gBACPS,kBAAkBC,eAAM,CAACC,WAAW,CAAC,IAAIC,QAAQ,CAAC;gBAClDC,2BAA2BV;YAC7B;QACF;QAEA,0DAA0D;QAC1D,6EAA6E;QAC7EW,QAAQC,GAAG,CAAC,CAAC,sBAAsB,EAAE3C,MAAM,EAAE,EAAE2B,iBAAiB;QAChEe,QAAQC,GAAG,CAAC,CAAC,mBAAmB,EAAEZ,eAAea,cAAc,CAAC,UAAU;QAE1E,OAAOxB,oBAAY,CAACL,IAAI,CACtB;YACEM,SAAS;YACTM;YACAkB,UAAUd;QACZ,GACA;YAAET,QAAQ;QAAI;IAElB,EAAE,OAAOwB,OAAO;QACdJ,QAAQI,KAAK,CAAC,wCAAwCA;QAEtD,IAAIA,iBAAiBhD,MAAC,CAACiD,QAAQ,EAAE;YAC/B,OAAO3B,oBAAY,CAACL,IAAI,CACtB;gBAAEM,SAAS;gBAAmB2B,QAAQF,MAAME,MAAM;YAAC,GACnD;gBAAE1B,QAAQ;YAAI;QAElB;QAEA,OAAOF,oBAAY,CAACL,IAAI,CACtB;YAAEM,SAAS;QAA2B,GACtC;YAAEC,QAAQ;QAAI;IAElB;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c6d4be2f3eade1060c97b886c7ea5810159a3d0a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_zh3ogwmdy = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_zh3ogwmdy();
cov_zh3ogwmdy().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_zh3ogwmdy().s[1]++;
Object.defineProperty(exports, "POST", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_zh3ogwmdy().f[0]++;
    cov_zh3ogwmdy().s[2]++;
    return POST;
  }
});
const _server =
/* istanbul ignore next */
(cov_zh3ogwmdy().s[3]++, require("next/server"));
const _zod =
/* istanbul ignore next */
(cov_zh3ogwmdy().s[4]++, require("zod"));
const _prisma =
/* istanbul ignore next */
(cov_zh3ogwmdy().s[5]++, require("../../../../lib/prisma"));
const _bcryptjs =
/* istanbul ignore next */
(/*#__PURE__*/cov_zh3ogwmdy().s[6]++, _interop_require_default(require("bcryptjs")));
const _crypto =
/* istanbul ignore next */
(/*#__PURE__*/cov_zh3ogwmdy().s[7]++, _interop_require_default(require("crypto")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_zh3ogwmdy().f[1]++;
  cov_zh3ogwmdy().s[8]++;
  return /* istanbul ignore next */(cov_zh3ogwmdy().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_zh3ogwmdy().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_zh3ogwmdy().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_zh3ogwmdy().b[0][1]++, {
    default: obj
  });
}
// Schema de validação para geração de senha temporária
const esquemaGerarSenhaTemporaria =
/* istanbul ignore next */
(cov_zh3ogwmdy().s[9]++, _zod.z.object({
  email: _zod.z.string().email('Email inválido'),
  adminKey: _zod.z.string().min(1, 'Chave de administrador é obrigatória')
}));
// Função para gerar senha temporária
function gerarSenhaTemporaria() {
  /* istanbul ignore next */
  cov_zh3ogwmdy().f[2]++;
  const caracteres =
  /* istanbul ignore next */
  (cov_zh3ogwmdy().s[10]++, 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789');
  let senha =
  /* istanbul ignore next */
  (cov_zh3ogwmdy().s[11]++, '');
  /* istanbul ignore next */
  cov_zh3ogwmdy().s[12]++;
  for (let i =
  /* istanbul ignore next */
  (cov_zh3ogwmdy().s[13]++, 0); i < 8; i++) {
    /* istanbul ignore next */
    cov_zh3ogwmdy().s[14]++;
    senha += caracteres.charAt(Math.floor(Math.random() * caracteres.length));
  }
  /* istanbul ignore next */
  cov_zh3ogwmdy().s[15]++;
  return senha;
}
async function POST(request) {
  /* istanbul ignore next */
  cov_zh3ogwmdy().f[3]++;
  cov_zh3ogwmdy().s[16]++;
  try {
    const body =
    /* istanbul ignore next */
    (cov_zh3ogwmdy().s[17]++, await request.json());
    // Validar entrada
    const {
      email,
      adminKey
    } =
    /* istanbul ignore next */
    (cov_zh3ogwmdy().s[18]++, esquemaGerarSenhaTemporaria.parse(body));
    // Verificar chave de administrador (em produção, usar uma chave mais segura)
    /* istanbul ignore next */
    cov_zh3ogwmdy().s[19]++;
    if (adminKey !== process.env.ADMIN_TEMP_PASSWORD_KEY) {
      /* istanbul ignore next */
      cov_zh3ogwmdy().b[2][0]++;
      cov_zh3ogwmdy().s[20]++;
      return _server.NextResponse.json({
        message: 'Acesso negado'
      }, {
        status: 403
      });
    } else
    /* istanbul ignore next */
    {
      cov_zh3ogwmdy().b[2][1]++;
    }
    // Verificar se o usuário existe
    const usuario =
    /* istanbul ignore next */
    (cov_zh3ogwmdy().s[21]++, await _prisma.prisma.usuario.findUnique({
      where: {
        email
      }
    }));
    /* istanbul ignore next */
    cov_zh3ogwmdy().s[22]++;
    if (!usuario) {
      /* istanbul ignore next */
      cov_zh3ogwmdy().b[3][0]++;
      cov_zh3ogwmdy().s[23]++;
      return _server.NextResponse.json({
        message: 'Usuário não encontrado'
      }, {
        status: 404
      });
    } else
    /* istanbul ignore next */
    {
      cov_zh3ogwmdy().b[3][1]++;
    }
    // Gerar senha temporária
    const senhaTemporaria =
    /* istanbul ignore next */
    (cov_zh3ogwmdy().s[24]++, gerarSenhaTemporaria());
    const senhaHash =
    /* istanbul ignore next */
    (cov_zh3ogwmdy().s[25]++, await _bcryptjs.default.hash(senhaTemporaria, 12));
    // Gerar token de expiração (24 horas)
    const tokenExpiracao =
    /* istanbul ignore next */
    (cov_zh3ogwmdy().s[26]++, new Date(Date.now() + 24 * 60 * 60 * 1000));
    // Atualizar usuário com senha temporária
    /* istanbul ignore next */
    cov_zh3ogwmdy().s[27]++;
    await _prisma.prisma.usuario.update({
      where: {
        id: usuario.id
      },
      data: {
        senha: senhaHash,
        tokenRecuperacao: _crypto.default.randomBytes(16).toString('hex'),
        expiracaoTokenRecuperacao: tokenExpiracao
      }
    });
    // TODO: Implementar envio de email com a senha temporária
    // Por enquanto, apenas logamos a senha (em produção, isso deve ser removido)
    /* istanbul ignore next */
    cov_zh3ogwmdy().s[28]++;
    console.log(`Senha temporária para ${email}: ${senhaTemporaria}`);
    /* istanbul ignore next */
    cov_zh3ogwmdy().s[29]++;
    console.log(`A senha expira em: ${tokenExpiracao.toLocaleString('pt-BR')}`);
    /* istanbul ignore next */
    cov_zh3ogwmdy().s[30]++;
    return _server.NextResponse.json({
      message: 'Senha temporária gerada com sucesso',
      senhaTemporaria,
      expiraEm: tokenExpiracao
    }, {
      status: 200
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_zh3ogwmdy().s[31]++;
    console.error('Erro na geração de senha temporária:', error);
    /* istanbul ignore next */
    cov_zh3ogwmdy().s[32]++;
    if (error instanceof _zod.z.ZodError) {
      /* istanbul ignore next */
      cov_zh3ogwmdy().b[4][0]++;
      cov_zh3ogwmdy().s[33]++;
      return _server.NextResponse.json({
        message: 'Dados inválidos',
        errors: error.errors
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_zh3ogwmdy().b[4][1]++;
    }
    cov_zh3ogwmdy().s[34]++;
    return _server.NextResponse.json({
      message: 'Erro interno do servidor'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,