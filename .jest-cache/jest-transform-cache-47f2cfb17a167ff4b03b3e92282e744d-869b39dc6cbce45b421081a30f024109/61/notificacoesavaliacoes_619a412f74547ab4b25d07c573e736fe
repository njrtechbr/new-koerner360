b6aa889c5498a595dbe97437b708ea91
"use strict";

/* istanbul ignore next */
function cov_w4ljlv9b5() {
  var path = "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\lib\\utils\\notificacoes-avaliacoes.ts";
  var hash = "fe314376c0d895e84a8aef7e2b2b179a66b1043d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\lib\\utils\\notificacoes-avaliacoes.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 36,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 47
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 48
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 45
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 46
        }
      },
      "8": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 32
        }
      },
      "9": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 38
        }
      },
      "10": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 43
        }
      },
      "11": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 45
        }
      },
      "12": {
        start: {
          line: 37,
          column: 16
        },
        end: {
          line: 37,
          column: 36
        }
      },
      "13": {
        start: {
          line: 38,
          column: 17
        },
        end: {
          line: 38,
          column: 36
        }
      },
      "14": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 40,
          column: 44
        }
      },
      "15": {
        start: {
          line: 40,
          column: 27
        },
        end: {
          line: 40,
          column: 44
        }
      },
      "16": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 41,
          column: 45
        }
      },
      "17": {
        start: {
          line: 41,
          column: 28
        },
        end: {
          line: 41,
          column: 45
        }
      },
      "18": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 42,
          column: 42
        }
      },
      "19": {
        start: {
          line: 42,
          column: 28
        },
        end: {
          line: 42,
          column: 42
        }
      },
      "20": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 43,
          column: 43
        }
      },
      "21": {
        start: {
          line: 43,
          column: 28
        },
        end: {
          line: 43,
          column: 43
        }
      },
      "22": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 44,
          column: 19
        }
      },
      "23": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 105,
          column: 5
        }
      },
      "24": {
        start: {
          line: 48,
          column: 27
        },
        end: {
          line: 76,
          column: 10
        }
      },
      "25": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 101,
          column: 11
        }
      },
      "26": {
        start: {
          line: 78,
          column: 31
        },
        end: {
          line: 78,
          column: 56
        }
      },
      "27": {
        start: {
          line: 79,
          column: 34
        },
        end: {
          line: 79,
          column: 88
        }
      },
      "28": {
        start: {
          line: 80,
          column: 29
        },
        end: {
          line: 80,
          column: 60
        }
      },
      "29": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 100,
          column: 14
        }
      },
      "30": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 103,
          column: 80
        }
      },
      "31": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 75
        }
      },
      "32": {
        start: {
          line: 108,
          column: 4
        },
        end: {
          line: 172,
          column: 5
        }
      },
      "33": {
        start: {
          line: 109,
          column: 27
        },
        end: {
          line: 143,
          column: 10
        }
      },
      "34": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 168,
          column: 11
        }
      },
      "35": {
        start: {
          line: 145,
          column: 31
        },
        end: {
          line: 145,
          column: 56
        }
      },
      "36": {
        start: {
          line: 146,
          column: 34
        },
        end: {
          line: 146,
          column: 88
        }
      },
      "37": {
        start: {
          line: 147,
          column: 29
        },
        end: {
          line: 147,
          column: 60
        }
      },
      "38": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 167,
          column: 14
        }
      },
      "39": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 170,
          column: 78
        }
      },
      "40": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 171,
          column: 75
        }
      },
      "41": {
        start: {
          line: 175,
          column: 4
        },
        end: {
          line: 238,
          column: 5
        }
      },
      "42": {
        start: {
          line: 176,
          column: 27
        },
        end: {
          line: 176,
          column: 78
        }
      },
      "43": {
        start: {
          line: 177,
          column: 27
        },
        end: {
          line: 209,
          column: 10
        }
      },
      "44": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 234,
          column: 11
        }
      },
      "45": {
        start: {
          line: 211,
          column: 31
        },
        end: {
          line: 211,
          column: 56
        }
      },
      "46": {
        start: {
          line: 212,
          column: 34
        },
        end: {
          line: 212,
          column: 88
        }
      },
      "47": {
        start: {
          line: 213,
          column: 29
        },
        end: {
          line: 213,
          column: 60
        }
      },
      "48": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 233,
          column: 14
        }
      },
      "49": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 236,
          column: 76
        }
      },
      "50": {
        start: {
          line: 237,
          column: 8
        },
        end: {
          line: 237,
          column: 82
        }
      },
      "51": {
        start: {
          line: 241,
          column: 4
        },
        end: {
          line: 281,
          column: 5
        }
      },
      "52": {
        start: {
          line: 242,
          column: 27
        },
        end: {
          line: 242,
          column: 129
        }
      },
      "53": {
        start: {
          line: 243,
          column: 22
        },
        end: {
          line: 251,
          column: 9
        }
      },
      "54": {
        start: {
          line: 252,
          column: 8
        },
        end: {
          line: 276,
          column: 11
        }
      },
      "55": {
        start: {
          line: 254,
          column: 12
        },
        end: {
          line: 267,
          column: 13
        }
      },
      "56": {
        start: {
          line: 256,
          column: 20
        },
        end: {
          line: 256,
          column: 37
        }
      },
      "57": {
        start: {
          line: 257,
          column: 20
        },
        end: {
          line: 257,
          column: 26
        }
      },
      "58": {
        start: {
          line: 259,
          column: 20
        },
        end: {
          line: 259,
          column: 34
        }
      },
      "59": {
        start: {
          line: 260,
          column: 20
        },
        end: {
          line: 260,
          column: 26
        }
      },
      "60": {
        start: {
          line: 262,
          column: 20
        },
        end: {
          line: 262,
          column: 35
        }
      },
      "61": {
        start: {
          line: 263,
          column: 20
        },
        end: {
          line: 263,
          column: 26
        }
      },
      "62": {
        start: {
          line: 265,
          column: 20
        },
        end: {
          line: 265,
          column: 35
        }
      },
      "63": {
        start: {
          line: 266,
          column: 20
        },
        end: {
          line: 266,
          column: 26
        }
      },
      "64": {
        start: {
          line: 269,
          column: 12
        },
        end: {
          line: 271,
          column: 13
        }
      },
      "65": {
        start: {
          line: 270,
          column: 16
        },
        end: {
          line: 270,
          column: 33
        }
      },
      "66": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 275,
          column: 13
        }
      },
      "67": {
        start: {
          line: 274,
          column: 16
        },
        end: {
          line: 274,
          column: 39
        }
      },
      "68": {
        start: {
          line: 277,
          column: 8
        },
        end: {
          line: 277,
          column: 21
        }
      },
      "69": {
        start: {
          line: 279,
          column: 8
        },
        end: {
          line: 279,
          column: 76
        }
      },
      "70": {
        start: {
          line: 280,
          column: 8
        },
        end: {
          line: 280,
          column: 66
        }
      },
      "71": {
        start: {
          line: 284,
          column: 4
        },
        end: {
          line: 300,
          column: 5
        }
      },
      "72": {
        start: {
          line: 287,
          column: 8
        },
        end: {
          line: 296,
          column: 10
        }
      },
      "73": {
        start: {
          line: 298,
          column: 8
        },
        end: {
          line: 298,
          column: 76
        }
      },
      "74": {
        start: {
          line: 299,
          column: 8
        },
        end: {
          line: 299,
          column: 20
        }
      },
      "75": {
        start: {
          line: 303,
          column: 4
        },
        end: {
          line: 318,
          column: 5
        }
      },
      "76": {
        start: {
          line: 304,
          column: 23
        },
        end: {
          line: 304,
          column: 69
        }
      },
      "77": {
        start: {
          line: 305,
          column: 8
        },
        end: {
          line: 307,
          column: 9
        }
      },
      "78": {
        start: {
          line: 306,
          column: 12
        },
        end: {
          line: 306,
          column: 25
        }
      },
      "79": {
        start: {
          line: 308,
          column: 8
        },
        end: {
          line: 310,
          column: 9
        }
      },
      "80": {
        start: {
          line: 309,
          column: 12
        },
        end: {
          line: 309,
          column: 44
        }
      },
      "81": {
        start: {
          line: 311,
          column: 8
        },
        end: {
          line: 313,
          column: 9
        }
      },
      "82": {
        start: {
          line: 312,
          column: 12
        },
        end: {
          line: 312,
          column: 48
        }
      },
      "83": {
        start: {
          line: 314,
          column: 8
        },
        end: {
          line: 314,
          column: 21
        }
      },
      "84": {
        start: {
          line: 316,
          column: 8
        },
        end: {
          line: 316,
          column: 79
        }
      },
      "85": {
        start: {
          line: 317,
          column: 8
        },
        end: {
          line: 317,
          column: 21
        }
      },
      "86": {
        start: {
          line: 321,
          column: 25
        },
        end: {
          line: 321,
          column: 48
        }
      },
      "87": {
        start: {
          line: 322,
          column: 24
        },
        end: {
          line: 322,
          column: 46
        }
      },
      "88": {
        start: {
          line: 323,
          column: 26
        },
        end: {
          line: 323,
          column: 49
        }
      },
      "89": {
        start: {
          line: 324,
          column: 4
        },
        end: {
          line: 345,
          column: 5
        }
      },
      "90": {
        start: {
          line: 326,
          column: 12
        },
        end: {
          line: 329,
          column: 14
        }
      },
      "91": {
        start: {
          line: 331,
          column: 12
        },
        end: {
          line: 334,
          column: 14
        }
      },
      "92": {
        start: {
          line: 336,
          column: 12
        },
        end: {
          line: 339,
          column: 14
        }
      },
      "93": {
        start: {
          line: 341,
          column: 12
        },
        end: {
          line: 344,
          column: 14
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 43
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 44
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 41
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 42
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 28
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 34
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 39
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 41
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      },
      "9": {
        name: "calcularUrgencia",
        decl: {
          start: {
            line: 39,
            column: 9
          },
          end: {
            line: 39,
            column: 25
          }
        },
        loc: {
          start: {
            line: 39,
            column: 41
          },
          end: {
            line: 45,
            column: 1
          }
        },
        line: 39
      },
      "10": {
        name: "buscarAvaliacoesPendentesUsuario",
        decl: {
          start: {
            line: 46,
            column: 15
          },
          end: {
            line: 46,
            column: 47
          }
        },
        loc: {
          start: {
            line: 46,
            column: 59
          },
          end: {
            line: 106,
            column: 1
          }
        },
        line: 46
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 77,
            column: 30
          },
          end: {
            line: 77,
            column: 31
          }
        },
        loc: {
          start: {
            line: 77,
            column: 43
          },
          end: {
            line: 101,
            column: 9
          }
        },
        line: 77
      },
      "12": {
        name: "buscarTodasAvaliacoesPendentes",
        decl: {
          start: {
            line: 107,
            column: 15
          },
          end: {
            line: 107,
            column: 45
          }
        },
        loc: {
          start: {
            line: 107,
            column: 48
          },
          end: {
            line: 173,
            column: 1
          }
        },
        line: 107
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 144,
            column: 30
          },
          end: {
            line: 144,
            column: 31
          }
        },
        loc: {
          start: {
            line: 144,
            column: 43
          },
          end: {
            line: 168,
            column: 9
          }
        },
        line: 144
      },
      "14": {
        name: "buscarAvaliacoesParaNotificacao",
        decl: {
          start: {
            line: 174,
            column: 15
          },
          end: {
            line: 174,
            column: 46
          }
        },
        loc: {
          start: {
            line: 174,
            column: 69
          },
          end: {
            line: 239,
            column: 1
          }
        },
        line: 174
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 210,
            column: 30
          },
          end: {
            line: 210,
            column: 31
          }
        },
        loc: {
          start: {
            line: 210,
            column: 43
          },
          end: {
            line: 234,
            column: 9
          }
        },
        line: 210
      },
      "16": {
        name: "gerarEstatisticasNotificacoes",
        decl: {
          start: {
            line: 240,
            column: 15
          },
          end: {
            line: 240,
            column: 44
          }
        },
        loc: {
          start: {
            line: 240,
            column: 56
          },
          end: {
            line: 282,
            column: 1
          }
        },
        line: 240
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 252,
            column: 27
          },
          end: {
            line: 252,
            column: 28
          }
        },
        loc: {
          start: {
            line: 252,
            column: 40
          },
          end: {
            line: 276,
            column: 9
          }
        },
        line: 252
      },
      "18": {
        name: "buscarConfiguracaoNotificacao",
        decl: {
          start: {
            line: 283,
            column: 15
          },
          end: {
            line: 283,
            column: 44
          }
        },
        loc: {
          start: {
            line: 283,
            column: 56
          },
          end: {
            line: 301,
            column: 1
          }
        },
        line: 283
      },
      "19": {
        name: "deveReceberNotificacao",
        decl: {
          start: {
            line: 302,
            column: 15
          },
          end: {
            line: 302,
            column: 37
          }
        },
        loc: {
          start: {
            line: 302,
            column: 66
          },
          end: {
            line: 319,
            column: 1
          }
        },
        line: 302
      },
      "20": {
        name: "formatarMensagemNotificacao",
        decl: {
          start: {
            line: 320,
            column: 9
          },
          end: {
            line: 320,
            column: 36
          }
        },
        loc: {
          start: {
            line: 320,
            column: 54
          },
          end: {
            line: 346,
            column: 1
          }
        },
        line: 320
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 40,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 40,
            column: 44
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "1": {
        loc: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 41,
            column: 45
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 41,
            column: 45
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "2": {
        loc: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 42,
            column: 42
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 42,
            column: 42
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "3": {
        loc: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 43,
            column: 43
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 43,
            column: 43
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "4": {
        loc: {
          start: {
            line: 174,
            column: 47
          },
          end: {
            line: 174,
            column: 67
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 174,
            column: 66
          },
          end: {
            line: 174,
            column: 67
          }
        }],
        line: 174
      },
      "5": {
        loc: {
          start: {
            line: 242,
            column: 27
          },
          end: {
            line: 242,
            column: 129
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 242,
            column: 39
          },
          end: {
            line: 242,
            column: 88
          }
        }, {
          start: {
            line: 242,
            column: 91
          },
          end: {
            line: 242,
            column: 129
          }
        }],
        line: 242
      },
      "6": {
        loc: {
          start: {
            line: 254,
            column: 12
          },
          end: {
            line: 267,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 255,
            column: 16
          },
          end: {
            line: 257,
            column: 26
          }
        }, {
          start: {
            line: 258,
            column: 16
          },
          end: {
            line: 260,
            column: 26
          }
        }, {
          start: {
            line: 261,
            column: 16
          },
          end: {
            line: 263,
            column: 26
          }
        }, {
          start: {
            line: 264,
            column: 16
          },
          end: {
            line: 266,
            column: 26
          }
        }],
        line: 254
      },
      "7": {
        loc: {
          start: {
            line: 269,
            column: 12
          },
          end: {
            line: 271,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 269,
            column: 12
          },
          end: {
            line: 271,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 269
      },
      "8": {
        loc: {
          start: {
            line: 273,
            column: 12
          },
          end: {
            line: 275,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 273,
            column: 12
          },
          end: {
            line: 275,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 273
      },
      "9": {
        loc: {
          start: {
            line: 273,
            column: 16
          },
          end: {
            line: 273,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 273,
            column: 16
          },
          end: {
            line: 273,
            column: 44
          }
        }, {
          start: {
            line: 273,
            column: 48
          },
          end: {
            line: 273,
            column: 76
          }
        }],
        line: 273
      },
      "10": {
        loc: {
          start: {
            line: 305,
            column: 8
          },
          end: {
            line: 307,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 305,
            column: 8
          },
          end: {
            line: 307,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 305
      },
      "11": {
        loc: {
          start: {
            line: 305,
            column: 12
          },
          end: {
            line: 305,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 305,
            column: 12
          },
          end: {
            line: 305,
            column: 19
          }
        }, {
          start: {
            line: 305,
            column: 23
          },
          end: {
            line: 305,
            column: 36
          }
        }],
        line: 305
      },
      "12": {
        loc: {
          start: {
            line: 308,
            column: 8
          },
          end: {
            line: 310,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 308,
            column: 8
          },
          end: {
            line: 310,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 308
      },
      "13": {
        loc: {
          start: {
            line: 311,
            column: 8
          },
          end: {
            line: 313,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 311,
            column: 8
          },
          end: {
            line: 313,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 311
      },
      "14": {
        loc: {
          start: {
            line: 324,
            column: 4
          },
          end: {
            line: 345,
            column: 5
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 325,
            column: 8
          },
          end: {
            line: 329,
            column: 14
          }
        }, {
          start: {
            line: 330,
            column: 8
          },
          end: {
            line: 334,
            column: 14
          }
        }, {
          start: {
            line: 335,
            column: 8
          },
          end: {
            line: 339,
            column: 14
          }
        }, {
          start: {
            line: 340,
            column: 8
          },
          end: {
            line: 344,
            column: 14
          }
        }],
        line: 324
      },
      "15": {
        loc: {
          start: {
            line: 328,
            column: 109
          },
          end: {
            line: 328,
            column: 197
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 328,
            column: 129
          },
          end: {
            line: 328,
            column: 173
          }
        }, {
          start: {
            line: 328,
            column: 176
          },
          end: {
            line: 328,
            column: 197
          }
        }],
        line: 328
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0],
      "5": [0, 0],
      "6": [0, 0, 0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0, 0, 0],
      "15": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\lib\\utils\\notificacoes-avaliacoes.ts"],
      sourcesContent: ["import { prisma } from '@/lib/prisma';\nimport { addDays, differenceInDays, isAfter, isBefore } from 'date-fns';\n\n// Tipos para notifica\xE7\xF5es\nexport interface AvaliacaoPendente {\n  id: string;\n  periodoId: string;\n  periodo: {\n    id: string;\n    nome: string;\n    dataInicio: Date;\n    dataFim: Date;\n    status: string;\n  };\n  avaliadorId: string;\n  avaliador: {\n    id: string;\n    nome: string;\n    email: string;\n  };\n  avaliadoId: string;\n  avaliado: {\n    id: string;\n    nome: string;\n    setor?: string;\n    departamento?: string;\n  };\n  status: string;\n  dataLimite: Date;\n  diasRestantes: number;\n  urgencia: 'baixa' | 'media' | 'alta' | 'critica';\n  criadaEm: Date;\n}\n\nexport interface NotificacaoConfig {\n  id: string;\n  usuarioId: string;\n  notificacoesEmail: boolean;\n  notificacoesInterface: boolean;\n  diasAntecedencia: number;\n  horarioEnvio: string; // HH:mm\n  frequenciaLembretes: 'diario' | 'semanal' | 'personalizado';\n  ativo: boolean;\n}\n\nexport interface EstatisticasNotificacoes {\n  totalPendentes: number;\n  criticas: number;\n  altas: number;\n  medias: number;\n  baixas: number;\n  vencidas: number;\n  proximasVencer: number; // pr\xF3ximas 3 dias\n}\n\n/**\n * Calcula a urg\xEAncia baseada nos dias restantes\n */\nexport function calcularUrgencia(diasRestantes: number): 'baixa' | 'media' | 'alta' | 'critica' {\n  if (diasRestantes < 0) return 'critica'; // Vencida\n  if (diasRestantes <= 1) return 'critica';\n  if (diasRestantes <= 3) return 'alta';\n  if (diasRestantes <= 7) return 'media';\n  return 'baixa';\n}\n\n/**\n * Busca todas as avalia\xE7\xF5es pendentes de um usu\xE1rio espec\xEDfico\n */\nexport async function buscarAvaliacoesPendentesUsuario(\n  usuarioId: string\n): Promise<AvaliacaoPendente[]> {\n  try {\n    const avaliacoes = await prisma.avaliacao.findMany({\n      where: {\n        avaliadorId: usuarioId,\n        status: 'PENDENTE'\n      },\n      include: {\n        periodo: true,\n        avaliador: {\n          select: {\n            id: true,\n            nome: true,\n            email: true\n          }\n        },\n        avaliado: {\n          select: {\n            id: true,\n            nome: true,\n            setor: true,\n            departamento: true\n          }\n        }\n      },\n      orderBy: {\n        periodo: {\n          dataFim: 'asc'\n        }\n      }\n    });\n\n    return avaliacoes.map(avaliacao => {\n      const dataLimite = avaliacao.periodo.dataFim;\n      const diasRestantes = differenceInDays(dataLimite, new Date());\n      const urgencia = calcularUrgencia(diasRestantes);\n\n      return {\n        id: avaliacao.id,\n        periodoId: avaliacao.periodoId,\n        periodo: {\n          id: avaliacao.periodo.id,\n          nome: avaliacao.periodo.nome,\n          dataInicio: avaliacao.periodo.dataInicio,\n          dataFim: avaliacao.periodo.dataFim,\n          status: avaliacao.periodo.status\n        },\n        avaliadorId: avaliacao.avaliadorId,\n        avaliador: avaliacao.avaliador,\n        avaliadoId: avaliacao.avaliadoId,\n        avaliado: avaliacao.avaliado,\n        status: avaliacao.status,\n        dataLimite,\n        diasRestantes,\n        urgencia,\n        criadaEm: avaliacao.criadaEm\n      };\n    });\n  } catch (error) {\n    console.error('Erro ao buscar avalia\xE7\xF5es pendentes do usu\xE1rio:', error);\n    throw new Error('N\xE3o foi poss\xEDvel buscar as avalia\xE7\xF5es pendentes');\n  }\n}\n\n/**\n * Busca todas as avalia\xE7\xF5es pendentes do sistema\n */\nexport async function buscarTodasAvaliacoesPendentes(): Promise<AvaliacaoPendente[]> {\n  try {\n    const avaliacoes = await prisma.avaliacao.findMany({\n      where: {\n        status: 'PENDENTE'\n      },\n      include: {\n        periodo: true,\n        avaliador: {\n          select: {\n            id: true,\n            nome: true,\n            email: true\n          }\n        },\n        avaliado: {\n          select: {\n            id: true,\n            nome: true,\n            setor: true,\n            departamento: true\n          }\n        }\n      },\n      orderBy: [\n        {\n          periodo: {\n            dataFim: 'asc'\n          }\n        },\n        {\n          avaliador: {\n            nome: 'asc'\n          }\n        }\n      ]\n    });\n\n    return avaliacoes.map(avaliacao => {\n      const dataLimite = avaliacao.periodo.dataFim;\n      const diasRestantes = differenceInDays(dataLimite, new Date());\n      const urgencia = calcularUrgencia(diasRestantes);\n\n      return {\n        id: avaliacao.id,\n        periodoId: avaliacao.periodoId,\n        periodo: {\n          id: avaliacao.periodo.id,\n          nome: avaliacao.periodo.nome,\n          dataInicio: avaliacao.periodo.dataInicio,\n          dataFim: avaliacao.periodo.dataFim,\n          status: avaliacao.periodo.status\n        },\n        avaliadorId: avaliacao.avaliadorId,\n        avaliador: avaliacao.avaliador,\n        avaliadoId: avaliacao.avaliadoId,\n        avaliado: avaliacao.avaliado,\n        status: avaliacao.status,\n        dataLimite,\n        diasRestantes,\n        urgencia,\n        criadaEm: avaliacao.criadaEm\n      };\n    });\n  } catch (error) {\n    console.error('Erro ao buscar todas as avalia\xE7\xF5es pendentes:', error);\n    throw new Error('N\xE3o foi poss\xEDvel buscar as avalia\xE7\xF5es pendentes');\n  }\n}\n\n/**\n * Busca avalia\xE7\xF5es que precisam de notifica\xE7\xE3o (pr\xF3ximas do vencimento)\n */\nexport async function buscarAvaliacoesParaNotificacao(\n  diasAntecedencia = 3\n): Promise<AvaliacaoPendente[]> {\n  try {\n    const dataLimite = addDays(new Date(), diasAntecedencia);\n    \n    const avaliacoes = await prisma.avaliacao.findMany({\n      where: {\n        status: 'PENDENTE',\n        periodo: {\n          dataFim: {\n            lte: dataLimite\n          }\n        }\n      },\n      include: {\n        periodo: true,\n        avaliador: {\n          select: {\n            id: true,\n            nome: true,\n            email: true\n          }\n        },\n        avaliado: {\n          select: {\n            id: true,\n            nome: true,\n            setor: true,\n            departamento: true\n          }\n        }\n      },\n      orderBy: {\n        periodo: {\n          dataFim: 'asc'\n        }\n      }\n    });\n\n    return avaliacoes.map(avaliacao => {\n      const dataLimite = avaliacao.periodo.dataFim;\n      const diasRestantes = differenceInDays(dataLimite, new Date());\n      const urgencia = calcularUrgencia(diasRestantes);\n\n      return {\n        id: avaliacao.id,\n        periodoId: avaliacao.periodoId,\n        periodo: {\n          id: avaliacao.periodo.id,\n          nome: avaliacao.periodo.nome,\n          dataInicio: avaliacao.periodo.dataInicio,\n          dataFim: avaliacao.periodo.dataFim,\n          status: avaliacao.periodo.status\n        },\n        avaliadorId: avaliacao.avaliadorId,\n        avaliador: avaliacao.avaliador,\n        avaliadoId: avaliacao.avaliadoId,\n        avaliado: avaliacao.avaliado,\n        status: avaliacao.status,\n        dataLimite,\n        diasRestantes,\n        urgencia,\n        criadaEm: avaliacao.criadaEm\n      };\n    });\n  } catch (error) {\n    console.error('Erro ao buscar avalia\xE7\xF5es para notifica\xE7\xE3o:', error);\n    throw new Error('N\xE3o foi poss\xEDvel buscar as avalia\xE7\xF5es para notifica\xE7\xE3o');\n  }\n}\n\n/**\n * Gera estat\xEDsticas de notifica\xE7\xF5es para um usu\xE1rio\n */\nexport async function gerarEstatisticasNotificacoes(\n  usuarioId?: string\n): Promise<EstatisticasNotificacoes> {\n  try {\n    const avaliacoes = usuarioId \n      ? await buscarAvaliacoesPendentesUsuario(usuarioId)\n      : await buscarTodasAvaliacoesPendentes();\n\n    const stats: EstatisticasNotificacoes = {\n      totalPendentes: avaliacoes.length,\n      criticas: 0,\n      altas: 0,\n      medias: 0,\n      baixas: 0,\n      vencidas: 0,\n      proximasVencer: 0\n    };\n\n    avaliacoes.forEach(avaliacao => {\n      // Contar por urg\xEAncia\n      switch (avaliacao.urgencia) {\n        case 'critica':\n          stats.criticas++;\n          break;\n        case 'alta':\n          stats.altas++;\n          break;\n        case 'media':\n          stats.medias++;\n          break;\n        case 'baixa':\n          stats.baixas++;\n          break;\n      }\n\n      // Contar vencidas\n      if (avaliacao.diasRestantes < 0) {\n        stats.vencidas++;\n      }\n\n      // Contar pr\xF3ximas a vencer (3 dias)\n      if (avaliacao.diasRestantes >= 0 && avaliacao.diasRestantes <= 3) {\n        stats.proximasVencer++;\n      }\n    });\n\n    return stats;\n  } catch (error) {\n    console.error('Erro ao gerar estat\xEDsticas de notifica\xE7\xF5es:', error);\n    throw new Error('N\xE3o foi poss\xEDvel gerar as estat\xEDsticas');\n  }\n}\n\n/**\n * Busca configura\xE7\xF5es de notifica\xE7\xE3o de um usu\xE1rio\n */\nexport async function buscarConfiguracaoNotificacao(\n  usuarioId: string\n): Promise<NotificacaoConfig | null> {\n  try {\n    // Por enquanto, retornamos uma configura\xE7\xE3o padr\xE3o\n    // Em uma implementa\xE7\xE3o real, isso viria do banco de dados\n    return {\n      id: `config-${usuarioId}`,\n      usuarioId,\n      notificacoesEmail: true,\n      notificacoesInterface: true,\n      diasAntecedencia: 3,\n      horarioEnvio: '09:00',\n      frequenciaLembretes: 'diario',\n      ativo: true\n    };\n  } catch (error) {\n    console.error('Erro ao buscar configura\xE7\xE3o de notifica\xE7\xE3o:', error);\n    return null;\n  }\n}\n\n/**\n * Verifica se um usu\xE1rio deve receber notifica\xE7\xE3o baseado em suas configura\xE7\xF5es\n */\nexport async function deveReceberNotificacao(\n  usuarioId: string,\n  tipoNotificacao: 'email' | 'interface'\n): Promise<boolean> {\n  try {\n    const config = await buscarConfiguracaoNotificacao(usuarioId);\n    \n    if (!config || !config.ativo) {\n      return false;\n    }\n\n    if (tipoNotificacao === 'email') {\n      return config.notificacoesEmail;\n    }\n\n    if (tipoNotificacao === 'interface') {\n      return config.notificacoesInterface;\n    }\n\n    return false;\n  } catch (error) {\n    console.error('Erro ao verificar se deve receber notifica\xE7\xE3o:', error);\n    return false;\n  }\n}\n\n/**\n * Formata uma mensagem de notifica\xE7\xE3o\n */\nexport function formatarMensagemNotificacao(\n  avaliacao: AvaliacaoPendente,\n  tipo: 'lembrete' | 'urgente' | 'vencida'\n): { titulo: string; mensagem: string; } {\n  const nomeAvaliado = avaliacao.avaliado.nome;\n  const nomePeriodo = avaliacao.periodo.nome;\n  const diasRestantes = avaliacao.diasRestantes;\n\n  switch (tipo) {\n    case 'lembrete':\n      return {\n        titulo: 'Lembrete: Avalia\xE7\xE3o Pendente',\n        mensagem: `Voc\xEA tem uma avalia\xE7\xE3o pendente de ${nomeAvaliado} no per\xEDodo \"${nomePeriodo}\". ${diasRestantes > 0 ? `Restam ${diasRestantes} dias para o prazo.` : 'O prazo vence hoje!'}`\n      };\n    \n    case 'urgente':\n      return {\n        titulo: 'Urgente: Avalia\xE7\xE3o Pr\xF3xima do Vencimento',\n        mensagem: `A avalia\xE7\xE3o de ${nomeAvaliado} no per\xEDodo \"${nomePeriodo}\" vence em ${diasRestantes} dia(s). Complete a avalia\xE7\xE3o o quanto antes.`\n      };\n    \n    case 'vencida':\n      return {\n        titulo: 'Avalia\xE7\xE3o Vencida',\n        mensagem: `A avalia\xE7\xE3o de ${nomeAvaliado} no per\xEDodo \"${nomePeriodo}\" est\xE1 vencida h\xE1 ${Math.abs(diasRestantes)} dia(s). Complete a avalia\xE7\xE3o imediatamente.`\n      };\n    \n    default:\n      return {\n        titulo: 'Avalia\xE7\xE3o Pendente',\n        mensagem: `Voc\xEA tem uma avalia\xE7\xE3o pendente de ${nomeAvaliado} no per\xEDodo \"${nomePeriodo}\".`\n      };\n  }\n}"],
      names: ["buscarAvaliacoesParaNotificacao", "buscarAvaliacoesPendentesUsuario", "buscarConfiguracaoNotificacao", "buscarTodasAvaliacoesPendentes", "calcularUrgencia", "deveReceberNotificacao", "formatarMensagemNotificacao", "gerarEstatisticasNotificacoes", "diasRestantes", "usuarioId", "avaliacoes", "prisma", "avaliacao", "findMany", "where", "avaliadorId", "status", "include", "periodo", "avaliador", "select", "id", "nome", "email", "avaliado", "setor", "departamento", "orderBy", "dataFim", "map", "dataLimite", "differenceInDays", "Date", "urgencia", "periodoId", "dataInicio", "avaliadoId", "criadaEm", "error", "console", "Error", "diasAntecedencia", "addDays", "lte", "stats", "totalPendentes", "length", "criticas", "altas", "medias", "baixas", "vencidas", "proximasVencer", "forEach", "notificacoesEmail", "notificacoesInterface", "horarioEnvio", "frequenciaLembretes", "ativo", "tipoNotificacao", "config", "tipo", "nomeAvaliado", "nomePeriodo", "titulo", "mensagem", "Math", "abs"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fe314376c0d895e84a8aef7e2b2b179a66b1043d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_w4ljlv9b5 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_w4ljlv9b5();
cov_w4ljlv9b5().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_w4ljlv9b5().f[0]++;
  cov_w4ljlv9b5().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_w4ljlv9b5().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_w4ljlv9b5().s[3]++;
_export(exports, {
  get buscarAvaliacoesParaNotificacao() {
    /* istanbul ignore next */
    cov_w4ljlv9b5().f[1]++;
    cov_w4ljlv9b5().s[4]++;
    return buscarAvaliacoesParaNotificacao;
  },
  get buscarAvaliacoesPendentesUsuario() {
    /* istanbul ignore next */
    cov_w4ljlv9b5().f[2]++;
    cov_w4ljlv9b5().s[5]++;
    return buscarAvaliacoesPendentesUsuario;
  },
  get buscarConfiguracaoNotificacao() {
    /* istanbul ignore next */
    cov_w4ljlv9b5().f[3]++;
    cov_w4ljlv9b5().s[6]++;
    return buscarConfiguracaoNotificacao;
  },
  get buscarTodasAvaliacoesPendentes() {
    /* istanbul ignore next */
    cov_w4ljlv9b5().f[4]++;
    cov_w4ljlv9b5().s[7]++;
    return buscarTodasAvaliacoesPendentes;
  },
  get calcularUrgencia() {
    /* istanbul ignore next */
    cov_w4ljlv9b5().f[5]++;
    cov_w4ljlv9b5().s[8]++;
    return calcularUrgencia;
  },
  get deveReceberNotificacao() {
    /* istanbul ignore next */
    cov_w4ljlv9b5().f[6]++;
    cov_w4ljlv9b5().s[9]++;
    return deveReceberNotificacao;
  },
  get formatarMensagemNotificacao() {
    /* istanbul ignore next */
    cov_w4ljlv9b5().f[7]++;
    cov_w4ljlv9b5().s[10]++;
    return formatarMensagemNotificacao;
  },
  get gerarEstatisticasNotificacoes() {
    /* istanbul ignore next */
    cov_w4ljlv9b5().f[8]++;
    cov_w4ljlv9b5().s[11]++;
    return gerarEstatisticasNotificacoes;
  }
});
const _prisma =
/* istanbul ignore next */
(cov_w4ljlv9b5().s[12]++, require("../prisma"));
const _datefns =
/* istanbul ignore next */
(cov_w4ljlv9b5().s[13]++, require("date-fns"));
function calcularUrgencia(diasRestantes) {
  /* istanbul ignore next */
  cov_w4ljlv9b5().f[9]++;
  cov_w4ljlv9b5().s[14]++;
  if (diasRestantes < 0) {
    /* istanbul ignore next */
    cov_w4ljlv9b5().b[0][0]++;
    cov_w4ljlv9b5().s[15]++;
    return 'critica';
  } else
  /* istanbul ignore next */
  {
    cov_w4ljlv9b5().b[0][1]++;
  } // Vencida
  cov_w4ljlv9b5().s[16]++;
  if (diasRestantes <= 1) {
    /* istanbul ignore next */
    cov_w4ljlv9b5().b[1][0]++;
    cov_w4ljlv9b5().s[17]++;
    return 'critica';
  } else
  /* istanbul ignore next */
  {
    cov_w4ljlv9b5().b[1][1]++;
  }
  cov_w4ljlv9b5().s[18]++;
  if (diasRestantes <= 3) {
    /* istanbul ignore next */
    cov_w4ljlv9b5().b[2][0]++;
    cov_w4ljlv9b5().s[19]++;
    return 'alta';
  } else
  /* istanbul ignore next */
  {
    cov_w4ljlv9b5().b[2][1]++;
  }
  cov_w4ljlv9b5().s[20]++;
  if (diasRestantes <= 7) {
    /* istanbul ignore next */
    cov_w4ljlv9b5().b[3][0]++;
    cov_w4ljlv9b5().s[21]++;
    return 'media';
  } else
  /* istanbul ignore next */
  {
    cov_w4ljlv9b5().b[3][1]++;
  }
  cov_w4ljlv9b5().s[22]++;
  return 'baixa';
}
async function buscarAvaliacoesPendentesUsuario(usuarioId) {
  /* istanbul ignore next */
  cov_w4ljlv9b5().f[10]++;
  cov_w4ljlv9b5().s[23]++;
  try {
    const avaliacoes =
    /* istanbul ignore next */
    (cov_w4ljlv9b5().s[24]++, await _prisma.prisma.avaliacao.findMany({
      where: {
        avaliadorId: usuarioId,
        status: 'PENDENTE'
      },
      include: {
        periodo: true,
        avaliador: {
          select: {
            id: true,
            nome: true,
            email: true
          }
        },
        avaliado: {
          select: {
            id: true,
            nome: true,
            setor: true,
            departamento: true
          }
        }
      },
      orderBy: {
        periodo: {
          dataFim: 'asc'
        }
      }
    }));
    /* istanbul ignore next */
    cov_w4ljlv9b5().s[25]++;
    return avaliacoes.map(avaliacao => {
      /* istanbul ignore next */
      cov_w4ljlv9b5().f[11]++;
      const dataLimite =
      /* istanbul ignore next */
      (cov_w4ljlv9b5().s[26]++, avaliacao.periodo.dataFim);
      const diasRestantes =
      /* istanbul ignore next */
      (cov_w4ljlv9b5().s[27]++, (0, _datefns.differenceInDays)(dataLimite, new Date()));
      const urgencia =
      /* istanbul ignore next */
      (cov_w4ljlv9b5().s[28]++, calcularUrgencia(diasRestantes));
      /* istanbul ignore next */
      cov_w4ljlv9b5().s[29]++;
      return {
        id: avaliacao.id,
        periodoId: avaliacao.periodoId,
        periodo: {
          id: avaliacao.periodo.id,
          nome: avaliacao.periodo.nome,
          dataInicio: avaliacao.periodo.dataInicio,
          dataFim: avaliacao.periodo.dataFim,
          status: avaliacao.periodo.status
        },
        avaliadorId: avaliacao.avaliadorId,
        avaliador: avaliacao.avaliador,
        avaliadoId: avaliacao.avaliadoId,
        avaliado: avaliacao.avaliado,
        status: avaliacao.status,
        dataLimite,
        diasRestantes,
        urgencia,
        criadaEm: avaliacao.criadaEm
      };
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_w4ljlv9b5().s[30]++;
    console.error('Erro ao buscar avaliações pendentes do usuário:', error);
    /* istanbul ignore next */
    cov_w4ljlv9b5().s[31]++;
    throw new Error('Não foi possível buscar as avaliações pendentes');
  }
}
async function buscarTodasAvaliacoesPendentes() {
  /* istanbul ignore next */
  cov_w4ljlv9b5().f[12]++;
  cov_w4ljlv9b5().s[32]++;
  try {
    const avaliacoes =
    /* istanbul ignore next */
    (cov_w4ljlv9b5().s[33]++, await _prisma.prisma.avaliacao.findMany({
      where: {
        status: 'PENDENTE'
      },
      include: {
        periodo: true,
        avaliador: {
          select: {
            id: true,
            nome: true,
            email: true
          }
        },
        avaliado: {
          select: {
            id: true,
            nome: true,
            setor: true,
            departamento: true
          }
        }
      },
      orderBy: [{
        periodo: {
          dataFim: 'asc'
        }
      }, {
        avaliador: {
          nome: 'asc'
        }
      }]
    }));
    /* istanbul ignore next */
    cov_w4ljlv9b5().s[34]++;
    return avaliacoes.map(avaliacao => {
      /* istanbul ignore next */
      cov_w4ljlv9b5().f[13]++;
      const dataLimite =
      /* istanbul ignore next */
      (cov_w4ljlv9b5().s[35]++, avaliacao.periodo.dataFim);
      const diasRestantes =
      /* istanbul ignore next */
      (cov_w4ljlv9b5().s[36]++, (0, _datefns.differenceInDays)(dataLimite, new Date()));
      const urgencia =
      /* istanbul ignore next */
      (cov_w4ljlv9b5().s[37]++, calcularUrgencia(diasRestantes));
      /* istanbul ignore next */
      cov_w4ljlv9b5().s[38]++;
      return {
        id: avaliacao.id,
        periodoId: avaliacao.periodoId,
        periodo: {
          id: avaliacao.periodo.id,
          nome: avaliacao.periodo.nome,
          dataInicio: avaliacao.periodo.dataInicio,
          dataFim: avaliacao.periodo.dataFim,
          status: avaliacao.periodo.status
        },
        avaliadorId: avaliacao.avaliadorId,
        avaliador: avaliacao.avaliador,
        avaliadoId: avaliacao.avaliadoId,
        avaliado: avaliacao.avaliado,
        status: avaliacao.status,
        dataLimite,
        diasRestantes,
        urgencia,
        criadaEm: avaliacao.criadaEm
      };
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_w4ljlv9b5().s[39]++;
    console.error('Erro ao buscar todas as avaliações pendentes:', error);
    /* istanbul ignore next */
    cov_w4ljlv9b5().s[40]++;
    throw new Error('Não foi possível buscar as avaliações pendentes');
  }
}
async function buscarAvaliacoesParaNotificacao(diasAntecedencia =
/* istanbul ignore next */
(cov_w4ljlv9b5().b[4][0]++, 3)) {
  /* istanbul ignore next */
  cov_w4ljlv9b5().f[14]++;
  cov_w4ljlv9b5().s[41]++;
  try {
    const dataLimite =
    /* istanbul ignore next */
    (cov_w4ljlv9b5().s[42]++, (0, _datefns.addDays)(new Date(), diasAntecedencia));
    const avaliacoes =
    /* istanbul ignore next */
    (cov_w4ljlv9b5().s[43]++, await _prisma.prisma.avaliacao.findMany({
      where: {
        status: 'PENDENTE',
        periodo: {
          dataFim: {
            lte: dataLimite
          }
        }
      },
      include: {
        periodo: true,
        avaliador: {
          select: {
            id: true,
            nome: true,
            email: true
          }
        },
        avaliado: {
          select: {
            id: true,
            nome: true,
            setor: true,
            departamento: true
          }
        }
      },
      orderBy: {
        periodo: {
          dataFim: 'asc'
        }
      }
    }));
    /* istanbul ignore next */
    cov_w4ljlv9b5().s[44]++;
    return avaliacoes.map(avaliacao => {
      /* istanbul ignore next */
      cov_w4ljlv9b5().f[15]++;
      const dataLimite =
      /* istanbul ignore next */
      (cov_w4ljlv9b5().s[45]++, avaliacao.periodo.dataFim);
      const diasRestantes =
      /* istanbul ignore next */
      (cov_w4ljlv9b5().s[46]++, (0, _datefns.differenceInDays)(dataLimite, new Date()));
      const urgencia =
      /* istanbul ignore next */
      (cov_w4ljlv9b5().s[47]++, calcularUrgencia(diasRestantes));
      /* istanbul ignore next */
      cov_w4ljlv9b5().s[48]++;
      return {
        id: avaliacao.id,
        periodoId: avaliacao.periodoId,
        periodo: {
          id: avaliacao.periodo.id,
          nome: avaliacao.periodo.nome,
          dataInicio: avaliacao.periodo.dataInicio,
          dataFim: avaliacao.periodo.dataFim,
          status: avaliacao.periodo.status
        },
        avaliadorId: avaliacao.avaliadorId,
        avaliador: avaliacao.avaliador,
        avaliadoId: avaliacao.avaliadoId,
        avaliado: avaliacao.avaliado,
        status: avaliacao.status,
        dataLimite,
        diasRestantes,
        urgencia,
        criadaEm: avaliacao.criadaEm
      };
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_w4ljlv9b5().s[49]++;
    console.error('Erro ao buscar avaliações para notificação:', error);
    /* istanbul ignore next */
    cov_w4ljlv9b5().s[50]++;
    throw new Error('Não foi possível buscar as avaliações para notificação');
  }
}
async function gerarEstatisticasNotificacoes(usuarioId) {
  /* istanbul ignore next */
  cov_w4ljlv9b5().f[16]++;
  cov_w4ljlv9b5().s[51]++;
  try {
    const avaliacoes =
    /* istanbul ignore next */
    (cov_w4ljlv9b5().s[52]++, usuarioId ?
    /* istanbul ignore next */
    (cov_w4ljlv9b5().b[5][0]++, await buscarAvaliacoesPendentesUsuario(usuarioId)) :
    /* istanbul ignore next */
    (cov_w4ljlv9b5().b[5][1]++, await buscarTodasAvaliacoesPendentes()));
    const stats =
    /* istanbul ignore next */
    (cov_w4ljlv9b5().s[53]++, {
      totalPendentes: avaliacoes.length,
      criticas: 0,
      altas: 0,
      medias: 0,
      baixas: 0,
      vencidas: 0,
      proximasVencer: 0
    });
    /* istanbul ignore next */
    cov_w4ljlv9b5().s[54]++;
    avaliacoes.forEach(avaliacao => {
      /* istanbul ignore next */
      cov_w4ljlv9b5().f[17]++;
      cov_w4ljlv9b5().s[55]++;
      // Contar por urgência
      switch (avaliacao.urgencia) {
        case 'critica':
          /* istanbul ignore next */
          cov_w4ljlv9b5().b[6][0]++;
          cov_w4ljlv9b5().s[56]++;
          stats.criticas++;
          /* istanbul ignore next */
          cov_w4ljlv9b5().s[57]++;
          break;
        case 'alta':
          /* istanbul ignore next */
          cov_w4ljlv9b5().b[6][1]++;
          cov_w4ljlv9b5().s[58]++;
          stats.altas++;
          /* istanbul ignore next */
          cov_w4ljlv9b5().s[59]++;
          break;
        case 'media':
          /* istanbul ignore next */
          cov_w4ljlv9b5().b[6][2]++;
          cov_w4ljlv9b5().s[60]++;
          stats.medias++;
          /* istanbul ignore next */
          cov_w4ljlv9b5().s[61]++;
          break;
        case 'baixa':
          /* istanbul ignore next */
          cov_w4ljlv9b5().b[6][3]++;
          cov_w4ljlv9b5().s[62]++;
          stats.baixas++;
          /* istanbul ignore next */
          cov_w4ljlv9b5().s[63]++;
          break;
      }
      // Contar vencidas
      /* istanbul ignore next */
      cov_w4ljlv9b5().s[64]++;
      if (avaliacao.diasRestantes < 0) {
        /* istanbul ignore next */
        cov_w4ljlv9b5().b[7][0]++;
        cov_w4ljlv9b5().s[65]++;
        stats.vencidas++;
      } else
      /* istanbul ignore next */
      {
        cov_w4ljlv9b5().b[7][1]++;
      }
      // Contar próximas a vencer (3 dias)
      cov_w4ljlv9b5().s[66]++;
      if (
      /* istanbul ignore next */
      (cov_w4ljlv9b5().b[9][0]++, avaliacao.diasRestantes >= 0) &&
      /* istanbul ignore next */
      (cov_w4ljlv9b5().b[9][1]++, avaliacao.diasRestantes <= 3)) {
        /* istanbul ignore next */
        cov_w4ljlv9b5().b[8][0]++;
        cov_w4ljlv9b5().s[67]++;
        stats.proximasVencer++;
      } else
      /* istanbul ignore next */
      {
        cov_w4ljlv9b5().b[8][1]++;
      }
    });
    /* istanbul ignore next */
    cov_w4ljlv9b5().s[68]++;
    return stats;
  } catch (error) {
    /* istanbul ignore next */
    cov_w4ljlv9b5().s[69]++;
    console.error('Erro ao gerar estatísticas de notificações:', error);
    /* istanbul ignore next */
    cov_w4ljlv9b5().s[70]++;
    throw new Error('Não foi possível gerar as estatísticas');
  }
}
async function buscarConfiguracaoNotificacao(usuarioId) {
  /* istanbul ignore next */
  cov_w4ljlv9b5().f[18]++;
  cov_w4ljlv9b5().s[71]++;
  try {
    /* istanbul ignore next */
    cov_w4ljlv9b5().s[72]++;
    // Por enquanto, retornamos uma configuração padrão
    // Em uma implementação real, isso viria do banco de dados
    return {
      id: `config-${usuarioId}`,
      usuarioId,
      notificacoesEmail: true,
      notificacoesInterface: true,
      diasAntecedencia: 3,
      horarioEnvio: '09:00',
      frequenciaLembretes: 'diario',
      ativo: true
    };
  } catch (error) {
    /* istanbul ignore next */
    cov_w4ljlv9b5().s[73]++;
    console.error('Erro ao buscar configuração de notificação:', error);
    /* istanbul ignore next */
    cov_w4ljlv9b5().s[74]++;
    return null;
  }
}
async function deveReceberNotificacao(usuarioId, tipoNotificacao) {
  /* istanbul ignore next */
  cov_w4ljlv9b5().f[19]++;
  cov_w4ljlv9b5().s[75]++;
  try {
    const config =
    /* istanbul ignore next */
    (cov_w4ljlv9b5().s[76]++, await buscarConfiguracaoNotificacao(usuarioId));
    /* istanbul ignore next */
    cov_w4ljlv9b5().s[77]++;
    if (
    /* istanbul ignore next */
    (cov_w4ljlv9b5().b[11][0]++, !config) ||
    /* istanbul ignore next */
    (cov_w4ljlv9b5().b[11][1]++, !config.ativo)) {
      /* istanbul ignore next */
      cov_w4ljlv9b5().b[10][0]++;
      cov_w4ljlv9b5().s[78]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_w4ljlv9b5().b[10][1]++;
    }
    cov_w4ljlv9b5().s[79]++;
    if (tipoNotificacao === 'email') {
      /* istanbul ignore next */
      cov_w4ljlv9b5().b[12][0]++;
      cov_w4ljlv9b5().s[80]++;
      return config.notificacoesEmail;
    } else
    /* istanbul ignore next */
    {
      cov_w4ljlv9b5().b[12][1]++;
    }
    cov_w4ljlv9b5().s[81]++;
    if (tipoNotificacao === 'interface') {
      /* istanbul ignore next */
      cov_w4ljlv9b5().b[13][0]++;
      cov_w4ljlv9b5().s[82]++;
      return config.notificacoesInterface;
    } else
    /* istanbul ignore next */
    {
      cov_w4ljlv9b5().b[13][1]++;
    }
    cov_w4ljlv9b5().s[83]++;
    return false;
  } catch (error) {
    /* istanbul ignore next */
    cov_w4ljlv9b5().s[84]++;
    console.error('Erro ao verificar se deve receber notificação:', error);
    /* istanbul ignore next */
    cov_w4ljlv9b5().s[85]++;
    return false;
  }
}
function formatarMensagemNotificacao(avaliacao, tipo) {
  /* istanbul ignore next */
  cov_w4ljlv9b5().f[20]++;
  const nomeAvaliado =
  /* istanbul ignore next */
  (cov_w4ljlv9b5().s[86]++, avaliacao.avaliado.nome);
  const nomePeriodo =
  /* istanbul ignore next */
  (cov_w4ljlv9b5().s[87]++, avaliacao.periodo.nome);
  const diasRestantes =
  /* istanbul ignore next */
  (cov_w4ljlv9b5().s[88]++, avaliacao.diasRestantes);
  /* istanbul ignore next */
  cov_w4ljlv9b5().s[89]++;
  switch (tipo) {
    case 'lembrete':
      /* istanbul ignore next */
      cov_w4ljlv9b5().b[14][0]++;
      cov_w4ljlv9b5().s[90]++;
      return {
        titulo: 'Lembrete: Avaliação Pendente',
        mensagem: `Você tem uma avaliação pendente de ${nomeAvaliado} no período "${nomePeriodo}". ${diasRestantes > 0 ?
        /* istanbul ignore next */
        (cov_w4ljlv9b5().b[15][0]++, `Restam ${diasRestantes} dias para o prazo.`) :
        /* istanbul ignore next */
        (cov_w4ljlv9b5().b[15][1]++, 'O prazo vence hoje!')}`
      };
    case 'urgente':
      /* istanbul ignore next */
      cov_w4ljlv9b5().b[14][1]++;
      cov_w4ljlv9b5().s[91]++;
      return {
        titulo: 'Urgente: Avaliação Próxima do Vencimento',
        mensagem: `A avaliação de ${nomeAvaliado} no período "${nomePeriodo}" vence em ${diasRestantes} dia(s). Complete a avaliação o quanto antes.`
      };
    case 'vencida':
      /* istanbul ignore next */
      cov_w4ljlv9b5().b[14][2]++;
      cov_w4ljlv9b5().s[92]++;
      return {
        titulo: 'Avaliação Vencida',
        mensagem: `A avaliação de ${nomeAvaliado} no período "${nomePeriodo}" está vencida há ${Math.abs(diasRestantes)} dia(s). Complete a avaliação imediatamente.`
      };
    default:
      /* istanbul ignore next */
      cov_w4ljlv9b5().b[14][3]++;
      cov_w4ljlv9b5().s[93]++;
      return {
        titulo: 'Avaliação Pendente',
        mensagem: `Você tem uma avaliação pendente de ${nomeAvaliado} no período "${nomePeriodo}".`
      };
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJidXNjYXJBdmFsaWFjb2VzUGFyYU5vdGlmaWNhY2FvIiwiY292X3c0bGpsdjliNSIsImYiLCJzIiwiYnVzY2FyQXZhbGlhY29lc1BlbmRlbnRlc1VzdWFyaW8iLCJidXNjYXJDb25maWd1cmFjYW9Ob3RpZmljYWNhbyIsImJ1c2NhclRvZGFzQXZhbGlhY29lc1BlbmRlbnRlcyIsImNhbGN1bGFyVXJnZW5jaWEiLCJkZXZlUmVjZWJlck5vdGlmaWNhY2FvIiwiZm9ybWF0YXJNZW5zYWdlbU5vdGlmaWNhY2FvIiwiZ2VyYXJFc3RhdGlzdGljYXNOb3RpZmljYWNvZXMiLCJkaWFzUmVzdGFudGVzIiwiYiIsInVzdWFyaW9JZCIsImF2YWxpYWNvZXMiLCJfcHJpc21hIiwicHJpc21hIiwiYXZhbGlhY2FvIiwiZmluZE1hbnkiLCJ3aGVyZSIsImF2YWxpYWRvcklkIiwic3RhdHVzIiwiaW5jbHVkZSIsInBlcmlvZG8iLCJhdmFsaWFkb3IiLCJzZWxlY3QiLCJpZCIsIm5vbWUiLCJlbWFpbCIsImF2YWxpYWRvIiwic2V0b3IiLCJkZXBhcnRhbWVudG8iLCJvcmRlckJ5IiwiZGF0YUZpbSIsIm1hcCIsImRhdGFMaW1pdGUiLCJfZGF0ZWZucyIsImRpZmZlcmVuY2VJbkRheXMiLCJEYXRlIiwidXJnZW5jaWEiLCJwZXJpb2RvSWQiLCJkYXRhSW5pY2lvIiwiYXZhbGlhZG9JZCIsImNyaWFkYUVtIiwiZXJyb3IiLCJjb25zb2xlIiwiRXJyb3IiLCJkaWFzQW50ZWNlZGVuY2lhIiwiYWRkRGF5cyIsImx0ZSIsInN0YXRzIiwidG90YWxQZW5kZW50ZXMiLCJsZW5ndGgiLCJjcml0aWNhcyIsImFsdGFzIiwibWVkaWFzIiwiYmFpeGFzIiwidmVuY2lkYXMiLCJwcm94aW1hc1ZlbmNlciIsImZvckVhY2giLCJub3RpZmljYWNvZXNFbWFpbCIsIm5vdGlmaWNhY29lc0ludGVyZmFjZSIsImhvcmFyaW9FbnZpbyIsImZyZXF1ZW5jaWFMZW1icmV0ZXMiLCJhdGl2byIsInRpcG9Ob3RpZmljYWNhbyIsImNvbmZpZyIsInRpcG8iLCJub21lQXZhbGlhZG8iLCJub21lUGVyaW9kbyIsInRpdHVsbyIsIm1lbnNhZ2VtIiwiTWF0aCIsImFicyJdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTmVyZXUgSnJcXERvY3VtZW50c1xcRGV2XFxuZXdcXHNyY1xcbGliXFx1dGlsc1xcbm90aWZpY2Fjb2VzLWF2YWxpYWNvZXMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcHJpc21hIH0gZnJvbSAnQC9saWIvcHJpc21hJztcbmltcG9ydCB7IGFkZERheXMsIGRpZmZlcmVuY2VJbkRheXMsIGlzQWZ0ZXIsIGlzQmVmb3JlIH0gZnJvbSAnZGF0ZS1mbnMnO1xuXG4vLyBUaXBvcyBwYXJhIG5vdGlmaWNhw6fDtWVzXG5leHBvcnQgaW50ZXJmYWNlIEF2YWxpYWNhb1BlbmRlbnRlIHtcbiAgaWQ6IHN0cmluZztcbiAgcGVyaW9kb0lkOiBzdHJpbmc7XG4gIHBlcmlvZG86IHtcbiAgICBpZDogc3RyaW5nO1xuICAgIG5vbWU6IHN0cmluZztcbiAgICBkYXRhSW5pY2lvOiBEYXRlO1xuICAgIGRhdGFGaW06IERhdGU7XG4gICAgc3RhdHVzOiBzdHJpbmc7XG4gIH07XG4gIGF2YWxpYWRvcklkOiBzdHJpbmc7XG4gIGF2YWxpYWRvcjoge1xuICAgIGlkOiBzdHJpbmc7XG4gICAgbm9tZTogc3RyaW5nO1xuICAgIGVtYWlsOiBzdHJpbmc7XG4gIH07XG4gIGF2YWxpYWRvSWQ6IHN0cmluZztcbiAgYXZhbGlhZG86IHtcbiAgICBpZDogc3RyaW5nO1xuICAgIG5vbWU6IHN0cmluZztcbiAgICBzZXRvcj86IHN0cmluZztcbiAgICBkZXBhcnRhbWVudG8/OiBzdHJpbmc7XG4gIH07XG4gIHN0YXR1czogc3RyaW5nO1xuICBkYXRhTGltaXRlOiBEYXRlO1xuICBkaWFzUmVzdGFudGVzOiBudW1iZXI7XG4gIHVyZ2VuY2lhOiAnYmFpeGEnIHwgJ21lZGlhJyB8ICdhbHRhJyB8ICdjcml0aWNhJztcbiAgY3JpYWRhRW06IERhdGU7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgTm90aWZpY2FjYW9Db25maWcge1xuICBpZDogc3RyaW5nO1xuICB1c3VhcmlvSWQ6IHN0cmluZztcbiAgbm90aWZpY2Fjb2VzRW1haWw6IGJvb2xlYW47XG4gIG5vdGlmaWNhY29lc0ludGVyZmFjZTogYm9vbGVhbjtcbiAgZGlhc0FudGVjZWRlbmNpYTogbnVtYmVyO1xuICBob3JhcmlvRW52aW86IHN0cmluZzsgLy8gSEg6bW1cbiAgZnJlcXVlbmNpYUxlbWJyZXRlczogJ2RpYXJpbycgfCAnc2VtYW5hbCcgfCAncGVyc29uYWxpemFkbyc7XG4gIGF0aXZvOiBib29sZWFuO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEVzdGF0aXN0aWNhc05vdGlmaWNhY29lcyB7XG4gIHRvdGFsUGVuZGVudGVzOiBudW1iZXI7XG4gIGNyaXRpY2FzOiBudW1iZXI7XG4gIGFsdGFzOiBudW1iZXI7XG4gIG1lZGlhczogbnVtYmVyO1xuICBiYWl4YXM6IG51bWJlcjtcbiAgdmVuY2lkYXM6IG51bWJlcjtcbiAgcHJveGltYXNWZW5jZXI6IG51bWJlcjsgLy8gcHLDs3hpbWFzIDMgZGlhc1xufVxuXG4vKipcbiAqIENhbGN1bGEgYSB1cmfDqm5jaWEgYmFzZWFkYSBub3MgZGlhcyByZXN0YW50ZXNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNhbGN1bGFyVXJnZW5jaWEoZGlhc1Jlc3RhbnRlczogbnVtYmVyKTogJ2JhaXhhJyB8ICdtZWRpYScgfCAnYWx0YScgfCAnY3JpdGljYScge1xuICBpZiAoZGlhc1Jlc3RhbnRlcyA8IDApIHJldHVybiAnY3JpdGljYSc7IC8vIFZlbmNpZGFcbiAgaWYgKGRpYXNSZXN0YW50ZXMgPD0gMSkgcmV0dXJuICdjcml0aWNhJztcbiAgaWYgKGRpYXNSZXN0YW50ZXMgPD0gMykgcmV0dXJuICdhbHRhJztcbiAgaWYgKGRpYXNSZXN0YW50ZXMgPD0gNykgcmV0dXJuICdtZWRpYSc7XG4gIHJldHVybiAnYmFpeGEnO1xufVxuXG4vKipcbiAqIEJ1c2NhIHRvZGFzIGFzIGF2YWxpYcOnw7VlcyBwZW5kZW50ZXMgZGUgdW0gdXN1w6FyaW8gZXNwZWPDrWZpY29cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGJ1c2NhckF2YWxpYWNvZXNQZW5kZW50ZXNVc3VhcmlvKFxuICB1c3VhcmlvSWQ6IHN0cmluZ1xuKTogUHJvbWlzZTxBdmFsaWFjYW9QZW5kZW50ZVtdPiB7XG4gIHRyeSB7XG4gICAgY29uc3QgYXZhbGlhY29lcyA9IGF3YWl0IHByaXNtYS5hdmFsaWFjYW8uZmluZE1hbnkoe1xuICAgICAgd2hlcmU6IHtcbiAgICAgICAgYXZhbGlhZG9ySWQ6IHVzdWFyaW9JZCxcbiAgICAgICAgc3RhdHVzOiAnUEVOREVOVEUnXG4gICAgICB9LFxuICAgICAgaW5jbHVkZToge1xuICAgICAgICBwZXJpb2RvOiB0cnVlLFxuICAgICAgICBhdmFsaWFkb3I6IHtcbiAgICAgICAgICBzZWxlY3Q6IHtcbiAgICAgICAgICAgIGlkOiB0cnVlLFxuICAgICAgICAgICAgbm9tZTogdHJ1ZSxcbiAgICAgICAgICAgIGVtYWlsOiB0cnVlXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBhdmFsaWFkbzoge1xuICAgICAgICAgIHNlbGVjdDoge1xuICAgICAgICAgICAgaWQ6IHRydWUsXG4gICAgICAgICAgICBub21lOiB0cnVlLFxuICAgICAgICAgICAgc2V0b3I6IHRydWUsXG4gICAgICAgICAgICBkZXBhcnRhbWVudG86IHRydWVcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBvcmRlckJ5OiB7XG4gICAgICAgIHBlcmlvZG86IHtcbiAgICAgICAgICBkYXRhRmltOiAnYXNjJ1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICByZXR1cm4gYXZhbGlhY29lcy5tYXAoYXZhbGlhY2FvID0+IHtcbiAgICAgIGNvbnN0IGRhdGFMaW1pdGUgPSBhdmFsaWFjYW8ucGVyaW9kby5kYXRhRmltO1xuICAgICAgY29uc3QgZGlhc1Jlc3RhbnRlcyA9IGRpZmZlcmVuY2VJbkRheXMoZGF0YUxpbWl0ZSwgbmV3IERhdGUoKSk7XG4gICAgICBjb25zdCB1cmdlbmNpYSA9IGNhbGN1bGFyVXJnZW5jaWEoZGlhc1Jlc3RhbnRlcyk7XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIGlkOiBhdmFsaWFjYW8uaWQsXG4gICAgICAgIHBlcmlvZG9JZDogYXZhbGlhY2FvLnBlcmlvZG9JZCxcbiAgICAgICAgcGVyaW9kbzoge1xuICAgICAgICAgIGlkOiBhdmFsaWFjYW8ucGVyaW9kby5pZCxcbiAgICAgICAgICBub21lOiBhdmFsaWFjYW8ucGVyaW9kby5ub21lLFxuICAgICAgICAgIGRhdGFJbmljaW86IGF2YWxpYWNhby5wZXJpb2RvLmRhdGFJbmljaW8sXG4gICAgICAgICAgZGF0YUZpbTogYXZhbGlhY2FvLnBlcmlvZG8uZGF0YUZpbSxcbiAgICAgICAgICBzdGF0dXM6IGF2YWxpYWNhby5wZXJpb2RvLnN0YXR1c1xuICAgICAgICB9LFxuICAgICAgICBhdmFsaWFkb3JJZDogYXZhbGlhY2FvLmF2YWxpYWRvcklkLFxuICAgICAgICBhdmFsaWFkb3I6IGF2YWxpYWNhby5hdmFsaWFkb3IsXG4gICAgICAgIGF2YWxpYWRvSWQ6IGF2YWxpYWNhby5hdmFsaWFkb0lkLFxuICAgICAgICBhdmFsaWFkbzogYXZhbGlhY2FvLmF2YWxpYWRvLFxuICAgICAgICBzdGF0dXM6IGF2YWxpYWNhby5zdGF0dXMsXG4gICAgICAgIGRhdGFMaW1pdGUsXG4gICAgICAgIGRpYXNSZXN0YW50ZXMsXG4gICAgICAgIHVyZ2VuY2lhLFxuICAgICAgICBjcmlhZGFFbTogYXZhbGlhY2FvLmNyaWFkYUVtXG4gICAgICB9O1xuICAgIH0pO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm8gYW8gYnVzY2FyIGF2YWxpYcOnw7VlcyBwZW5kZW50ZXMgZG8gdXN1w6FyaW86JywgZXJyb3IpO1xuICAgIHRocm93IG5ldyBFcnJvcignTsOjbyBmb2kgcG9zc8OtdmVsIGJ1c2NhciBhcyBhdmFsaWHDp8O1ZXMgcGVuZGVudGVzJyk7XG4gIH1cbn1cblxuLyoqXG4gKiBCdXNjYSB0b2RhcyBhcyBhdmFsaWHDp8O1ZXMgcGVuZGVudGVzIGRvIHNpc3RlbWFcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGJ1c2NhclRvZGFzQXZhbGlhY29lc1BlbmRlbnRlcygpOiBQcm9taXNlPEF2YWxpYWNhb1BlbmRlbnRlW10+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCBhdmFsaWFjb2VzID0gYXdhaXQgcHJpc21hLmF2YWxpYWNhby5maW5kTWFueSh7XG4gICAgICB3aGVyZToge1xuICAgICAgICBzdGF0dXM6ICdQRU5ERU5URSdcbiAgICAgIH0sXG4gICAgICBpbmNsdWRlOiB7XG4gICAgICAgIHBlcmlvZG86IHRydWUsXG4gICAgICAgIGF2YWxpYWRvcjoge1xuICAgICAgICAgIHNlbGVjdDoge1xuICAgICAgICAgICAgaWQ6IHRydWUsXG4gICAgICAgICAgICBub21lOiB0cnVlLFxuICAgICAgICAgICAgZW1haWw6IHRydWVcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGF2YWxpYWRvOiB7XG4gICAgICAgICAgc2VsZWN0OiB7XG4gICAgICAgICAgICBpZDogdHJ1ZSxcbiAgICAgICAgICAgIG5vbWU6IHRydWUsXG4gICAgICAgICAgICBzZXRvcjogdHJ1ZSxcbiAgICAgICAgICAgIGRlcGFydGFtZW50bzogdHJ1ZVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIG9yZGVyQnk6IFtcbiAgICAgICAge1xuICAgICAgICAgIHBlcmlvZG86IHtcbiAgICAgICAgICAgIGRhdGFGaW06ICdhc2MnXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgYXZhbGlhZG9yOiB7XG4gICAgICAgICAgICBub21lOiAnYXNjJ1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgXVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIGF2YWxpYWNvZXMubWFwKGF2YWxpYWNhbyA9PiB7XG4gICAgICBjb25zdCBkYXRhTGltaXRlID0gYXZhbGlhY2FvLnBlcmlvZG8uZGF0YUZpbTtcbiAgICAgIGNvbnN0IGRpYXNSZXN0YW50ZXMgPSBkaWZmZXJlbmNlSW5EYXlzKGRhdGFMaW1pdGUsIG5ldyBEYXRlKCkpO1xuICAgICAgY29uc3QgdXJnZW5jaWEgPSBjYWxjdWxhclVyZ2VuY2lhKGRpYXNSZXN0YW50ZXMpO1xuXG4gICAgICByZXR1cm4ge1xuICAgICAgICBpZDogYXZhbGlhY2FvLmlkLFxuICAgICAgICBwZXJpb2RvSWQ6IGF2YWxpYWNhby5wZXJpb2RvSWQsXG4gICAgICAgIHBlcmlvZG86IHtcbiAgICAgICAgICBpZDogYXZhbGlhY2FvLnBlcmlvZG8uaWQsXG4gICAgICAgICAgbm9tZTogYXZhbGlhY2FvLnBlcmlvZG8ubm9tZSxcbiAgICAgICAgICBkYXRhSW5pY2lvOiBhdmFsaWFjYW8ucGVyaW9kby5kYXRhSW5pY2lvLFxuICAgICAgICAgIGRhdGFGaW06IGF2YWxpYWNhby5wZXJpb2RvLmRhdGFGaW0sXG4gICAgICAgICAgc3RhdHVzOiBhdmFsaWFjYW8ucGVyaW9kby5zdGF0dXNcbiAgICAgICAgfSxcbiAgICAgICAgYXZhbGlhZG9ySWQ6IGF2YWxpYWNhby5hdmFsaWFkb3JJZCxcbiAgICAgICAgYXZhbGlhZG9yOiBhdmFsaWFjYW8uYXZhbGlhZG9yLFxuICAgICAgICBhdmFsaWFkb0lkOiBhdmFsaWFjYW8uYXZhbGlhZG9JZCxcbiAgICAgICAgYXZhbGlhZG86IGF2YWxpYWNhby5hdmFsaWFkbyxcbiAgICAgICAgc3RhdHVzOiBhdmFsaWFjYW8uc3RhdHVzLFxuICAgICAgICBkYXRhTGltaXRlLFxuICAgICAgICBkaWFzUmVzdGFudGVzLFxuICAgICAgICB1cmdlbmNpYSxcbiAgICAgICAgY3JpYWRhRW06IGF2YWxpYWNhby5jcmlhZGFFbVxuICAgICAgfTtcbiAgICB9KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvIGFvIGJ1c2NhciB0b2RhcyBhcyBhdmFsaWHDp8O1ZXMgcGVuZGVudGVzOicsIGVycm9yKTtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ07Do28gZm9pIHBvc3PDrXZlbCBidXNjYXIgYXMgYXZhbGlhw6fDtWVzIHBlbmRlbnRlcycpO1xuICB9XG59XG5cbi8qKlxuICogQnVzY2EgYXZhbGlhw6fDtWVzIHF1ZSBwcmVjaXNhbSBkZSBub3RpZmljYcOnw6NvIChwcsOzeGltYXMgZG8gdmVuY2ltZW50bylcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGJ1c2NhckF2YWxpYWNvZXNQYXJhTm90aWZpY2FjYW8oXG4gIGRpYXNBbnRlY2VkZW5jaWEgPSAzXG4pOiBQcm9taXNlPEF2YWxpYWNhb1BlbmRlbnRlW10+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCBkYXRhTGltaXRlID0gYWRkRGF5cyhuZXcgRGF0ZSgpLCBkaWFzQW50ZWNlZGVuY2lhKTtcbiAgICBcbiAgICBjb25zdCBhdmFsaWFjb2VzID0gYXdhaXQgcHJpc21hLmF2YWxpYWNhby5maW5kTWFueSh7XG4gICAgICB3aGVyZToge1xuICAgICAgICBzdGF0dXM6ICdQRU5ERU5URScsXG4gICAgICAgIHBlcmlvZG86IHtcbiAgICAgICAgICBkYXRhRmltOiB7XG4gICAgICAgICAgICBsdGU6IGRhdGFMaW1pdGVcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBpbmNsdWRlOiB7XG4gICAgICAgIHBlcmlvZG86IHRydWUsXG4gICAgICAgIGF2YWxpYWRvcjoge1xuICAgICAgICAgIHNlbGVjdDoge1xuICAgICAgICAgICAgaWQ6IHRydWUsXG4gICAgICAgICAgICBub21lOiB0cnVlLFxuICAgICAgICAgICAgZW1haWw6IHRydWVcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGF2YWxpYWRvOiB7XG4gICAgICAgICAgc2VsZWN0OiB7XG4gICAgICAgICAgICBpZDogdHJ1ZSxcbiAgICAgICAgICAgIG5vbWU6IHRydWUsXG4gICAgICAgICAgICBzZXRvcjogdHJ1ZSxcbiAgICAgICAgICAgIGRlcGFydGFtZW50bzogdHJ1ZVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIG9yZGVyQnk6IHtcbiAgICAgICAgcGVyaW9kbzoge1xuICAgICAgICAgIGRhdGFGaW06ICdhc2MnXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHJldHVybiBhdmFsaWFjb2VzLm1hcChhdmFsaWFjYW8gPT4ge1xuICAgICAgY29uc3QgZGF0YUxpbWl0ZSA9IGF2YWxpYWNhby5wZXJpb2RvLmRhdGFGaW07XG4gICAgICBjb25zdCBkaWFzUmVzdGFudGVzID0gZGlmZmVyZW5jZUluRGF5cyhkYXRhTGltaXRlLCBuZXcgRGF0ZSgpKTtcbiAgICAgIGNvbnN0IHVyZ2VuY2lhID0gY2FsY3VsYXJVcmdlbmNpYShkaWFzUmVzdGFudGVzKTtcblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgaWQ6IGF2YWxpYWNhby5pZCxcbiAgICAgICAgcGVyaW9kb0lkOiBhdmFsaWFjYW8ucGVyaW9kb0lkLFxuICAgICAgICBwZXJpb2RvOiB7XG4gICAgICAgICAgaWQ6IGF2YWxpYWNhby5wZXJpb2RvLmlkLFxuICAgICAgICAgIG5vbWU6IGF2YWxpYWNhby5wZXJpb2RvLm5vbWUsXG4gICAgICAgICAgZGF0YUluaWNpbzogYXZhbGlhY2FvLnBlcmlvZG8uZGF0YUluaWNpbyxcbiAgICAgICAgICBkYXRhRmltOiBhdmFsaWFjYW8ucGVyaW9kby5kYXRhRmltLFxuICAgICAgICAgIHN0YXR1czogYXZhbGlhY2FvLnBlcmlvZG8uc3RhdHVzXG4gICAgICAgIH0sXG4gICAgICAgIGF2YWxpYWRvcklkOiBhdmFsaWFjYW8uYXZhbGlhZG9ySWQsXG4gICAgICAgIGF2YWxpYWRvcjogYXZhbGlhY2FvLmF2YWxpYWRvcixcbiAgICAgICAgYXZhbGlhZG9JZDogYXZhbGlhY2FvLmF2YWxpYWRvSWQsXG4gICAgICAgIGF2YWxpYWRvOiBhdmFsaWFjYW8uYXZhbGlhZG8sXG4gICAgICAgIHN0YXR1czogYXZhbGlhY2FvLnN0YXR1cyxcbiAgICAgICAgZGF0YUxpbWl0ZSxcbiAgICAgICAgZGlhc1Jlc3RhbnRlcyxcbiAgICAgICAgdXJnZW5jaWEsXG4gICAgICAgIGNyaWFkYUVtOiBhdmFsaWFjYW8uY3JpYWRhRW1cbiAgICAgIH07XG4gICAgfSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJybyBhbyBidXNjYXIgYXZhbGlhw6fDtWVzIHBhcmEgbm90aWZpY2HDp8OjbzonLCBlcnJvcik7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdOw6NvIGZvaSBwb3Nzw612ZWwgYnVzY2FyIGFzIGF2YWxpYcOnw7VlcyBwYXJhIG5vdGlmaWNhw6fDo28nKTtcbiAgfVxufVxuXG4vKipcbiAqIEdlcmEgZXN0YXTDrXN0aWNhcyBkZSBub3RpZmljYcOnw7VlcyBwYXJhIHVtIHVzdcOhcmlvXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXJhckVzdGF0aXN0aWNhc05vdGlmaWNhY29lcyhcbiAgdXN1YXJpb0lkPzogc3RyaW5nXG4pOiBQcm9taXNlPEVzdGF0aXN0aWNhc05vdGlmaWNhY29lcz4ge1xuICB0cnkge1xuICAgIGNvbnN0IGF2YWxpYWNvZXMgPSB1c3VhcmlvSWQgXG4gICAgICA/IGF3YWl0IGJ1c2NhckF2YWxpYWNvZXNQZW5kZW50ZXNVc3VhcmlvKHVzdWFyaW9JZClcbiAgICAgIDogYXdhaXQgYnVzY2FyVG9kYXNBdmFsaWFjb2VzUGVuZGVudGVzKCk7XG5cbiAgICBjb25zdCBzdGF0czogRXN0YXRpc3RpY2FzTm90aWZpY2Fjb2VzID0ge1xuICAgICAgdG90YWxQZW5kZW50ZXM6IGF2YWxpYWNvZXMubGVuZ3RoLFxuICAgICAgY3JpdGljYXM6IDAsXG4gICAgICBhbHRhczogMCxcbiAgICAgIG1lZGlhczogMCxcbiAgICAgIGJhaXhhczogMCxcbiAgICAgIHZlbmNpZGFzOiAwLFxuICAgICAgcHJveGltYXNWZW5jZXI6IDBcbiAgICB9O1xuXG4gICAgYXZhbGlhY29lcy5mb3JFYWNoKGF2YWxpYWNhbyA9PiB7XG4gICAgICAvLyBDb250YXIgcG9yIHVyZ8OqbmNpYVxuICAgICAgc3dpdGNoIChhdmFsaWFjYW8udXJnZW5jaWEpIHtcbiAgICAgICAgY2FzZSAnY3JpdGljYSc6XG4gICAgICAgICAgc3RhdHMuY3JpdGljYXMrKztcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnYWx0YSc6XG4gICAgICAgICAgc3RhdHMuYWx0YXMrKztcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnbWVkaWEnOlxuICAgICAgICAgIHN0YXRzLm1lZGlhcysrO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdiYWl4YSc6XG4gICAgICAgICAgc3RhdHMuYmFpeGFzKys7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICB9XG5cbiAgICAgIC8vIENvbnRhciB2ZW5jaWRhc1xuICAgICAgaWYgKGF2YWxpYWNhby5kaWFzUmVzdGFudGVzIDwgMCkge1xuICAgICAgICBzdGF0cy52ZW5jaWRhcysrO1xuICAgICAgfVxuXG4gICAgICAvLyBDb250YXIgcHLDs3hpbWFzIGEgdmVuY2VyICgzIGRpYXMpXG4gICAgICBpZiAoYXZhbGlhY2FvLmRpYXNSZXN0YW50ZXMgPj0gMCAmJiBhdmFsaWFjYW8uZGlhc1Jlc3RhbnRlcyA8PSAzKSB7XG4gICAgICAgIHN0YXRzLnByb3hpbWFzVmVuY2VyKys7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICByZXR1cm4gc3RhdHM7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJybyBhbyBnZXJhciBlc3RhdMOtc3RpY2FzIGRlIG5vdGlmaWNhw6fDtWVzOicsIGVycm9yKTtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ07Do28gZm9pIHBvc3PDrXZlbCBnZXJhciBhcyBlc3RhdMOtc3RpY2FzJyk7XG4gIH1cbn1cblxuLyoqXG4gKiBCdXNjYSBjb25maWd1cmHDp8O1ZXMgZGUgbm90aWZpY2HDp8OjbyBkZSB1bSB1c3XDoXJpb1xuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gYnVzY2FyQ29uZmlndXJhY2FvTm90aWZpY2FjYW8oXG4gIHVzdWFyaW9JZDogc3RyaW5nXG4pOiBQcm9taXNlPE5vdGlmaWNhY2FvQ29uZmlnIHwgbnVsbD4ge1xuICB0cnkge1xuICAgIC8vIFBvciBlbnF1YW50bywgcmV0b3JuYW1vcyB1bWEgY29uZmlndXJhw6fDo28gcGFkcsOjb1xuICAgIC8vIEVtIHVtYSBpbXBsZW1lbnRhw6fDo28gcmVhbCwgaXNzbyB2aXJpYSBkbyBiYW5jbyBkZSBkYWRvc1xuICAgIHJldHVybiB7XG4gICAgICBpZDogYGNvbmZpZy0ke3VzdWFyaW9JZH1gLFxuICAgICAgdXN1YXJpb0lkLFxuICAgICAgbm90aWZpY2Fjb2VzRW1haWw6IHRydWUsXG4gICAgICBub3RpZmljYWNvZXNJbnRlcmZhY2U6IHRydWUsXG4gICAgICBkaWFzQW50ZWNlZGVuY2lhOiAzLFxuICAgICAgaG9yYXJpb0VudmlvOiAnMDk6MDAnLFxuICAgICAgZnJlcXVlbmNpYUxlbWJyZXRlczogJ2RpYXJpbycsXG4gICAgICBhdGl2bzogdHJ1ZVxuICAgIH07XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJybyBhbyBidXNjYXIgY29uZmlndXJhw6fDo28gZGUgbm90aWZpY2HDp8OjbzonLCBlcnJvcik7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbn1cblxuLyoqXG4gKiBWZXJpZmljYSBzZSB1bSB1c3XDoXJpbyBkZXZlIHJlY2ViZXIgbm90aWZpY2HDp8OjbyBiYXNlYWRvIGVtIHN1YXMgY29uZmlndXJhw6fDtWVzXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBkZXZlUmVjZWJlck5vdGlmaWNhY2FvKFxuICB1c3VhcmlvSWQ6IHN0cmluZyxcbiAgdGlwb05vdGlmaWNhY2FvOiAnZW1haWwnIHwgJ2ludGVyZmFjZSdcbik6IFByb21pc2U8Ym9vbGVhbj4ge1xuICB0cnkge1xuICAgIGNvbnN0IGNvbmZpZyA9IGF3YWl0IGJ1c2NhckNvbmZpZ3VyYWNhb05vdGlmaWNhY2FvKHVzdWFyaW9JZCk7XG4gICAgXG4gICAgaWYgKCFjb25maWcgfHwgIWNvbmZpZy5hdGl2bykge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGlmICh0aXBvTm90aWZpY2FjYW8gPT09ICdlbWFpbCcpIHtcbiAgICAgIHJldHVybiBjb25maWcubm90aWZpY2Fjb2VzRW1haWw7XG4gICAgfVxuXG4gICAgaWYgKHRpcG9Ob3RpZmljYWNhbyA9PT0gJ2ludGVyZmFjZScpIHtcbiAgICAgIHJldHVybiBjb25maWcubm90aWZpY2Fjb2VzSW50ZXJmYWNlO1xuICAgIH1cblxuICAgIHJldHVybiBmYWxzZTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvIGFvIHZlcmlmaWNhciBzZSBkZXZlIHJlY2ViZXIgbm90aWZpY2HDp8OjbzonLCBlcnJvcik7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG5cbi8qKlxuICogRm9ybWF0YSB1bWEgbWVuc2FnZW0gZGUgbm90aWZpY2HDp8Ojb1xuICovXG5leHBvcnQgZnVuY3Rpb24gZm9ybWF0YXJNZW5zYWdlbU5vdGlmaWNhY2FvKFxuICBhdmFsaWFjYW86IEF2YWxpYWNhb1BlbmRlbnRlLFxuICB0aXBvOiAnbGVtYnJldGUnIHwgJ3VyZ2VudGUnIHwgJ3ZlbmNpZGEnXG4pOiB7IHRpdHVsbzogc3RyaW5nOyBtZW5zYWdlbTogc3RyaW5nOyB9IHtcbiAgY29uc3Qgbm9tZUF2YWxpYWRvID0gYXZhbGlhY2FvLmF2YWxpYWRvLm5vbWU7XG4gIGNvbnN0IG5vbWVQZXJpb2RvID0gYXZhbGlhY2FvLnBlcmlvZG8ubm9tZTtcbiAgY29uc3QgZGlhc1Jlc3RhbnRlcyA9IGF2YWxpYWNhby5kaWFzUmVzdGFudGVzO1xuXG4gIHN3aXRjaCAodGlwbykge1xuICAgIGNhc2UgJ2xlbWJyZXRlJzpcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHRpdHVsbzogJ0xlbWJyZXRlOiBBdmFsaWHDp8OjbyBQZW5kZW50ZScsXG4gICAgICAgIG1lbnNhZ2VtOiBgVm9jw6ogdGVtIHVtYSBhdmFsaWHDp8OjbyBwZW5kZW50ZSBkZSAke25vbWVBdmFsaWFkb30gbm8gcGVyw61vZG8gXCIke25vbWVQZXJpb2RvfVwiLiAke2RpYXNSZXN0YW50ZXMgPiAwID8gYFJlc3RhbSAke2RpYXNSZXN0YW50ZXN9IGRpYXMgcGFyYSBvIHByYXpvLmAgOiAnTyBwcmF6byB2ZW5jZSBob2plISd9YFxuICAgICAgfTtcbiAgICBcbiAgICBjYXNlICd1cmdlbnRlJzpcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHRpdHVsbzogJ1VyZ2VudGU6IEF2YWxpYcOnw6NvIFByw7N4aW1hIGRvIFZlbmNpbWVudG8nLFxuICAgICAgICBtZW5zYWdlbTogYEEgYXZhbGlhw6fDo28gZGUgJHtub21lQXZhbGlhZG99IG5vIHBlcsOtb2RvIFwiJHtub21lUGVyaW9kb31cIiB2ZW5jZSBlbSAke2RpYXNSZXN0YW50ZXN9IGRpYShzKS4gQ29tcGxldGUgYSBhdmFsaWHDp8OjbyBvIHF1YW50byBhbnRlcy5gXG4gICAgICB9O1xuICAgIFxuICAgIGNhc2UgJ3ZlbmNpZGEnOlxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgdGl0dWxvOiAnQXZhbGlhw6fDo28gVmVuY2lkYScsXG4gICAgICAgIG1lbnNhZ2VtOiBgQSBhdmFsaWHDp8OjbyBkZSAke25vbWVBdmFsaWFkb30gbm8gcGVyw61vZG8gXCIke25vbWVQZXJpb2RvfVwiIGVzdMOhIHZlbmNpZGEgaMOhICR7TWF0aC5hYnMoZGlhc1Jlc3RhbnRlcyl9IGRpYShzKS4gQ29tcGxldGUgYSBhdmFsaWHDp8OjbyBpbWVkaWF0YW1lbnRlLmBcbiAgICAgIH07XG4gICAgXG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHRpdHVsbzogJ0F2YWxpYcOnw6NvIFBlbmRlbnRlJyxcbiAgICAgICAgbWVuc2FnZW06IGBWb2PDqiB0ZW0gdW1hIGF2YWxpYcOnw6NvIHBlbmRlbnRlIGRlICR7bm9tZUF2YWxpYWRvfSBubyBwZXLDrW9kbyBcIiR7bm9tZVBlcmlvZG99XCIuYFxuICAgICAgfTtcbiAgfVxufSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O01BbU5zQkEsZ0NBQUE7SUFBQTtJQUFBQyxhQUFBLEdBQUFDLENBQUE7SUFBQUQsYUFBQSxHQUFBRSxDQUFBO1dBQUFILCtCQUFBOztNQTlJQUksaUNBQUE7SUFBQTtJQUFBSCxhQUFBLEdBQUFDLENBQUE7SUFBQUQsYUFBQSxHQUFBRSxDQUFBO1dBQUFDLGdDQUFBOztNQWlSQUMsOEJBQUE7SUFBQTtJQUFBSixhQUFBLEdBQUFDLENBQUE7SUFBQUQsYUFBQSxHQUFBRSxDQUFBO1dBQUFFLDZCQUFBOztNQTVNQUMsK0JBQUE7SUFBQTtJQUFBTCxhQUFBLEdBQUFDLENBQUE7SUFBQUQsYUFBQSxHQUFBRSxD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