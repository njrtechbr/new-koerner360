c5faebcc1cfcae4afd7fb001a4d78057
"use strict";

/* istanbul ignore next */
function cov_rlokhply9() {
  var path = "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\upload\\route.ts";
  var hash = "cafed216950d45419398afc45ffce8cc0c3774e7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\upload\\route.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 22
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 19
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 20
        }
      },
      "7": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 38
        }
      },
      "8": {
        start: {
          line: 23,
          column: 18
        },
        end: {
          line: 23,
          column: 38
        }
      },
      "9": {
        start: {
          line: 24,
          column: 14
        },
        end: {
          line: 24,
          column: 42
        }
      },
      "10": {
        start: {
          line: 25,
          column: 22
        },
        end: {
          line: 25,
          column: 59
        }
      },
      "11": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 51
        }
      },
      "12": {
        start: {
          line: 27,
          column: 39
        },
        end: {
          line: 27,
          column: 51
        }
      },
      "13": {
        start: {
          line: 28,
          column: 28
        },
        end: {
          line: 28,
          column: 41
        }
      },
      "14": {
        start: {
          line: 29,
          column: 27
        },
        end: {
          line: 29,
          column: 40
        }
      },
      "15": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 32,
          column: 20
        }
      },
      "16": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 66
        }
      },
      "17": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "18": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 19
        }
      },
      "19": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 42,
          column: 5
        }
      },
      "20": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 41,
          column: 10
        }
      },
      "21": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 53
        }
      },
      "22": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "23": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 30
        }
      },
      "24": {
        start: {
          line: 47,
          column: 17
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "25": {
        start: {
          line: 50,
          column: 32
        },
        end: {
          line: 50,
          column: 88
        }
      },
      "26": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 60,
          column: 5
        }
      },
      "27": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 59,
          column: 9
        }
      },
      "28": {
        start: {
          line: 53,
          column: 23
        },
        end: {
          line: 53,
          column: 95
        }
      },
      "29": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 58,
          column: 13
        }
      },
      "30": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 57
        }
      },
      "31": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 57,
          column: 39
        }
      },
      "32": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 61,
          column: 25
        }
      },
      "33": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 64,
          column: 5
        }
      },
      "34": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 31
        }
      },
      "35": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 65,
          column: 18
        }
      },
      "36": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 117,
          column: 5
        }
      },
      "37": {
        start: {
          line: 70,
          column: 24
        },
        end: {
          line: 70,
          column: 80
        }
      },
      "38": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 77,
          column: 9
        }
      },
      "39": {
        start: {
          line: 72,
          column: 12
        },
        end: {
          line: 76,
          column: 15
        }
      },
      "40": {
        start: {
          line: 79,
          column: 25
        },
        end: {
          line: 79,
          column: 49
        }
      },
      "41": {
        start: {
          line: 80,
          column: 21
        },
        end: {
          line: 80,
          column: 41
        }
      },
      "42": {
        start: {
          line: 81,
          column: 21
        },
        end: {
          line: 81,
          column: 41
        }
      },
      "43": {
        start: {
          line: 82,
          column: 29
        },
        end: {
          line: 82,
          column: 57
        }
      },
      "44": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 89,
          column: 9
        }
      },
      "45": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 88,
          column: 15
        }
      },
      "46": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 96,
          column: 9
        }
      },
      "47": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 95,
          column: 15
        }
      },
      "48": {
        start: {
          line: 98,
          column: 26
        },
        end: {
          line: 98,
          column: 98
        }
      },
      "49": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "50": {
        start: {
          line: 100,
          column: 12
        },
        end: {
          line: 104,
          column: 15
        }
      },
      "51": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 109,
          column: 11
        }
      },
      "52": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 111,
          column: 48
        }
      },
      "53": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 116,
          column: 11
        }
      },
      "54": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 158,
          column: 5
        }
      },
      "55": {
        start: {
          line: 122,
          column: 24
        },
        end: {
          line: 122,
          column: 80
        }
      },
      "56": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 129,
          column: 9
        }
      },
      "57": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 128,
          column: 15
        }
      },
      "58": {
        start: {
          line: 131,
          column: 28
        },
        end: {
          line: 131,
          column: 48
        }
      },
      "59": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 138,
          column: 9
        }
      },
      "60": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 137,
          column: 15
        }
      },
      "61": {
        start: {
          line: 140,
          column: 26
        },
        end: {
          line: 140,
          column: 70
        }
      },
      "62": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 147,
          column: 9
        }
      },
      "63": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 146,
          column: 15
        }
      },
      "64": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 150,
          column: 11
        }
      },
      "65": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 152,
          column: 57
        }
      },
      "66": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 157,
          column: 11
        }
      },
      "67": {
        start: {
          line: 161,
          column: 4
        },
        end: {
          line: 198,
          column: 5
        }
      },
      "68": {
        start: {
          line: 163,
          column: 24
        },
        end: {
          line: 163,
          column: 80
        }
      },
      "69": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 170,
          column: 9
        }
      },
      "70": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 169,
          column: 15
        }
      },
      "71": {
        start: {
          line: 171,
          column: 33
        },
        end: {
          line: 171,
          column: 53
        }
      },
      "72": {
        start: {
          line: 172,
          column: 26
        },
        end: {
          line: 172,
          column: 55
        }
      },
      "73": {
        start: {
          line: 173,
          column: 24
        },
        end: {
          line: 173,
          column: 51
        }
      },
      "74": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 179,
          column: 9
        }
      },
      "75": {
        start: {
          line: 176,
          column: 34
        },
        end: {
          line: 176,
          column: 146
        }
      },
      "76": {
        start: {
          line: 176,
          column: 81
        },
        end: {
          line: 176,
          column: 145
        }
      },
      "77": {
        start: {
          line: 177,
          column: 30
        },
        end: {
          line: 177,
          column: 56
        }
      },
      "78": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 178,
          column: 56
        }
      },
      "79": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 185,
          column: 9
        }
      },
      "80": {
        start: {
          line: 182,
          column: 36
        },
        end: {
          line: 182,
          column: 148
        }
      },
      "81": {
        start: {
          line: 182,
          column: 83
        },
        end: {
          line: 182,
          column: 147
        }
      },
      "82": {
        start: {
          line: 183,
          column: 25
        },
        end: {
          line: 183,
          column: 51
        }
      },
      "83": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 51
        }
      },
      "84": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 190,
          column: 11
        }
      },
      "85": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 192,
          column: 59
        }
      },
      "86": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 197,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 18
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 15
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 16
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 26,
            column: 9
          },
          end: {
            line: 26,
            column: 33
          }
        },
        loc: {
          start: {
            line: 26,
            column: 47
          },
          end: {
            line: 33,
            column: 1
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 30,
            column: 39
          },
          end: {
            line: 30,
            column: 40
          }
        },
        loc: {
          start: {
            line: 30,
            column: 61
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "6": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 34,
            column: 9
          },
          end: {
            line: 34,
            column: 34
          }
        },
        loc: {
          start: {
            line: 34,
            column: 53
          },
          end: {
            line: 66,
            column: 1
          }
        },
        line: 34
      },
      "7": {
        name: "POST",
        decl: {
          start: {
            line: 67,
            column: 15
          },
          end: {
            line: 67,
            column: 19
          }
        },
        loc: {
          start: {
            line: 67,
            column: 29
          },
          end: {
            line: 118,
            column: 1
          }
        },
        line: 67
      },
      "8": {
        name: "DELETE",
        decl: {
          start: {
            line: 119,
            column: 15
          },
          end: {
            line: 119,
            column: 21
          }
        },
        loc: {
          start: {
            line: 119,
            column: 31
          },
          end: {
            line: 159,
            column: 1
          }
        },
        line: 119
      },
      "9": {
        name: "GET",
        decl: {
          start: {
            line: 160,
            column: 15
          },
          end: {
            line: 160,
            column: 18
          }
        },
        loc: {
          start: {
            line: 160,
            column: 28
          },
          end: {
            line: 199,
            column: 1
          }
        },
        line: 160
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 176,
            column: 63
          },
          end: {
            line: 176,
            column: 64
          }
        },
        loc: {
          start: {
            line: 176,
            column: 81
          },
          end: {
            line: 176,
            column: 145
          }
        },
        line: 176
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 182,
            column: 65
          },
          end: {
            line: 182,
            column: 66
          }
        },
        loc: {
          start: {
            line: 182,
            column: 83
          },
          end: {
            line: 182,
            column: 147
          }
        },
        line: 182
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 31,
            column: 15
          },
          end: {
            line: 31,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 31,
            column: 29
          },
          end: {
            line: 31,
            column: 45
          }
        }, {
          start: {
            line: 31,
            column: 48
          },
          end: {
            line: 31,
            column: 65
          }
        }],
        line: 31
      },
      "2": {
        loc: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "3": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 20
          }
        }, {
          start: {
            line: 35,
            column: 24
          },
          end: {
            line: 35,
            column: 27
          }
        }, {
          start: {
            line: 35,
            column: 31
          },
          end: {
            line: 35,
            column: 45
          }
        }],
        line: 35
      },
      "4": {
        loc: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "5": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 20
          }
        }, {
          start: {
            line: 38,
            column: 24
          },
          end: {
            line: 38,
            column: 47
          }
        }, {
          start: {
            line: 38,
            column: 51
          },
          end: {
            line: 38,
            column: 76
          }
        }],
        line: 38
      },
      "6": {
        loc: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "7": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 44,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 44,
            column: 13
          }
        }, {
          start: {
            line: 44,
            column: 17
          },
          end: {
            line: 44,
            column: 31
          }
        }],
        line: 44
      },
      "8": {
        loc: {
          start: {
            line: 50,
            column: 32
          },
          end: {
            line: 50,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 32
          },
          end: {
            line: 50,
            column: 53
          }
        }, {
          start: {
            line: 50,
            column: 57
          },
          end: {
            line: 50,
            column: 88
          }
        }],
        line: 50
      },
      "9": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "10": {
        loc: {
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 52,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 52,
            column: 29
          }
        }, {
          start: {
            line: 52,
            column: 33
          },
          end: {
            line: 52,
            column: 79
          }
        }],
        line: 52
      },
      "11": {
        loc: {
          start: {
            line: 53,
            column: 23
          },
          end: {
            line: 53,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 53,
            column: 47
          },
          end: {
            line: 53,
            column: 88
          }
        }, {
          start: {
            line: 53,
            column: 91
          },
          end: {
            line: 53,
            column: 95
          }
        }],
        line: 53
      },
      "12": {
        loc: {
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        }, {
          start: {
            line: 56,
            column: 19
          },
          end: {
            line: 58,
            column: 13
          }
        }],
        line: 54
      },
      "13": {
        loc: {
          start: {
            line: 54,
            column: 16
          },
          end: {
            line: 54,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 16
          },
          end: {
            line: 54,
            column: 20
          }
        }, {
          start: {
            line: 54,
            column: 25
          },
          end: {
            line: 54,
            column: 33
          }
        }, {
          start: {
            line: 54,
            column: 37
          },
          end: {
            line: 54,
            column: 45
          }
        }],
        line: 54
      },
      "14": {
        loc: {
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "15": {
        loc: {
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 8
          },
          end: {
            line: 77,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      },
      "16": {
        loc: {
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 89,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 83,
            column: 8
          },
          end: {
            line: 89,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 83
      },
      "17": {
        loc: {
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 96,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "18": {
        loc: {
          start: {
            line: 98,
            column: 72
          },
          end: {
            line: 98,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 98,
            column: 72
          },
          end: {
            line: 98,
            column: 84
          }
        }, {
          start: {
            line: 98,
            column: 88
          },
          end: {
            line: 98,
            column: 97
          }
        }],
        line: 98
      },
      "19": {
        loc: {
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "20": {
        loc: {
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 129,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 129,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      },
      "21": {
        loc: {
          start: {
            line: 132,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 132
      },
      "22": {
        loc: {
          start: {
            line: 141,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 141,
            column: 8
          },
          end: {
            line: 147,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 141
      },
      "23": {
        loc: {
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 170,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 170,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 164
      },
      "24": {
        loc: {
          start: {
            line: 174,
            column: 8
          },
          end: {
            line: 179,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 8
          },
          end: {
            line: 179,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 174
      },
      "25": {
        loc: {
          start: {
            line: 180,
            column: 8
          },
          end: {
            line: 185,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 180,
            column: 8
          },
          end: {
            line: 185,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 180
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\app\\api\\upload\\route.ts"],
      sourcesContent: ["import { NextRequest, NextResponse } from 'next/server';\nimport { getServerSession } from 'next-auth';\nimport { authOptions } from '@/lib/auth';\nimport {\n  saveFile,\n  deleteFile,\n  validateFile,\n  type TipoArquivo,\n} from '@/lib/upload-server';\n\n/**\n * POST /api/upload\n * Faz upload de um arquivo\n */\nexport async function POST(request: NextRequest) {\n  try {\n    // Verificar autentica\xE7\xE3o\n    const session = await getServerSession(authOptions);\n    if (!session) {\n      return NextResponse.json({ erro: 'N\xE3o autorizado' }, { status: 401 });\n    }\n\n    // Obter dados do FormData\n    const formData = await request.formData();\n    const file = formData.get('file') as File;\n    const tipo = formData.get('tipo') as TipoArquivo;\n    const subdiretorio = formData.get('subdiretorio') as string | null;\n\n    if (!file) {\n      return NextResponse.json(\n        { erro: 'Nenhum arquivo fornecido' },\n        { status: 400 }\n      );\n    }\n\n    if (!tipo) {\n      return NextResponse.json(\n        { erro: 'Tipo de arquivo n\xE3o especificado' },\n        { status: 400 }\n      );\n    }\n\n    // Fazer upload do arquivo\n    const resultado = await saveFile(file, tipo, subdiretorio || undefined);\n\n    if (!resultado.sucesso) {\n      return NextResponse.json({ erro: resultado.erro }, { status: 400 });\n    }\n\n    return NextResponse.json({\n      sucesso: true,\n      arquivo: resultado.arquivo,\n    });\n  } catch (error) {\n    console.error('Erro no upload:', error);\n    return NextResponse.json(\n      { erro: 'Erro interno do servidor' },\n      { status: 500 }\n    );\n  }\n}\n\n/**\n * DELETE /api/upload\n * Remove um arquivo\n */\nexport async function DELETE(request: NextRequest) {\n  try {\n    // Verificar autentica\xE7\xE3o\n    const session = await getServerSession(authOptions);\n    if (!session) {\n      return NextResponse.json({ erro: 'N\xE3o autorizado' }, { status: 401 });\n    }\n\n    // Obter dados do corpo da requisi\xE7\xE3o\n    const { caminho } = await request.json();\n\n    if (!caminho) {\n      return NextResponse.json(\n        { erro: 'Caminho do arquivo n\xE3o fornecido' },\n        { status: 400 }\n      );\n    }\n\n    // Remover arquivo\n    const resultado = await deleteFile(caminho);\n\n    if (!resultado.sucesso) {\n      return NextResponse.json({ erro: resultado.erro }, { status: 400 });\n    }\n\n    return NextResponse.json({\n      sucesso: true,\n    });\n  } catch (error) {\n    console.error('Erro ao remover arquivo:', error);\n    return NextResponse.json(\n      { erro: 'Erro interno do servidor' },\n      { status: 500 }\n    );\n  }\n}\n\n/**\n * GET /api/upload\n * Lista arquivos ou obt\xE9m informa\xE7\xF5es de um arquivo\n */\nexport async function GET(request: NextRequest) {\n  try {\n    // Verificar autentica\xE7\xE3o\n    const session = await getServerSession(authOptions);\n    if (!session) {\n      return NextResponse.json({ erro: 'N\xE3o autorizado' }, { status: 401 });\n    }\n\n    const { searchParams } = new URL(request.url);\n    const diretorio = searchParams.get('diretorio');\n    const caminho = searchParams.get('caminho');\n\n    if (diretorio) {\n      // Listar arquivos em um diret\xF3rio\n      const { listFiles } = await import('@/lib/upload-server');\n      const resultado = await listFiles(diretorio);\n\n      return NextResponse.json(resultado);\n    }\n\n    if (caminho) {\n      // Obter informa\xE7\xF5es de um arquivo espec\xEDfico\n      const { getFileInfo } = await import('@/lib/upload-server');\n      const info = await getFileInfo(caminho);\n\n      return NextResponse.json(info);\n    }\n\n    return NextResponse.json(\n      { erro: 'Par\xE2metros insuficientes' },\n      { status: 400 }\n    );\n  } catch (error) {\n    console.error('Erro ao obter informa\xE7\xF5es:', error);\n    return NextResponse.json(\n      { erro: 'Erro interno do servidor' },\n      { status: 500 }\n    );\n  }\n}\n"],
      names: ["DELETE", "GET", "POST", "request", "session", "getServerSession", "authOptions", "NextResponse", "json", "erro", "status", "formData", "file", "get", "tipo", "subdiretorio", "resultado", "saveFile", "undefined", "sucesso", "arquivo", "error", "console", "caminho", "deleteFile", "searchParams", "URL", "url", "diretorio", "listFiles", "getFileInfo", "info"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "cafed216950d45419398afc45ffce8cc0c3774e7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_rlokhply9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_rlokhply9();
cov_rlokhply9().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_rlokhply9().f[0]++;
  cov_rlokhply9().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_rlokhply9().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_rlokhply9().s[3]++;
_export(exports, {
  get DELETE() {
    /* istanbul ignore next */
    cov_rlokhply9().f[1]++;
    cov_rlokhply9().s[4]++;
    return DELETE;
  },
  get GET() {
    /* istanbul ignore next */
    cov_rlokhply9().f[2]++;
    cov_rlokhply9().s[5]++;
    return GET;
  },
  get POST() {
    /* istanbul ignore next */
    cov_rlokhply9().f[3]++;
    cov_rlokhply9().s[6]++;
    return POST;
  }
});
const _server =
/* istanbul ignore next */
(cov_rlokhply9().s[7]++, require("next/server"));
const _nextauth =
/* istanbul ignore next */
(cov_rlokhply9().s[8]++, require("next-auth"));
const _auth =
/* istanbul ignore next */
(cov_rlokhply9().s[9]++, require("../../../lib/auth"));
const _uploadserver =
/* istanbul ignore next */
(cov_rlokhply9().s[10]++, require("../../../lib/upload-server"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_rlokhply9().f[4]++;
  cov_rlokhply9().s[11]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_rlokhply9().b[0][0]++;
    cov_rlokhply9().s[12]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_rlokhply9().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_rlokhply9().s[13]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_rlokhply9().s[14]++, new WeakMap());
  /* istanbul ignore next */
  cov_rlokhply9().s[15]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_rlokhply9().f[5]++;
    cov_rlokhply9().s[16]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_rlokhply9().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_rlokhply9().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_rlokhply9().f[6]++;
  cov_rlokhply9().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_rlokhply9().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_rlokhply9().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_rlokhply9().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_rlokhply9().b[2][0]++;
    cov_rlokhply9().s[18]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_rlokhply9().b[2][1]++;
  }
  cov_rlokhply9().s[19]++;
  if (
  /* istanbul ignore next */
  (cov_rlokhply9().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_rlokhply9().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_rlokhply9().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_rlokhply9().b[4][0]++;
    cov_rlokhply9().s[20]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_rlokhply9().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_rlokhply9().s[21]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_rlokhply9().s[22]++;
  if (
  /* istanbul ignore next */
  (cov_rlokhply9().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_rlokhply9().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_rlokhply9().b[6][0]++;
    cov_rlokhply9().s[23]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_rlokhply9().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_rlokhply9().s[24]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_rlokhply9().s[25]++,
  /* istanbul ignore next */
  (cov_rlokhply9().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_rlokhply9().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_rlokhply9().s[26]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_rlokhply9().s[27]++;
    if (
    /* istanbul ignore next */
    (cov_rlokhply9().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_rlokhply9().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_rlokhply9().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_rlokhply9().s[28]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_rlokhply9().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_rlokhply9().b[11][1]++, null));
      /* istanbul ignore next */
      cov_rlokhply9().s[29]++;
      if (
      /* istanbul ignore next */
      (cov_rlokhply9().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_rlokhply9().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_rlokhply9().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_rlokhply9().b[12][0]++;
        cov_rlokhply9().s[30]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_rlokhply9().b[12][1]++;
        cov_rlokhply9().s[31]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_rlokhply9().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_rlokhply9().s[32]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_rlokhply9().s[33]++;
  if (cache) {
    /* istanbul ignore next */
    cov_rlokhply9().b[14][0]++;
    cov_rlokhply9().s[34]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_rlokhply9().b[14][1]++;
  }
  cov_rlokhply9().s[35]++;
  return newObj;
}
async function POST(request) {
  /* istanbul ignore next */
  cov_rlokhply9().f[7]++;
  cov_rlokhply9().s[36]++;
  try {
    // Verificar autenticação
    const session =
    /* istanbul ignore next */
    (cov_rlokhply9().s[37]++, await (0, _nextauth.getServerSession)(_auth.authOptions));
    /* istanbul ignore next */
    cov_rlokhply9().s[38]++;
    if (!session) {
      /* istanbul ignore next */
      cov_rlokhply9().b[15][0]++;
      cov_rlokhply9().s[39]++;
      return _server.NextResponse.json({
        erro: 'Não autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_rlokhply9().b[15][1]++;
    }
    // Obter dados do FormData
    const formData =
    /* istanbul ignore next */
    (cov_rlokhply9().s[40]++, await request.formData());
    const file =
    /* istanbul ignore next */
    (cov_rlokhply9().s[41]++, formData.get('file'));
    const tipo =
    /* istanbul ignore next */
    (cov_rlokhply9().s[42]++, formData.get('tipo'));
    const subdiretorio =
    /* istanbul ignore next */
    (cov_rlokhply9().s[43]++, formData.get('subdiretorio'));
    /* istanbul ignore next */
    cov_rlokhply9().s[44]++;
    if (!file) {
      /* istanbul ignore next */
      cov_rlokhply9().b[16][0]++;
      cov_rlokhply9().s[45]++;
      return _server.NextResponse.json({
        erro: 'Nenhum arquivo fornecido'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_rlokhply9().b[16][1]++;
    }
    cov_rlokhply9().s[46]++;
    if (!tipo) {
      /* istanbul ignore next */
      cov_rlokhply9().b[17][0]++;
      cov_rlokhply9().s[47]++;
      return _server.NextResponse.json({
        erro: 'Tipo de arquivo não especificado'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_rlokhply9().b[17][1]++;
    }
    // Fazer upload do arquivo
    const resultado =
    /* istanbul ignore next */
    (cov_rlokhply9().s[48]++, await (0, _uploadserver.saveFile)(file, tipo,
    /* istanbul ignore next */
    (cov_rlokhply9().b[18][0]++, subdiretorio) ||
    /* istanbul ignore next */
    (cov_rlokhply9().b[18][1]++, undefined)));
    /* istanbul ignore next */
    cov_rlokhply9().s[49]++;
    if (!resultado.sucesso) {
      /* istanbul ignore next */
      cov_rlokhply9().b[19][0]++;
      cov_rlokhply9().s[50]++;
      return _server.NextResponse.json({
        erro: resultado.erro
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_rlokhply9().b[19][1]++;
    }
    cov_rlokhply9().s[51]++;
    return _server.NextResponse.json({
      sucesso: true,
      arquivo: resultado.arquivo
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_rlokhply9().s[52]++;
    console.error('Erro no upload:', error);
    /* istanbul ignore next */
    cov_rlokhply9().s[53]++;
    return _server.NextResponse.json({
      erro: 'Erro interno do servidor'
    }, {
      status: 500
    });
  }
}
async function DELETE(request) {
  /* istanbul ignore next */
  cov_rlokhply9().f[8]++;
  cov_rlokhply9().s[54]++;
  try {
    // Verificar autenticação
    const session =
    /* istanbul ignore next */
    (cov_rlokhply9().s[55]++, await (0, _nextauth.getServerSession)(_auth.authOptions));
    /* istanbul ignore next */
    cov_rlokhply9().s[56]++;
    if (!session) {
      /* istanbul ignore next */
      cov_rlokhply9().b[20][0]++;
      cov_rlokhply9().s[57]++;
      return _server.NextResponse.json({
        erro: 'Não autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_rlokhply9().b[20][1]++;
    }
    // Obter dados do corpo da requisição
    const {
      caminho
    } =
    /* istanbul ignore next */
    (cov_rlokhply9().s[58]++, await request.json());
    /* istanbul ignore next */
    cov_rlokhply9().s[59]++;
    if (!caminho) {
      /* istanbul ignore next */
      cov_rlokhply9().b[21][0]++;
      cov_rlokhply9().s[60]++;
      return _server.NextResponse.json({
        erro: 'Caminho do arquivo não fornecido'
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_rlokhply9().b[21][1]++;
    }
    // Remover arquivo
    const resultado =
    /* istanbul ignore next */
    (cov_rlokhply9().s[61]++, await (0, _uploadserver.deleteFile)(caminho));
    /* istanbul ignore next */
    cov_rlokhply9().s[62]++;
    if (!resultado.sucesso) {
      /* istanbul ignore next */
      cov_rlokhply9().b[22][0]++;
      cov_rlokhply9().s[63]++;
      return _server.NextResponse.json({
        erro: resultado.erro
      }, {
        status: 400
      });
    } else
    /* istanbul ignore next */
    {
      cov_rlokhply9().b[22][1]++;
    }
    cov_rlokhply9().s[64]++;
    return _server.NextResponse.json({
      sucesso: true
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_rlokhply9().s[65]++;
    console.error('Erro ao remover arquivo:', error);
    /* istanbul ignore next */
    cov_rlokhply9().s[66]++;
    return _server.NextResponse.json({
      erro: 'Erro interno do servidor'
    }, {
      status: 500
    });
  }
}
async function GET(request) {
  /* istanbul ignore next */
  cov_rlokhply9().f[9]++;
  cov_rlokhply9().s[67]++;
  try {
    // Verificar autenticação
    const session =
    /* istanbul ignore next */
    (cov_rlokhply9().s[68]++, await (0, _nextauth.getServerSession)(_auth.authOptions));
    /* istanbul ignore next */
    cov_rlokhply9().s[69]++;
    if (!session) {
      /* istanbul ignore next */
      cov_rlokhply9().b[23][0]++;
      cov_rlokhply9().s[70]++;
      return _server.NextResponse.json({
        erro: 'Não autorizado'
      }, {
        status: 401
      });
    } else
    /* istanbul ignore next */
    {
      cov_rlokhply9().b[23][1]++;
    }
    const {
      searchParams
    } =
    /* istanbul ignore next */
    (cov_rlokhply9().s[71]++, new URL(request.url));
    const diretorio =
    /* istanbul ignore next */
    (cov_rlokhply9().s[72]++, searchParams.get('diretorio'));
    const caminho =
    /* istanbul ignore next */
    (cov_rlokhply9().s[73]++, searchParams.get('caminho'));
    /* istanbul ignore next */
    cov_rlokhply9().s[74]++;
    if (diretorio) {
      /* istanbul ignore next */
      cov_rlokhply9().b[24][0]++;
      // Listar arquivos em um diretório
      const {
        listFiles
      } =
      /* istanbul ignore next */
      (cov_rlokhply9().s[75]++, await Promise.resolve().then(() => {
        /* istanbul ignore next */
        cov_rlokhply9().f[10]++;
        cov_rlokhply9().s[76]++;
        return /*#__PURE__*/_interop_require_wildcard(require("../../../lib/upload-server"));
      }));
      const resultado =
      /* istanbul ignore next */
      (cov_rlokhply9().s[77]++, await listFiles(diretorio));
      /* istanbul ignore next */
      cov_rlokhply9().s[78]++;
      return _server.NextResponse.json(resultado);
    } else
    /* istanbul ignore next */
    {
      cov_rlokhply9().b[24][1]++;
    }
    cov_rlokhply9().s[79]++;
    if (caminho) {
      /* istanbul ignore next */
      cov_rlokhply9().b[25][0]++;
      // Obter informações de um arquivo específico
      const {
        getFileInfo
      } =
      /* istanbul ignore next */
      (cov_rlokhply9().s[80]++, await Promise.resolve().then(() => {
        /* istanbul ignore next */
        cov_rlokhply9().f[11]++;
        cov_rlokhply9().s[81]++;
        return /*#__PURE__*/_interop_require_wildcard(require("../../../lib/upload-server"));
      }));
      const info =
      /* istanbul ignore next */
      (cov_rlokhply9().s[82]++, await getFileInfo(caminho));
      /* istanbul ignore next */
      cov_rlokhply9().s[83]++;
      return _server.NextResponse.json(info);
    } else
    /* istanbul ignore next */
    {
      cov_rlokhply9().b[25][1]++;
    }
    cov_rlokhply9().s[84]++;
    return _server.NextResponse.json({
      erro: 'Parâmetros insuficientes'
    }, {
      status: 400
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_rlokhply9().s[85]++;
    console.error('Erro ao obter informações:', error);
    /* istanbul ignore next */
    cov_rlokhply9().s[86]++;
    return _server.NextResponse.json({
      erro: 'Erro interno do servidor'
    }, {
      status: 500
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,