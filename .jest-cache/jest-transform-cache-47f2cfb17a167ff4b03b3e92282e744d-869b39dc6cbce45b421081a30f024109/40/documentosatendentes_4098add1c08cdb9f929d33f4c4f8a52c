c24d02d635477031aa157488c3006fe0
"use strict";

/* istanbul ignore next */
function cov_10e14muget() {
  var path = "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\lib\\validations\\documentos-atendentes.ts";
  var hash = "f58b08bf04eb9fac769459732e5e5f56af0b1e1b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\lib\\validations\\documentos-atendentes.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 39,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 40
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 41
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 40
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 38
        }
      },
      "8": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 36
        }
      },
      "9": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 33
        }
      },
      "10": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 38
        }
      },
      "11": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 35
        }
      },
      "12": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 35
        }
      },
      "13": {
        start: {
          line: 40,
          column: 13
        },
        end: {
          line: 40,
          column: 27
        }
      },
      "14": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 42,
          column: 51
        }
      },
      "15": {
        start: {
          line: 42,
          column: 39
        },
        end: {
          line: 42,
          column: 51
        }
      },
      "16": {
        start: {
          line: 43,
          column: 28
        },
        end: {
          line: 43,
          column: 41
        }
      },
      "17": {
        start: {
          line: 44,
          column: 27
        },
        end: {
          line: 44,
          column: 40
        }
      },
      "18": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 47,
          column: 20
        }
      },
      "19": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 66
        }
      },
      "20": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 52,
          column: 5
        }
      },
      "21": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 19
        }
      },
      "22": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 57,
          column: 5
        }
      },
      "23": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 56,
          column: 10
        }
      },
      "24": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 58,
          column: 53
        }
      },
      "25": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "26": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 30
        }
      },
      "27": {
        start: {
          line: 62,
          column: 17
        },
        end: {
          line: 64,
          column: 5
        }
      },
      "28": {
        start: {
          line: 65,
          column: 32
        },
        end: {
          line: 65,
          column: 88
        }
      },
      "29": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 75,
          column: 5
        }
      },
      "30": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 74,
          column: 9
        }
      },
      "31": {
        start: {
          line: 68,
          column: 23
        },
        end: {
          line: 68,
          column: 95
        }
      },
      "32": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 73,
          column: 13
        }
      },
      "33": {
        start: {
          line: 70,
          column: 16
        },
        end: {
          line: 70,
          column: 57
        }
      },
      "34": {
        start: {
          line: 72,
          column: 16
        },
        end: {
          line: 72,
          column: 39
        }
      },
      "35": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 76,
          column: 25
        }
      },
      "36": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 79,
          column: 5
        }
      },
      "37": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 78,
          column: 31
        }
      },
      "38": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 80,
          column: 18
        }
      },
      "39": {
        start: {
          line: 82,
          column: 26
        },
        end: {
          line: 82,
          column: 89
        }
      },
      "40": {
        start: {
          line: 83,
          column: 28
        },
        end: {
          line: 93,
          column: 2
        }
      },
      "41": {
        start: {
          line: 94,
          column: 29
        },
        end: {
          line: 102,
          column: 2
        }
      },
      "42": {
        start: {
          line: 103,
          column: 33
        },
        end: {
          line: 111,
          column: 2
        }
      },
      "43": {
        start: {
          line: 112,
          column: 31
        },
        end: {
          line: 127,
          column: 2
        }
      },
      "44": {
        start: {
          line: 128,
          column: 31
        },
        end: {
          line: 136,
          column: 2
        }
      },
      "45": {
        start: {
          line: 137,
          column: 34
        },
        end: {
          line: 146,
          column: 1
        }
      },
      "46": {
        start: {
          line: 147,
          column: 33
        },
        end: {
          line: 171,
          column: 1
        }
      },
      "47": {
        start: {
          line: 172,
          column: 28
        },
        end: {
          line: 230,
          column: 1
        }
      },
      "48": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 176,
          column: 81
        }
      },
      "49": {
        start: {
          line: 181,
          column: 25
        },
        end: {
          line: 181,
          column: 90
        }
      },
      "50": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 182,
          column: 80
        }
      },
      "51": {
        start: {
          line: 187,
          column: 8
        },
        end: {
          line: 187,
          column: 74
        }
      },
      "52": {
        start: {
          line: 192,
          column: 26
        },
        end: {
          line: 192,
          column: 36
        }
      },
      "53": {
        start: {
          line: 193,
          column: 25
        },
        end: {
          line: 193,
          column: 78
        }
      },
      "54": {
        start: {
          line: 194,
          column: 25
        },
        end: {
          line: 194,
          column: 111
        }
      },
      "55": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 195,
          column: 53
        }
      },
      "56": {
        start: {
          line: 200,
          column: 27
        },
        end: {
          line: 200,
          column: 122
        }
      },
      "57": {
        start: {
          line: 200,
          column: 74
        },
        end: {
          line: 200,
          column: 121
        }
      },
      "58": {
        start: {
          line: 201,
          column: 35
        },
        end: {
          line: 212,
          column: 10
        }
      },
      "59": {
        start: {
          line: 213,
          column: 8
        },
        end: {
          line: 213,
          column: 35
        }
      },
      "60": {
        start: {
          line: 218,
          column: 8
        },
        end: {
          line: 228,
          column: 10
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 36
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 37
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 36
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 34
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 32
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 29
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 34
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 31
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 31
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 36
      },
      "10": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 41,
            column: 9
          },
          end: {
            line: 41,
            column: 33
          }
        },
        loc: {
          start: {
            line: 41,
            column: 47
          },
          end: {
            line: 48,
            column: 1
          }
        },
        line: 41
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 45,
            column: 39
          },
          end: {
            line: 45,
            column: 40
          }
        },
        loc: {
          start: {
            line: 45,
            column: 61
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 45
      },
      "12": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 49,
            column: 9
          },
          end: {
            line: 49,
            column: 34
          }
        },
        loc: {
          start: {
            line: 49,
            column: 53
          },
          end: {
            line: 81,
            column: 1
          }
        },
        line: 49
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 175,
            column: 23
          },
          end: {
            line: 175,
            column: 24
          }
        },
        loc: {
          start: {
            line: 175,
            column: 35
          },
          end: {
            line: 177,
            column: 5
          }
        },
        line: 175
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 180,
            column: 23
          },
          end: {
            line: 180,
            column: 24
          }
        },
        loc: {
          start: {
            line: 180,
            column: 38
          },
          end: {
            line: 183,
            column: 5
          }
        },
        line: 180
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 186,
            column: 29
          },
          end: {
            line: 186,
            column: 30
          }
        },
        loc: {
          start: {
            line: 186,
            column: 40
          },
          end: {
            line: 188,
            column: 5
          }
        },
        line: 186
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 191,
            column: 22
          },
          end: {
            line: 191,
            column: 23
          }
        },
        loc: {
          start: {
            line: 191,
            column: 38
          },
          end: {
            line: 196,
            column: 5
          }
        },
        line: 191
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 199,
            column: 29
          },
          end: {
            line: 199,
            column: 30
          }
        },
        loc: {
          start: {
            line: 199,
            column: 69
          },
          end: {
            line: 214,
            column: 5
          }
        },
        line: 199
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 200,
            column: 56
          },
          end: {
            line: 200,
            column: 57
          }
        },
        loc: {
          start: {
            line: 200,
            column: 74
          },
          end: {
            line: 200,
            column: 121
          }
        },
        line: 200
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 217,
            column: 29
          },
          end: {
            line: 217,
            column: 30
          }
        },
        loc: {
          start: {
            line: 217,
            column: 42
          },
          end: {
            line: 229,
            column: 5
          }
        },
        line: 217
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 42,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 42,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "1": {
        loc: {
          start: {
            line: 46,
            column: 15
          },
          end: {
            line: 46,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 46,
            column: 29
          },
          end: {
            line: 46,
            column: 45
          }
        }, {
          start: {
            line: 46,
            column: 48
          },
          end: {
            line: 46,
            column: 65
          }
        }],
        line: 46
      },
      "2": {
        loc: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "3": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 50,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 50,
            column: 20
          }
        }, {
          start: {
            line: 50,
            column: 24
          },
          end: {
            line: 50,
            column: 27
          }
        }, {
          start: {
            line: 50,
            column: 31
          },
          end: {
            line: 50,
            column: 45
          }
        }],
        line: 50
      },
      "4": {
        loc: {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "5": {
        loc: {
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 53,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 53,
            column: 20
          }
        }, {
          start: {
            line: 53,
            column: 24
          },
          end: {
            line: 53,
            column: 47
          }
        }, {
          start: {
            line: 53,
            column: 51
          },
          end: {
            line: 53,
            column: 76
          }
        }],
        line: 53
      },
      "6": {
        loc: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "7": {
        loc: {
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 59,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 8
          },
          end: {
            line: 59,
            column: 13
          }
        }, {
          start: {
            line: 59,
            column: 17
          },
          end: {
            line: 59,
            column: 31
          }
        }],
        line: 59
      },
      "8": {
        loc: {
          start: {
            line: 65,
            column: 32
          },
          end: {
            line: 65,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 32
          },
          end: {
            line: 65,
            column: 53
          }
        }, {
          start: {
            line: 65,
            column: 57
          },
          end: {
            line: 65,
            column: 88
          }
        }],
        line: 65
      },
      "9": {
        loc: {
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 8
          },
          end: {
            line: 74,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "10": {
        loc: {
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 67,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 12
          },
          end: {
            line: 67,
            column: 29
          }
        }, {
          start: {
            line: 67,
            column: 33
          },
          end: {
            line: 67,
            column: 79
          }
        }],
        line: 67
      },
      "11": {
        loc: {
          start: {
            line: 68,
            column: 23
          },
          end: {
            line: 68,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 68,
            column: 47
          },
          end: {
            line: 68,
            column: 88
          }
        }, {
          start: {
            line: 68,
            column: 91
          },
          end: {
            line: 68,
            column: 95
          }
        }],
        line: 68
      },
      "12": {
        loc: {
          start: {
            line: 69,
            column: 12
          },
          end: {
            line: 73,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 12
          },
          end: {
            line: 73,
            column: 13
          }
        }, {
          start: {
            line: 71,
            column: 19
          },
          end: {
            line: 73,
            column: 13
          }
        }],
        line: 69
      },
      "13": {
        loc: {
          start: {
            line: 69,
            column: 16
          },
          end: {
            line: 69,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 16
          },
          end: {
            line: 69,
            column: 20
          }
        }, {
          start: {
            line: 69,
            column: 25
          },
          end: {
            line: 69,
            column: 33
          }
        }, {
          start: {
            line: 69,
            column: 37
          },
          end: {
            line: 69,
            column: 45
          }
        }],
        line: 69
      },
      "14": {
        loc: {
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "15": {
        loc: {
          start: {
            line: 206,
            column: 19
          },
          end: {
            line: 210,
            column: 17
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 206,
            column: 19
          },
          end: {
            line: 206,
            column: 30
          }
        }, {
          start: {
            line: 206,
            column: 34
          },
          end: {
            line: 210,
            column: 17
          }
        }],
        line: 206
      },
      "16": {
        loc: {
          start: {
            line: 223,
            column: 21
          },
          end: {
            line: 223,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 223,
            column: 41
          },
          end: {
            line: 223,
            column: 86
          }
        }, {
          start: {
            line: 223,
            column: 89
          },
          end: {
            line: 223,
            column: 93
          }
        }],
        line: 223
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\lib\\validations\\documentos-atendentes.ts"],
      sourcesContent: ["import { z } from 'zod';\nimport { validacaoUtils } from './index';\n\n/**\n * Schema para valida\xE7\xE3o de ID de documento\n */\nexport const idDocumentoSchema = z\n  .string()\n  .cuid('ID do documento deve ser um CUID v\xE1lido');\n\n/**\n * Schema para tipos de documento\n */\nexport const tipoDocumentoSchema = z.enum([\n  'RG',\n  'CPF',\n  'CNH',\n  'CARTEIRA_TRABALHO',\n  'COMPROVANTE_RESIDENCIA',\n  'DIPLOMA',\n  'CERTIFICADO',\n  'CONTRATO',\n  'OUTROS',\n]);\n\n/**\n * Schema para criar documento de atendente\n */\nexport const criarDocumentoSchema = z.object({\n  tipo: tipoDocumentoSchema,\n  nome: z\n    .string()\n    .min(1, 'Nome do arquivo \xE9 obrigat\xF3rio')\n    .max(255, 'Nome deve ter no m\xE1ximo 255 caracteres'),\n  descricao: z\n    .string()\n    .max(500, 'Descri\xE7\xE3o deve ter no m\xE1ximo 500 caracteres')\n    .optional(),\n  arquivo: z.string().url('URL do arquivo deve ser v\xE1lida'),\n  tamanho: z\n    .number()\n    .int()\n    .positive('Tamanho deve ser um n\xFAmero positivo')\n    .optional(),\n  mimeType: z.string().min(1, 'Tipo MIME \xE9 obrigat\xF3rio').optional(),\n  versao: z\n    .number()\n    .int()\n    .positive('Vers\xE3o deve ser um n\xFAmero positivo')\n    .default(1),\n});\n\n/**\n * Schema para atualizar documento de atendente\n */\nexport const atualizarDocumentoSchema = z.object({\n  nome: z\n    .string()\n    .min(1, 'Nome do arquivo \xE9 obrigat\xF3rio')\n    .max(255, 'Nome deve ter no m\xE1ximo 255 caracteres')\n    .optional(),\n  descricao: z\n    .string()\n    .max(500, 'Descri\xE7\xE3o deve ter no m\xE1ximo 500 caracteres')\n    .optional(),\n  arquivo: z.string().url('URL do arquivo deve ser v\xE1lida').optional(),\n  tamanho: z\n    .number()\n    .int()\n    .positive('Tamanho deve ser um n\xFAmero positivo')\n    .optional(),\n  mimeType: z.string().min(1, 'Tipo MIME \xE9 obrigat\xF3rio').optional(),\n  versao: z\n    .number()\n    .int()\n    .positive('Vers\xE3o deve ser um n\xFAmero positivo')\n    .optional(),\n  ativo: z.boolean().optional(),\n});\n\n/**\n * Schema para listar documentos\n */\nexport const listarDocumentosSchema = z.object({\n  pagina: z.coerce\n    .number()\n    .int()\n    .min(1, 'P\xE1gina deve ser um n\xFAmero inteiro positivo')\n    .default(1),\n  limite: z.coerce\n    .number()\n    .int()\n    .min(1, 'Limite deve ser um n\xFAmero inteiro positivo')\n    .max(100, 'Limite m\xE1ximo \xE9 100')\n    .default(10),\n  tipo: tipoDocumentoSchema.optional(),\n  ativo: z.coerce.boolean().optional(),\n  ordenarPor: z\n    .enum(['nome', 'tipo', 'criadoEm', 'atualizadoEm'])\n    .default('criadoEm'),\n  ordem: z.enum(['asc', 'desc']).default('desc'),\n});\n\n/**\n * Schema para buscar documentos\n */\nexport const buscarDocumentosSchema = z.object({\n  busca: z.string().min(1, 'Termo de busca \xE9 obrigat\xF3rio'),\n  tipo: tipoDocumentoSchema.optional(),\n  ativo: z.coerce.boolean().optional(),\n  dataInicio: z.string().datetime().optional(),\n  dataFim: z.string().datetime().optional(),\n  pagina: z.coerce\n    .number()\n    .int()\n    .min(1, 'P\xE1gina deve ser um n\xFAmero inteiro positivo')\n    .default(1),\n  limite: z.coerce\n    .number()\n    .int()\n    .min(1, 'Limite deve ser um n\xFAmero inteiro positivo')\n    .max(100, 'Limite m\xE1ximo \xE9 100')\n    .default(10),\n});\n\n/**\n * Tipos TypeScript derivados dos schemas\n */\nexport type CriarDocumentoInput = z.infer<typeof criarDocumentoSchema>;\nexport type AtualizarDocumentoInput = z.infer<typeof atualizarDocumentoSchema>;\nexport type ListarDocumentosInput = z.infer<typeof listarDocumentosSchema>;\nexport type BuscarDocumentosInput = z.infer<typeof buscarDocumentosSchema>;\nexport type TipoDocumento = z.infer<typeof tipoDocumentoSchema>;\n\n/**\n * Mensagens de erro personalizadas para documentos\n */\nexport const MENSAGENS_ERRO_DOCUMENTOS = {\n  DOCUMENTO_NAO_ENCONTRADO: 'Documento n\xE3o encontrado',\n  TIPO_DOCUMENTO_INVALIDO: 'Tipo de documento inv\xE1lido',\n  ARQUIVO_MUITO_GRANDE: 'Arquivo muito grande',\n  FORMATO_ARQUIVO_INVALIDO: 'Formato de arquivo inv\xE1lido',\n  DOCUMENTO_JA_EXISTE: 'Documento do mesmo tipo j\xE1 existe para este atendente',\n  SEM_PERMISSAO_DOCUMENTO: 'Sem permiss\xE3o para acessar este documento',\n  ERRO_UPLOAD: 'Erro ao fazer upload do arquivo',\n  VERSAO_INVALIDA: 'Vers\xE3o do documento inv\xE1lida',\n} as const;\n\n/**\n * Configura\xE7\xF5es para valida\xE7\xE3o de documentos\n */\nexport const CONFIGURACOES_DOCUMENTOS = {\n  TAMANHO_MAXIMO_ARQUIVO: 10 * 1024 * 1024, // 10MB\n  TIPOS_MIME_PERMITIDOS: [\n    'application/pdf',\n    'image/jpeg',\n    'image/jpg',\n    'image/png',\n    'image/gif',\n    'application/msword',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    'application/vnd.ms-excel',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n  ],\n  EXTENSOES_PERMITIDAS: [\n    '.pdf',\n    '.jpg',\n    '.jpeg',\n    '.png',\n    '.gif',\n    '.doc',\n    '.docx',\n    '.xls',\n    '.xlsx',\n  ],\n} as const;\n\n/**\n * Utilit\xE1rios de valida\xE7\xE3o espec\xEDficos para documentos\n */\nexport const validacaoDocumentos = {\n  /**\n   * Valida se o tipo MIME \xE9 permitido\n   */\n  validarTipoMime: (mimeType: string): boolean => {\n    return CONFIGURACOES_DOCUMENTOS.TIPOS_MIME_PERMITIDOS.includes(mimeType);\n  },\n\n  /**\n   * Valida se a extens\xE3o do arquivo \xE9 permitida\n   */\n  validarExtensao: (nomeArquivo: string): boolean => {\n    const extensao = nomeArquivo\n      .toLowerCase()\n      .substring(nomeArquivo.lastIndexOf('.'));\n    return CONFIGURACOES_DOCUMENTOS.EXTENSOES_PERMITIDAS.includes(extensao);\n  },\n\n  /**\n   * Valida se o tamanho do arquivo est\xE1 dentro do limite\n   */\n  validarTamanhoArquivo: (tamanho: number): boolean => {\n    return tamanho <= CONFIGURACOES_DOCUMENTOS.TAMANHO_MAXIMO_ARQUIVO;\n  },\n\n  /**\n   * Gera nome \xFAnico para arquivo\n   */\n  gerarNomeUnico: (nomeOriginal: string): string => {\n    const timestamp = Date.now();\n    const extensao = nomeOriginal.substring(nomeOriginal.lastIndexOf('.'));\n    const nomeBase = nomeOriginal\n      .substring(0, nomeOriginal.lastIndexOf('.'))\n      .replace(/[^a-zA-Z0-9]/g, '_');\n    return `${nomeBase}_${timestamp}${extensao}`;\n  },\n\n  /**\n   * Valida se um documento j\xE1 existe para o atendente\n   */\n  validarDocumentoUnico: async (\n    atendenteId: string,\n    tipo: TipoDocumento,\n    documentoId?: string\n  ): Promise<boolean> => {\n    const { prisma } = await import('@/lib/prisma');\n\n    const documentoExistente = await prisma.documentoAtendente.findFirst({\n      where: {\n        atendenteId,\n        tipo,\n        ativo: true,\n        ...(documentoId && { id: { not: documentoId } }),\n      },\n    });\n\n    return !documentoExistente;\n  },\n\n  /**\n   * Formata informa\xE7\xF5es do documento para exibi\xE7\xE3o\n   */\n  formatarInfoDocumento: (documento: any) => {\n    return {\n      id: documento.id,\n      tipo: documento.tipo,\n      nome: documento.nome,\n      descricao: documento.descricao,\n      tamanho: documento.tamanho\n        ? `${(documento.tamanho / 1024).toFixed(2)} KB`\n        : null,\n      versao: documento.versao,\n      ativo: documento.ativo,\n      criadoEm: documento.criadoEm,\n      atualizadoEm: documento.atualizadoEm,\n    };\n  },\n};\n"],
      names: ["CONFIGURACOES_DOCUMENTOS", "MENSAGENS_ERRO_DOCUMENTOS", "atualizarDocumentoSchema", "buscarDocumentosSchema", "criarDocumentoSchema", "idDocumentoSchema", "listarDocumentosSchema", "tipoDocumentoSchema", "validacaoDocumentos", "z", "string", "cuid", "enum", "object", "tipo", "nome", "min", "max", "descricao", "optional", "arquivo", "url", "tamanho", "number", "int", "positive", "mimeType", "versao", "default", "ativo", "boolean", "pagina", "coerce", "limite", "ordenarPor", "ordem", "busca", "dataInicio", "datetime", "dataFim", "DOCUMENTO_NAO_ENCONTRADO", "TIPO_DOCUMENTO_INVALIDO", "ARQUIVO_MUITO_GRANDE", "FORMATO_ARQUIVO_INVALIDO", "DOCUMENTO_JA_EXISTE", "SEM_PERMISSAO_DOCUMENTO", "ERRO_UPLOAD", "VERSAO_INVALIDA", "TAMANHO_MAXIMO_ARQUIVO", "TIPOS_MIME_PERMITIDOS", "EXTENSOES_PERMITIDAS", "validarTipoMime", "includes", "validarExtensao", "nomeArquivo", "extensao", "toLowerCase", "substring", "lastIndexOf", "validarTamanhoArquivo", "gerarNomeUnico", "nomeOriginal", "timestamp", "Date", "now", "nomeBase", "replace", "validarDocumentoUnico", "atendenteId", "documentoId", "prisma", "documentoExistente", "documentoAtendente", "findFirst", "where", "id", "not", "formatarInfoDocumento", "documento", "toFixed", "criadoEm", "atualizadoEm"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f58b08bf04eb9fac769459732e5e5f56af0b1e1b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_10e14muget = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_10e14muget();
cov_10e14muget().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_10e14muget().f[0]++;
  cov_10e14muget().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_10e14muget().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_10e14muget().s[3]++;
_export(exports, {
  get CONFIGURACOES_DOCUMENTOS() {
    /* istanbul ignore next */
    cov_10e14muget().f[1]++;
    cov_10e14muget().s[4]++;
    return CONFIGURACOES_DOCUMENTOS;
  },
  get MENSAGENS_ERRO_DOCUMENTOS() {
    /* istanbul ignore next */
    cov_10e14muget().f[2]++;
    cov_10e14muget().s[5]++;
    return MENSAGENS_ERRO_DOCUMENTOS;
  },
  get atualizarDocumentoSchema() {
    /* istanbul ignore next */
    cov_10e14muget().f[3]++;
    cov_10e14muget().s[6]++;
    return atualizarDocumentoSchema;
  },
  get buscarDocumentosSchema() {
    /* istanbul ignore next */
    cov_10e14muget().f[4]++;
    cov_10e14muget().s[7]++;
    return buscarDocumentosSchema;
  },
  get criarDocumentoSchema() {
    /* istanbul ignore next */
    cov_10e14muget().f[5]++;
    cov_10e14muget().s[8]++;
    return criarDocumentoSchema;
  },
  get idDocumentoSchema() {
    /* istanbul ignore next */
    cov_10e14muget().f[6]++;
    cov_10e14muget().s[9]++;
    return idDocumentoSchema;
  },
  get listarDocumentosSchema() {
    /* istanbul ignore next */
    cov_10e14muget().f[7]++;
    cov_10e14muget().s[10]++;
    return listarDocumentosSchema;
  },
  get tipoDocumentoSchema() {
    /* istanbul ignore next */
    cov_10e14muget().f[8]++;
    cov_10e14muget().s[11]++;
    return tipoDocumentoSchema;
  },
  get validacaoDocumentos() {
    /* istanbul ignore next */
    cov_10e14muget().f[9]++;
    cov_10e14muget().s[12]++;
    return validacaoDocumentos;
  }
});
const _zod =
/* istanbul ignore next */
(cov_10e14muget().s[13]++, require("zod"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_10e14muget().f[10]++;
  cov_10e14muget().s[14]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_10e14muget().b[0][0]++;
    cov_10e14muget().s[15]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_10e14muget().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_10e14muget().s[16]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_10e14muget().s[17]++, new WeakMap());
  /* istanbul ignore next */
  cov_10e14muget().s[18]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_10e14muget().f[11]++;
    cov_10e14muget().s[19]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_10e14muget().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_10e14muget().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_10e14muget().f[12]++;
  cov_10e14muget().s[20]++;
  if (
  /* istanbul ignore next */
  (cov_10e14muget().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_10e14muget().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_10e14muget().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_10e14muget().b[2][0]++;
    cov_10e14muget().s[21]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_10e14muget().b[2][1]++;
  }
  cov_10e14muget().s[22]++;
  if (
  /* istanbul ignore next */
  (cov_10e14muget().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_10e14muget().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_10e14muget().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_10e14muget().b[4][0]++;
    cov_10e14muget().s[23]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_10e14muget().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_10e14muget().s[24]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_10e14muget().s[25]++;
  if (
  /* istanbul ignore next */
  (cov_10e14muget().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_10e14muget().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_10e14muget().b[6][0]++;
    cov_10e14muget().s[26]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_10e14muget().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_10e14muget().s[27]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_10e14muget().s[28]++,
  /* istanbul ignore next */
  (cov_10e14muget().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_10e14muget().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_10e14muget().s[29]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_10e14muget().s[30]++;
    if (
    /* istanbul ignore next */
    (cov_10e14muget().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_10e14muget().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_10e14muget().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_10e14muget().s[31]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_10e14muget().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_10e14muget().b[11][1]++, null));
      /* istanbul ignore next */
      cov_10e14muget().s[32]++;
      if (
      /* istanbul ignore next */
      (cov_10e14muget().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_10e14muget().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_10e14muget().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_10e14muget().b[12][0]++;
        cov_10e14muget().s[33]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_10e14muget().b[12][1]++;
        cov_10e14muget().s[34]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_10e14muget().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_10e14muget().s[35]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_10e14muget().s[36]++;
  if (cache) {
    /* istanbul ignore next */
    cov_10e14muget().b[14][0]++;
    cov_10e14muget().s[37]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_10e14muget().b[14][1]++;
  }
  cov_10e14muget().s[38]++;
  return newObj;
}
const idDocumentoSchema =
/* istanbul ignore next */
(cov_10e14muget().s[39]++, _zod.z.string().cuid('ID do documento deve ser um CUID válido'));
const tipoDocumentoSchema =
/* istanbul ignore next */
(cov_10e14muget().s[40]++, _zod.z.enum(['RG', 'CPF', 'CNH', 'CARTEIRA_TRABALHO', 'COMPROVANTE_RESIDENCIA', 'DIPLOMA', 'CERTIFICADO', 'CONTRATO', 'OUTROS']));
const criarDocumentoSchema =
/* istanbul ignore next */
(cov_10e14muget().s[41]++, _zod.z.object({
  tipo: tipoDocumentoSchema,
  nome: _zod.z.string().min(1, 'Nome do arquivo é obrigatório').max(255, 'Nome deve ter no máximo 255 caracteres'),
  descricao: _zod.z.string().max(500, 'Descrição deve ter no máximo 500 caracteres').optional(),
  arquivo: _zod.z.string().url('URL do arquivo deve ser válida'),
  tamanho: _zod.z.number().int().positive('Tamanho deve ser um número positivo').optional(),
  mimeType: _zod.z.string().min(1, 'Tipo MIME é obrigatório').optional(),
  versao: _zod.z.number().int().positive('Versão deve ser um número positivo').default(1)
}));
const atualizarDocumentoSchema =
/* istanbul ignore next */
(cov_10e14muget().s[42]++, _zod.z.object({
  nome: _zod.z.string().min(1, 'Nome do arquivo é obrigatório').max(255, 'Nome deve ter no máximo 255 caracteres').optional(),
  descricao: _zod.z.string().max(500, 'Descrição deve ter no máximo 500 caracteres').optional(),
  arquivo: _zod.z.string().url('URL do arquivo deve ser válida').optional(),
  tamanho: _zod.z.number().int().positive('Tamanho deve ser um número positivo').optional(),
  mimeType: _zod.z.string().min(1, 'Tipo MIME é obrigatório').optional(),
  versao: _zod.z.number().int().positive('Versão deve ser um número positivo').optional(),
  ativo: _zod.z.boolean().optional()
}));
const listarDocumentosSchema =
/* istanbul ignore next */
(cov_10e14muget().s[43]++, _zod.z.object({
  pagina: _zod.z.coerce.number().int().min(1, 'Página deve ser um número inteiro positivo').default(1),
  limite: _zod.z.coerce.number().int().min(1, 'Limite deve ser um número inteiro positivo').max(100, 'Limite máximo é 100').default(10),
  tipo: tipoDocumentoSchema.optional(),
  ativo: _zod.z.coerce.boolean().optional(),
  ordenarPor: _zod.z.enum(['nome', 'tipo', 'criadoEm', 'atualizadoEm']).default('criadoEm'),
  ordem: _zod.z.enum(['asc', 'desc']).default('desc')
}));
const buscarDocumentosSchema =
/* istanbul ignore next */
(cov_10e14muget().s[44]++, _zod.z.object({
  busca: _zod.z.string().min(1, 'Termo de busca é obrigatório'),
  tipo: tipoDocumentoSchema.optional(),
  ativo: _zod.z.coerce.boolean().optional(),
  dataInicio: _zod.z.string().datetime().optional(),
  dataFim: _zod.z.string().datetime().optional(),
  pagina: _zod.z.coerce.number().int().min(1, 'Página deve ser um número inteiro positivo').default(1),
  limite: _zod.z.coerce.number().int().min(1, 'Limite deve ser um número inteiro positivo').max(100, 'Limite máximo é 100').default(10)
}));
const MENSAGENS_ERRO_DOCUMENTOS =
/* istanbul ignore next */
(cov_10e14muget().s[45]++, {
  DOCUMENTO_NAO_ENCONTRADO: 'Documento não encontrado',
  TIPO_DOCUMENTO_INVALIDO: 'Tipo de documento inválido',
  ARQUIVO_MUITO_GRANDE: 'Arquivo muito grande',
  FORMATO_ARQUIVO_INVALIDO: 'Formato de arquivo inválido',
  DOCUMENTO_JA_EXISTE: 'Documento do mesmo tipo já existe para este atendente',
  SEM_PERMISSAO_DOCUMENTO: 'Sem permissão para acessar este documento',
  ERRO_UPLOAD: 'Erro ao fazer upload do arquivo',
  VERSAO_INVALIDA: 'Versão do documento inválida'
});
const CONFIGURACOES_DOCUMENTOS =
/* istanbul ignore next */
(cov_10e14muget().s[46]++, {
  TAMANHO_MAXIMO_ARQUIVO: 10 * 1024 * 1024,
  TIPOS_MIME_PERMITIDOS: ['application/pdf', 'image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'],
  EXTENSOES_PERMITIDAS: ['.pdf', '.jpg', '.jpeg', '.png', '.gif', '.doc', '.docx', '.xls', '.xlsx']
});
const validacaoDocumentos =
/* istanbul ignore next */
(cov_10e14muget().s[47]++, {
  /**
  * Valida se o tipo MIME é permitido
  */
  validarTipoMime: mimeType => {
    /* istanbul ignore next */
    cov_10e14muget().f[13]++;
    cov_10e14muget().s[48]++;
    return CONFIGURACOES_DOCUMENTOS.TIPOS_MIME_PERMITIDOS.includes(mimeType);
  },
  /**
  * Valida se a extensão do arquivo é permitida
  */
  validarExtensao: nomeArquivo => {
    /* istanbul ignore next */
    cov_10e14muget().f[14]++;
    const extensao =
    /* istanbul ignore next */
    (cov_10e14muget().s[49]++, nomeArquivo.toLowerCase().substring(nomeArquivo.lastIndexOf('.')));
    /* istanbul ignore next */
    cov_10e14muget().s[50]++;
    return CONFIGURACOES_DOCUMENTOS.EXTENSOES_PERMITIDAS.includes(extensao);
  },
  /**
  * Valida se o tamanho do arquivo está dentro do limite
  */
  validarTamanhoArquivo: tamanho => {
    /* istanbul ignore next */
    cov_10e14muget().f[15]++;
    cov_10e14muget().s[51]++;
    return tamanho <= CONFIGURACOES_DOCUMENTOS.TAMANHO_MAXIMO_ARQUIVO;
  },
  /**
  * Gera nome único para arquivo
  */
  gerarNomeUnico: nomeOriginal => {
    /* istanbul ignore next */
    cov_10e14muget().f[16]++;
    const timestamp =
    /* istanbul ignore next */
    (cov_10e14muget().s[52]++, Date.now());
    const extensao =
    /* istanbul ignore next */
    (cov_10e14muget().s[53]++, nomeOriginal.substring(nomeOriginal.lastIndexOf('.')));
    const nomeBase =
    /* istanbul ignore next */
    (cov_10e14muget().s[54]++, nomeOriginal.substring(0, nomeOriginal.lastIndexOf('.')).replace(/[^a-zA-Z0-9]/g, '_'));
    /* istanbul ignore next */
    cov_10e14muget().s[55]++;
    return `${nomeBase}_${timestamp}${extensao}`;
  },
  /**
  * Valida se um documento já existe para o atendente
  */
  validarDocumentoUnico: async (atendenteId, tipo, documentoId) => {
    /* istanbul ignore next */
    cov_10e14muget().f[17]++;
    const {
      prisma
    } =
    /* istanbul ignore next */
    (cov_10e14muget().s[56]++, await Promise.resolve().then(() => {
      /* istanbul ignore next */
      cov_10e14muget().f[18]++;
      cov_10e14muget().s[57]++;
      return /*#__PURE__*/_interop_require_wildcard(require("../prisma"));
    }));
    const documentoExistente =
    /* istanbul ignore next */
    (cov_10e14muget().s[58]++, await prisma.documentoAtendente.findFirst({
      where: {
        atendenteId,
        tipo,
        ativo: true,
        ...(
        /* istanbul ignore next */
        (cov_10e14muget().b[15][0]++, documentoId) &&
        /* istanbul ignore next */
        (cov_10e14muget().b[15][1]++, {
          id: {
            not: documentoId
          }
        }))
      }
    }));
    /* istanbul ignore next */
    cov_10e14muget().s[59]++;
    return !documentoExistente;
  },
  /**
  * Formata informações do documento para exibição
  */
  formatarInfoDocumento: documento => {
    /* istanbul ignore next */
    cov_10e14muget().f[19]++;
    cov_10e14muget().s[60]++;
    return {
      id: documento.id,
      tipo: documento.tipo,
      nome: documento.nome,
      descricao: documento.descricao,
      tamanho: documento.tamanho ?
      /* istanbul ignore next */
      (cov_10e14muget().b[16][0]++, `${(documento.tamanho / 1024).toFixed(2)} KB`) :
      /* istanbul ignore next */
      (cov_10e14muget().b[16][1]++, null),
      versao: documento.versao,
      ativo: documento.ativo,
      criadoEm: documento.criadoEm,
      atualizadoEm: documento.atualizadoEm
    };
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,