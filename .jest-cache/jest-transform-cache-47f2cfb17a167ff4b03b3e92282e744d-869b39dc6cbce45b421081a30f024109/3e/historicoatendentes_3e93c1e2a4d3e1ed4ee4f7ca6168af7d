a0e190aef98c60e9615d87f4d814ed51
"use strict";

/* istanbul ignore next */
function cov_2n82wluqx4() {
  var path = "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\lib\\validations\\historico-atendentes.ts";
  var hash = "81a1f98b209dad2f55a6303b775eb643c58bfe42";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\lib\\validations\\historico-atendentes.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 48,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 39
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 40
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 37
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 44
        }
      },
      "8": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 39
        }
      },
      "9": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 36
        }
      },
      "10": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 43
        }
      },
      "11": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 33
        }
      },
      "12": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 37
        }
      },
      "13": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 35
        }
      },
      "14": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 34
        }
      },
      "15": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 45
        }
      },
      "16": {
        start: {
          line: 49,
          column: 13
        },
        end: {
          line: 49,
          column: 27
        }
      },
      "17": {
        start: {
          line: 50,
          column: 15
        },
        end: {
          line: 50,
          column: 33
        }
      },
      "18": {
        start: {
          line: 51,
          column: 26
        },
        end: {
          line: 51,
          column: 89
        }
      },
      "19": {
        start: {
          line: 52,
          column: 28
        },
        end: {
          line: 61,
          column: 2
        }
      },
      "20": {
        start: {
          line: 62,
          column: 29
        },
        end: {
          line: 71,
          column: 2
        }
      },
      "21": {
        start: {
          line: 72,
          column: 30
        },
        end: {
          line: 91,
          column: 2
        }
      },
      "22": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 87,
          column: 5
        }
      },
      "23": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 47
        }
      },
      "24": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 88,
          column: 16
        }
      },
      "25": {
        start: {
          line: 92,
          column: 30
        },
        end: {
          line: 104,
          column: 2
        }
      },
      "26": {
        start: {
          line: 105,
          column: 36
        },
        end: {
          line: 121,
          column: 2
        }
      },
      "27": {
        start: {
          line: 115,
          column: 4
        },
        end: {
          line: 117,
          column: 5
        }
      },
      "28": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 47
        }
      },
      "29": {
        start: {
          line: 118,
          column: 4
        },
        end: {
          line: 118,
          column: 16
        }
      },
      "30": {
        start: {
          line: 122,
          column: 37
        },
        end: {
          line: 140,
          column: 2
        }
      },
      "31": {
        start: {
          line: 132,
          column: 4
        },
        end: {
          line: 136,
          column: 5
        }
      },
      "32": {
        start: {
          line: 133,
          column: 23
        },
        end: {
          line: 133,
          column: 48
        }
      },
      "33": {
        start: {
          line: 134,
          column: 20
        },
        end: {
          line: 134,
          column: 42
        }
      },
      "34": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 135,
          column: 29
        }
      },
      "35": {
        start: {
          line: 137,
          column: 4
        },
        end: {
          line: 137,
          column: 16
        }
      },
      "36": {
        start: {
          line: 141,
          column: 32
        },
        end: {
          line: 157,
          column: 2
        }
      },
      "37": {
        start: {
          line: 149,
          column: 4
        },
        end: {
          line: 153,
          column: 5
        }
      },
      "38": {
        start: {
          line: 150,
          column: 23
        },
        end: {
          line: 150,
          column: 48
        }
      },
      "39": {
        start: {
          line: 151,
          column: 20
        },
        end: {
          line: 151,
          column: 42
        }
      },
      "40": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 152,
          column: 29
        }
      },
      "41": {
        start: {
          line: 154,
          column: 4
        },
        end: {
          line: 154,
          column: 16
        }
      },
      "42": {
        start: {
          line: 158,
          column: 33
        },
        end: {
          line: 170,
          column: 1
        }
      },
      "43": {
        start: {
          line: 171,
          column: 32
        },
        end: {
          line: 185,
          column: 1
        }
      },
      "44": {
        start: {
          line: 186,
          column: 27
        },
        end: {
          line: 286,
          column: 1
        }
      },
      "45": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 79
        }
      },
      "46": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 199,
          column: 9
        }
      },
      "47": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 50
        }
      },
      "48": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 198,
          column: 33
        }
      },
      "49": {
        start: {
          line: 204,
          column: 8
        },
        end: {
          line: 204,
          column: 49
        }
      },
      "50": {
        start: {
          line: 204,
          column: 37
        },
        end: {
          line: 204,
          column: 49
        }
      },
      "51": {
        start: {
          line: 205,
          column: 22
        },
        end: {
          line: 205,
          column: 32
        }
      },
      "52": {
        start: {
          line: 206,
          column: 27
        },
        end: {
          line: 206,
          column: 37
        }
      },
      "53": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 207,
          column: 56
        }
      },
      "54": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 209,
          column: 50
        }
      },
      "55": {
        start: {
          line: 209,
          column: 37
        },
        end: {
          line: 209,
          column: 50
        }
      },
      "56": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 211,
          column: 64
        }
      },
      "57": {
        start: {
          line: 211,
          column: 51
        },
        end: {
          line: 211,
          column: 64
        }
      },
      "58": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 212,
          column: 37
        }
      },
      "59": {
        start: {
          line: 217,
          column: 27
        },
        end: {
          line: 226,
          column: 9
        }
      },
      "60": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 227,
          column: 57
        }
      },
      "61": {
        start: {
          line: 233,
          column: 8
        },
        end: {
          line: 238,
          column: 9
        }
      },
      "62": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 237,
          column: 24
        }
      },
      "63": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 242,
          column: 9
        }
      },
      "64": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 241,
          column: 45
        }
      },
      "65": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 243,
          column: 21
        }
      },
      "66": {
        start: {
          line: 248,
          column: 29
        },
        end: {
          line: 248,
          column: 31
        }
      },
      "67": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 253,
          column: 11
        }
      },
      "68": {
        start: {
          line: 251,
          column: 25
        },
        end: {
          line: 251,
          column: 34
        }
      },
      "69": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 252,
          column: 63
        }
      },
      "70": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 254,
          column: 28
        }
      },
      "71": {
        start: {
          line: 259,
          column: 8
        },
        end: {
          line: 265,
          column: 9
        }
      },
      "72": {
        start: {
          line: 260,
          column: 12
        },
        end: {
          line: 264,
          column: 13
        }
      },
      "73": {
        start: {
          line: 261,
          column: 16
        },
        end: {
          line: 261,
          column: 42
        }
      },
      "74": {
        start: {
          line: 263,
          column: 16
        },
        end: {
          line: 263,
          column: 29
        }
      },
      "75": {
        start: {
          line: 266,
          column: 8
        },
        end: {
          line: 283,
          column: 9
        }
      },
      "76": {
        start: {
          line: 267,
          column: 37
        },
        end: {
          line: 269,
          column: 13
        }
      },
      "77": {
        start: {
          line: 271,
          column: 36
        },
        end: {
          line: 276,
          column: 13
        }
      },
      "78": {
        start: {
          line: 277,
          column: 12
        },
        end: {
          line: 281,
          column: 15
        }
      },
      "79": {
        start: {
          line: 278,
          column: 16
        },
        end: {
          line: 280,
          column: 17
        }
      },
      "80": {
        start: {
          line: 279,
          column: 20
        },
        end: {
          line: 279,
          column: 66
        }
      },
      "81": {
        start: {
          line: 282,
          column: 12
        },
        end: {
          line: 282,
          column: 36
        }
      },
      "82": {
        start: {
          line: 284,
          column: 8
        },
        end: {
          line: 284,
          column: 21
        }
      },
      "83": {
        start: {
          line: 287,
          column: 38
        },
        end: {
          line: 308,
          column: 1
        }
      },
      "84": {
        start: {
          line: 291,
          column: 22
        },
        end: {
          line: 291,
          column: 24
        }
      },
      "85": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 295,
          column: 9
        }
      },
      "86": {
        start: {
          line: 294,
          column: 12
        },
        end: {
          line: 294,
          column: 99
        }
      },
      "87": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 302,
          column: 9
        }
      },
      "88": {
        start: {
          line: 301,
          column: 12
        },
        end: {
          line: 301,
          column: 74
        }
      },
      "89": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 306,
          column: 10
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 35
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 36
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 33
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 40
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 35
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 32
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 39
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 29
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 33
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 36
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        loc: {
          start: {
            line: 39,
            column: 31
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 39
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        loc: {
          start: {
            line: 42,
            column: 30
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 42
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        loc: {
          start: {
            line: 45,
            column: 41
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 45
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 84,
            column: 10
          },
          end: {
            line: 84,
            column: 11
          }
        },
        loc: {
          start: {
            line: 84,
            column: 18
          },
          end: {
            line: 89,
            column: 1
          }
        },
        line: 84
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 114,
            column: 10
          },
          end: {
            line: 114,
            column: 11
          }
        },
        loc: {
          start: {
            line: 114,
            column: 18
          },
          end: {
            line: 119,
            column: 1
          }
        },
        line: 114
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 131,
            column: 10
          },
          end: {
            line: 131,
            column: 11
          }
        },
        loc: {
          start: {
            line: 131,
            column: 18
          },
          end: {
            line: 138,
            column: 1
          }
        },
        line: 131
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 148,
            column: 10
          },
          end: {
            line: 148,
            column: 11
          }
        },
        loc: {
          start: {
            line: 148,
            column: 18
          },
          end: {
            line: 155,
            column: 1
          }
        },
        line: 148
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 189,
            column: 26
          },
          end: {
            line: 189,
            column: 27
          }
        },
        loc: {
          start: {
            line: 189,
            column: 34
          },
          end: {
            line: 191,
            column: 5
          }
        },
        line: 189
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 194,
            column: 30
          },
          end: {
            line: 194,
            column: 31
          }
        },
        loc: {
          start: {
            line: 194,
            column: 39
          },
          end: {
            line: 200,
            column: 5
          }
        },
        line: 194
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 203,
            column: 30
          },
          end: {
            line: 203,
            column: 31
          }
        },
        loc: {
          start: {
            line: 203,
            column: 53
          },
          end: {
            line: 213,
            column: 5
          }
        },
        line: 203
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 216,
            column: 32
          },
          end: {
            line: 216,
            column: 33
          }
        },
        loc: {
          start: {
            line: 216,
            column: 73
          },
          end: {
            line: 228,
            column: 5
          }
        },
        line: 216
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 231,
            column: 28
          },
          end: {
            line: 231,
            column: 29
          }
        },
        loc: {
          start: {
            line: 231,
            column: 67
          },
          end: {
            line: 244,
            column: 5
          }
        },
        line: 231
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 247,
            column: 28
          },
          end: {
            line: 247,
            column: 29
          }
        },
        loc: {
          start: {
            line: 247,
            column: 41
          },
          end: {
            line: 255,
            column: 5
          }
        },
        line: 247
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 250,
            column: 26
          },
          end: {
            line: 250,
            column: 27
          }
        },
        loc: {
          start: {
            line: 250,
            column: 34
          },
          end: {
            line: 253,
            column: 9
          }
        },
        line: 250
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 258,
            column: 31
          },
          end: {
            line: 258,
            column: 32
          }
        },
        loc: {
          start: {
            line: 258,
            column: 40
          },
          end: {
            line: 285,
            column: 5
          }
        },
        line: 258
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 277,
            column: 36
          },
          end: {
            line: 277,
            column: 37
          }
        },
        loc: {
          start: {
            line: 277,
            column: 45
          },
          end: {
            line: 281,
            column: 13
          }
        },
        line: 277
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 290,
            column: 31
          },
          end: {
            line: 290,
            column: 32
          }
        },
        loc: {
          start: {
            line: 290,
            column: 40
          },
          end: {
            line: 307,
            column: 5
          }
        },
        line: 290
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 87,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 87,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "1": {
        loc: {
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 85,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 8
          },
          end: {
            line: 85,
            column: 23
          }
        }, {
          start: {
            line: 85,
            column: 27
          },
          end: {
            line: 85,
            column: 39
          }
        }],
        line: 85
      },
      "2": {
        loc: {
          start: {
            line: 115,
            column: 4
          },
          end: {
            line: 117,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 4
          },
          end: {
            line: 117,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "3": {
        loc: {
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 115,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 115,
            column: 23
          }
        }, {
          start: {
            line: 115,
            column: 27
          },
          end: {
            line: 115,
            column: 39
          }
        }],
        line: 115
      },
      "4": {
        loc: {
          start: {
            line: 132,
            column: 4
          },
          end: {
            line: 136,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 4
          },
          end: {
            line: 136,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 132
      },
      "5": {
        loc: {
          start: {
            line: 132,
            column: 8
          },
          end: {
            line: 132,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 132,
            column: 8
          },
          end: {
            line: 132,
            column: 23
          }
        }, {
          start: {
            line: 132,
            column: 27
          },
          end: {
            line: 132,
            column: 39
          }
        }],
        line: 132
      },
      "6": {
        loc: {
          start: {
            line: 149,
            column: 4
          },
          end: {
            line: 153,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 4
          },
          end: {
            line: 153,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 149
      },
      "7": {
        loc: {
          start: {
            line: 149,
            column: 8
          },
          end: {
            line: 149,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 149,
            column: 8
          },
          end: {
            line: 149,
            column: 23
          }
        }, {
          start: {
            line: 149,
            column: 27
          },
          end: {
            line: 149,
            column: 39
          }
        }],
        line: 149
      },
      "8": {
        loc: {
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 204,
            column: 49
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 8
          },
          end: {
            line: 204,
            column: 49
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 204
      },
      "9": {
        loc: {
          start: {
            line: 204,
            column: 12
          },
          end: {
            line: 204,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 204,
            column: 12
          },
          end: {
            line: 204,
            column: 23
          }
        }, {
          start: {
            line: 204,
            column: 27
          },
          end: {
            line: 204,
            column: 35
          }
        }],
        line: 204
      },
      "10": {
        loc: {
          start: {
            line: 209,
            column: 8
          },
          end: {
            line: 209,
            column: 50
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 209,
            column: 8
          },
          end: {
            line: 209,
            column: 50
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 209
      },
      "11": {
        loc: {
          start: {
            line: 211,
            column: 8
          },
          end: {
            line: 211,
            column: 64
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 211,
            column: 8
          },
          end: {
            line: 211,
            column: 64
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 211
      },
      "12": {
        loc: {
          start: {
            line: 211,
            column: 12
          },
          end: {
            line: 211,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 211,
            column: 12
          },
          end: {
            line: 211,
            column: 30
          }
        }, {
          start: {
            line: 211,
            column: 34
          },
          end: {
            line: 211,
            column: 49
          }
        }],
        line: 211
      },
      "13": {
        loc: {
          start: {
            line: 219,
            column: 25
          },
          end: {
            line: 219,
            column: 97
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 219,
            column: 33
          },
          end: {
            line: 219,
            column: 62
          }
        }, {
          start: {
            line: 219,
            column: 65
          },
          end: {
            line: 219,
            column: 97
          }
        }],
        line: 219
      },
      "14": {
        loc: {
          start: {
            line: 223,
            column: 46
          },
          end: {
            line: 223,
            column: 124
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 223,
            column: 75
          },
          end: {
            line: 223,
            column: 119
          }
        }, {
          start: {
            line: 223,
            column: 122
          },
          end: {
            line: 223,
            column: 124
          }
        }],
        line: 223
      },
      "15": {
        loc: {
          start: {
            line: 223,
            column: 46
          },
          end: {
            line: 223,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 223,
            column: 46
          },
          end: {
            line: 223,
            column: 59
          }
        }, {
          start: {
            line: 223,
            column: 63
          },
          end: {
            line: 223,
            column: 72
          }
        }],
        line: 223
      },
      "16": {
        loc: {
          start: {
            line: 227,
            column: 15
          },
          end: {
            line: 227,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 227,
            column: 15
          },
          end: {
            line: 227,
            column: 31
          }
        }, {
          start: {
            line: 227,
            column: 35
          },
          end: {
            line: 227,
            column: 56
          }
        }],
        line: 227
      },
      "17": {
        loc: {
          start: {
            line: 233,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 233,
            column: 8
          },
          end: {
            line: 238,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 233
      },
      "18": {
        loc: {
          start: {
            line: 240,
            column: 8
          },
          end: {
            line: 242,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 240,
            column: 8
          },
          end: {
            line: 242,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 240
      },
      "19": {
        loc: {
          start: {
            line: 252,
            column: 34
          },
          end: {
            line: 252,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 252,
            column: 34
          },
          end: {
            line: 252,
            column: 52
          }
        }, {
          start: {
            line: 252,
            column: 56
          },
          end: {
            line: 252,
            column: 57
          }
        }],
        line: 252
      },
      "20": {
        loc: {
          start: {
            line: 259,
            column: 8
          },
          end: {
            line: 265,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 259,
            column: 8
          },
          end: {
            line: 265,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 259
      },
      "21": {
        loc: {
          start: {
            line: 266,
            column: 8
          },
          end: {
            line: 283,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 266,
            column: 8
          },
          end: {
            line: 283,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 266
      },
      "22": {
        loc: {
          start: {
            line: 266,
            column: 12
          },
          end: {
            line: 266,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 266,
            column: 12
          },
          end: {
            line: 266,
            column: 37
          }
        }, {
          start: {
            line: 266,
            column: 41
          },
          end: {
            line: 266,
            column: 55
          }
        }],
        line: 266
      },
      "23": {
        loc: {
          start: {
            line: 278,
            column: 16
          },
          end: {
            line: 280,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 278,
            column: 16
          },
          end: {
            line: 280,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 278
      },
      "24": {
        loc: {
          start: {
            line: 293,
            column: 8
          },
          end: {
            line: 295,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 293,
            column: 8
          },
          end: {
            line: 295,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 293
      },
      "25": {
        loc: {
          start: {
            line: 293,
            column: 12
          },
          end: {
            line: 293,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 293,
            column: 12
          },
          end: {
            line: 293,
            column: 61
          }
        }, {
          start: {
            line: 293,
            column: 65
          },
          end: {
            line: 293,
            column: 92
          }
        }],
        line: 293
      },
      "26": {
        loc: {
          start: {
            line: 297,
            column: 8
          },
          end: {
            line: 302,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 297,
            column: 8
          },
          end: {
            line: 302,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 297
      },
      "27": {
        loc: {
          start: {
            line: 297,
            column: 12
          },
          end: {
            line: 300,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 297,
            column: 12
          },
          end: {
            line: 300,
            column: 30
          }
        }, {
          start: {
            line: 300,
            column: 34
          },
          end: {
            line: 300,
            column: 46
          }
        }],
        line: 297
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\lib\\validations\\historico-atendentes.ts"],
      sourcesContent: ["import { z } from 'zod';\nimport { validacaoUtils } from './index';\n\n/**\n * Schema para valida\xE7\xE3o de ID de hist\xF3rico\n */\nexport const idHistoricoSchema = z\n  .string()\n  .cuid('ID do hist\xF3rico deve ser um CUID v\xE1lido');\n\n/**\n * Schema para tipos de altera\xE7\xE3o no hist\xF3rico\n */\nexport const tipoAlteracaoSchema = z.enum([\n  'CRIACAO',\n  'ATUALIZACAO',\n  'EXCLUSAO',\n  'ATIVACAO',\n  'DESATIVACAO',\n  'MUDANCA_STATUS',\n  'UPLOAD_DOCUMENTO',\n  'REMOCAO_DOCUMENTO',\n]);\n\n/**\n * Schema para criar entrada no hist\xF3rico\n */\nexport const criarHistoricoSchema = z.object({\n  atendenteId: z.string().cuid('ID do atendente deve ser um CUID v\xE1lido'),\n  tipo: tipoAlteracaoSchema,\n  campo: z\n    .string()\n    .max(100, 'Campo deve ter no m\xE1ximo 100 caracteres')\n    .optional(),\n  valorAnterior: z\n    .string()\n    .max(2000, 'Valor anterior deve ter no m\xE1ximo 2000 caracteres')\n    .optional(),\n  valorNovo: z\n    .string()\n    .max(2000, 'Valor novo deve ter no m\xE1ximo 2000 caracteres')\n    .optional(),\n  descricao: z\n    .string()\n    .min(1, 'Descri\xE7\xE3o \xE9 obrigat\xF3ria')\n    .max(500, 'Descri\xE7\xE3o deve ter no m\xE1ximo 500 caracteres'),\n  ip: z.string().ip('IP deve ser v\xE1lido').optional(),\n  userAgent: z\n    .string()\n    .max(500, 'User Agent deve ter no m\xE1ximo 500 caracteres')\n    .optional(),\n});\n\n/**\n * Schema para listar hist\xF3rico com filtros\n */\nexport const listarHistoricoSchema = z\n  .object({\n    pagina: z\n      .number()\n      .int()\n      .positive('P\xE1gina deve ser um n\xFAmero positivo')\n      .default(1),\n    limite: z\n      .number()\n      .int()\n      .positive('Limite deve ser um n\xFAmero positivo')\n      .max(100, 'Limite m\xE1ximo \xE9 100')\n      .default(20),\n    tipo: tipoAlteracaoSchema.optional(),\n    campo: z\n      .string()\n      .max(100, 'Campo deve ter no m\xE1ximo 100 caracteres')\n      .optional(),\n    dataInicio: z.date('Data de in\xEDcio deve ser uma data v\xE1lida').optional(),\n    dataFim: z.date('Data de fim deve ser uma data v\xE1lida').optional(),\n    criadoPorId: z\n      .string()\n      .cuid('ID do usu\xE1rio deve ser um CUID v\xE1lido')\n      .optional(),\n    ordenacao: z.enum(['asc', 'desc']).default('desc'),\n  })\n  .refine(\n    data => {\n      if (data.dataInicio && data.dataFim) {\n        return data.dataInicio <= data.dataFim;\n      }\n      return true;\n    },\n    {\n      message: 'Data de in\xEDcio deve ser anterior ou igual \xE0 data de fim',\n    }\n  );\n\n/**\n * Schema para buscar no hist\xF3rico\n */\nexport const buscarHistoricoSchema = z.object({\n  termo: z\n    .string()\n    .min(1, 'Termo de busca \xE9 obrigat\xF3rio')\n    .max(100, 'Termo deve ter no m\xE1ximo 100 caracteres'),\n  campos: z\n    .array(z.enum(['descricao', 'campo', 'valorAnterior', 'valorNovo']))\n    .default(['descricao']),\n  pagina: z\n    .number()\n    .int()\n    .positive('P\xE1gina deve ser um n\xFAmero positivo')\n    .default(1),\n  limite: z\n    .number()\n    .int()\n    .positive('Limite deve ser um n\xFAmero positivo')\n    .max(50, 'Limite m\xE1ximo \xE9 50')\n    .default(10),\n});\n\n/**\n * Schema para estat\xEDsticas do hist\xF3rico\n */\nexport const estatisticasHistoricoSchema = z\n  .object({\n    dataInicio: z.date('Data de in\xEDcio deve ser uma data v\xE1lida').optional(),\n    dataFim: z.date('Data de fim deve ser uma data v\xE1lida').optional(),\n    agruparPor: z.enum(['tipo', 'campo', 'usuario', 'data']).default('tipo'),\n  })\n  .refine(\n    data => {\n      if (data.dataInicio && data.dataFim) {\n        return data.dataInicio <= data.dataFim;\n      }\n      return true;\n    },\n    {\n      message: 'Data de in\xEDcio deve ser anterior ou igual \xE0 data de fim',\n    }\n  );\n\n/**\n * Schema para consulta do hist\xF3rico geral de atendentes\n */\nexport const consultaHistoricoGeralSchema = z\n  .object({\n    pagina: validacaoUtils.paginaSchema,\n    limite: validacaoUtils.limiteSchema,\n    busca: z\n      .string()\n      .max(100, 'Busca deve ter no m\xE1ximo 100 caracteres')\n      .optional(),\n    atendenteId: z\n      .string()\n      .cuid('ID do atendente deve ser um CUID v\xE1lido')\n      .optional(),\n    tipo: tipoAlteracaoSchema.optional(),\n    dataInicio: z\n      .string()\n      .datetime('Data de in\xEDcio deve ser uma data v\xE1lida')\n      .optional(),\n    dataFim: z\n      .string()\n      .datetime('Data de fim deve ser uma data v\xE1lida')\n      .optional(),\n    criadoPorId: z\n      .string()\n      .cuid('ID do usu\xE1rio deve ser um CUID v\xE1lido')\n      .optional(),\n  })\n  .refine(\n    data => {\n      if (data.dataInicio && data.dataFim) {\n        const inicio = new Date(data.dataInicio);\n        const fim = new Date(data.dataFim);\n        return inicio <= fim;\n      }\n      return true;\n    },\n    {\n      message: 'Data de in\xEDcio deve ser anterior ou igual \xE0 data de fim',\n    }\n  );\n\n/**\n * Schema para consulta do hist\xF3rico individual de atendente\n */\nexport const consultaHistoricoSchema = z\n  .object({\n    pagina: validacaoUtils.paginaSchema,\n    limite: validacaoUtils.limiteSchema,\n    tipo: tipoAlteracaoSchema.optional(),\n    dataInicio: z\n      .string()\n      .datetime('Data de in\xEDcio deve ser uma data v\xE1lida')\n      .optional(),\n    dataFim: z\n      .string()\n      .datetime('Data de fim deve ser uma data v\xE1lida')\n      .optional(),\n    criadoPorId: z\n      .string()\n      .cuid('ID do usu\xE1rio deve ser um CUID v\xE1lido')\n      .optional(),\n  })\n  .refine(\n    data => {\n      if (data.dataInicio && data.dataFim) {\n        const inicio = new Date(data.dataInicio);\n        const fim = new Date(data.dataFim);\n        return inicio <= fim;\n      }\n      return true;\n    },\n    {\n      message: 'Data de in\xEDcio deve ser anterior ou igual \xE0 data de fim',\n    }\n  );\n\n/**\n * Tipos TypeScript derivados dos schemas\n */\nexport type TipoAlteracao = z.infer<typeof tipoAlteracaoSchema>;\nexport type CriarHistoricoInput = z.infer<typeof criarHistoricoSchema>;\nexport type ListarHistoricoInput = z.infer<typeof listarHistoricoSchema>;\nexport type BuscarHistoricoInput = z.infer<typeof buscarHistoricoSchema>;\nexport type EstatisticasHistoricoInput = z.infer<\n  typeof estatisticasHistoricoSchema\n>;\nexport type ConsultaHistoricoGeralInput = z.infer<\n  typeof consultaHistoricoGeralSchema\n>;\nexport type ConsultaHistoricoInput = z.infer<typeof consultaHistoricoSchema>;\n\n/**\n * Mensagens de erro espec\xEDficas para hist\xF3rico\n */\nexport const MENSAGENS_ERRO_HISTORICO = {\n  HISTORICO_NAO_ENCONTRADO: 'Hist\xF3rico n\xE3o encontrado',\n  ATENDENTE_NAO_ENCONTRADO: 'Atendente n\xE3o encontrado para o hist\xF3rico',\n  DADOS_INVALIDOS: 'Dados fornecidos s\xE3o inv\xE1lidos',\n  SEM_PERMISSAO: 'Sem permiss\xE3o para acessar o hist\xF3rico',\n  PERIODO_INVALIDO: 'Per\xEDodo de consulta inv\xE1lido',\n  LIMITE_EXCEDIDO: 'Limite de registros excedido',\n  ERRO_INTERNO: 'Erro interno do servidor',\n  CAMPO_OBRIGATORIO: 'Campo obrigat\xF3rio n\xE3o informado',\n  FORMATO_DATA_INVALIDO: 'Formato de data inv\xE1lido',\n  TERMO_BUSCA_MUITO_CURTO: 'Termo de busca deve ter pelo menos 1 caractere',\n  TERMO_BUSCA_MUITO_LONGO: 'Termo de busca deve ter no m\xE1ximo 100 caracteres',\n} as const;\n\n/**\n * Configura\xE7\xF5es para hist\xF3rico\n */\nexport const CONFIGURACOES_HISTORICO = {\n  LIMITE_MAXIMO_REGISTROS: 100,\n  LIMITE_PADRAO_REGISTROS: 20,\n  LIMITE_MAXIMO_BUSCA: 50,\n  LIMITE_PADRAO_BUSCA: 10,\n  TAMANHO_MAXIMO_DESCRICAO: 500,\n  TAMANHO_MAXIMO_CAMPO: 100,\n  TAMANHO_MAXIMO_VALOR: 2000,\n  TAMANHO_MAXIMO_USER_AGENT: 500,\n  DIAS_RETENCAO_HISTORICO: 365 * 2, // 2 anos\n  TIPOS_ALTERACAO_CRITICOS: ['EXCLUSAO', 'DESATIVACAO'] as TipoAlteracao[],\n} as const;\n\n/**\n * Utilit\xE1rios de valida\xE7\xE3o espec\xEDficos para hist\xF3rico\n */\nexport const validacaoHistorico = {\n  /**\n   * Valida se o tipo de altera\xE7\xE3o \xE9 cr\xEDtico\n   */\n  ehAlteracaoCritica: (tipo: TipoAlteracao): boolean => {\n    return CONFIGURACOES_HISTORICO.TIPOS_ALTERACAO_CRITICOS.includes(tipo);\n  },\n\n  /**\n   * Formata dados para o hist\xF3rico\n   */\n  formatarDadosHistorico: (dados: any): string => {\n    try {\n      return JSON.stringify(dados, null, 0);\n    } catch {\n      return String(dados);\n    }\n  },\n\n  /**\n   * Valida se o per\xEDodo de consulta \xE9 v\xE1lido\n   */\n  validarPeriodoConsulta: (dataInicio?: Date, dataFim?: Date): boolean => {\n    if (!dataInicio || !dataFim) return true;\n\n    const agora = new Date();\n    const umAnoAtras = new Date();\n    umAnoAtras.setFullYear(agora.getFullYear() - 1);\n\n    // N\xE3o permitir consultas muito antigas (mais de 1 ano)\n    if (dataInicio < umAnoAtras) return false;\n\n    // N\xE3o permitir datas futuras\n    if (dataInicio > agora || dataFim > agora) return false;\n\n    return dataInicio <= dataFim;\n  },\n\n  /**\n   * Gera descri\xE7\xE3o autom\xE1tica baseada no tipo de altera\xE7\xE3o\n   */\n  gerarDescricaoAutomatica: (\n    tipo: TipoAlteracao,\n    campo?: string,\n    valorAnterior?: string,\n    valorNovo?: string\n  ): string => {\n    const descricoes: Record<TipoAlteracao, string> = {\n      CRIACAO: 'Atendente criado no sistema',\n      ATUALIZACAO: campo\n        ? `Campo '${campo}' atualizado`\n        : 'Dados do atendente atualizados',\n      EXCLUSAO: 'Atendente removido do sistema',\n      ATIVACAO: 'Atendente ativado',\n      DESATIVACAO: 'Atendente desativado',\n      MUDANCA_STATUS: `Status alterado${valorAnterior && valorNovo ? ` de '${valorAnterior}' para '${valorNovo}'` : ''}`,\n      UPLOAD_DOCUMENTO: 'Documento adicionado',\n      REMOCAO_DOCUMENTO: 'Documento removido',\n    };\n\n    return descricoes[tipo] || 'Altera\xE7\xE3o realizada';\n  },\n\n  /**\n   * Valida se o usu\xE1rio pode acessar o hist\xF3rico\n   */\n  podeAcessarHistorico: (\n    tipoUsuario: string,\n    atendenteId: string,\n    usuarioId: string\n  ): boolean => {\n    // ADMIN e GERENTE podem ver qualquer hist\xF3rico\n    if (['ADMIN', 'GERENTE'].includes(tipoUsuario)) {\n      return true;\n    }\n\n    // ATENDENTE s\xF3 pode ver seu pr\xF3prio hist\xF3rico\n    if (tipoUsuario === 'ATENDENTE') {\n      return atendenteId === usuarioId;\n    }\n\n    return false;\n  },\n\n  /**\n   * Calcula estat\xEDsticas do hist\xF3rico\n   */\n  calcularEstatisticas: (historico: any[]): Record<string, number> => {\n    const estatisticas: Record<string, number> = {};\n\n    // Contar por tipo de altera\xE7\xE3o\n    historico.forEach(item => {\n      const tipo = item.tipo;\n      estatisticas[tipo] = (estatisticas[tipo] || 0) + 1;\n    });\n\n    return estatisticas;\n  },\n\n  /**\n   * Sanitiza dados sens\xEDveis do hist\xF3rico\n   */\n  sanitizarDadosHistorico: (dados: any): any => {\n    if (typeof dados === 'string') {\n      try {\n        dados = JSON.parse(dados);\n      } catch {\n        return dados;\n      }\n    }\n\n    if (typeof dados === 'object' && dados !== null) {\n      const dadosSanitizados = { ...dados };\n\n      // Remover campos sens\xEDveis\n      const camposSensiveis = ['senha', 'password', 'token', 'secret'];\n      camposSensiveis.forEach(campo => {\n        if (dadosSanitizados[campo]) {\n          dadosSanitizados[campo] = '[DADOS SENS\xCDVEIS]';\n        }\n      });\n\n      return dadosSanitizados;\n    }\n\n    return dados;\n  },\n};\n\n/**\n * Valida\xE7\xF5es customizadas para hist\xF3rico\n */\nexport const validacaoHistoricoCustomizada = {\n  /**\n   * Valida entrada de hist\xF3rico com regras de neg\xF3cio\n   */\n  validarEntradaHistorico: (\n    dados: CriarHistoricoInput\n  ): { valido: boolean; erros: string[] } => {\n    const erros: string[] = [];\n\n    // Validar se altera\xE7\xF5es cr\xEDticas t\xEAm descri\xE7\xE3o detalhada\n    if (\n      validacaoHistorico.ehAlteracaoCritica(dados.tipo) &&\n      dados.descricao.length < 20\n    ) {\n      erros.push(\n        'Altera\xE7\xF5es cr\xEDticas devem ter descri\xE7\xE3o detalhada (m\xEDnimo 20 caracteres)'\n      );\n    }\n\n    // Validar se campos obrigat\xF3rios est\xE3o presentes para certos tipos\n    if (\n      ['ATUALIZACAO', 'MUDANCA_STATUS'].includes(dados.tipo) &&\n      !dados.campo\n    ) {\n      erros.push('Campo \xE9 obrigat\xF3rio para este tipo de altera\xE7\xE3o');\n    }\n\n    return {\n      valido: erros.length === 0,\n      erros,\n    };\n  },\n};\n"],
      names: ["CONFIGURACOES_HISTORICO", "MENSAGENS_ERRO_HISTORICO", "buscarHistoricoSchema", "consultaHistoricoGeralSchema", "consultaHistoricoSchema", "criarHistoricoSchema", "estatisticasHistoricoSchema", "idHistoricoSchema", "listarHistoricoSchema", "tipoAlteracaoSchema", "validacaoHistorico", "validacaoHistoricoCustomizada", "z", "string", "cuid", "enum", "object", "atendenteId", "tipo", "campo", "max", "optional", "valorAnterior", "valorNovo", "descricao", "min", "ip", "userAgent", "pagina", "number", "int", "positive", "default", "limite", "dataInicio", "date", "dataFim", "criadoPorId", "ordenacao", "refine", "data", "message", "termo", "campos", "array", "agruparPor", "validacaoUtils", "paginaSchema", "limiteSchema", "busca", "datetime", "inicio", "Date", "fim", "HISTORICO_NAO_ENCONTRADO", "ATENDENTE_NAO_ENCONTRADO", "DADOS_INVALIDOS", "SEM_PERMISSAO", "PERIODO_INVALIDO", "LIMITE_EXCEDIDO", "ERRO_INTERNO", "CAMPO_OBRIGATORIO", "FORMATO_DATA_INVALIDO", "TERMO_BUSCA_MUITO_CURTO", "TERMO_BUSCA_MUITO_LONGO", "LIMITE_MAXIMO_REGISTROS", "LIMITE_PADRAO_REGISTROS", "LIMITE_MAXIMO_BUSCA", "LIMITE_PADRAO_BUSCA", "TAMANHO_MAXIMO_DESCRICAO", "TAMANHO_MAXIMO_CAMPO", "TAMANHO_MAXIMO_VALOR", "TAMANHO_MAXIMO_USER_AGENT", "DIAS_RETENCAO_HISTORICO", "TIPOS_ALTERACAO_CRITICOS", "ehAlteracaoCritica", "includes", "formatarDadosHistorico", "dados", "JSON", "stringify", "String", "validarPeriodoConsulta", "agora", "umAnoAtras", "setFullYear", "getFullYear", "gerarDescricaoAutomatica", "descricoes", "CRIACAO", "ATUALIZACAO", "EXCLUSAO", "ATIVACAO", "DESATIVACAO", "MUDANCA_STATUS", "UPLOAD_DOCUMENTO", "REMOCAO_DOCUMENTO", "podeAcessarHistorico", "tipoUsuario", "usuarioId", "calcularEstatisticas", "historico", "estatisticas", "forEach", "item", "sanitizarDadosHistorico", "parse", "dadosSanitizados", "camposSensiveis", "validarEntradaHistorico", "erros", "length", "push", "valido"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "81a1f98b209dad2f55a6303b775eb643c58bfe42"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2n82wluqx4 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2n82wluqx4();
cov_2n82wluqx4().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2n82wluqx4().f[0]++;
  cov_2n82wluqx4().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2n82wluqx4().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2n82wluqx4().s[3]++;
_export(exports, {
  get CONFIGURACOES_HISTORICO() {
    /* istanbul ignore next */
    cov_2n82wluqx4().f[1]++;
    cov_2n82wluqx4().s[4]++;
    return CONFIGURACOES_HISTORICO;
  },
  get MENSAGENS_ERRO_HISTORICO() {
    /* istanbul ignore next */
    cov_2n82wluqx4().f[2]++;
    cov_2n82wluqx4().s[5]++;
    return MENSAGENS_ERRO_HISTORICO;
  },
  get buscarHistoricoSchema() {
    /* istanbul ignore next */
    cov_2n82wluqx4().f[3]++;
    cov_2n82wluqx4().s[6]++;
    return buscarHistoricoSchema;
  },
  get consultaHistoricoGeralSchema() {
    /* istanbul ignore next */
    cov_2n82wluqx4().f[4]++;
    cov_2n82wluqx4().s[7]++;
    return consultaHistoricoGeralSchema;
  },
  get consultaHistoricoSchema() {
    /* istanbul ignore next */
    cov_2n82wluqx4().f[5]++;
    cov_2n82wluqx4().s[8]++;
    return consultaHistoricoSchema;
  },
  get criarHistoricoSchema() {
    /* istanbul ignore next */
    cov_2n82wluqx4().f[6]++;
    cov_2n82wluqx4().s[9]++;
    return criarHistoricoSchema;
  },
  get estatisticasHistoricoSchema() {
    /* istanbul ignore next */
    cov_2n82wluqx4().f[7]++;
    cov_2n82wluqx4().s[10]++;
    return estatisticasHistoricoSchema;
  },
  get idHistoricoSchema() {
    /* istanbul ignore next */
    cov_2n82wluqx4().f[8]++;
    cov_2n82wluqx4().s[11]++;
    return idHistoricoSchema;
  },
  get listarHistoricoSchema() {
    /* istanbul ignore next */
    cov_2n82wluqx4().f[9]++;
    cov_2n82wluqx4().s[12]++;
    return listarHistoricoSchema;
  },
  get tipoAlteracaoSchema() {
    /* istanbul ignore next */
    cov_2n82wluqx4().f[10]++;
    cov_2n82wluqx4().s[13]++;
    return tipoAlteracaoSchema;
  },
  get validacaoHistorico() {
    /* istanbul ignore next */
    cov_2n82wluqx4().f[11]++;
    cov_2n82wluqx4().s[14]++;
    return validacaoHistorico;
  },
  get validacaoHistoricoCustomizada() {
    /* istanbul ignore next */
    cov_2n82wluqx4().f[12]++;
    cov_2n82wluqx4().s[15]++;
    return validacaoHistoricoCustomizada;
  }
});
const _zod =
/* istanbul ignore next */
(cov_2n82wluqx4().s[16]++, require("zod"));
const _index =
/* istanbul ignore next */
(cov_2n82wluqx4().s[17]++, require("./index"));
const idHistoricoSchema =
/* istanbul ignore next */
(cov_2n82wluqx4().s[18]++, _zod.z.string().cuid('ID do histórico deve ser um CUID válido'));
const tipoAlteracaoSchema =
/* istanbul ignore next */
(cov_2n82wluqx4().s[19]++, _zod.z.enum(['CRIACAO', 'ATUALIZACAO', 'EXCLUSAO', 'ATIVACAO', 'DESATIVACAO', 'MUDANCA_STATUS', 'UPLOAD_DOCUMENTO', 'REMOCAO_DOCUMENTO']));
const criarHistoricoSchema =
/* istanbul ignore next */
(cov_2n82wluqx4().s[20]++, _zod.z.object({
  atendenteId: _zod.z.string().cuid('ID do atendente deve ser um CUID válido'),
  tipo: tipoAlteracaoSchema,
  campo: _zod.z.string().max(100, 'Campo deve ter no máximo 100 caracteres').optional(),
  valorAnterior: _zod.z.string().max(2000, 'Valor anterior deve ter no máximo 2000 caracteres').optional(),
  valorNovo: _zod.z.string().max(2000, 'Valor novo deve ter no máximo 2000 caracteres').optional(),
  descricao: _zod.z.string().min(1, 'Descrição é obrigatória').max(500, 'Descrição deve ter no máximo 500 caracteres'),
  ip: _zod.z.string().ip('IP deve ser válido').optional(),
  userAgent: _zod.z.string().max(500, 'User Agent deve ter no máximo 500 caracteres').optional()
}));
const listarHistoricoSchema =
/* istanbul ignore next */
(cov_2n82wluqx4().s[21]++, _zod.z.object({
  pagina: _zod.z.number().int().positive('Página deve ser um número positivo').default(1),
  limite: _zod.z.number().int().positive('Limite deve ser um número positivo').max(100, 'Limite máximo é 100').default(20),
  tipo: tipoAlteracaoSchema.optional(),
  campo: _zod.z.string().max(100, 'Campo deve ter no máximo 100 caracteres').optional(),
  dataInicio: _zod.z.date('Data de início deve ser uma data válida').optional(),
  dataFim: _zod.z.date('Data de fim deve ser uma data válida').optional(),
  criadoPorId: _zod.z.string().cuid('ID do usuário deve ser um CUID válido').optional(),
  ordenacao: _zod.z.enum(['asc', 'desc']).default('desc')
}).refine(data => {
  /* istanbul ignore next */
  cov_2n82wluqx4().f[13]++;
  cov_2n82wluqx4().s[22]++;
  if (
  /* istanbul ignore next */
  (cov_2n82wluqx4().b[1][0]++, data.dataInicio) &&
  /* istanbul ignore next */
  (cov_2n82wluqx4().b[1][1]++, data.dataFim)) {
    /* istanbul ignore next */
    cov_2n82wluqx4().b[0][0]++;
    cov_2n82wluqx4().s[23]++;
    return data.dataInicio <= data.dataFim;
  } else
  /* istanbul ignore next */
  {
    cov_2n82wluqx4().b[0][1]++;
  }
  cov_2n82wluqx4().s[24]++;
  return true;
}, {
  message: 'Data de início deve ser anterior ou igual à data de fim'
}));
const buscarHistoricoSchema =
/* istanbul ignore next */
(cov_2n82wluqx4().s[25]++, _zod.z.object({
  termo: _zod.z.string().min(1, 'Termo de busca é obrigatório').max(100, 'Termo deve ter no máximo 100 caracteres'),
  campos: _zod.z.array(_zod.z.enum(['descricao', 'campo', 'valorAnterior', 'valorNovo'])).default(['descricao']),
  pagina: _zod.z.number().int().positive('Página deve ser um número positivo').default(1),
  limite: _zod.z.number().int().positive('Limite deve ser um número positivo').max(50, 'Limite máximo é 50').default(10)
}));
const estatisticasHistoricoSchema =
/* istanbul ignore next */
(cov_2n82wluqx4().s[26]++, _zod.z.object({
  dataInicio: _zod.z.date('Data de início deve ser uma data válida').optional(),
  dataFim: _zod.z.date('Data de fim deve ser uma data válida').optional(),
  agruparPor: _zod.z.enum(['tipo', 'campo', 'usuario', 'data']).default('tipo')
}).refine(data => {
  /* istanbul ignore next */
  cov_2n82wluqx4().f[14]++;
  cov_2n82wluqx4().s[27]++;
  if (
  /* istanbul ignore next */
  (cov_2n82wluqx4().b[3][0]++, data.dataInicio) &&
  /* istanbul ignore next */
  (cov_2n82wluqx4().b[3][1]++, data.dataFim)) {
    /* istanbul ignore next */
    cov_2n82wluqx4().b[2][0]++;
    cov_2n82wluqx4().s[28]++;
    return data.dataInicio <= data.dataFim;
  } else
  /* istanbul ignore next */
  {
    cov_2n82wluqx4().b[2][1]++;
  }
  cov_2n82wluqx4().s[29]++;
  return true;
}, {
  message: 'Data de início deve ser anterior ou igual à data de fim'
}));
const consultaHistoricoGeralSchema =
/* istanbul ignore next */
(cov_2n82wluqx4().s[30]++, _zod.z.object({
  pagina: _index.validacaoUtils.paginaSchema,
  limite: _index.validacaoUtils.limiteSchema,
  busca: _zod.z.string().max(100, 'Busca deve ter no máximo 100 caracteres').optional(),
  atendenteId: _zod.z.string().cuid('ID do atendente deve ser um CUID válido').optional(),
  tipo: tipoAlteracaoSchema.optional(),
  dataInicio: _zod.z.string().datetime('Data de início deve ser uma data válida').optional(),
  dataFim: _zod.z.string().datetime('Data de fim deve ser uma data válida').optional(),
  criadoPorId: _zod.z.string().cuid('ID do usuário deve ser um CUID válido').optional()
}).refine(data => {
  /* istanbul ignore next */
  cov_2n82wluqx4().f[15]++;
  cov_2n82wluqx4().s[31]++;
  if (
  /* istanbul ignore next */
  (cov_2n82wluqx4().b[5][0]++, data.dataInicio) &&
  /* istanbul ignore next */
  (cov_2n82wluqx4().b[5][1]++, data.dataFim)) {
    /* istanbul ignore next */
    cov_2n82wluqx4().b[4][0]++;
    const inicio =
    /* istanbul ignore next */
    (cov_2n82wluqx4().s[32]++, new Date(data.dataInicio));
    const fim =
    /* istanbul ignore next */
    (cov_2n82wluqx4().s[33]++, new Date(data.dataFim));
    /* istanbul ignore next */
    cov_2n82wluqx4().s[34]++;
    return inicio <= fim;
  } else
  /* istanbul ignore next */
  {
    cov_2n82wluqx4().b[4][1]++;
  }
  cov_2n82wluqx4().s[35]++;
  return true;
}, {
  message: 'Data de início deve ser anterior ou igual à data de fim'
}));
const consultaHistoricoSchema =
/* istanbul ignore next */
(cov_2n82wluqx4().s[36]++, _zod.z.object({
  pagina: _index.validacaoUtils.paginaSchema,
  limite: _index.validacaoUtils.limiteSchema,
  tipo: tipoAlteracaoSchema.optional(),
  dataInicio: _zod.z.string().datetime('Data de início deve ser uma data válida').optional(),
  dataFim: _zod.z.string().datetime('Data de fim deve ser uma data válida').optional(),
  criadoPorId: _zod.z.string().cuid('ID do usuário deve ser um CUID válido').optional()
}).refine(data => {
  /* istanbul ignore next */
  cov_2n82wluqx4().f[16]++;
  cov_2n82wluqx4().s[37]++;
  if (
  /* istanbul ignore next */
  (cov_2n82wluqx4().b[7][0]++, data.dataInicio) &&
  /* istanbul ignore next */
  (cov_2n82wluqx4().b[7][1]++, data.dataFim)) {
    /* istanbul ignore next */
    cov_2n82wluqx4().b[6][0]++;
    const inicio =
    /* istanbul ignore next */
    (cov_2n82wluqx4().s[38]++, new Date(data.dataInicio));
    const fim =
    /* istanbul ignore next */
    (cov_2n82wluqx4().s[39]++, new Date(data.dataFim));
    /* istanbul ignore next */
    cov_2n82wluqx4().s[40]++;
    return inicio <= fim;
  } else
  /* istanbul ignore next */
  {
    cov_2n82wluqx4().b[6][1]++;
  }
  cov_2n82wluqx4().s[41]++;
  return true;
}, {
  message: 'Data de início deve ser anterior ou igual à data de fim'
}));
const MENSAGENS_ERRO_HISTORICO =
/* istanbul ignore next */
(cov_2n82wluqx4().s[42]++, {
  HISTORICO_NAO_ENCONTRADO: 'Histórico não encontrado',
  ATENDENTE_NAO_ENCONTRADO: 'Atendente não encontrado para o histórico',
  DADOS_INVALIDOS: 'Dados fornecidos são inválidos',
  SEM_PERMISSAO: 'Sem permissão para acessar o histórico',
  PERIODO_INVALIDO: 'Período de consulta inválido',
  LIMITE_EXCEDIDO: 'Limite de registros excedido',
  ERRO_INTERNO: 'Erro interno do servidor',
  CAMPO_OBRIGATORIO: 'Campo obrigatório não informado',
  FORMATO_DATA_INVALIDO: 'Formato de data inválido',
  TERMO_BUSCA_MUITO_CURTO: 'Termo de busca deve ter pelo menos 1 caractere',
  TERMO_BUSCA_MUITO_LONGO: 'Termo de busca deve ter no máximo 100 caracteres'
});
const CONFIGURACOES_HISTORICO =
/* istanbul ignore next */
(cov_2n82wluqx4().s[43]++, {
  LIMITE_MAXIMO_REGISTROS: 100,
  LIMITE_PADRAO_REGISTROS: 20,
  LIMITE_MAXIMO_BUSCA: 50,
  LIMITE_PADRAO_BUSCA: 10,
  TAMANHO_MAXIMO_DESCRICAO: 500,
  TAMANHO_MAXIMO_CAMPO: 100,
  TAMANHO_MAXIMO_VALOR: 2000,
  TAMANHO_MAXIMO_USER_AGENT: 500,
  DIAS_RETENCAO_HISTORICO: 365 * 2,
  TIPOS_ALTERACAO_CRITICOS: ['EXCLUSAO', 'DESATIVACAO']
});
const validacaoHistorico =
/* istanbul ignore next */
(cov_2n82wluqx4().s[44]++, {
  /**
  * Valida se o tipo de alteração é crítico
  */
  ehAlteracaoCritica: tipo => {
    /* istanbul ignore next */
    cov_2n82wluqx4().f[17]++;
    cov_2n82wluqx4().s[45]++;
    return CONFIGURACOES_HISTORICO.TIPOS_ALTERACAO_CRITICOS.includes(tipo);
  },
  /**
  * Formata dados para o histórico
  */
  formatarDadosHistorico: dados => {
    /* istanbul ignore next */
    cov_2n82wluqx4().f[18]++;
    cov_2n82wluqx4().s[46]++;
    try {
      /* istanbul ignore next */
      cov_2n82wluqx4().s[47]++;
      return JSON.stringify(dados, null, 0);
    } catch {
      /* istanbul ignore next */
      cov_2n82wluqx4().s[48]++;
      return String(dados);
    }
  },
  /**
  * Valida se o período de consulta é válido
  */
  validarPeriodoConsulta: (dataInicio, dataFim) => {
    /* istanbul ignore next */
    cov_2n82wluqx4().f[19]++;
    cov_2n82wluqx4().s[49]++;
    if (
    /* istanbul ignore next */
    (cov_2n82wluqx4().b[9][0]++, !dataInicio) ||
    /* istanbul ignore next */
    (cov_2n82wluqx4().b[9][1]++, !dataFim)) {
      /* istanbul ignore next */
      cov_2n82wluqx4().b[8][0]++;
      cov_2n82wluqx4().s[50]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_2n82wluqx4().b[8][1]++;
    }
    const agora =
    /* istanbul ignore next */
    (cov_2n82wluqx4().s[51]++, new Date());
    const umAnoAtras =
    /* istanbul ignore next */
    (cov_2n82wluqx4().s[52]++, new Date());
    /* istanbul ignore next */
    cov_2n82wluqx4().s[53]++;
    umAnoAtras.setFullYear(agora.getFullYear() - 1);
    // Não permitir consultas muito antigas (mais de 1 ano)
    /* istanbul ignore next */
    cov_2n82wluqx4().s[54]++;
    if (dataInicio < umAnoAtras) {
      /* istanbul ignore next */
      cov_2n82wluqx4().b[10][0]++;
      cov_2n82wluqx4().s[55]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_2n82wluqx4().b[10][1]++;
    }
    // Não permitir datas futuras
    cov_2n82wluqx4().s[56]++;
    if (
    /* istanbul ignore next */
    (cov_2n82wluqx4().b[12][0]++, dataInicio > agora) ||
    /* istanbul ignore next */
    (cov_2n82wluqx4().b[12][1]++, dataFim > agora)) {
      /* istanbul ignore next */
      cov_2n82wluqx4().b[11][0]++;
      cov_2n82wluqx4().s[57]++;
      return false;
    } else
    /* istanbul ignore next */
    {
      cov_2n82wluqx4().b[11][1]++;
    }
    cov_2n82wluqx4().s[58]++;
    return dataInicio <= dataFim;
  },
  /**
  * Gera descrição automática baseada no tipo de alteração
  */
  gerarDescricaoAutomatica: (tipo, campo, valorAnterior, valorNovo) => {
    /* istanbul ignore next */
    cov_2n82wluqx4().f[20]++;
    const descricoes =
    /* istanbul ignore next */
    (cov_2n82wluqx4().s[59]++, {
      CRIACAO: 'Atendente criado no sistema',
      ATUALIZACAO: campo ?
      /* istanbul ignore next */
      (cov_2n82wluqx4().b[13][0]++, `Campo '${campo}' atualizado`) :
      /* istanbul ignore next */
      (cov_2n82wluqx4().b[13][1]++, 'Dados do atendente atualizados'),
      EXCLUSAO: 'Atendente removido do sistema',
      ATIVACAO: 'Atendente ativado',
      DESATIVACAO: 'Atendente desativado',
      MUDANCA_STATUS: `Status alterado${
      /* istanbul ignore next */
      (cov_2n82wluqx4().b[15][0]++, valorAnterior) &&
      /* istanbul ignore next */
      (cov_2n82wluqx4().b[15][1]++, valorNovo) ?
      /* istanbul ignore next */
      (cov_2n82wluqx4().b[14][0]++, ` de '${valorAnterior}' para '${valorNovo}'`) :
      /* istanbul ignore next */
      (cov_2n82wluqx4().b[14][1]++, '')}`,
      UPLOAD_DOCUMENTO: 'Documento adicionado',
      REMOCAO_DOCUMENTO: 'Documento removido'
    });
    /* istanbul ignore next */
    cov_2n82wluqx4().s[60]++;
    return /* istanbul ignore next */(cov_2n82wluqx4().b[16][0]++, descricoes[tipo]) ||
    /* istanbul ignore next */
    (cov_2n82wluqx4().b[16][1]++, 'Alteração realizada');
  },
  /**
  * Valida se o usuário pode acessar o histórico
  */
  podeAcessarHistorico: (tipoUsuario, atendenteId, usuarioId) => {
    /* istanbul ignore next */
    cov_2n82wluqx4().f[21]++;
    cov_2n82wluqx4().s[61]++;
    // ADMIN e GERENTE podem ver qualquer histórico
    if (['ADMIN', 'GERENTE'].includes(tipoUsuario)) {
      /* istanbul ignore next */
      cov_2n82wluqx4().b[17][0]++;
      cov_2n82wluqx4().s[62]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_2n82wluqx4().b[17][1]++;
    }
    // ATENDENTE só pode ver seu próprio histórico
    cov_2n82wluqx4().s[63]++;
    if (tipoUsuario === 'ATENDENTE') {
      /* istanbul ignore next */
      cov_2n82wluqx4().b[18][0]++;
      cov_2n82wluqx4().s[64]++;
      return atendenteId === usuarioId;
    } else
    /* istanbul ignore next */
    {
      cov_2n82wluqx4().b[18][1]++;
    }
    cov_2n82wluqx4().s[65]++;
    return false;
  },
  /**
  * Calcula estatísticas do histórico
  */
  calcularEstatisticas: historico => {
    /* istanbul ignore next */
    cov_2n82wluqx4().f[22]++;
    const estatisticas =
    /* istanbul ignore next */
    (cov_2n82wluqx4().s[66]++, {});
    // Contar por tipo de alteração
    /* istanbul ignore next */
    cov_2n82wluqx4().s[67]++;
    historico.forEach(item => {
      /* istanbul ignore next */
      cov_2n82wluqx4().f[23]++;
      const tipo =
      /* istanbul ignore next */
      (cov_2n82wluqx4().s[68]++, item.tipo);
      /* istanbul ignore next */
      cov_2n82wluqx4().s[69]++;
      estatisticas[tipo] = (
      /* istanbul ignore next */
      (cov_2n82wluqx4().b[19][0]++, estatisticas[tipo]) ||
      /* istanbul ignore next */
      (cov_2n82wluqx4().b[19][1]++, 0)) + 1;
    });
    /* istanbul ignore next */
    cov_2n82wluqx4().s[70]++;
    return estatisticas;
  },
  /**
  * Sanitiza dados sensíveis do histórico
  */
  sanitizarDadosHistorico: dados => {
    /* istanbul ignore next */
    cov_2n82wluqx4().f[24]++;
    cov_2n82wluqx4().s[71]++;
    if (typeof dados === 'string') {
      /* istanbul ignore next */
      cov_2n82wluqx4().b[20][0]++;
      cov_2n82wluqx4().s[72]++;
      try {
        /* istanbul ignore next */
        cov_2n82wluqx4().s[73]++;
        dados = JSON.parse(dados);
      } catch {
        /* istanbul ignore next */
        cov_2n82wluqx4().s[74]++;
        return dados;
      }
    } else
    /* istanbul ignore next */
    {
      cov_2n82wluqx4().b[20][1]++;
    }
    cov_2n82wluqx4().s[75]++;
    if (
    /* istanbul ignore next */
    (cov_2n82wluqx4().b[22][0]++, typeof dados === 'object') &&
    /* istanbul ignore next */
    (cov_2n82wluqx4().b[22][1]++, dados !== null)) {
      /* istanbul ignore next */
      cov_2n82wluqx4().b[21][0]++;
      const dadosSanitizados =
      /* istanbul ignore next */
      (cov_2n82wluqx4().s[76]++, {
        ...dados
      });
      // Remover campos sensíveis
      const camposSensiveis =
      /* istanbul ignore next */
      (cov_2n82wluqx4().s[77]++, ['senha', 'password', 'token', 'secret']);
      /* istanbul ignore next */
      cov_2n82wluqx4().s[78]++;
      camposSensiveis.forEach(campo => {
        /* istanbul ignore next */
        cov_2n82wluqx4().f[25]++;
        cov_2n82wluqx4().s[79]++;
        if (dadosSanitizados[campo]) {
          /* istanbul ignore next */
          cov_2n82wluqx4().b[23][0]++;
          cov_2n82wluqx4().s[80]++;
          dadosSanitizados[campo] = '[DADOS SENSÍVEIS]';
        } else
        /* istanbul ignore next */
        {
          cov_2n82wluqx4().b[23][1]++;
        }
      });
      /* istanbul ignore next */
      cov_2n82wluqx4().s[81]++;
      return dadosSanitizados;
    } else
    /* istanbul ignore next */
    {
      cov_2n82wluqx4().b[21][1]++;
    }
    cov_2n82wluqx4().s[82]++;
    return dados;
  }
});
const validacaoHistoricoCustomizada =
/* istanbul ignore next */
(cov_2n82wluqx4().s[83]++, {
  /**
  * Valida entrada de histórico com regras de negócio
  */
  validarEntradaHistorico: dados => {
    /* istanbul ignore next */
    cov_2n82wluqx4().f[26]++;
    const erros =
    /* istanbul ignore next */
    (cov_2n82wluqx4().s[84]++, []);
    // Validar se alterações críticas têm descrição detalhada
    /* istanbul ignore next */
    cov_2n82wluqx4().s[85]++;
    if (
    /* istanbul ignore next */
    (cov_2n82wluqx4().b[25][0]++, validacaoHistorico.ehAlteracaoCritica(dados.tipo)) &&
    /* istanbul ignore next */
    (cov_2n82wluqx4().b[25][1]++, dados.descricao.length < 20)) {
      /* istanbul ignore next */
      cov_2n82wluqx4().b[24][0]++;
      cov_2n82wluqx4().s[86]++;
      erros.push('Alterações críticas devem ter descrição detalhada (mínimo 20 caracteres)');
    } else
    /* istanbul ignore next */
    {
      cov_2n82wluqx4().b[24][1]++;
    }
    // Validar se campos obrigatórios estão presentes para certos tipos
    cov_2n82wluqx4().s[87]++;
    if (
    /* istanbul ignore next */
    (cov_2n82wluqx4().b[27][0]++, ['ATUALIZACAO', 'MUDANCA_STATUS'].includes(dados.tipo)) &&
    /* istanbul ignore next */
    (cov_2n82wluqx4().b[27][1]++, !dados.campo)) {
      /* istanbul ignore next */
      cov_2n82wluqx4().b[26][0]++;
      cov_2n82wluqx4().s[88]++;
      erros.push('Campo é obrigatório para este tipo de alteração');
    } else
    /* istanbul ignore next */
    {
      cov_2n82wluqx4().b[26][1]++;
    }
    cov_2n82wluqx4().s[89]++;
    return {
      valido: erros.length === 0,
      erros
    };
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,