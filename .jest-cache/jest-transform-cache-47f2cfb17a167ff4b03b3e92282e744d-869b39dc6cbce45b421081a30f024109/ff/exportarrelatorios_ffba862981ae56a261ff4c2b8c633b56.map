{"version":3,"sources":["C:\\Users\\Nereu Jr\\Documents\\Dev\\new\\src\\components\\metricas\\exportar-relatorios.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Label } from '@/components/ui/label';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Badge } from '@/components/ui/badge';\nimport {\n  Download,\n  FileText,\n  FileSpreadsheet,\n  FileImage,\n  Loader2,\n  Settings,\n  Calendar,\n  Users,\n  BarChart3,\n  CheckCircle,\n} from 'lucide-react';\nimport { cn } from '@/lib/utils';\nimport { FiltrosPeriodo } from './filtros-periodo';\n\n/**\n * Tipos de exportação disponíveis\n */\nexport type TipoExportacao = 'pdf' | 'excel' | 'csv' | 'png' | 'jpeg';\n\n/**\n * Interface para configurações de exportação\n */\nexport interface ConfiguracaoExportacao {\n  tipo: TipoExportacao;\n  incluirGraficos: boolean;\n  incluirTabelas: boolean;\n  incluirResumo: boolean;\n  incluirDetalhes: boolean;\n  nomeArquivo?: string;\n  observacoes?: string;\n  formatoData?: 'dd/mm/yyyy' | 'yyyy-mm-dd' | 'mm/dd/yyyy';\n  idioma?: 'pt-BR' | 'en-US';\n}\n\n/**\n * Interface para dados a serem exportados\n */\nexport interface DadosExportacao {\n  filtros: FiltrosPeriodo;\n  metricas: any;\n  graficos?: any[];\n  tabelas?: any[];\n  resumo?: any;\n}\n\n/**\n * Props do componente\n */\ninterface ExportarRelatoriosProps {\n  dados: DadosExportacao;\n  onExportar: (configuracao: ConfiguracaoExportacao) => Promise<void>;\n  carregando?: boolean;\n  className?: string;\n}\n\n/**\n * Tipos de exportação com suas configurações\n */\nconst TIPOS_EXPORTACAO = [\n  {\n    tipo: 'pdf' as TipoExportacao,\n    nome: 'PDF',\n    descricao: 'Documento portátil com formatação completa',\n    icone: <FileText className=\"h-4 w-4\" />,\n    extensao: '.pdf',\n    suportaGraficos: true,\n    suportaTabelas: true,\n    tamanhoEstimado: 'Médio',\n  },\n  {\n    tipo: 'excel' as TipoExportacao,\n    nome: 'Excel',\n    descricao: 'Planilha com dados estruturados',\n    icone: <FileSpreadsheet className=\"h-4 w-4\" />,\n    extensao: '.xlsx',\n    suportaGraficos: true,\n    suportaTabelas: true,\n    tamanhoEstimado: 'Pequeno',\n  },\n  {\n    tipo: 'csv' as TipoExportacao,\n    nome: 'CSV',\n    descricao: 'Dados tabulares simples',\n    icone: <FileText className=\"h-4 w-4\" />,\n    extensao: '.csv',\n    suportaGraficos: false,\n    suportaTabelas: true,\n    tamanhoEstimado: 'Muito pequeno',\n  },\n  {\n    tipo: 'png' as TipoExportacao,\n    nome: 'PNG',\n    descricao: 'Imagem dos gráficos',\n    icone: <FileImage className=\"h-4 w-4\" />,\n    extensao: '.png',\n    suportaGraficos: true,\n    suportaTabelas: false,\n    tamanhoEstimado: 'Médio',\n  },\n  {\n    tipo: 'jpeg' as TipoExportacao,\n    nome: 'JPEG',\n    descricao: 'Imagem comprimida dos gráficos',\n    icone: <FileImage className=\"h-4 w-4\" />,\n    extensao: '.jpg',\n    suportaGraficos: true,\n    suportaTabelas: false,\n    tamanhoEstimado: 'Pequeno',\n  },\n];\n\n/**\n * Componente principal para exportação de relatórios\n */\nexport function ExportarRelatorios({\n  dados,\n  onExportar,\n  carregando = false,\n  className,\n}: ExportarRelatoriosProps) {\n  const [configuracao, setConfiguracao] = useState<ConfiguracaoExportacao>({\n    tipo: 'pdf',\n    incluirGraficos: true,\n    incluirTabelas: true,\n    incluirResumo: true,\n    incluirDetalhes: false,\n    formatoData: 'dd/mm/yyyy',\n    idioma: 'pt-BR',\n  });\n\n  const [mostrarConfiguracoes, setMostrarConfiguracoes] = useState(false);\n\n  // Obter configurações do tipo selecionado\n  const tipoSelecionado = TIPOS_EXPORTACAO.find(\n    t => t.tipo === configuracao.tipo\n  );\n\n  // Função para atualizar configuração\n  const atualizarConfiguracao = (\n    campo: keyof ConfiguracaoExportacao,\n    valor: any\n  ) => {\n    setConfiguracao(prev => ({ ...prev, [campo]: valor }));\n  };\n\n  // Função para gerar nome do arquivo automaticamente\n  const gerarNomeArquivo = () => {\n    const agora = new Date();\n    const data = agora.toISOString().split('T')[0].replace(/-/g, '');\n    const hora = agora.toTimeString().split(':').slice(0, 2).join('');\n    return `relatorio-atendentes-${data}-${hora}`;\n  };\n\n  // Função para executar exportação\n  const handleExportar = async () => {\n    const config = {\n      ...configuracao,\n      nomeArquivo: configuracao.nomeArquivo || gerarNomeArquivo(),\n    };\n\n    await onExportar(config);\n  };\n\n  // Calcular estimativa de conteúdo\n  const estimarConteudo = () => {\n    let itens = 0;\n    if (configuracao.incluirResumo) itens++;\n    if (configuracao.incluirGraficos && tipoSelecionado?.suportaGraficos)\n      itens += dados.graficos?.length || 3;\n    if (configuracao.incluirTabelas && tipoSelecionado?.suportaTabelas)\n      itens += dados.tabelas?.length || 2;\n    if (configuracao.incluirDetalhes) itens++;\n    return itens;\n  };\n\n  return (\n    <Card className={className}>\n      <CardHeader>\n        <CardTitle className=\"flex items-center space-x-2\">\n          <Download className=\"h-5 w-5\" />\n          <span>Exportar Relatório</span>\n        </CardTitle>\n        <CardDescription>\n          Configure e exporte os dados de métricas em diferentes formatos\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"space-y-6\">\n        {/* Seleção do tipo de exportação */}\n        <div className=\"space-y-3\">\n          <Label className=\"text-sm font-medium\">Formato de Exportação</Label>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-5 gap-3\">\n            {TIPOS_EXPORTACAO.map(tipo => (\n              <div\n                key={tipo.tipo}\n                className={cn(\n                  'p-3 border rounded-lg cursor-pointer transition-all hover:border-primary/50',\n                  configuracao.tipo === tipo.tipo\n                    ? 'border-primary bg-primary/5'\n                    : 'border-gray-200'\n                )}\n                onClick={() => atualizarConfiguracao('tipo', tipo.tipo)}\n              >\n                <div className=\"flex items-center space-x-2 mb-2\">\n                  {tipo.icone}\n                  <span className=\"font-medium text-sm\">{tipo.nome}</span>\n                  <Badge variant=\"outline\" className=\"text-xs\">\n                    {tipo.extensao}\n                  </Badge>\n                </div>\n                <p className=\"text-xs text-gray-600 mb-1\">{tipo.descricao}</p>\n                <p className=\"text-xs text-gray-500\">\n                  Tamanho: {tipo.tamanhoEstimado}\n                </p>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Configurações de conteúdo */}\n        <div className=\"space-y-4\">\n          <Label className=\"text-sm font-medium\">Conteúdo a Incluir</Label>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div className=\"flex items-center space-x-2\">\n              <Checkbox\n                id=\"incluirResumo\"\n                checked={configuracao.incluirResumo}\n                onCheckedChange={checked =>\n                  atualizarConfiguracao('incluirResumo', checked)\n                }\n              />\n              <Label htmlFor=\"incluirResumo\" className=\"text-sm\">\n                Resumo executivo\n              </Label>\n            </div>\n\n            {tipoSelecionado?.suportaGraficos && (\n              <div className=\"flex items-center space-x-2\">\n                <Checkbox\n                  id=\"incluirGraficos\"\n                  checked={configuracao.incluirGraficos}\n                  onCheckedChange={checked =>\n                    atualizarConfiguracao('incluirGraficos', checked)\n                  }\n                />\n                <Label htmlFor=\"incluirGraficos\" className=\"text-sm\">\n                  Gráficos e visualizações\n                </Label>\n              </div>\n            )}\n\n            {tipoSelecionado?.suportaTabelas && (\n              <div className=\"flex items-center space-x-2\">\n                <Checkbox\n                  id=\"incluirTabelas\"\n                  checked={configuracao.incluirTabelas}\n                  onCheckedChange={checked =>\n                    atualizarConfiguracao('incluirTabelas', checked)\n                  }\n                />\n                <Label htmlFor=\"incluirTabelas\" className=\"text-sm\">\n                  Tabelas de dados\n                </Label>\n              </div>\n            )}\n\n            <div className=\"flex items-center space-x-2\">\n              <Checkbox\n                id=\"incluirDetalhes\"\n                checked={configuracao.incluirDetalhes}\n                onCheckedChange={checked =>\n                  atualizarConfiguracao('incluirDetalhes', checked)\n                }\n              />\n              <Label htmlFor=\"incluirDetalhes\" className=\"text-sm\">\n                Detalhes individuais\n              </Label>\n            </div>\n          </div>\n        </div>\n\n        {/* Configurações avançadas */}\n        <div className=\"space-y-3\">\n          <div className=\"flex items-center justify-between\">\n            <Label className=\"text-sm font-medium\">\n              Configurações Avançadas\n            </Label>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => setMostrarConfiguracoes(!mostrarConfiguracoes)}\n            >\n              <Settings className=\"h-4 w-4 mr-1\" />\n              {mostrarConfiguracoes ? 'Ocultar' : 'Mostrar'}\n            </Button>\n          </div>\n\n          {mostrarConfiguracoes && (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 p-4 bg-gray-50 rounded-lg\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"nomeArquivo\" className=\"text-sm\">\n                  Nome do Arquivo\n                </Label>\n                <Input\n                  id=\"nomeArquivo\"\n                  placeholder={gerarNomeArquivo()}\n                  value={configuracao.nomeArquivo || ''}\n                  onChange={e =>\n                    atualizarConfiguracao('nomeArquivo', e.target.value)\n                  }\n                />\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label className=\"text-sm\">Formato de Data</Label>\n                <Select\n                  value={configuracao.formatoData}\n                  onValueChange={valor =>\n                    atualizarConfiguracao('formatoData', valor)\n                  }\n                >\n                  <SelectTrigger>\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"dd/mm/yyyy\">DD/MM/AAAA</SelectItem>\n                    <SelectItem value=\"yyyy-mm-dd\">AAAA-MM-DD</SelectItem>\n                    <SelectItem value=\"mm/dd/yyyy\">MM/DD/AAAA</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n\n              <div className=\"md:col-span-2 space-y-2\">\n                <Label htmlFor=\"observacoes\" className=\"text-sm\">\n                  Observações\n                </Label>\n                <Textarea\n                  id=\"observacoes\"\n                  placeholder=\"Adicione observações ou comentários ao relatório...\"\n                  value={configuracao.observacoes || ''}\n                  onChange={e =>\n                    atualizarConfiguracao('observacoes', e.target.value)\n                  }\n                  rows={3}\n                />\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Resumo da exportação */}\n        <div className=\"p-4 bg-blue-50 rounded-lg border border-blue-200\">\n          <div className=\"flex items-center space-x-2 mb-3\">\n            <BarChart3 className=\"h-4 w-4 text-blue-600\" />\n            <span className=\"font-medium text-blue-800\">\n              Resumo da Exportação\n            </span>\n          </div>\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\n            <div>\n              <span className=\"text-gray-600\">Formato:</span>\n              <div className=\"font-medium\">\n                {tipoSelecionado?.nome} {tipoSelecionado?.extensao}\n              </div>\n            </div>\n            <div>\n              <span className=\"text-gray-600\">Itens:</span>\n              <div className=\"font-medium\">{estimarConteudo()} componentes</div>\n            </div>\n            <div>\n              <span className=\"text-gray-600\">Período:</span>\n              <div className=\"font-medium\">\n                {dados.filtros.dataInicio && dados.filtros.dataFim\n                  ? `${dados.filtros.dataInicio} a ${dados.filtros.dataFim}`\n                  : dados.filtros.periodo || 'Não definido'}\n              </div>\n            </div>\n            <div>\n              <span className=\"text-gray-600\">Tamanho:</span>\n              <div className=\"font-medium\">\n                {tipoSelecionado?.tamanhoEstimado}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Botão de exportação */}\n        <div className=\"flex justify-end space-x-3\">\n          <Button\n            variant=\"outline\"\n            onClick={() => {\n              setConfiguracao({\n                tipo: 'pdf',\n                incluirGraficos: true,\n                incluirTabelas: true,\n                incluirResumo: true,\n                incluirDetalhes: false,\n                formatoData: 'dd/mm/yyyy',\n                idioma: 'pt-BR',\n              });\n              setMostrarConfiguracoes(false);\n            }}\n          >\n            Redefinir\n          </Button>\n          <Button\n            onClick={handleExportar}\n            disabled={\n              carregando ||\n              (!configuracao.incluirResumo &&\n                !configuracao.incluirGraficos &&\n                !configuracao.incluirTabelas &&\n                !configuracao.incluirDetalhes)\n            }\n            className=\"min-w-32\"\n          >\n            {carregando ? (\n              <>\n                <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n                Exportando...\n              </>\n            ) : (\n              <>\n                <Download className=\"h-4 w-4 mr-2\" />\n                Exportar\n              </>\n            )}\n          </Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default ExportarRelatorios;\n"],"names":["ExportarRelatorios","TIPOS_EXPORTACAO","tipo","nome","descricao","icone","FileText","className","extensao","suportaGraficos","suportaTabelas","tamanhoEstimado","FileSpreadsheet","FileImage","dados","onExportar","carregando","configuracao","setConfiguracao","useState","incluirGraficos","incluirTabelas","incluirResumo","incluirDetalhes","formatoData","idioma","mostrarConfiguracoes","setMostrarConfiguracoes","tipoSelecionado","find","t","atualizarConfiguracao","campo","valor","prev","gerarNomeArquivo","agora","Date","data","toISOString","split","replace","hora","toTimeString","slice","join","handleExportar","config","nomeArquivo","estimarConteudo","itens","graficos","length","tabelas","Card","CardHeader","CardTitle","Download","span","CardDescription","CardContent","div","Label","map","cn","onClick","Badge","variant","p","Checkbox","id","checked","onCheckedChange","htmlFor","Button","size","Settings","Input","placeholder","value","onChange","e","target","Select","onValueChange","SelectTrigger","SelectValue","SelectContent","SelectItem","Textarea","observacoes","rows","BarChart3","filtros","dataInicio","dataFim","periodo","disabled","Loader2"],"mappings":"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"}